var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.706,1,1.337]],["body/components/AppComponent.html",[0,1.28,1,2.329,2,2.232,3,0.198,4,0.198,5,1.767,6,1.767,7,1.767,8,0.178,9,3.662,10,0.426,11,2.878,12,3.426,13,4.848,14,4.347,15,4.347,16,1.952,17,2.889,18,1.475,19,2.995,20,1.578,21,2.577,22,5.608,23,0.24,24,1.126,25,6.959,26,0.741,27,3.833,28,0.818,29,4.236,30,3.973,31,4.347,32,1.925,33,5.608,34,2.861,35,2.75,36,5.608,37,6.286,38,5.434,39,0.649,40,0.016,41,1.717,42,0.284,43,0.589,44,1.097,45,3.426,46,4.347,47,4.236,48,4.848,49,0.346,50,0.329,51,3.662,52,3.662,53,3.662,54,3.662,55,2.049,56,0.198,57,0.24,58,1.412,59,4.236,60,4.236,61,4.236,62,1.767,63,2.338,64,1.952,65,1.412,66,2.79,67,1.767,68,0.448,69,1.767,70,1.475,71,1.767,72,1.412,73,2.79,74,1.475,75,1.767,76,1.475,77,1.767,78,1.412,79,1.412,80,1.767,81,1.353,82,1.611,83,1.767,84,1.475,85,1.767,86,1.412,87,1.767,88,1.353,89,1.767,90,1.412,91,1.192,92,1.541,93,2.338,94,1.475,95,1.767,96,0.779,97,1.475,98,1.767,99,1.767,100,1.412,101,1.297,102,1.611,103,1.686,104,1.541,105,1.412,106,1.767,107,1.412,108,1.686,109,1.767,110,0.011,111,0.011]],["title/modules/AppModule.html",[112,1.764,113,2.72]],["body/modules/AppModule.html",[1,2.626,3,0.177,4,0.177,8,0.158,11,1.438,40,0.017,49,0.405,50,0.294,56,0.177,57,0.214,76,2.408,79,2.306,84,2.408,86,2.306,97,2.408,107,2.306,110,0.011,111,0.011,113,5.681,114,1.828,115,2.975,116,3.267,117,3.267,118,3.267,119,3.267,120,3.267,121,4.531,122,3.962,123,4.531,124,4.531,125,4.531,126,4.225,127,4.531,128,4.531,129,3.172,130,2.04,131,2.165,132,3.779,133,3.679,134,5.192,135,3.402,136,5.192,137,5.192,138,7.083,139,1.26,140,3.402,141,5.192,142,2.93,143,5.192,144,3.267,145,2.678,146,4.488,147,2.678,148,2.04,149,2.04,150,1.207,151,3.779,152,3.779,153,3.267,154,3.779,155,2.476,156,5.192,157,3.779,158,3.267,159,3.779,160,2.678,161,3.779,162,3.779,163,3.779,164,3.679,165,3.779,166,2.649,167,3.779,168,3.779,169,3.779,170,3.267,171,3.779,172,3.779,173,3.779,174,3.779,175,2.93,176,5.491,177,7.083,178,6.916,179,2.117]],["title/modules/AppRoutingModule.html",[112,1.764,121,2.516]],["body/modules/AppRoutingModule.html",[0,1.212,3,0.256,4,0.256,8,0.229,34,3.61,40,0.016,49,0.399,50,0.425,56,0.256,57,0.31,79,2.197,86,2.197,110,0.014,111,0.014,112,2.513,114,2.645,121,4.319,135,3.583,140,4.319,153,4.728,158,4.728,180,5.469,181,5.469,182,5.109,183,4.322,184,1.416,185,4.319,186,4.728,187,3.583,188,4.728,189,4.636,190,4.728,191,1.904,192,4.319,193,4.239,194,5.469,195,3.341,196,4.239,197,5.469,198,4.239]],["title/guards/AuthGuard.html",[185,2.516,199,2.072]],["body/guards/AuthGuard.html",[3,0.154,4,0.154,8,0.138,10,0.474,16,1.148,20,0.928,23,0.187,26,0.623,28,0.688,34,1.682,39,0.505,40,0.017,42,0.316,49,0.329,50,0.256,56,0.154,57,0.187,68,0.316,96,0.606,110,0.01,111,0.01,145,3.342,179,1.009,184,0.853,185,3.091,192,4.17,195,4.259,199,2.546,200,2.16,201,2.85,202,4.717,203,3.573,204,4.717,205,3.657,206,5.163,207,2.703,208,5.011,209,3.657,210,6.014,211,4.829,212,4.717,213,3.068,214,1.207,215,2.85,216,3.446,217,4.259,218,2.866,219,3.297,220,0.688,221,0.623,222,3.903,223,3.61,224,2.703,225,3.657,226,0.989,227,1.642,228,2.168,229,3.246,230,2.004,231,2.699,232,3.657,233,2.85,234,3.674,235,4.662,236,4.662,237,3.297,238,4.078,239,4.717,240,4.717,241,4.717,242,3.657,243,3.657,244,2.703,245,4.078,246,4.717,247,2.546,248,1.642,249,4.261,250,1.487,251,3.61,252,2.168,253,0.562,254,2.555,255,0.691,256,2.336,257,2.85,258,0.968,259,1.334,260,1.155,261,2.16,262,2.555,263,3.297,264,3.297,265,1.119,266,4.717,267,3.297,268,3.297,269,3.297,270,2.85,271,3.297,272,2.336,273,1.779,274,3.297,275,2.85,276,3.657,277,2.555,278,2.85,279,1.595,280,1.221,281,3.297,282,3.297,283,2.407,284,2.16,285,3.297,286,3.297,287,2.85,288,4.717,289,5.509,290,2.407,291,2.85,292,3.297,293,1.442,294,3.297,295,1.889,296,3.297,297,2.85,298,3.297,299,6.014,300,2.85,301,3.297,302,4.078,303,2.85,304,3.297,305,3.297,306,3.297,307,2.014,308,3.297,309,3.297,310,2.85,311,3.297,312,2.85,313,3.297,314,3.297,315,3.297,316,3.297,317,4.078,318,2.014,319,2.16,320,3.297,321,2.85,322,2.85,323,3.297]],["title/interceptors/AuthInterceptor.html",[123,2.516,324,1.601]],["body/interceptors/AuthInterceptor.html",[3,0.207,4,0.207,8,0.186,10,0.646,16,1.544,23,0.251,26,0.764,28,0.843,39,0.679,40,0.017,42,0.387,49,0.352,50,0.345,56,0.207,57,0.251,68,0.387,110,0.012,111,0.012,123,3.787,139,1.479,191,2.012,208,4.999,214,1.291,215,3.834,216,3.902,220,0.843,221,0.764,222,4.554,223,3.787,224,3.311,225,4.48,229,2.394,250,1.735,253,0.688,255,0.93,256,3.142,259,1.347,265,0.712,276,3.438,283,3.695,318,2.709,319,2.906,324,2.41,325,2.709,326,3.438,327,5.28,328,5.557,329,3.337,330,3.927,331,4.435,332,2.709,333,4.424,334,4.161,335,4.435,336,5.779,337,6.428,338,5.779,339,3.787,340,3.787,341,5.779,342,2.709,343,3.531,344,3.438,345,1.417,346,3.438,347,1.687,348,5.779,349,4.435,350,3.438,351,5.779,352,3.834,353,4.435,354,1.765,355,4.435,356,4.435,357,3.142,358,3.834]],["title/injectables/AuthService.html",[217,2.346,253,0.457]],["body/injectables/AuthService.html",[3,0.163,4,0.163,8,0.146,10,0.678,20,0.98,23,0.197,26,0.648,28,0.948,34,1.777,39,0.944,40,0.017,42,0.464,43,1.055,49,0.358,50,0.271,56,0.163,57,0.197,68,0.435,110,0.01,111,0.01,139,1.161,150,1.112,179,1.066,191,1.708,195,2.997,203,3.817,206,3.475,208,5.098,211,4.367,214,1.14,217,2.997,220,0.948,221,0.859,226,1.19,229,3.065,230,1.784,243,3.802,244,2.81,250,1.869,253,0.584,255,0.73,258,1.022,259,1.413,262,2.7,265,0.989,279,2.373,280,1.745,284,2.282,329,1.523,347,1.325,354,1.386,359,1.386,360,2.7,361,4.24,362,4.905,363,4.402,364,4.24,365,4.905,366,1.995,367,2.833,368,3.483,369,2.16,370,3.802,371,2.81,372,4.905,373,5.481,374,3.483,375,4.905,376,5.037,377,4.905,378,3.483,379,4.905,380,4.905,381,3.483,382,4.905,383,4.905,384,3.483,385,2.648,386,2.254,387,2.045,388,4.402,389,2.467,390,1.452,391,2.467,392,2.282,393,3.011,394,3.011,395,3.483,396,3.011,397,3.483,398,1.267,399,2.7,400,2.7,401,3.011,402,1.88,403,2.045,404,2.7,405,3.011,406,4.24,407,2.81,408,4.24,409,3.011,410,2.368,411,3.011,412,4.603,413,3.483,414,3.011,415,1.523,416,1.386,417,1.6,418,3.011,419,1.866,420,3.011,421,6.164,422,6.164,423,4.905,424,4.905,425,4.905,426,3.483,427,4.905,428,4.905,429,3.483]],["title/injectables/AuthStorageService.html",[216,2.2,253,0.457]],["body/injectables/AuthStorageService.html",[3,0.132,4,0.132,8,0.118,10,0.601,20,0.794,23,0.16,26,0.556,28,1.029,31,3.264,39,1.115,40,0.017,41,1.988,42,0.42,43,1.063,44,1.825,49,0.146,50,0.219,56,0.132,57,0.285,68,0.42,96,1.099,110,0.009,111,0.009,191,1.944,207,3.423,208,4.993,211,4.44,216,2.412,220,0.915,221,0.828,223,4.106,226,0.882,229,3.382,230,1.532,248,2.485,253,0.501,258,0.828,259,1.171,260,1.314,265,1.006,293,2.443,297,3.64,318,1.724,345,2.179,359,1.123,430,5.534,431,1.999,432,3.64,433,2.272,434,3.957,435,4.44,436,3.64,437,3.64,438,2.272,439,5.037,440,5.975,441,5.037,442,5.16,443,2.439,444,5.417,445,3.382,446,2.759,447,3.64,448,2.821,449,3.659,450,4.21,451,4.207,452,3.552,453,2.821,454,2.821,455,2.439,456,2.821,457,2.821,458,7.049,459,2.821,460,2.821,461,5.165,462,4.858,463,1.753,464,2.821,465,2.821,466,4.21,467,5.037,468,4.21,469,2.821,470,2.821,471,2.821,472,2.439,473,2.821,474,2.821,475,2.821,476,2.821,477,3.904,478,2.439,479,3.904,480,2.439,481,3.904,482,3.904,483,2.821,484,2.821,485,2.439,486,2.821,487,2.821,488,3.64,489,2.439,490,2.439,491,2.821,492,4.21,493,2.821,494,2.821,495,2.821,496,2.821,497,3.264,498,2.821,499,2.821,500,2.821,501,2.821,502,2.821,503,2.821,504,2.821,505,2.821]],["title/interceptors/BaseUrlInterceptor.html",[124,2.516,324,1.601]],["body/interceptors/BaseUrlInterceptor.html",[3,0.224,4,0.224,8,0.201,10,0.61,16,1.666,23,0.271,26,0.802,28,0.699,39,0.733,40,0.017,42,0.321,49,0.374,50,0.372,56,0.224,57,0.378,68,0.321,110,0.012,111,0.012,124,3.977,139,1.596,150,1.529,155,4.739,220,0.699,221,0.633,227,2.113,250,1.799,253,0.723,255,1.003,259,1.272,265,0.768,283,3.771,325,2.924,329,3.284,330,4.072,332,2.924,333,4.282,334,4.282,340,3.977,342,2.924,343,3.708,371,3.477,390,1.996,398,2.81,506,5.247,507,3.71,508,7.232,509,4.786,510,6.069,511,5.433,512,4.138,513,3.71,514,4.786,515,7.008,516,4.786,517,4.786,518,4.786,519,4.786,520,4.786,521,2.442,522,4.786,523,4.786]],["title/interfaces/Breadcrumb.html",[524,0.953,525,2.516]],["body/interfaces/Breadcrumb.html",[3,0.191,4,0.191,8,0.172,10,0.412,20,1.153,23,0.39,24,1.101,40,0.017,42,0.442,43,1.074,44,1.6,49,0.319,50,0.318,55,3.555,56,0.256,57,0.232,58,2.563,64,1.909,68,0.442,81,1.752,110,0.011,111,0.011,184,1.06,213,2.09,218,2.628,220,0.8,221,0.971,226,0.858,227,1.426,234,2.502,248,2.298,250,1.668,251,2.684,253,0.653,255,0.858,258,1.202,259,1.149,260,0.858,265,0.657,273,2.96,280,1.419,463,1.106,524,1.535,525,4.928,526,1.882,527,3.175,528,6.502,529,4.327,530,3.563,531,4.033,532,4.74,533,4.033,534,3.776,535,3.885,536,3.142,537,3.593,538,4.05,539,4.379,540,3.175,541,3.35,542,2.211,543,2.684,544,4.791,545,3.541,546,3.541,547,3.541,548,1.558,549,3.541,550,3.541,551,2.347,552,3.541,553,3.541,554,4.25,555,3.541]],["title/components/BreadcrumbsComponent.html",[0,0.706,70,1.337]],["body/components/BreadcrumbsComponent.html",[0,1.306,1,1.149,2,1.879,3,0.154,4,0.154,5,1.376,6,1.376,7,1.376,8,0.138,10,0.475,11,2.519,16,1.644,17,2.533,18,1.149,19,2.909,21,2.17,23,0.187,24,0.948,26,0.624,27,3.447,28,1.018,30,3.345,32,1.446,39,0.844,40,0.017,41,1.842,42,0.369,44,1.222,49,0.285,50,0.256,56,0.154,57,0.187,58,1.574,62,1.376,63,1.969,64,1.644,65,1.1,66,2.509,67,1.376,68,0.426,69,1.376,70,2.095,71,1.376,72,1.1,73,2.509,74,1.149,75,1.376,76,1.149,77,1.376,78,1.1,79,1.1,80,1.376,81,1.054,82,1.255,83,1.376,84,1.149,85,1.376,86,1.1,87,1.376,88,1.054,89,1.376,90,1.1,91,0.929,92,1.201,93,1.969,94,1.149,95,1.376,96,0.607,97,1.149,98,1.376,99,1.376,100,1.1,101,1.01,102,2.421,103,1.314,104,1.201,105,1.1,106,1.376,107,1.1,108,1.314,109,1.376,110,0.01,111,0.01,179,1.446,213,3.07,214,1.107,220,0.482,221,0.436,226,1.488,244,2.705,248,2.095,249,3.345,252,2.765,255,0.692,259,0.692,260,1.155,265,0.885,279,2.284,283,1.684,307,2.884,347,1.255,419,2.421,452,2.91,525,4.652,530,2.548,531,3.676,541,4.26,542,3.575,544,5.651,548,2.289,554,3.66,556,2.853,557,4.721,558,4.721,559,4.081,560,4.081,561,4.721,562,3.094,563,4.721,564,5.513,565,4.721,566,6.818,567,6.017,568,6.017,569,2.016,570,4.721,571,3.3,572,4.081,573,4.081,574,4.721,575,4.081,576,3.3,577,4.721,578,4.721,579,4.721,580,4.721,581,4.721,582,3.3,583,3.66,584,4.081,585,3.3,586,2.705,587,3.3,588,3.3,589,3.3,590,3.3,591,4.721,592,3.3,593,3.3,594,3.3,595,2.548]],["title/injectables/BreadcrumbsService.html",[253,0.457,542,2.072]],["body/injectables/BreadcrumbsService.html",[3,0.187,4,0.187,8,0.167,10,0.542,20,1.124,23,0.414,24,1.082,26,0.712,28,0.953,32,1.65,39,0.825,40,0.017,41,1.222,42,0.409,43,0.948,44,1.86,49,0.315,50,0.31,55,2.951,56,0.252,57,0.226,58,2.437,64,1.39,68,0.409,81,1.275,110,0.011,111,0.011,184,1.033,213,2.75,218,2.145,220,0.787,221,0.806,226,1.13,227,1.876,234,2.439,248,2.502,250,1.842,251,2.616,253,0.642,255,0.837,258,1.172,259,1.13,260,1.279,265,0.641,273,2.155,280,1.691,359,1.589,463,1.647,524,1.338,525,5.069,527,3.095,528,6.317,529,3.293,530,2.155,531,3.293,532,3.451,533,3.293,534,3.727,535,2.828,536,2.287,537,2.616,538,4.47,539,4.981,540,4.178,541,4.168,542,2.909,543,3.531,544,5.57,545,3.451,546,4.659,547,4.659,548,2.05,549,4.659,550,3.451,551,2.287,552,3.451,553,3.451,554,5.449,555,3.451,596,3.992,597,3.992,598,3.992,599,3.992]],["title/directives/BulmaIsToggleableDirective.html",[65,1.28,105,1.28]],["body/directives/BulmaIsToggleableDirective.html",[3,0.188,4,0.188,8,0.168,10,0.404,18,1.398,19,2.058,23,0.227,24,1.086,26,0.715,28,1.05,32,1.656,39,0.937,40,0.017,41,1.656,42,0.439,43,1.017,44,1.401,49,0.207,50,0.312,56,0.188,57,0.415,65,2.348,68,0.269,104,1.46,105,1.804,110,0.011,111,0.011,220,0.586,221,0.531,248,2.13,252,2.486,260,1.476,265,0.644,293,2.677,370,4.194,392,2.631,419,2.058,438,2.92,600,6.325,601,3.47,602,5.41,603,6.548,604,4.194,605,4.677,606,7.616,607,6.409,608,5.747,609,5.356,610,6.119,611,3.833,612,4.677,613,4.194,614,6.119,615,5.41,616,7.742,617,5.41,618,6.119,619,6.119,620,2.453,621,3.47,622,4.015,623,4.015,624,2.617,625,4.015,626,4.015,627,4.015,628,4.015,629,2.453,630,3.47,631,4.015,632,4.015,633,4.015,634,4.015,635,4.015,636,4.015,637,3.47,638,6.119,639,4.015,640,5.41,641,4.015]],["title/interceptors/CacheInterceptor.html",[125,2.516,324,1.601]],["body/interceptors/CacheInterceptor.html",[3,0.184,4,0.184,8,0.165,10,0.537,16,1.371,23,0.223,24,1.072,26,0.706,28,0.884,32,1.635,39,0.603,40,0.017,42,0.406,44,1.382,49,0.336,50,0.306,56,0.184,57,0.223,58,1.313,68,0.264,91,2.137,110,0.011,111,0.011,125,3.498,139,1.313,150,1.258,220,0.575,221,0.52,230,2.363,247,2.882,248,1.859,250,1.635,253,0.636,255,0.825,259,1.119,260,1.467,265,0.972,280,1.682,283,3.572,319,3.498,324,2.709,325,2.405,329,3.132,330,4.148,332,2.405,333,3.968,334,3.968,340,3.498,342,2.405,343,3.262,344,3.052,345,1.258,354,2.787,357,2.789,369,2.031,371,3.059,387,1.642,389,4.602,416,2.125,419,1.497,433,2.882,642,3.403,643,4.292,644,3.782,645,5.339,646,3.782,647,7.16,648,4.602,649,7.001,650,6.058,651,6.058,652,3.937,653,6.058,654,5.339,655,5.339,656,4.696,657,6.058,658,5.339,659,3.937,660,6.495,661,5.339,662,3.937,663,5.339,664,4.138,665,4.138,666,3.937,667,3.937,668,3.937,669,3.937,670,3.937,671,3.052,672,3.937,673,3.937,674,5.339,675,7.001,676,3.937,677,3.403,678,3.937,679,3.937,680,3.052,681,3.937,682,3.937,683,3.937,684,3.937]],["title/components/ConsumerDetailComponent.html",[0,0.706,72,1.28]],["body/components/ConsumerDetailComponent.html",[0,0.946,1,1.019,2,1.722,3,0.137,4,0.137,5,1.22,6,1.22,7,1.22,8,0.123,11,2.416,16,1.506,17,2.365,18,1.019,19,2.862,21,1.988,23,0.166,24,0.868,26,0.572,27,3.258,28,1.05,32,1.857,39,0.788,40,0.017,41,1.857,42,0.469,43,0.882,44,1.571,49,0.348,50,0.227,55,1.415,56,0.137,57,0.166,58,0.976,62,1.22,63,1.804,64,1.506,65,0.976,66,2.371,67,1.22,68,0.491,69,1.22,70,1.019,71,1.22,72,1.896,73,2.648,74,2.112,75,1.22,76,1.019,77,1.22,78,0.976,79,0.976,80,1.22,81,0.935,82,1.113,83,1.22,84,1.019,85,1.22,86,0.976,87,1.22,88,2.099,89,1.22,90,0.976,91,1.218,92,1.064,93,1.804,94,1.019,95,1.22,96,1.046,97,1.019,98,1.22,99,1.22,100,0.976,101,0.896,102,1.113,103,2.048,104,1.064,105,0.976,106,1.22,107,0.976,108,1.165,109,1.22,110,0.009,111,0.009,150,0.935,184,0.758,214,0.868,220,0.631,221,0.839,231,1.645,255,0.613,260,1.377,280,1.12,463,1.168,497,3.353,530,1.579,538,3.372,541,3.144,542,3.069,620,1.788,685,2.764,686,2.81,687,5.633,688,5.633,689,5.633,690,2.268,691,3.646,692,3.739,693,6.351,694,3.096,695,5.146,696,3.975,697,3.88,698,5.244,699,4.326,700,4.407,701,2.529,702,3.725,703,5.146,704,4.028,705,5.146,706,4.028,707,4.326,708,4.326,709,4.407,710,2.926,711,2.926,712,2.926,713,2.926,714,4.326,715,2.926,716,3.989,717,2.529,718,2.529,719,2.268,720,2.926,721,2.529,722,2.926,723,2.073,724,2.926,725,2.926,726,2.529,727,2.926,728,3.353,729,2.268,730,2.268,731,4.326,732,2.926,733,2.926,734,3.739,735,2.926,736,2.926,737,2.926,738,2.926,739,2.926,740,2.926,741,2.926,742,2.529,743,2.926,744,2.529,745,2.926,746,2.926,747,2.926,748,2.268,749,1.415,750,2.926,751,2.529,752,2.926,753,2.926,754,2.926,755,2.268,756,2.926,757,2.926,758,2.926,759,2.926,760,2.926,761,2.926]],["title/injectables/ConsumersService.html",[253,0.457,704,2.72]],["body/injectables/ConsumersService.html",[3,0.219,4,0.219,8,0.196,14,3.625,20,1.316,23,0.265,24,0.939,26,0.79,28,0.873,39,0.716,40,0.017,42,0.492,43,0.831,49,0.371,50,0.363,56,0.28,57,0.265,68,0.481,110,0.012,111,0.012,139,1.559,150,1.494,179,1.831,184,1.211,191,1.628,214,1.201,218,2.972,220,0.873,221,0.79,250,1.876,253,0.712,255,0.98,258,1.373,260,1.253,265,0.75,280,1.548,354,1.861,359,1.861,366,2.679,367,3.193,369,2.274,386,2.748,387,2.494,390,1.95,398,1.701,403,1.95,410,1.95,415,2.045,416,1.861,417,2.149,463,1.78,533,2.857,685,2.507,686,2.507,694,2.386,696,3.064,704,4.237,709,3.625,749,2.262,762,3.313,763,5.98,764,4.676,765,5.98,766,5.11,767,4.676,768,2.045,769,2.149,770,4.042,771,4.676,772,3.625,773,5.169,774,4.042,775,5.98,776,4.676,777,5.98,778,4.676,779,2.679,780,2.262,781,2.386]],["title/interfaces/Error.html",[290,1.959,524,0.953]],["body/interfaces/Error.html",[3,0.23,4,0.23,8,0.206,10,0.679,12,3.005,23,0.279,24,1.24,40,0.016,42,0.498,43,1.102,56,0.23,68,0.474,110,0.013,111,0.013,221,1.025,224,2.818,290,4.067,295,4.264,369,2.692,449,4.876,463,1.822,524,1.221,526,2.261,548,1.871,782,4.252,783,3.813,784,4.919,785,3.223,786,5.487,787,5.487,788,5.487,789,5.487]],["title/components/ErrorComponent.html",[0,0.706,76,1.337]],["body/components/ErrorComponent.html",[0,1.232,1,1.084,2,1.801,3,0.212,4,0.145,5,1.298,6,1.298,7,1.298,8,0.13,10,0.589,11,2.611,12,2.765,17,1.43,18,1.084,19,2.887,21,2.08,23,0.176,24,0.909,26,0.598,28,1.021,32,1.386,39,0.693,40,0.017,41,0.953,42,0.469,43,1.012,44,0.806,49,0.276,50,0.242,56,0.145,57,0.176,62,1.298,63,1.887,64,1.576,65,1.038,66,2.442,67,1.298,68,0.482,69,1.298,70,1.084,71,1.298,72,1.038,73,2.442,74,1.084,75,1.298,76,2.039,77,1.298,78,1.038,79,1.038,80,1.298,81,0.994,82,1.184,83,1.298,84,1.084,85,1.298,86,1.038,87,1.298,88,0.994,89,1.298,90,1.038,91,0.876,92,1.132,93,1.887,94,1.084,95,1.298,96,0.572,97,1.084,98,1.298,99,1.298,100,1.038,101,0.953,102,1.184,103,1.239,104,1.132,105,1.038,106,1.298,107,1.038,108,1.239,109,1.298,110,0.009,111,0.009,179,0.953,213,2.309,214,1.176,220,0.454,221,0.952,226,1.439,252,2.08,259,0.949,260,0.949,265,1.075,287,3.912,290,3.873,293,1.98,295,3.719,322,3.912,369,2.469,419,2.028,438,2.443,449,4.253,463,1.222,540,3.508,548,1.721,586,2.593,604,3.508,785,2.966,786,4.822,787,4.822,788,4.822,789,4.822,790,2.69,791,3.508,792,4.526,793,3.912,794,4.526,795,6.221,796,5.333,797,5.855,798,5.333,799,3.112,800,5.424,801,3.837,802,3.112,803,3.912,804,4.526,805,4.539,806,3.206,807,3.112,808,4.526,809,3.112,810,3.112,811,3.112,812,3.112,813,3.112,814,3.112,815,3.508,816,3.112,817,3.112,818,3.508,819,3.912,820,2.205,821,2.69,822,4.526,823,3.112,824,2.69,825,3.912,826,2.69,827,3.112,828,3.112,829,3.112,830,3.112,831,5.333,832,4.526,833,3.112,834,4.526,835,4.526,836,6.221,837,3.112,838,3.112,839,3.112,840,3.112,841,3.112,842,3.508]],["title/interceptors/ErrorInterceptor.html",[126,2.346,324,1.601]],["body/interceptors/ErrorInterceptor.html",[3,0.198,4,0.198,8,0.178,10,0.632,16,1.475,23,0.24,26,0.741,28,0.818,39,0.649,40,0.017,42,0.376,49,0.36,50,0.329,56,0.198,57,0.24,58,1.87,64,1.952,68,0.376,110,0.011,111,0.011,126,3.426,139,1.412,150,1.353,213,2.861,214,1.262,220,0.818,221,0.741,226,1.459,248,1.952,250,1.697,253,0.668,254,4.347,255,0.888,259,1.318,265,1.009,279,2.712,280,1.097,283,3.649,290,3.551,324,2.982,325,2.588,329,3.191,330,4.252,332,2.588,333,4.087,334,4.087,342,2.588,343,3.426,347,1.611,369,2.545,391,3.001,416,2.232,536,3.213,569,2.588,648,3.973,656,4.347,671,3.284,786,3.284,787,3.284,788,3.284,789,3.284,793,4.848,801,4.853,806,5.066,821,3.662,843,3.662,844,5.608,845,4.848,846,5.608,847,4.236,848,5.784,849,4.236,850,5.608,851,4.848,852,4.236,853,4.236,854,4.236,855,4.236,856,4.236,857,4.236,858,4.236,859,4.236,860,4.236,861,4.236,862,4.236,863,4.236,864,4.236,865,4.236,866,4.236,867,4.236,868,4.236]],["title/injectables/ErrorService.html",[253,0.457,801,2.516]],["body/injectables/ErrorService.html",[3,0.206,4,0.206,8,0.185,10,0.644,20,1.241,23,0.25,24,1.155,26,0.761,28,0.935,32,1.349,39,0.675,40,0.017,41,1.349,42,0.385,44,1.141,49,0.331,50,0.342,56,0.206,57,0.25,58,2.265,68,0.385,110,0.012,111,0.012,126,4.151,130,3.107,184,1.141,214,1.287,218,3.006,220,0.84,221,0.761,226,1.424,227,2.004,248,2.004,253,0.685,254,4.462,258,1.294,259,1.206,280,1.49,290,3.996,303,4.975,340,3.771,347,1.676,357,5.351,359,1.754,419,2.189,586,3.298,624,2.784,680,3.416,702,2.888,801,3.771,806,4.814,848,5.874,869,3.81,870,5.755,871,7.049,872,3.81,873,5.755,874,5.755,875,6.795,876,4.462,877,5.755,878,4.975,879,5.755,880,5.755,881,4.407,882,4.975,883,5.54,884,5.755,885,3.81,886,4.407,887,4.407,888,4.407]],["title/components/ExampleComponent.html",[0,0.706,78,1.28]],["body/components/ExampleComponent.html",[0,1.334,1,1.683,2,2.431,3,0.226,4,0.226,5,2.016,6,2.016,7,2.016,8,0.203,10,0.486,11,2.818,17,2.222,18,1.683,19,3.019,21,2.807,40,0.016,49,0.25,50,0.376,56,0.226,57,0.274,62,2.016,63,2.547,64,2.127,65,1.612,66,2.933,67,2.016,68,0.471,69,2.016,70,1.683,71,2.016,72,1.612,73,2.933,74,1.683,75,2.016,76,1.683,77,2.016,78,2.345,79,1.612,80,2.016,81,1.545,82,1.839,83,2.016,84,1.683,85,2.016,86,1.612,87,2.016,88,1.545,89,2.016,90,1.612,91,1.361,92,1.759,93,2.547,94,1.683,95,2.016,96,0.889,97,1.683,98,2.016,99,2.016,100,1.612,101,1.48,102,1.839,103,1.925,104,1.759,105,1.612,106,2.016,107,1.612,108,1.925,109,2.016,110,0.013,111,0.013,595,3.297,889,4.18,890,5.28,891,4.298,892,6.108,893,4.328,894,6.108]],["title/modules/ExampleModule.html",[112,1.764,895,2.72]],["body/modules/ExampleModule.html",[3,0.248,4,0.248,8,0.222,10,0.533,40,0.016,49,0.376,50,0.412,56,0.248,57,0.301,78,2.641,110,0.013,111,0.013,112,2.974,114,2.566,115,3.707,122,4.343,129,3.953,130,2.864,131,3.04,133,4.584,135,4.24,140,4.24,147,4.584,148,2.864,149,2.864,150,1.695,198,5.016,890,5.593,891,3.953,895,5.529,896,4.586,897,5.305,898,4.586,899,4.586,900,5.305,901,5.305]],["title/injectables/ExampleService.html",[253,0.457,902,2.976]],["body/injectables/ExampleService.html",[3,0.276,4,0.276,8,0.248,10,0.594,20,1.664,40,0.016,49,0.305,50,0.459,56,0.276,57,0.335,110,0.014,111,0.014,226,1.447,253,0.822,258,1.736,359,2.354,891,4.217,902,5.351,903,5.112,904,6.903,905,5.968]],["title/interfaces/ForecastEntry.html",[524,0.953,906,2.346]],["body/interfaces/ForecastEntry.html",[3,0.189,4,0.189,8,0.169,20,1.136,23,0.229,24,1.09,26,0.534,40,0.017,42,0.411,43,0.98,49,0.354,50,0.314,56,0.32,57,0.229,68,0.27,74,1.406,96,0.999,101,1.663,110,0.013,111,0.011,139,1.346,150,1.29,179,1.236,184,1.045,191,1.406,207,2.313,214,0.811,218,2.443,226,0.846,228,1.855,230,1.975,231,1.536,247,2.179,250,1.656,253,0.647,255,0.846,258,1.185,260,1.138,265,0.648,280,1.406,345,1.96,354,1.607,367,2.496,369,1.536,386,2.496,387,2.265,390,1.684,398,1.469,402,3.542,403,1.684,407,2.313,410,1.684,415,1.766,416,1.607,417,1.855,433,2.179,463,1.945,521,2.06,524,1.629,526,1.855,548,1.536,685,1.536,686,2.496,768,1.766,769,1.855,779,2.313,780,1.953,781,2.06,906,4.009,907,1.953,908,2.313,909,4.622,910,3.807,911,2.467,912,2.646,913,2.861,914,3.558,915,4.021,916,4.021,917,4.021,918,2.467,919,2.861,920,2.467,921,2.646,922,2.861,923,2.646,924,4.348,925,2.861,926,4.852,927,3.749,928,2.861,929,2.861,930,2.861,931,2.861,932,2.861,933,2.861,934,3.848,935,2.861,936,2.646,937,2.646,938,2.861,939,2.467,940,2.646,941,2.861,942,2.861,943,2.861,944,2.467,945,2.861,946,2.861,947,2.861,948,2.861,949,2.861,950,2.861,951,2.861,952,2.861,953,2.861,954,2.861]],["title/interfaces/ForecastResponse.html",[524,0.953,918,2.346]],["body/interfaces/ForecastResponse.html",[3,0.185,4,0.185,8,0.165,10,0.397,20,1.111,23,0.224,24,1.074,26,0.522,40,0.017,42,0.48,43,0.974,49,0.351,50,0.307,56,0.318,57,0.224,68,0.264,74,1.374,96,1.116,101,1.638,110,0.013,111,0.011,139,1.316,150,1.261,179,1.209,184,1.022,191,1.374,207,2.262,214,0.793,218,2.415,226,0.827,228,1.814,230,2.207,231,1.501,247,2.131,250,1.638,253,0.637,255,0.827,258,1.159,260,1.121,265,0.634,280,1.385,345,1.938,354,1.571,367,2.458,369,1.501,386,2.458,387,2.23,390,1.646,398,1.436,402,2.131,403,1.646,407,3.065,410,1.646,415,1.727,416,1.571,417,1.814,433,2.887,463,1.934,521,2.014,524,1.687,526,1.814,548,1.501,685,1.501,686,2.473,768,1.727,769,1.814,779,2.262,780,1.909,781,2.014,906,3.706,907,1.909,908,2.262,909,3.975,910,2.887,911,2.412,912,2.587,913,2.797,914,3.505,915,3.975,916,3.975,917,3.975,918,3.268,919,3.79,920,3.268,921,3.505,922,3.79,923,3.505,924,4.964,925,2.797,926,4.815,927,3.706,928,4.607,929,2.797,930,2.797,931,2.797,932,2.797,933,2.797,934,3.79,935,2.797,936,2.587,937,2.587,938,2.797,939,2.412,940,2.587,941,2.797,942,2.797,943,2.797,944,2.412,945,2.797,946,2.797,947,2.797,948,2.797,949,2.797,950,2.797,951,2.797,952,2.797,953,2.797,954,2.797,955,4.607]],["title/interfaces/ForecastUsage.html",[524,0.953,939,2.346]],["body/interfaces/ForecastUsage.html",[3,0.185,4,0.185,8,0.166,20,1.114,23,0.224,24,1.076,26,0.523,40,0.017,42,0.456,43,1.014,49,0.351,50,0.308,56,0.318,57,0.224,68,0.265,74,1.378,96,0.986,101,1.641,110,0.012,111,0.011,139,1.32,150,1.265,179,1.212,184,1.025,191,1.378,207,2.268,214,0.795,218,2.418,226,0.83,228,1.819,230,1.949,231,1.506,247,2.137,250,1.64,253,0.638,255,0.83,258,1.162,260,1.123,265,0.635,280,1.387,345,1.941,354,1.576,367,2.463,369,1.506,386,2.463,387,2.235,390,1.651,398,1.44,402,2.137,403,1.651,407,2.268,410,1.651,415,1.732,416,1.576,417,1.819,433,2.137,463,2.064,521,2.02,524,1.616,526,1.819,548,1.506,685,1.506,686,2.476,768,1.732,769,1.819,779,2.268,780,1.915,781,2.02,906,3.711,907,1.915,908,2.268,909,3.981,910,2.892,911,2.418,912,2.594,913,2.805,914,3.511,915,3.981,916,3.981,917,3.981,918,2.418,919,2.805,920,2.418,921,2.594,922,2.805,923,2.594,924,4.304,925,2.805,926,4.82,927,3.711,928,2.805,929,2.805,930,2.805,931,2.805,932,2.805,933,2.805,934,4.82,935,2.805,936,2.594,937,2.594,938,2.805,939,3.274,940,4.266,941,4.612,942,4.612,943,2.805,944,2.418,945,2.805,946,2.805,947,2.805,948,2.805,949,2.805,950,2.805,951,2.805,952,2.805,953,2.805,954,2.805]],["title/components/FrameComponent.html",[0,0.706,79,1.28]],["body/components/FrameComponent.html",[0,1.149,1,1.096,2,1.816,3,0.147,4,0.147,5,1.312,6,1.312,7,1.312,8,0.132,10,0.459,11,2.619,17,1.446,18,1.096,19,2.891,21,2.097,23,0.178,26,0.603,28,0.951,39,0.822,40,0.017,41,1.643,42,0.359,45,2.787,46,3.536,49,0.323,50,0.244,56,0.147,57,0.178,62,1.312,63,1.902,64,1.588,65,1.049,66,2.454,67,1.312,68,0.45,69,1.312,70,1.096,71,1.312,72,1.049,73,2.454,74,1.096,75,1.312,76,1.096,77,1.312,78,1.049,79,1.962,80,1.312,81,1.005,82,1.197,83,1.312,84,1.096,85,1.312,86,1.049,87,1.312,88,1.005,89,1.312,90,1.049,91,0.886,92,1.145,93,1.902,94,1.096,95,1.312,96,0.579,97,1.096,98,1.312,99,1.312,100,1.049,101,0.963,102,1.197,103,1.253,104,1.145,105,1.049,106,1.312,107,1.049,108,1.253,109,1.312,110,0.009,111,0.009,131,2.614,179,0.963,184,0.815,195,3.596,203,3.847,209,2.439,214,1.182,216,3.372,217,4.106,218,2.837,220,0.783,221,0.709,222,4.17,223,3.857,226,0.956,228,2.097,229,2.462,230,1.66,231,1.735,248,2.269,249,4.17,252,2.994,256,3.232,259,1.234,260,1.234,265,0.732,300,2.72,318,1.922,364,5.633,419,1.735,438,2.462,548,1.735,595,4.007,956,2.72,957,4.562,958,4.562,959,4.562,960,4.562,961,5.886,962,4.562,963,4.639,964,4.639,965,2.72,966,5.886,967,4.17,968,3.147,969,2.328,970,4.562,971,4.639,972,3.147,973,4.562,974,4.562,975,2.72,976,3.147,977,5.337,978,3.372,979,5.657,980,2.72,981,3.147,982,2.72,983,3.147,984,3.857,985,2.72,986,3.147,987,3.147,988,3.147,989,2.439,990,3.147,991,3.147,992,4.562,993,2.72,994,4.562,995,2.72,996,3.147,997,3.147,998,2.72,999,3.147,1000,2.72,1001,3.232,1002,4.562,1003,4.562,1004,4.562,1005,4.562,1006,4.562,1007,4.562,1008,4.562,1009,4.562]],["title/components/IonIconComponent.html",[0,0.706,81,1.226]],["body/components/IonIconComponent.html",[0,1.281,1,1.238,2,1.982,3,0.166,4,0.166,5,1.483,6,1.483,7,1.483,8,0.149,10,0.5,11,2.581,15,5.26,18,1.238,19,2.937,23,0.202,28,0.838,39,0.545,40,0.016,41,1.089,42,0.385,43,0.864,48,4.965,49,0.184,50,0.276,55,3.438,56,0.166,57,0.202,58,1.186,62,1.483,63,2.076,64,2.426,65,1.186,66,2.594,67,1.483,68,0.517,69,1.483,70,1.238,71,1.483,72,1.186,73,2.594,74,1.238,75,1.483,76,1.238,77,1.483,78,1.186,79,1.186,80,1.483,81,1.987,82,2.581,83,1.483,84,1.238,85,1.483,86,1.186,87,1.483,88,1.136,89,1.483,90,1.186,91,1.001,92,1.294,93,2.076,94,1.238,95,1.483,96,0.654,97,1.238,98,1.483,99,1.483,100,1.186,101,1.089,102,1.353,103,1.416,104,1.294,105,1.186,106,1.483,107,1.186,108,1.416,109,1.483,110,0.01,111,0.01,214,1.153,220,0.727,221,0.658,227,2.28,232,4.452,248,1.238,259,0.746,273,2.687,327,3.859,347,1.353,402,2.687,438,2.687,452,3.009,485,4.965,548,1.893,584,5.866,611,3.527,629,3.041,646,3.527,729,5.599,803,4.303,893,3.527,923,3.262,1010,5.378,1011,4.823,1012,3.075,1013,6.221,1014,3.527,1015,4.978,1016,4.978,1017,4.978,1018,3.557,1019,4.823,1020,3.557,1021,5.743,1022,4.978,1023,5.743,1024,4.965,1025,5.743,1026,5.743,1027,5.26,1028,5.743,1029,5.743,1030,4.965,1031,4.965,1032,5.743,1033,4.965,1034,4.452,1035,5.743,1036,5.743,1037,3.557,1038,3.557,1039,3.557]],["title/directives/LangSelectorDirective.html",[65,1.28,107,1.28]],["body/directives/LangSelectorDirective.html",[3,0.213,4,0.213,8,0.191,10,0.591,18,1.586,19,2.237,23,0.258,26,0.777,28,1.004,39,0.698,40,0.016,41,1.395,42,0.394,43,0.817,49,0.304,50,0.354,56,0.213,57,0.258,64,2.267,65,2.475,68,0.305,104,1.657,107,1.961,108,2.739,110,0.012,111,0.012,148,2.459,149,2.459,214,1.307,220,0.665,221,0.602,226,1.556,244,3.369,248,2.047,259,0.955,265,0.731,273,3.174,307,3.593,345,2.276,347,1.733,350,5.048,385,3.515,452,2.844,531,3.593,537,4.863,583,5.048,605,5.629,611,4.166,612,5.084,613,4.559,620,2.783,621,3.938,624,2.844,629,2.783,630,3.938,637,3.938,1001,4.875,1040,6.158,1041,3.938,1042,5.384,1043,6.881,1044,4.556,1045,4.556,1046,4.556,1047,5.047,1048,5.881,1049,4.556,1050,5.881,1051,4.556,1052,4.556]],["title/interfaces/LayerData.html",[524,0.953,1053,2.2]],["body/interfaces/LayerData.html",[3,0.222,4,0.222,8,0.199,10,0.477,18,1.652,23,0.269,24,1.212,32,1.453,35,2.641,40,0.017,42,0.502,43,0.923,49,0.245,56,0.327,68,0.404,96,1.327,110,0.012,111,0.012,224,3.459,227,1.652,230,2.196,260,0.995,295,2.719,345,1.928,433,3.259,463,2.047,524,1.499,526,2.181,543,3.956,694,3.08,749,3.211,1053,3.804,1054,3.363,1055,3.363,1056,5.739,1057,3.459,1058,3.956,1059,5.224,1060,4.633,1061,5.219,1062,5.219,1063,4.269,1064,3.363,1065,3.688,1066,3.679,1067,4.103,1068,4.727,1069,4.103,1070,4.103,1071,4.103,1072,3.363,1073,4.103]],["title/components/LoaderComponent.html",[0,0.706,84,1.337]],["body/components/LoaderComponent.html",[0,1.16,1,1.123,2,1.849,3,0.151,4,0.151,5,1.345,6,1.345,7,1.345,8,0.135,10,0.467,11,2.636,12,3.637,16,1.617,17,2.501,18,1.123,19,2.901,21,2.134,23,0.263,24,0.932,26,0.614,27,3.411,28,0.869,30,3.29,32,1.422,39,0.494,40,0.017,41,1.422,42,0.311,43,0.645,44,1.409,49,0.24,50,0.251,56,0.151,57,0.183,62,1.345,63,1.937,64,1.617,65,1.075,66,2.483,67,1.345,68,0.423,69,1.345,70,1.123,71,1.345,72,1.075,73,2.483,74,1.123,75,1.345,76,1.123,77,1.345,78,1.075,79,1.075,80,1.345,81,1.03,82,1.227,83,1.345,84,2.073,85,1.345,86,1.075,87,1.345,88,1.03,89,1.345,90,1.075,91,0.908,92,1.173,93,1.937,94,1.123,95,1.345,96,0.593,97,1.123,98,1.345,99,1.345,100,1.075,101,0.988,102,1.227,103,1.284,104,1.173,105,1.075,106,1.345,107,1.075,108,1.284,109,1.345,110,0.01,111,0.01,131,2.661,166,3.219,214,1.093,220,0.471,221,0.426,226,1.419,259,0.676,277,3.6,307,2.837,319,3.043,347,1.227,419,1.766,445,1.741,530,2.507,548,2.4,551,3.615,560,2.788,569,1.97,586,2.661,595,2.507,608,3.6,691,2.285,785,4.134,791,3.6,876,3.6,878,4.015,1074,2.788,1075,2.788,1076,4.911,1077,5.954,1078,4.644,1079,4.015,1080,6.195,1081,4.644,1082,5.147,1083,4.015,1084,5.442,1085,4.644,1086,4.705,1087,5.442,1088,3.637,1089,3.225,1090,4.015,1091,4.644,1092,3.225,1093,3.225,1094,3.225,1095,2.5,1096,3.225,1097,3.225,1098,3.225,1099,3.225,1100,2.788,1101,2.788,1102,3.225,1103,5.454,1104,4.219,1105,6.309,1106,5.954,1107,5.954,1108,4.644,1109,5.442,1110,5.442,1111,3.225,1112,6.571,1113,3.225,1114,4.644,1115,3.225,1116,3.225,1117,3.225,1118,3.225,1119,3.225,1120,4.644,1121,3.6,1122,4.644,1123,5.954,1124,4.644,1125,4.644,1126,4.644,1127,3.225,1128,4.015,1129,3.225,1130,3.225,1131,3.225,1132,3.225,1133,3.225,1134,5.442,1135,3.225,1136,3.225,1137,2.788,1138,2.788,1139,3.225]],["title/guards/LoaderGuard.html",[189,2.516,199,2.072]],["body/guards/LoaderGuard.html",[3,0.226,4,0.226,8,0.202,10,0.613,16,1.681,20,1.359,23,0.274,26,0.806,28,0.976,40,0.017,42,0.323,49,0.363,50,0.375,56,0.226,57,0.274,68,0.323,110,0.013,111,0.013,130,3.294,166,3.113,179,2.152,183,4.295,184,1.25,189,3.998,192,4.853,199,3.294,200,3.163,214,1.343,220,0.704,221,0.638,226,1.52,234,2.949,236,3.742,250,1.303,251,3.163,253,0.726,255,1.012,258,1.417,259,1.012,265,0.979,347,1.836,569,2.949,1088,4.295,1095,3.742,1140,4.173,1141,6.102,1142,7.609,1143,6.102,1144,7.406,1145,4.827,1146,6.402,1147,6.402,1148,4.827,1149,5.275,1150,4.827,1151,6.102,1152,6.102]],["title/interceptors/LoaderInterceptor.html",[127,2.516,324,1.601]],["body/interceptors/LoaderInterceptor.html",[3,0.197,4,0.197,8,0.177,10,0.631,16,1.471,23,0.239,26,0.74,28,0.817,39,0.961,40,0.017,42,0.375,43,0.587,44,1.093,49,0.359,50,0.328,56,0.197,57,0.239,58,2.093,68,0.375,110,0.011,111,0.011,127,3.667,139,1.408,150,1.349,166,2.856,214,1.26,220,0.817,221,0.74,226,1.57,248,2.327,250,1.929,253,0.666,255,0.885,259,1.316,265,1.072,279,3.232,280,1.093,283,3.646,324,2.787,325,2.58,329,3.125,330,3.419,332,3.419,333,4.083,334,4.083,342,2.58,343,3.419,344,3.274,347,1.607,416,2.844,569,2.58,573,4.838,586,3.207,665,4.338,671,4.338,680,4.338,768,3.041,1076,3.965,1088,4.365,1095,3.274,1146,6.176,1147,4.838,1153,3.651,1154,5.597,1155,4.838,1156,4.224,1157,4.224,1158,5.597,1159,4.224,1160,5.597,1161,4.224,1162,2.768,1163,4.224,1164,4.224,1165,4.224,1166,4.224,1167,4.224,1168,4.224,1169,4.224,1170,3.274,1171,5.597]],["title/injectables/LoaderService.html",[253,0.457,1088,2.346]],["body/injectables/LoaderService.html",[0,1.298,3,0.161,4,0.161,8,0.145,10,0.49,11,2.336,20,0.972,23,0.196,24,0.979,26,0.644,28,1.03,32,1.88,39,0.94,40,0.017,41,1.493,42,0.379,43,0.9,44,1.59,49,0.252,50,0.268,56,0.161,57,0.196,58,2.159,68,0.231,91,1.728,110,0.01,111,0.01,166,3.6,199,2.632,220,0.504,221,0.747,226,1.287,227,1.697,250,1.937,253,0.58,255,0.724,258,1.014,259,1.022,260,1.556,261,3.195,265,0.782,277,3.779,280,1.74,324,2.033,329,2.133,350,4.76,359,1.374,361,4.215,371,4.043,434,3.454,438,2.632,446,3.195,449,3.195,530,2.632,539,5.083,548,2.766,586,3.518,624,3.413,989,3.779,1076,4.895,1080,4.215,1082,5.811,1086,4.886,1088,2.979,1090,4.215,1162,4.527,1172,2.985,1173,4.876,1174,4.876,1175,4.876,1176,5.652,1177,5.652,1178,5.652,1179,5.652,1180,4.876,1181,6.14,1182,4.876,1183,6.722,1184,3.453,1185,4.876,1186,5.652,1187,2.263,1188,4.215,1189,3.453,1190,3.453,1191,3.779,1192,3.453,1193,6.14,1194,6.14,1195,3.453,1196,4.876,1197,3.453,1198,3.454,1199,3.453,1200,3.453,1201,3.453,1202,3.453,1203,3.453,1204,3.453,1205,3.453,1206,3.453,1207,4.876,1208,3.453,1209,3.453,1210,4.876,1211,3.453,1212,4.876,1213,3.453,1214,3.453]],["title/components/LoginComponent.html",[0,0.706,86,1.28]],["body/components/LoginComponent.html",[0,1.136,1,1.065,2,1.779,3,0.143,4,0.143,5,1.275,6,1.275,7,1.275,8,0.128,10,0.531,11,2.598,12,2.73,17,1.406,18,1.065,19,2.88,21,2.054,23,0.173,24,0.897,26,0.591,28,0.848,32,1.368,39,0.468,40,0.017,41,1.368,42,0.389,43,0.621,44,0.792,45,2.73,46,3.464,49,0.344,50,0.238,56,0.143,57,0.173,62,1.275,63,2.422,64,2.022,65,1.02,66,2.422,67,1.275,68,0.432,69,1.275,70,1.065,71,1.275,72,1.02,73,2.422,74,1.065,75,1.275,76,1.065,77,1.275,78,1.02,79,1.02,80,1.275,81,0.977,82,1.163,83,1.275,84,1.065,85,1.275,86,1.936,87,1.275,88,0.977,89,1.275,90,1.02,91,0.861,92,1.113,93,1.864,94,1.065,95,1.275,96,0.562,97,1.065,98,1.275,99,1.275,100,1.02,101,0.936,102,1.163,103,1.217,104,1.113,105,1.02,106,1.275,107,1.02,108,1.217,109,1.275,110,0.009,111,0.009,142,2.371,184,0.792,191,1.556,195,4.514,203,3.482,206,2.167,214,1.166,216,3.328,217,4.071,218,2.818,220,0.652,221,0.591,222,4.115,224,2.56,225,3.464,226,1.217,228,2.054,229,2.85,230,1.626,231,2.534,244,2.56,249,4.115,256,2.167,257,2.644,259,1.295,260,1.217,270,2.644,275,2.644,276,2.371,283,1.561,284,2.004,290,3.485,291,4.565,293,1.955,302,2.644,310,2.644,312,2.644,317,2.644,358,2.644,373,4.093,376,2.371,407,2.56,419,2.008,445,2.412,583,4.502,595,3.687,620,1.869,624,2.161,629,2.73,702,3.805,723,2.167,824,2.644,825,3.863,965,2.644,998,2.644,1000,2.644,1019,4.093,1215,2.644,1216,4.469,1217,6.178,1218,5.28,1219,4.469,1220,4.469,1221,4.469,1222,4.469,1223,5.807,1224,3.059,1225,3.863,1226,4.469,1227,4.469,1228,4.469,1229,3.863,1230,3.863,1231,4.469,1232,4.469,1233,3.059,1234,3.059,1235,3.863,1236,3.059,1237,3.863,1238,3.059,1239,3.059,1240,3.059,1241,3.059,1242,3.059,1243,3.059,1244,3.059,1245,3.059,1246,3.059,1247,3.059,1248,3.059,1249,3.059,1250,3.464,1251,3.059,1252,3.059,1253,3.059,1254,3.059,1255,3.059,1256,4.469,1257,4.469,1258,3.059,1259,3.059,1260,3.059,1261,3.059,1262,3.059,1263,3.059,1264,4.469,1265,4.469,1266,4.469,1267,4.469,1268,4.469]],["title/components/MapComponent.html",[0,0.706,88,1.226]],["body/components/MapComponent.html",[0,0.743,1,0.461,2,0.909,3,0.062,4,0.062,5,0.952,6,0.552,7,0.552,8,0.055,10,0.23,11,1.68,16,0.795,17,1.383,18,0.461,19,2.44,23,0.075,24,0.719,26,0.302,27,2.051,28,1.029,30,1.618,31,1.77,32,1.807,34,0.675,35,1.566,39,0.618,40,0.017,41,1.531,42,0.477,43,0.837,44,1.615,49,0.27,50,0.103,56,0.062,57,0.075,58,2.139,62,0.552,63,1.974,64,1.247,65,0.441,66,1.493,67,0.552,68,0.411,69,0.552,70,0.461,71,0.552,72,0.441,73,1.493,74,0.461,75,0.552,76,0.461,77,0.552,78,0.441,79,0.441,80,0.552,81,0.423,82,0.504,83,0.552,84,0.461,85,0.552,86,0.441,87,0.552,88,1.144,89,0.552,90,0.441,91,2.074,92,0.482,93,0.952,94,0.461,95,0.552,96,1.164,97,0.461,98,0.552,99,0.552,100,0.441,101,0.405,102,0.504,103,0.527,104,0.482,105,0.441,106,0.552,107,0.441,108,0.527,109,0.552,110,0.005,111,0.005,129,3.682,130,0.715,179,1.237,191,0.795,205,2.334,213,1.536,214,0.604,220,0.439,221,0.691,226,1.048,227,2.172,228,1.049,230,0.831,248,1.406,250,1.192,252,1.645,255,0.277,259,0.277,260,1.511,273,0.715,280,1.406,293,0.999,295,2.051,307,3.196,318,3.055,339,0.867,345,1.925,347,0.504,352,2.602,371,0.759,385,2.18,392,0.867,398,1.302,404,1.77,410,0.952,419,0.504,434,0.938,438,1.232,445,2.824,451,2.866,463,0.813,531,3.055,534,1.839,536,1.308,538,3.675,539,3.707,548,2.335,551,0.759,569,0.809,611,1.618,620,0.809,624,2.788,629,4.122,644,1.618,646,1.618,691,2.133,694,1.165,697,2.892,700,2.775,719,1.026,723,0.938,730,1.026,749,1.104,785,0.867,815,1.026,882,1.974,883,2.602,885,3.095,891,1.395,893,2.862,910,3.186,927,0.809,940,1.496,969,3.274,1019,2.334,1027,2.334,1031,1.144,1034,1.77,1047,3.129,1053,2.712,1057,4.114,1058,3.675,1060,3.606,1064,0.938,1065,0.809,1066,1.026,1068,2.346,1074,1.144,1079,2.602,1083,1.974,1104,1.026,1121,1.77,1128,4.696,1137,3.095,1191,2.775,1198,0.938,1269,1.026,1270,1.974,1271,2.283,1272,3.01,1273,5.473,1274,4.848,1275,3.01,1276,3.01,1277,4.347,1278,3.01,1279,3.01,1280,3.58,1281,4.039,1282,3.58,1283,4.523,1284,2.283,1285,3.01,1286,3.01,1287,3.01,1288,3.58,1289,5.674,1290,2.283,1291,2.283,1292,2.346,1293,1.324,1294,1.324,1295,1.324,1296,2.283,1297,3.01,1298,3.095,1299,2.334,1300,3.01,1301,3.01,1302,3.606,1303,3.01,1304,3.01,1305,2.133,1306,2.334,1307,2.602,1308,3.01,1309,3.01,1310,3.58,1311,2.602,1312,3.01,1313,3.01,1314,3.01,1315,1.324,1316,2.283,1317,2.283,1318,1.324,1319,2.283,1320,2.283,1321,2.283,1322,2.283,1323,1.324,1324,3.095,1325,1.324,1326,3.58,1327,2.283,1328,1.324,1329,2.283,1330,1.324,1331,3.58,1332,1.324,1333,1.324,1334,1.324,1335,2.283,1336,1.324,1337,2.283,1338,2.283,1339,2.283,1340,1.324,1341,4.323,1342,2.283,1343,2.283,1344,2.283,1345,3.58,1346,1.324,1347,1.324,1348,1.324,1349,2.283,1350,4.848,1351,1.324,1352,2.283,1353,1.974,1354,1.324,1355,1.324,1356,2.283,1357,1.324,1358,3.01,1359,1.324,1360,1.324,1361,1.324,1362,3.58,1363,2.283,1364,2.283,1365,1.324,1366,2.283,1367,3.58,1368,1.324,1369,1.324,1370,1.324,1371,1.324,1372,1.324,1373,1.324,1374,1.324,1375,2.283,1376,1.324,1377,1.324,1378,1.324,1379,1.324,1380,1.324,1381,2.283,1382,2.283,1383,1.324,1384,1.324,1385,1.026,1386,1.324,1387,1.324,1388,1.324,1389,1.324,1390,1.324,1391,1.324,1392,1.144,1393,1.144,1394,1.144,1395,1.144,1396,1.144,1397,1.974,1398,1.144,1399,1.324,1400,1.324,1401,1.324,1402,1.324,1403,1.324,1404,1.324,1405,1.324,1406,1.324,1407,1.324,1408,1.324,1409,1.324,1410,1.324,1411,1.324,1412,1.324,1413,1.324,1414,1.324,1415,1.324,1416,1.324,1417,1.324,1418,1.324,1419,1.324,1420,2.283,1421,1.324,1422,2.283,1423,1.324,1424,2.283,1425,2.283,1426,1.324,1427,2.283,1428,1.324,1429,1.324,1430,1.324,1431,2.283,1432,1.324,1433,1.324,1434,1.324,1435,1.324,1436,1.026,1437,1.324,1438,1.324,1439,1.324,1440,1.324,1441,1.324,1442,1.324,1443,1.324,1444,1.324,1445,1.324,1446,1.324,1447,1.324,1448,1.324,1449,1.324,1450,1.324,1451,3.01,1452,2.283,1453,3.01,1454,1.324,1455,3.01,1456,1.324,1457,1.324,1458,3.01,1459,1.324,1460,1.324,1461,1.324,1462,3.01,1463,1.324,1464,1.324,1465,1.324,1466,1.324,1467,1.324,1468,1.324,1469,1.324,1470,1.324,1471,0.867,1472,1.144,1473,1.144,1474,2.283,1475,1.324,1476,2.283,1477,1.324,1478,1.324,1479,1.324,1480,2.283,1481,1.324,1482,1.324,1483,1.324,1484,1.324,1485,2.283,1486,1.324,1487,1.324,1488,1.324,1489,1.324,1490,1.324,1491,2.283,1492,1.324,1493,1.324,1494,1.324,1495,1.324,1496,1.026,1497,1.324,1498,3.01,1499,1.324,1500,1.324,1501,1.324,1502,1.324,1503,1.324,1504,1.324,1505,1.324,1506,1.324,1507,1.324,1508,1.324,1509,1.324,1510,1.324,1511,2.283,1512,2.283,1513,1.324,1514,1.324,1515,1.324,1516,1.324,1517,1.324,1518,1.324,1519,1.324,1520,1.324,1521,2.283,1522,1.324,1523,1.324,1524,1.324,1525,2.283,1526,1.324,1527,1.324]],["title/interfaces/MapDB.html",[524,0.953,1528,2.72]],["body/interfaces/MapDB.html",[3,0.132,4,0.132,8,0.118,10,0.284,20,0.794,23,0.16,24,0.845,35,1.234,40,0.017,42,0.435,43,0.83,44,1.622,49,0.352,50,0.219,56,0.132,57,0.16,58,1.679,68,0.189,91,1.828,96,1.313,110,0.009,111,0.009,139,0.941,166,1.44,179,1.71,191,1.754,214,0.566,226,0.882,227,1.944,228,1.297,230,1.026,242,2.187,252,1.297,253,0.501,255,0.591,258,0.828,259,1.171,260,0.591,261,2.759,265,0.896,279,1.365,280,1.304,329,2.443,345,2.074,347,1.073,354,1.123,367,1.935,369,2.124,385,2.719,386,1.935,387,1.756,388,3.264,390,1.177,398,1.532,403,1.177,410,1.177,415,1.234,416,1.123,417,1.297,419,1.073,446,1.849,451,2.412,452,2.036,463,1.136,521,2.85,524,0.7,526,1.297,529,3.829,533,3.412,534,3.412,551,2.886,562,1.849,643,1.999,749,1.365,768,1.234,769,1.297,780,1.365,781,1.44,842,2.187,920,2.572,955,3.957,969,3.597,1014,2.983,1053,3.591,1057,3.2,1058,3.3,1059,3.568,1060,4.408,1063,3.967,1065,1.724,1068,3.659,1072,1.999,1162,1.849,1198,4.233,1292,1.849,1302,4.449,1305,1.999,1306,2.187,1436,2.187,1471,1.849,1496,2.187,1528,2.983,1529,1.999,1530,3.904,1531,5.534,1532,3.64,1533,4.354,1534,5.417,1535,4.828,1536,3.64,1537,3.904,1538,3.64,1539,4.828,1540,4.354,1541,4.354,1542,4.632,1543,3.64,1544,3.64,1545,2.439,1546,3.904,1547,2.439,1548,2.983,1549,2.187,1550,1.999,1551,1.849,1552,2.983,1553,2.439,1554,4.354,1555,3.64,1556,2.439,1557,2.439,1558,3.64,1559,3.64,1560,2.439,1561,2.439,1562,3.64,1563,2.439,1564,2.439,1565,2.439,1566,2.439,1567,2.439,1568,2.187,1569,4.828,1570,2.439,1571,2.439,1572,2.439,1573,3.64,1574,4.354,1575,2.439,1576,4.354,1577,3.64,1578,2.439,1579,3.64,1580,2.439,1581,3.264,1582,3.64,1583,3.64,1584,2.439,1585,2.439,1586,2.439,1587,2.439,1588,3.64,1589,2.439,1590,2.439,1591,2.439,1592,2.439,1593,2.439,1594,2.439,1595,2.439,1596,2.439,1597,3.64,1598,2.439,1599,2.439,1600,2.439,1601,2.439,1602,2.439,1603,2.439,1604,2.439,1605,2.439,1606,2.439,1607,2.439,1608,3.64,1609,2.439,1610,2.439,1611,2.439,1612,2.439,1613,2.439,1614,2.439,1615,2.439]],["title/components/MapSelectViewComponent.html",[0,0.706,90,1.28]],["body/components/MapSelectViewComponent.html",[0,1.161,1,1.282,2,2.03,3,0.172,4,0.172,5,1.535,6,1.535,7,1.535,8,0.154,11,2.609,16,1.775,17,2.688,18,1.282,19,2.949,21,2.343,23,0.209,24,1.024,26,0.674,27,3.618,28,1.001,32,1.561,39,0.781,40,0.016,41,1.791,42,0.444,43,0.813,44,1.32,49,0.302,50,0.286,55,1.781,56,0.172,57,0.209,58,1.227,62,1.535,63,2.126,64,1.775,65,1.227,66,2.633,67,1.535,68,0.459,69,1.535,70,1.282,71,1.535,72,1.227,73,2.861,74,1.282,75,1.535,76,1.282,77,1.535,78,1.227,79,1.227,80,1.535,81,1.176,82,1.4,83,1.535,84,1.282,85,1.535,86,1.227,87,1.535,88,1.176,89,1.535,90,2.105,91,1.931,92,2.83,93,2.126,94,1.282,95,1.535,96,0.677,97,1.282,98,1.535,99,1.535,100,1.227,101,2.03,102,1.4,103,1.465,104,1.339,105,1.227,106,1.535,107,1.227,108,1.465,109,1.535,110,0.013,111,0.01,150,1.176,184,0.953,214,1.024,220,0.744,221,0.835,231,2.225,260,1.069,419,1.939,530,1.987,541,3.115,542,3.408,685,2.675,686,2.831,702,4.138,911,2.249,955,3.613,969,3.222,1298,4.408,1302,4.297,1616,6.08,1617,5.452,1618,3.182,1619,5.099,1620,5.099,1621,5.85,1622,5.85,1623,3.681,1624,5.099,1625,3.681,1626,3.681,1627,3.681,1628,3.681,1629,3.681,1630,3.681,1631,3.681,1632,3.182,1633,3.182,1634,3.681,1635,3.681,1636,3.681,1637,3.681,1638,3.681,1639,3.681,1640,5.099,1641,5.099]],["title/injectables/MapService.html",[253,0.457,1292,2.516]],["body/injectables/MapService.html",[3,0.125,4,0.125,8,0.112,10,0.491,20,0.754,23,0.152,24,0.813,26,0.535,28,0.713,32,0.821,35,1.172,39,0.41,40,0.017,42,0.327,43,0.887,44,1.513,49,0.348,50,0.208,56,0.125,57,0.152,58,1.628,68,0.327,91,1.893,96,1.358,110,0.008,111,0.008,139,0.894,166,1.368,179,1.789,191,1.7,214,0.98,220,0.591,221,0.535,226,1.141,227,1.41,228,1.862,230,0.975,242,2.078,252,2.244,253,0.482,255,0.562,258,0.787,259,1.141,260,1.024,261,3.2,265,0.873,279,1.296,280,1.264,329,2.689,345,1.867,347,1.019,354,1.067,359,1.067,366,1.536,367,2.501,369,2.223,385,2.636,386,1.862,387,1.689,388,3.14,390,1.118,398,1.474,403,1.118,410,1.118,415,1.172,416,1.067,417,1.232,419,1.541,446,2.654,451,3.522,452,2.633,463,1.094,521,3.136,524,0.665,529,2.984,533,3.325,534,2.475,551,2.321,562,2.654,643,2.87,749,1.296,768,1.172,769,1.232,780,1.296,781,1.368,842,2.078,920,3.325,969,3.602,1014,1.899,1053,3.349,1057,2.798,1058,4.028,1059,3.46,1060,4.256,1063,3.571,1065,1.637,1068,3.2,1072,1.899,1162,2.654,1187,1.756,1198,4.141,1292,2.654,1302,4.48,1305,1.899,1306,3.14,1436,3.14,1471,1.756,1496,2.078,1528,1.899,1529,1.899,1530,3.14,1531,5.315,1532,2.317,1533,3.502,1534,3.502,1535,4.705,1536,2.317,1537,3.786,1538,2.317,1539,3.502,1540,4.222,1541,4.222,1542,4.53,1543,2.317,1544,2.317,1545,2.317,1546,4.53,1547,2.317,1548,2.87,1549,2.078,1550,1.899,1551,1.756,1552,2.87,1553,2.317,1554,5.314,1555,4.705,1556,3.502,1557,3.502,1558,4.705,1559,3.502,1560,2.317,1561,2.317,1562,3.502,1563,2.317,1564,2.317,1565,2.317,1566,2.317,1567,3.502,1568,3.14,1569,5.314,1570,4.222,1571,4.222,1572,2.317,1573,3.502,1574,4.222,1575,2.317,1576,4.222,1577,3.502,1578,2.317,1579,3.502,1580,2.317,1581,3.14,1582,3.502,1583,3.502,1584,2.317,1585,2.317,1586,2.317,1587,2.317,1588,3.502,1589,2.317,1590,2.317,1591,2.317,1592,2.317,1593,2.317,1594,2.317,1595,2.317,1596,2.317,1597,3.502,1598,2.317,1599,2.317,1600,2.317,1601,2.317,1602,2.317,1603,2.317,1604,2.317,1605,2.317,1606,2.317,1607,2.317,1608,3.502,1609,2.317,1610,2.317,1611,2.317,1612,2.317,1613,2.317,1614,2.317,1615,2.317,1642,4.051,1643,2.68,1644,2.68]],["title/interfaces/Marker.html",[524,0.953,697,2.346]],["body/interfaces/Marker.html",[3,0.221,4,0.221,8,0.198,10,0.476,23,0.268,24,1.209,32,1.844,35,2.635,40,0.017,41,1.448,42,0.467,49,0.311,55,3.564,56,0.221,58,1.577,88,1.924,110,0.012,111,0.012,213,3.074,221,1.002,227,2.097,248,2.097,293,2.635,340,3.947,357,4.268,403,3.005,463,1.989,524,1.646,526,2.174,531,3.68,613,4.67,694,3.759,697,4.767,755,5.978,783,4.67,1057,3.798,1064,3.352,1277,4.67,1645,4.089,1646,6.024,1647,6.032,1648,6.628,1649,6.628,1650,6.024,1651,5.208,1652,4.089]],["title/classes/ModuleProvider.html",[57,0.218,187,2.516]],["body/classes/ModuleProvider.html",[3,0.203,4,0.203,8,0.182,10,0.573,23,0.246,26,0.754,28,0.929,39,0.873,40,0.017,42,0.291,43,0.885,45,4.4,49,0.349,56,0.203,57,0.416,68,0.291,96,1.243,110,0.012,111,0.012,112,2.621,114,3.602,176,4.421,183,4.709,184,1.125,185,2.848,186,3.757,187,3.737,189,3.737,190,3.757,214,1.278,220,0.634,221,0.574,259,0.911,260,1.334,265,0.915,272,4.041,318,2.655,345,2.159,385,3.078,435,5.103,609,3.08,818,4.421,893,3.08,921,3.737,989,3.369,1001,4.041,1042,4.788,1653,5.842,1654,3.757,1655,5.703,1656,5.703,1657,5.703,1658,5.703,1659,4.041,1660,4.347,1661,5.703,1662,5.703,1663,5.703,1664,5.703,1665,4.347,1666,4.788,1667,4.347,1668,4.93,1669,5.703,1670,4.347,1671,4.347,1672,5.703,1673,4.347,1674,4.347,1675,4.347,1676,5.703,1677,6.366,1678,4.347,1679,4.347]],["title/guards/QueryParameterGuard.html",[199,2.072,1680,2.72]],["body/guards/QueryParameterGuard.html",[3,0.285,4,0.186,8,0.167,10,0.612,16,1.386,20,1.121,23,0.226,26,0.711,28,0.785,39,0.61,40,0.017,42,0.36,43,0.947,49,0.315,50,0.309,56,0.186,57,0.226,58,2.272,68,0.36,96,0.989,110,0.011,111,0.011,179,1.219,184,1.031,192,4.466,196,4.17,199,2.903,200,2.608,214,1.223,218,3.005,220,0.952,221,0.862,224,3.739,227,2.272,231,2.815,233,3.441,234,3.986,235,5.445,236,5.058,244,3.082,248,1.873,250,1.84,251,4.466,252,2.472,253,0.64,255,0.834,258,1.169,259,1.368,265,0.863,279,3.532,347,1.514,419,1.514,452,1.925,529,3.286,534,3.286,535,3.811,536,3.082,586,3.082,624,2.602,819,4.65,872,3.441,969,2.745,1030,4.65,1149,4.65,1162,4.276,1170,3.086,1250,5.058,1680,4.623,1681,5.267,1682,3.441,1683,5.379,1684,5.379,1685,7.303,1686,5.379,1687,5.379,1688,3.981,1689,5.379,1690,4.65,1691,3.981,1692,5.641,1693,5.379,1694,4.65,1695,3.981,1696,3.981,1697,3.981,1698,3.981,1699,3.981]],["title/interceptors/SanitizeUrlInterceptor.html",[128,2.516,324,1.601]],["body/interceptors/SanitizeUrlInterceptor.html",[3,0.211,4,0.211,8,0.189,10,0.588,16,1.571,23,0.256,26,0.772,28,0.659,34,2.982,39,0.691,40,0.017,42,0.302,49,0.335,50,0.351,56,0.211,57,0.256,68,0.302,110,0.012,111,0.012,128,3.83,139,1.504,170,5.052,220,0.659,221,0.596,243,4.53,250,1.75,253,0.696,255,0.946,259,1.225,265,0.724,279,2.827,283,3.713,324,3.034,325,2.757,329,3.318,330,3.57,332,3.57,333,4.189,334,4.189,339,3.83,342,2.757,343,3.57,398,2.126,507,3.498,529,2.757,572,5.927,624,2.827,648,4.141,664,4.53,677,3.901,845,5.052,851,5.052,1024,5.052,1700,5.052,1701,6.856,1702,5.844,1703,5.844,1704,6.856,1705,6.856,1706,5.844,1707,5.844,1708,4.512,1709,5.844,1710,5.844,1711,5.052,1712,4.512,1713,4.512,1714,4.512,1715,4.512,1716,4.512,1717,6.482,1718,4.512,1719,4.512,1720,4.512]],["title/injectables/SettingsStorageService.html",[253,0.457,967,2.72]],["body/injectables/SettingsStorageService.html",[3,0.134,4,0.134,8,0.12,10,0.604,20,0.805,23,0.162,26,0.562,28,0.978,39,1.067,40,0.017,41,1.929,42,0.422,43,1.036,44,1.456,49,0.148,50,0.222,56,0.134,57,0.162,68,0.422,96,1.393,110,0.009,111,0.009,179,0.876,191,1.481,203,3.4,220,0.919,221,0.832,223,5.035,226,0.892,248,2.426,252,3.48,253,0.506,258,0.84,259,1.405,260,1.501,265,0.965,293,2.932,345,2.396,359,1.139,431,2.027,432,3.678,434,3.984,435,5.072,436,3.678,437,3.678,438,2.296,443,2.473,444,6.024,445,3.617,446,3.685,447,3.678,449,4.391,451,4.459,452,3.155,455,2.473,472,2.473,488,2.473,489,2.473,490,2.473,963,4.39,964,4.39,967,3.014,971,3.678,975,2.473,977,5.55,978,3.609,979,5.746,980,2.473,982,2.473,984,4.128,985,2.473,993,2.473,995,2.473,1100,5.793,1170,2.218,1581,5.195,1721,5.308,1722,4.254,1723,4.254,1724,4.254,1725,5.623,1726,2.861,1727,4.254,1728,2.861,1729,4.254,1730,2.861,1731,2.861,1732,2.861,1733,2.218,1734,2.218,1735,4.254,1736,2.861,1737,2.861,1738,2.861,1739,2.861,1740,2.861]],["title/interfaces/ShapeData.html",[524,0.953,1063,2.346]],["body/interfaces/ShapeData.html",[3,0.219,4,0.219,8,0.196,10,0.47,18,2.082,23,0.265,24,1.201,32,1.432,35,2.616,40,0.017,42,0.511,43,1.061,49,0.242,56,0.325,68,0.492,96,1.212,110,0.012,111,0.012,224,2.679,227,1.628,230,1.701,260,0.98,295,3.426,345,2.346,433,2.524,463,2.041,524,1.485,526,2.149,543,3.064,694,2.386,749,3.612,1053,3.426,1054,3.313,1055,3.313,1056,5.699,1057,2.679,1058,3.064,1059,4.237,1060,4.028,1061,4.042,1062,4.042,1063,4.028,1064,3.313,1065,4.245,1066,3.625,1067,5.169,1068,5.043,1069,5.169,1070,5.169,1071,5.169,1072,4.923,1073,5.169]],["title/components/SideBarComponent.html",[0,0.706,97,1.337]],["body/components/SideBarComponent.html",[0,1.304,1,1.561,2,2.317,3,0.21,4,0.21,5,1.87,6,1.87,7,1.87,8,0.188,10,0.451,11,2.851,18,1.561,19,3.012,21,2.675,23,0.254,24,1.169,28,0.654,32,1.373,40,0.016,44,1.161,49,0.301,50,0.348,56,0.21,57,0.254,62,1.87,63,2.427,64,2.026,65,1.495,66,2.852,67,1.87,68,0.458,69,1.87,70,1.561,71,1.87,72,1.495,73,2.852,74,1.561,75,1.87,76,1.561,77,1.87,78,1.495,79,1.495,80,1.87,81,1.432,82,1.705,83,1.87,84,1.561,85,1.87,86,1.495,87,1.87,88,1.432,89,1.87,90,1.495,91,1.262,92,1.631,93,2.427,94,1.561,95,1.87,96,0.825,97,2.381,98,2.956,99,1.87,100,1.495,101,1.373,102,1.705,103,1.785,104,1.631,105,1.495,106,1.87,107,1.495,108,1.785,109,1.87,110,0.012,111,0.012,160,4.124,595,3.921,978,4.41,984,3.814,1155,5.031,1270,5.031,1741,4.512,1742,3.876,1743,5.82,1744,4.484,1745,5.031,1746,5.82,1747,6.84]],["title/classes/StaticLoader.html",[57,0.218,164,2.72]],["body/classes/StaticLoader.html",[3,0.219,4,0.219,8,0.197,10,0.602,16,2.086,23,0.266,26,0.792,28,0.685,39,0.718,40,0.017,42,0.314,43,0.918,44,1.551,49,0.386,56,0.219,57,0.266,68,0.314,110,0.012,111,0.012,112,2.156,146,5.708,148,2.532,149,2.532,150,1.499,164,4.246,166,3.369,175,3.637,187,3.074,188,4.056,213,3.058,220,0.685,221,0.62,250,1.782,255,0.983,259,0.983,261,3.074,265,0.753,272,4.246,345,2.296,445,2.532,609,3.324,937,3.927,978,2.688,1001,4.678,1042,4.929,1659,4.246,1666,5.209,1748,4.645,1749,3.637,1750,5.992,1751,5.992,1752,5.992,1753,4.691,1754,5.992,1755,5.708,1756,5.18,1757,5.708,1758,5.18,1759,4.691,1760,4.691,1761,4.691,1762,4.056,1763,3.637,1764,5.708,1765,4.645,1766,4.056,1767,4.056,1768,4.691,1769,5.992,1770,4.691,1771,4.691,1772,4.691,1773,4.691,1774,4.691]],["title/injectables/UserService.html",[253,0.457,1775,2.976]],["body/injectables/UserService.html",[3,0.155,4,0.155,8,0.139,10,0.556,20,0.933,23,0.188,24,0.951,26,0.626,28,0.88,39,0.725,40,0.017,42,0.37,43,1.059,49,0.353,50,0.258,56,0.155,57,0.188,68,0.404,110,0.01,111,0.01,139,1.106,155,2.173,191,1.924,195,3.684,203,4.092,205,2.57,214,1.11,220,0.691,221,0.626,226,1.264,228,2.771,229,2.557,230,2.193,232,3.672,250,1.722,253,0.564,255,0.695,258,0.973,259,1.431,260,1.264,265,0.887,273,3.255,280,1.651,293,2.072,321,2.866,347,1.261,354,1.32,359,1.32,363,2.57,366,1.9,367,2.771,369,2.597,371,3.167,373,5.293,376,5.509,387,1.975,392,2.173,398,1.723,400,4.284,403,1.383,410,1.975,412,4.272,415,2.072,435,3.916,442,4.947,463,1.492,536,1.9,543,3.104,624,2.673,646,3.356,648,3.356,665,3.672,780,1.604,1034,3.672,1187,3.104,1775,3.672,1776,2.57,1777,4.737,1778,5.527,1779,6.03,1780,3.316,1781,3.316,1782,6.378,1783,6.633,1784,3.316,1785,6.03,1786,7.37,1787,4.737,1788,4.737,1789,4.095,1790,4.737,1791,6.03,1792,4.095,1793,6.03,1794,6.03,1795,6.633,1796,4.737,1797,4.737,1798,4.095,1799,4.737,1800,4.737,1801,3.316,1802,4.737,1803,4.737,1804,3.316,1805,4.737,1806,4.095,1807,2.866,1808,3.316,1809,2.866,1810,3.316,1811,2.866,1812,3.316,1813,2.866,1814,3.316,1815,4.737,1816,3.316,1817,3.316,1818,2.57,1819,2.866,1820,2.57,1821,4.737,1822,2.866,1823,2.866,1824,3.316,1825,3.316,1826,4.095,1827,4.737,1828,4.095,1829,3.316,1830,3.316,1831,3.316,1832,3.316,1833,3.316]],["title/components/WaterRightDetailComponent.html",[0,0.706,100,1.28]],["body/components/WaterRightDetailComponent.html",[0,0.724,1,0.669,2,1.241,3,0.09,4,0.09,5,0.801,6,0.801,7,0.801,8,0.081,11,2.031,16,1.086,17,1.809,18,0.669,19,2.663,21,1.433,23,0.109,24,0.626,26,0.412,27,2.597,28,0.855,32,1.206,35,0.84,39,0.603,40,0.017,41,1.388,42,0.334,43,0.433,44,1.019,49,0.303,50,0.149,55,0.929,56,0.09,57,0.109,58,0.64,62,0.801,63,1.3,64,1.086,65,0.64,66,1.89,67,0.801,68,0.358,69,0.801,70,0.669,71,0.801,72,0.64,73,2.227,74,0.669,75,0.801,76,0.669,77,0.801,78,0.64,79,0.64,80,0.801,81,0.613,82,0.73,83,0.801,84,0.669,85,0.801,86,0.64,87,0.801,88,1.448,89,0.801,90,0.64,91,1.583,92,0.699,93,1.3,94,0.669,95,0.801,96,0.917,97,0.669,98,0.801,99,0.801,100,1.511,101,2.427,102,2.82,103,1.567,104,0.699,105,0.64,106,0.801,107,0.64,108,0.764,109,0.801,110,0.006,111,0.006,148,1.037,149,1.037,150,0.613,184,0.497,206,2.209,214,0.626,220,0.455,221,0.412,226,0.825,231,1.186,255,0.403,260,0.95,265,0.632,280,0.807,402,1.683,452,1.904,463,0.842,497,4.139,530,1.037,537,2.97,538,2.58,541,2.405,542,2.446,595,4.264,620,1.173,685,2.304,686,3.024,687,4.696,690,1.489,691,2.79,692,2.696,694,1.591,696,3.499,697,2.769,700,3.513,701,1.66,702,2.97,717,1.66,718,1.66,719,1.489,721,1.66,723,1.361,726,1.66,729,1.489,730,1.489,734,1.66,748,3.513,751,1.66,755,1.489,800,1.489,1277,3.864,1385,2.417,1633,1.66,1647,1.66,1651,2.696,1652,1.66,1828,2.696,1834,4.696,1835,4.696,1836,4.532,1837,3.118,1838,3.211,1839,1.92,1840,1.92,1841,3.118,1842,1.92,1843,3.118,1844,3.052,1845,1.92,1846,1.92,1847,1.489,1848,1.92,1849,2.417,1850,1.92,1851,1.92,1852,1.66,1853,1.92,1854,1.92,1855,1.92,1856,1.92,1857,1.92,1858,3.118,1859,1.92,1860,1.92,1861,1.92,1862,1.92,1863,1.92,1864,1.92,1865,1.92,1866,1.92,1867,1.92,1868,1.92,1869,1.92,1870,1.92,1871,1.92,1872,1.92,1873,1.92,1874,1.92,1875,1.92,1876,7.9,1877,1.92,1878,1.92,1879,3.404,1880,1.92,1881,1.92,1882,1.92,1883,1.92,1884,6.226,1885,3.118,1886,3.118,1887,3.118,1888,5.339,1889,3.118,1890,3.118,1891,3.118,1892,3.118,1893,3.118,1894,3.118,1895,3.118,1896,3.118,1897,3.118,1898,3.118,1899,4.532,1900,3.118,1901,3.118,1902,3.118,1903,3.118,1904,3.118,1905,3.118,1906,3.118,1907,3.118,1908,3.118,1909,3.118,1910,3.118,1911,3.118,1912,3.118,1913,4.532,1914,4.532,1915,3.118,1916,3.118,1917,3.118,1918,6.226,1919,3.118,1920,3.118,1921,3.118,1922,3.118,1923,3.118,1924,3.118,1925,3.118,1926,3.118,1927,3.118,1928,3.118,1929,3.118,1930,3.118,1931,3.118,1932,3.118,1933,3.118,1934,3.118,1935,3.118,1936,3.118,1937,3.118,1938,3.118,1939,3.118,1940,3.118,1941,3.118,1942,3.118,1943,3.118,1944,3.118,1945,3.118,1946,3.118,1947,3.118,1948,3.118,1949,3.118,1950,3.118,1951,3.118,1952,3.118,1953,3.118,1954,3.118,1955,3.118,1956,3.118,1957,3.118,1958,3.118,1959,3.118,1960,3.118,1961,3.118,1962,3.118,1963,3.118,1964,3.118,1965,3.118,1966,3.118]],["title/injectables/WaterRightsService.html",[253,0.457,1838,2.72]],["body/injectables/WaterRightsService.html",[3,0.184,4,0.184,8,0.165,14,3.056,20,1.11,23,0.223,26,0.706,28,0.885,39,0.818,40,0.017,42,0.495,43,0.548,49,0.351,50,0.306,56,0.283,57,0.223,68,0.435,91,1.11,101,1.207,110,0.011,111,0.011,139,1.314,150,1.259,179,1.99,184,1.021,191,1.372,214,1.073,218,2.851,220,0.885,221,0.801,250,1.834,252,2.456,253,0.636,255,0.826,258,1.157,260,1.12,265,1.043,280,1.854,354,2.127,359,1.569,366,2.259,367,2.987,369,2.033,386,2.786,387,2.528,390,1.644,398,1.944,403,2.228,410,2.228,415,2.337,416,2.127,417,2.456,463,1.933,533,2.408,551,3.724,608,3.056,685,2.472,686,2.472,694,2.011,696,2.583,749,1.907,766,5.266,768,1.724,769,1.812,772,3.056,773,4.619,774,3.408,779,3.062,780,2.585,781,2.727,907,3.144,1765,3.056,1838,3.786,1844,4.142,1852,4.619,1879,3.408,1967,2.793,1968,5.344,1969,5.344,1970,3.942,1971,5.344,1972,3.942,1973,5.344,1974,3.942,1975,3.408,1976,3.408,1977,3.942,1978,5.618,1979,3.408,1980,5.344,1981,3.942,1982,5.344,1983,3.942,1984,3.408,1985,5.24,1986,3.942,1987,5.344,1988,3.942,1989,3.942,1990,3.942,1991,3.942,1992,3.942,1993,3.942,1994,3.942,1995,3.942,1996,3.942,1997,3.942,1998,3.942,1999,3.942,2000,3.942,2001,3.942,2002,3.942,2003,3.942,2004,3.942,2005,3.942,2006,3.942,2007,3.942]],["title/modules/WaterUsageForecastsModule.html",[112,1.764,2008,2.72]],["body/modules/WaterUsageForecastsModule.html",[3,0.226,4,0.226,8,0.203,40,0.016,49,0.4,50,0.376,56,0.226,57,0.274,72,2.47,90,2.47,92,2.222,94,2.579,96,1.123,100,2.47,102,2.323,110,0.013,111,0.013,114,2.339,115,3.5,122,4.245,129,3.732,130,2.61,131,2.77,133,4.328,135,4.003,140,4.003,147,4.328,148,2.61,149,2.61,150,1.545,182,4.735,184,1.252,685,1.839,686,2.323,688,3.748,689,3.748,820,3.426,1617,3.748,1834,3.748,1835,3.748,2008,5.589,2009,4.18,2010,4.835,2011,4.18,2012,4.835,2013,4.835,2014,5.28,2015,6.108,2016,4.18,2017,4.18,2018,6.108,2019,6.108,2020,4.835,2021,6.108,2022,4.835,2023,4.18]],["title/injectables/WaterUsageForecastsService.html",[253,0.457,944,2.346]],["body/injectables/WaterUsageForecastsService.html",[3,0.174,4,0.174,8,0.156,10,0.374,20,1.047,23,0.211,26,0.777,28,0.75,39,0.57,40,0.017,42,0.394,43,1.026,49,0.344,50,0.289,56,0.311,57,0.211,68,0.394,74,1.295,96,1.082,101,1.572,110,0.012,111,0.011,139,1.24,150,1.188,179,1.139,184,0.963,191,1.295,207,2.131,214,1.031,218,2.808,220,0.75,221,0.679,226,1.076,228,2.36,230,2.14,231,1.415,247,2.008,250,1.712,253,0.611,255,0.78,258,1.092,260,1.076,265,0.597,280,1.33,345,2.026,354,1.481,359,1.481,366,2.131,367,2.915,369,1.953,386,2.36,387,2.142,390,1.551,398,1.353,402,2.008,403,1.551,407,2.131,410,1.551,415,1.627,416,1.481,417,1.71,433,2.008,463,1.904,521,1.898,524,1.575,548,1.953,685,2.237,686,2.734,768,1.627,769,1.71,779,2.131,780,1.799,781,1.898,906,3.594,907,2.845,908,2.131,909,3.854,910,2.772,911,2.273,912,2.438,913,2.636,914,4.156,915,3.854,916,3.854,917,3.854,918,2.273,919,2.636,920,2.273,921,2.438,922,2.636,923,2.438,924,4.167,925,2.636,926,4.997,927,3.594,928,2.636,929,2.636,930,2.636,931,2.636,932,2.636,933,2.636,934,3.639,935,2.636,936,2.438,937,2.438,938,2.636,939,2.273,940,2.438,941,2.636,942,2.636,943,3.639,944,3.138,945,4.167,946,4.167,947,4.167,948,4.167,949,4.167,950,4.167,951,2.636,952,2.636,953,2.636,954,2.636,1187,2.438,2024,3.72,2025,3.72,2026,3.72]],["title/injectables/WaterUsageHistoryService.html",[253,0.457,706,2.72]],["body/injectables/WaterUsageHistoryService.html",[3,0.218,4,0.218,8,0.195,20,1.312,23,0.264,26,0.789,28,0.871,39,0.714,40,0.017,42,0.465,43,0.915,49,0.371,50,0.362,56,0.279,57,0.264,68,0.4,91,1.312,96,0.857,101,1.427,110,0.012,111,0.012,139,1.554,150,1.489,179,1.827,184,1.207,191,1.623,214,1.198,218,2.97,220,0.871,221,0.789,250,1.777,253,0.71,255,0.977,258,1.368,260,1.251,265,0.748,280,1.704,354,1.855,359,1.855,366,2.67,367,3.189,369,2.27,386,2.742,387,2.488,390,1.944,398,1.695,403,1.944,410,1.944,415,2.039,416,1.855,417,2.142,462,3.613,463,1.611,685,2.504,686,2.926,696,3.91,698,5.158,706,4.228,716,3.613,744,5.69,768,2.039,769,2.142,772,3.613,779,2.67,780,2.254,781,2.378,805,3.613,907,3.184,1984,4.029,2027,3.302,2028,5.967,2029,4.661,2030,5.967,2031,4.661,2032,4.661,2033,4.661,2034,4.661,2035,4.661]],["title/interfaces/WisdomInterface.html",[524,0.953,2036,2.72]],["body/interfaces/WisdomInterface.html",[0,1.358,3,0.223,4,0.223,8,0.2,10,0.48,13,5.241,23,0.271,24,1.217,40,0.017,42,0.446,43,0.925,45,4.279,49,0.247,56,0.223,68,0.406,110,0.012,111,0.012,112,3.219,114,3.388,176,4.7,184,1.237,200,4.59,231,2.938,339,3.973,442,5.233,524,1.795,526,2.196,905,5.241,910,3.595,969,3.574,1014,4.295,1047,4.295,1103,5.241,1188,5.241,1299,4.7,1311,5.241,1666,5.233,1763,4.7,2036,4.962,2037,4.131,2038,6.063,2039,5.43,2040,6.063,2041,6.063,2042,6.063,2043,6.063,2044,6.063,2045,5.241]],["title/modules/WisdomModule.html",[112,1.764,122,2.2]],["body/modules/WisdomModule.html",[3,0.228,4,0.228,8,0.204,40,0.016,49,0.394,50,0.379,56,0.228,57,0.276,70,2.728,81,2.503,82,1.855,88,2.503,105,2.612,110,0.013,111,0.013,114,2.359,115,3.519,122,4.552,129,3.752,130,2.632,131,2.794,133,4.351,135,3.196,140,4.024,147,4.351,148,2.632,149,2.632,182,4.761,184,1.263,198,4.761,820,3.455,1011,3.78,2014,5.309,2046,4.216,2047,4.216,2048,4.216,2049,4.877,2050,4.877,2051,4.877,2052,4.877,2053,4.877,2054,4.877]],["title/coverage.html",[2055,4.537]],["body/coverage.html",[0,1.309,1,0.871,8,0.105,9,2.164,40,0.017,42,0.168,57,0.218,65,1.282,70,0.871,72,0.835,76,0.871,78,0.835,79,0.835,81,0.8,84,0.871,86,0.835,88,0.8,90,0.835,92,1.399,94,0.871,96,0.707,97,0.871,100,0.835,102,1.463,105,0.835,107,0.835,110,0.008,111,0.008,123,1.64,124,1.64,125,1.64,126,1.529,127,1.64,128,1.64,155,1.64,160,1.773,164,1.773,185,1.64,187,1.64,189,1.64,199,2.527,201,2.164,216,1.434,217,1.529,231,0.952,253,0.838,280,0.648,290,1.962,293,2.726,324,2.496,326,2.981,346,1.94,360,3.629,389,1.773,390,1.044,391,1.773,399,1.94,412,1.773,430,4.395,431,4.557,477,1.94,479,1.94,481,1.94,482,1.94,506,2.164,507,2.981,511,3.629,513,1.94,521,1.277,524,1.672,525,1.64,527,2.981,542,1.351,556,2.164,600,2.164,601,2.164,642,2.164,644,1.773,685,2.812,686,2.896,687,2.981,688,1.94,689,1.94,690,2.981,697,1.529,704,1.773,706,1.773,728,1.94,762,2.724,768,1.095,769,2.605,782,2.164,790,2.164,801,1.64,843,2.164,869,2.164,889,2.164,902,1.94,903,2.164,906,1.529,907,3.191,908,3.248,918,1.529,939,1.529,944,1.529,956,2.164,967,1.773,978,1.434,1010,2.164,1011,1.94,1012,2.164,1040,2.164,1041,2.164,1053,1.434,1054,2.724,1055,2.724,1063,1.529,1075,2.164,1088,1.529,1104,5.516,1121,6.242,1140,2.164,1153,2.164,1172,2.164,1215,2.164,1269,1.94,1292,1.64,1528,1.773,1529,4.017,1548,4.017,1550,1.773,1552,1.773,1616,2.164,1617,1.94,1618,3.324,1645,2.164,1653,2.164,1654,2.164,1659,2.724,1680,1.773,1681,2.164,1682,2.164,1700,2.164,1721,3.629,1733,1.94,1734,1.94,1741,1.94,1742,2.164,1748,2.981,1749,3.629,1775,1.94,1776,3.629,1818,1.94,1820,1.94,1834,1.94,1835,1.94,1838,1.773,1847,1.94,1849,1.94,1967,2.724,2023,2.164,2027,2.724,2036,3.317,2037,2.164,2055,2.164,2056,2.503,2057,2.164,2058,2.503,2059,3.324,2060,7.804,2061,7.838,2062,6.232,2063,3.845,2064,6.596,2065,4.682,2066,6.734,2067,4.901,2068,3.324,2069,2.164,2070,2.164,2071,2.164,2072,2.164,2073,2.503,2074,2.981,2075,2.164,2076,2.164,2077,4.901,2078,2.164,2079,2.164,2080,2.164,2081,2.164,2082,5.254,2083,2.503,2084,2.164,2085,3.324,2086,3.324,2087,3.324,2088,2.164,2089,3.324,2090,3.324,2091,3.324,2092,5.985,2093,2.164,2094,4.682,2095,2.503,2096,2.503,2097,2.503,2098,2.503,2099,2.503,2100,2.503,2101,2.503,2102,2.503,2103,2.503,2104,2.503,2105,2.503,2106,2.164,2107,2.503,2108,2.503]],["title/dependencies.html",[115,2.647,2109,2.768]],["body/dependencies.html",[34,2.738,35,2.347,38,4.638,40,0.017,50,0.417,52,4.638,53,4.638,54,4.638,110,0.013,111,0.013,115,3.074,142,4.159,144,5.632,145,4.616,148,2.896,149,2.896,184,1.389,255,1.125,393,4.638,604,5.05,820,3.801,1393,4.638,1546,4.159,1807,4.638,2016,4.638,2017,4.638,2110,5.365,2111,7.762,2112,5.365,2113,5.365,2114,5.365,2115,5.365,2116,5.365,2117,4.638,2118,5.365,2119,5.365,2120,5.365,2121,5.365,2122,5.365,2123,5.365,2124,5.365,2125,5.365,2126,5.365,2127,5.365,2128,5.365,2129,5.365,2130,5.365,2131,5.365,2132,5.365]],["title/miscellaneous/enumerations.html",[2133,1.728,2134,3.994]],["body/miscellaneous/enumerations.html",[23,0.32,26,0.746,40,0.016,44,2.012,91,1.588,110,0.014,111,0.014,235,5.206,247,3.046,548,2.146,685,2.146,686,2.727,907,2.729,908,3.848,909,3.697,912,3.697,914,4.4,915,4.4,916,4.4,917,4.4,927,4.103,1302,4.103,1385,5.206,2074,4.374,2133,3.046,2134,4.878,2135,4.374,2136,4.878,2137,5.643,2138,6.715]],["title/miscellaneous/functions.html",[2133,1.728,2139,3.994]],["body/miscellaneous/functions.html",[0,0.764,10,0.73,23,0.235,35,1.818,39,1.112,40,0.016,42,0.476,43,1.025,68,0.486,91,1.753,96,0.764,110,0.011,111,0.011,220,1.059,221,0.959,226,1.305,227,1.447,231,2.368,234,3.382,238,3.592,265,0.667,278,3.592,293,2.724,295,3.172,345,2.121,385,2.243,398,1.512,445,2.988,452,2.678,463,1.96,535,3.923,537,3.628,559,3.592,575,3.592,595,3.733,694,2.12,749,2.01,818,4.292,876,3.221,891,2.539,910,2.988,936,2.723,1033,3.592,1187,2.723,1191,3.221,1302,4.435,1324,5.382,1472,3.592,1473,5.74,1551,2.723,1692,3.592,1694,4.786,1806,3.592,1822,3.592,1823,3.592,1847,4.292,1985,3.592,2039,4.292,2074,3.221,2075,4.786,2076,4.786,2077,3.592,2078,4.786,2079,4.786,2080,4.786,2081,4.786,2133,2.243,2136,4.786,2139,3.592,2140,6.915,2141,4.156,2142,4.156,2143,4.156,2144,4.156,2145,5.536,2146,4.156,2147,4.156,2148,4.156,2149,4.156,2150,4.156,2151,4.156,2152,4.156,2153,4.156,2154,4.156,2155,4.156,2156,4.156,2157,4.156,2158,4.156,2159,4.156,2160,4.156,2161,4.156,2162,4.156,2163,4.156,2164,5.536,2165,6.226,2166,4.156,2167,4.156,2168,4.156,2169,4.156,2170,4.156,2171,4.156,2172,3.592,2173,4.156,2174,4.156,2175,6.226,2176,3.592,2177,4.156,2178,4.156,2179,4.156,2180,6.915,2181,4.156,2182,4.156,2183,4.156,2184,4.156]],["title/index.html",[23,0.218,2185,3.319]],["body/index.html",[1,2.529,2,1.659,40,0.017,70,2.529,72,2.079,76,2.171,78,2.422,79,2.079,81,2.321,84,2.171,86,2.079,88,2.321,90,2.079,94,2.171,97,2.171,100,2.079,104,1.516,105,2.422,107,2.079,110,0.011,111,0.011,113,5.704,114,2.016,115,3.178,116,3.603,117,3.603,118,3.603,119,3.603,120,3.603,121,4.086,122,4.49,123,4.086,124,4.086,125,4.086,126,3.809,127,4.086,128,4.086,129,3.389,130,2.25,131,2.388,183,2.546,200,2.731,359,1.659,526,1.915,609,2.953,748,3.231,826,3.603,895,5.147,896,3.603,898,3.603,899,3.603,1471,3.635,2008,5.427,2009,3.603,2011,3.603,2046,3.603,2047,3.603,2048,3.603,2185,3.603,2186,4.168,2187,4.168,2188,5.547]],["title/modules.html",[114,2.539]],["body/modules.html",[40,0.014,110,0.014,111,0.014,113,4.225,114,2.884,121,3.907,122,3.417,145,5.352,272,4.225,895,4.225,2008,4.225,2189,7.554,2190,7.554,2191,7.691,2192,5.963]],["title/properties.html",[24,0.927,2109,2.768]],["body/properties.html",[10,0.62,15,4.783,24,1.239,40,0.016,110,0.014,111,0.014,1551,4.043,1745,5.334,2117,5.334,2193,6.17]],["title/routes.html",[183,3.206]],["body/routes.html",[40,0.015,110,0.015,111,0.015,183,3.836]],["title/miscellaneous/typealiases.html",[2133,1.728,2194,4.62]],["body/miscellaneous/typealiases.html",[23,0.206,34,2.581,35,2.213,40,0.014,42,0.523,43,0.918,55,2.447,68,0.421,96,1.156,110,0.01,111,0.01,160,2.578,193,2.821,203,4.144,227,1.761,244,2.085,247,2.73,284,2.384,307,2.223,329,1.592,345,1.162,394,4.372,396,4.372,451,2.085,562,2.384,629,2.223,685,2.211,686,2.512,709,3.921,716,3.921,742,3.146,749,2.447,762,2.578,766,3.921,907,2.447,910,1.964,955,5.413,969,1.857,978,2.085,984,4.684,1047,2.578,1054,2.578,1055,3.584,1057,3.331,1065,3.839,1235,4.372,1237,4.372,1269,2.821,1274,4.372,1299,2.821,1307,3.146,1350,4.372,1394,3.146,1395,3.146,1396,3.146,1397,3.146,1398,3.146,1537,2.821,1690,3.146,1741,2.821,1789,3.146,1792,3.146,1798,3.146,1809,4.372,1811,4.372,1813,4.372,1826,3.146,1844,3.921,1967,4.452,1976,4.372,1978,4.372,1979,5.432,2027,3.584,2057,3.146,2133,1.964,2135,4.871,2195,3.639,2196,3.146,2197,5.058,2198,3.639,2199,5.058,2200,3.639,2201,5.058,2202,3.639,2203,3.639,2204,5.814,2205,3.639,2206,5.058,2207,3.639,2208,5.058,2209,3.639,2210,5.058,2211,3.639,2212,6.603,2213,7.011,2214,7.149,2215,5.058,2216,3.639,2217,5.058,2218,3.639,2219,5.058,2220,3.639,2221,5.058,2222,3.639,2223,3.639,2224,3.639,2225,3.639,2226,3.639,2227,5.058,2228,3.639,2229,3.639,2230,3.639,2231,4.372,2232,6.603,2233,5.814,2234,5.058,2235,5.058,2236,5.814,2237,3.639,2238,3.639,2239,3.639,2240,3.639,2241,5.814,2242,5.058,2243,3.146,2244,3.639,2245,3.639,2246,5.814,2247,5.058,2248,3.639,2249,3.639,2250,5.058,2251,3.639,2252,3.639,2253,3.639,2254,3.146,2255,5.058,2256,3.639,2257,3.639,2258,3.639,2259,3.146,2260,3.639,2261,3.639,2262,3.639,2263,6.283,2264,5.814,2265,3.639,2266,3.639,2267,3.639,2268,3.639,2269,3.639,2270,3.639,2271,3.639,2272,3.639,2273,3.639,2274,3.639,2275,3.639,2276,3.639,2277,3.639,2278,3.639,2279,3.639,2280,3.639,2281,3.639,2282,3.639,2283,3.639]],["title/miscellaneous/variables.html",[2133,1.728,2284,3.994]],["body/miscellaneous/variables.html",[0,0.936,12,1.222,23,0.113,32,2.34,34,3.135,35,1.771,40,0.017,41,0.612,42,0.499,43,0.963,44,1.978,45,1.969,51,1.729,55,2.462,68,0.134,72,0.667,78,0.667,82,0.761,88,0.639,90,0.667,91,1.139,92,1.172,94,0.696,96,0.593,100,0.667,101,2.073,103,0.796,110,0.008,111,0.007,112,1.86,155,3.042,166,1.645,175,3.598,179,1.822,192,1.311,193,2.498,196,3.138,203,1.74,207,1.847,208,3.335,209,1.551,211,2.283,226,0.419,227,2.139,229,2.747,231,2.069,245,1.729,262,1.551,265,0.517,273,1.74,279,0.967,280,1.541,284,1.311,290,2.368,293,1.41,319,1.311,326,1.551,327,3.138,328,1.729,329,1.41,339,2.112,345,1.901,346,2.498,354,1.283,360,1.551,363,2.498,370,1.551,371,2.319,385,1.08,386,0.919,387,0.834,389,2.283,390,1.344,391,2.283,392,1.311,398,2.081,399,2.498,400,4.217,401,1.729,402,1.08,403,2.123,404,1.551,405,1.729,406,2.786,407,1.847,408,2.786,409,1.729,410,1.936,411,1.729,412,2.283,414,1.729,415,1.41,416,0.796,417,0.919,418,1.729,419,2.176,420,1.729,430,1.551,431,4.217,442,3.289,445,1.08,451,1.847,461,1.729,462,1.551,463,0.54,477,2.498,478,1.729,479,2.498,480,1.729,481,2.498,482,2.498,511,4.763,512,5.453,513,2.498,521,2.919,524,0.8,536,1.146,562,1.311,607,1.729,624,0.967,643,1.417,644,3.854,656,2.498,664,1.551,685,2.176,686,2.788,728,2.498,762,1.417,768,1.41,769,2.899,770,1.729,783,1.551,785,3.335,791,1.551,800,1.551,805,1.551,806,1.417,815,1.551,891,3.11,907,1.958,908,1.847,911,3.495,969,1.021,977,3.598,978,3.117,979,2.498,984,2.652,1027,1.551,1042,1.417,1060,1.222,1076,1.417,1101,1.729,1138,1.729,1225,1.729,1229,1.729,1230,1.729,1250,1.551,1273,3.499,1283,2.786,1289,1.729,1305,1.417,1341,4.4,1353,1.729,1392,1.729,1471,1.311,1529,1.417,1530,1.551,1531,3.138,1542,2.498,1548,3.606,1549,1.551,1550,2.283,1551,1.311,1552,2.283,1568,1.551,1632,1.729,1659,3.289,1666,2.283,1668,1.729,1680,1.417,1711,1.729,1721,1.551,1733,2.498,1734,2.498,1748,1.551,1749,3.598,1755,1.729,1756,1.729,1757,1.729,1758,1.729,1762,1.729,1763,1.551,1764,4.013,1765,3.598,1766,1.729,1767,1.729,1776,1.551,1818,2.498,1819,1.729,1820,2.498,1849,2.498,1967,2.283,1975,1.729,2027,2.283,2036,3.854,2039,3.138,2045,1.729,2059,3.499,2067,4.4,2068,4.013,2069,2.786,2070,2.786,2071,1.729,2072,2.786,2084,1.729,2085,1.729,2086,5.145,2087,1.729,2088,1.729,2089,4.013,2090,1.729,2091,3.499,2093,1.729,2106,1.729,2133,2.185,2135,3.138,2172,1.729,2176,1.729,2196,1.729,2231,2.786,2243,1.729,2254,1.729,2259,1.729,2284,1.729,2285,4.642,2286,4.048,2287,3.223,2288,3.223,2289,3.223,2290,3.223,2291,3.223,2292,2,2293,2,2294,3.223,2295,2,2296,2,2297,2,2298,5.09,2299,3.223,2300,3.223,2301,3.223,2302,3.223,2303,3.223,2304,4.048,2305,4.048,2306,2,2307,2,2308,2,2309,2,2310,3.223,2311,2,2312,3.223,2313,4.642,2314,2,2315,3.223,2316,3.223,2317,2,2318,2,2319,2,2320,2,2321,2,2322,2,2323,2,2324,2,2325,3.223,2326,2,2327,3.223,2328,2,2329,2,2330,4.048,2331,2,2332,3.223,2333,2,2334,2,2335,2,2336,2,2337,2,2338,2,2339,2,2340,2,2341,2,2342,2,2343,2,2344,2,2345,2,2346,2,2347,3.223,2348,3.223,2349,2,2350,2,2351,2,2352,2,2353,2,2354,2,2355,2,2356,2,2357,2,2358,2,2359,2,2360,5.09,2361,2,2362,2,2363,2,2364,2,2365,2,2366,2,2367,3.223]]],"invertedIndex":[["",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/ExampleComponent.html":{},"modules/ExampleModule.html":{},"injectables/ExampleService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"interfaces/LayerData.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"interfaces/Marker.html":{},"classes/ModuleProvider.html":{},"guards/QueryParameterGuard.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"interfaces/ShapeData.html":{},"components/SideBarComponent.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"interfaces/WisdomInterface.html":{},"modules/WisdomModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":1104,"title":{},"body":{"components/LoaderComponent.html":{},"components/MapComponent.html":{},"coverage.html":{}}}],["0.1.0",{"_index":2117,"title":{},"body":{"dependencies.html":{},"properties.html":{}}}],["0.11.6",{"_index":2132,"title":{},"body":{"dependencies.html":{}}}],["0.3s",{"_index":1117,"title":{},"body":{"components/LoaderComponent.html":{}}}],["0.6s",{"_index":1119,"title":{},"body":{"components/LoaderComponent.html":{}}}],["0.7s",{"_index":1116,"title":{},"body":{"components/LoaderComponent.html":{}}}],["0.8",{"_index":1124,"title":{},"body":{"components/LoaderComponent.html":{}}}],["0.8s",{"_index":1129,"title":{},"body":{"components/LoaderComponent.html":{}}}],["0.9.4",{"_index":2114,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2092,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2101,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2094,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2095,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2100,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2103,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2102,"title":{},"body":{"coverage.html":{}}}],["0s",{"_index":1114,"title":{},"body":{"components/LoaderComponent.html":{}}}],["1",{"_index":551,"title":{},"body":{"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"components/LoaderComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/WaterRightsService.html":{}}}],["1.0.1",{"_index":2127,"title":{},"body":{"dependencies.html":{}}}],["1.11.3",{"_index":2122,"title":{},"body":{"dependencies.html":{}}}],["1.4.0",{"_index":2120,"title":{},"body":{"dependencies.html":{}}}],["1.4s",{"_index":1113,"title":{},"body":{"components/LoaderComponent.html":{}}}],["1.5.3",{"_index":2125,"title":{},"body":{"dependencies.html":{}}}],["1.8.0",{"_index":2124,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":2061,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":2097,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":748,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/WaterRightDetailComponent.html":{},"index.html":{}}}],["100",{"_index":1121,"title":{},"body":{"components/LoaderComponent.html":{},"components/MapComponent.html":{},"coverage.html":{}}}],["10px",{"_index":1126,"title":{},"body":{"components/LoaderComponent.html":{}}}],["12",{"_index":1882,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["13",{"_index":2187,"title":{},"body":{"index.html":{}}}],["14",{"_index":2186,"title":{},"body":{"index.html":{}}}],["14.0.0",{"_index":2113,"title":{},"body":{"dependencies.html":{}}}],["14.1.2",{"_index":2111,"title":{},"body":{"dependencies.html":{}}}],["15px",{"_index":1122,"title":{},"body":{"components/LoaderComponent.html":{}}}],["1:25000",{"_index":1957,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["1].recordedat.toisostring().substring(0",{"_index":747,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["1f5aec",{"_index":1327,"title":{},"body":{"components/MapComponent.html":{}}}],["1s",{"_index":1107,"title":{},"body":{"components/LoaderComponent.html":{}}}],["2",{"_index":1471,"title":{},"body":{"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["2.4.0",{"_index":2130,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":2082,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":2099,"title":{},"body":{"coverage.html":{}}}],["2000",{"_index":1131,"title":{},"body":{"components/LoaderComponent.html":{}}}],["2022",{"_index":1468,"title":{},"body":{"components/MapComponent.html":{}}}],["21/21",{"_index":2105,"title":{},"body":{"coverage.html":{}}}],["29/29",{"_index":2073,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":2188,"title":{},"body":{"index.html":{}}}],["3.0.11",{"_index":2126,"title":{},"body":{"dependencies.html":{}}}],["3.8.0",{"_index":2119,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":2066,"title":{},"body":{"coverage.html":{}}}],["31",{"_index":1883,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["33",{"_index":2096,"title":{},"body":{"coverage.html":{}}}],["35",{"_index":2313,"title":{},"body":{"miscellaneous/variables.html":{}}}],["39;01&#39",{"_index":1381,"title":{},"body":{"components/MapComponent.html":{}}}],["39;034030000000&#39",{"_index":1382,"title":{},"body":{"components/MapComponent.html":{}}}],["39;all",{"_index":1374,"title":{},"body":{"components/MapComponent.html":{}}}],["39;only",{"_index":1378,"title":{},"body":{"components/MapComponent.html":{}}}],["39;show",{"_index":1384,"title":{},"body":{"components/MapComponent.html":{}}}],["4",{"_index":828,"title":{},"body":{"components/ErrorComponent.html":{}}}],["4/4",{"_index":2062,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":317,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["401",{"_index":358,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/LoginComponent.html":{}}}],["409",{"_index":1833,"title":{},"body":{"injectables/UserService.html":{}}}],["5",{"_index":826,"title":{},"body":{"components/ErrorComponent.html":{},"index.html":{}}}],["5/5",{"_index":2064,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1125,"title":{},"body":{"components/LoaderComponent.html":{}}}],["500px",{"_index":1345,"title":{},"body":{"components/MapComponent.html":{}}}],["53.1434501",{"_index":1338,"title":{},"body":{"components/MapComponent.html":{}}}],["56px",{"_index":1133,"title":{},"body":{"components/LoaderComponent.html":{}}}],["6/6",{"_index":2065,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":2098,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1367,"title":{},"body":{"components/MapComponent.html":{}}}],["7.0.2",{"_index":2123,"title":{},"body":{"dependencies.html":{}}}],["7.5.5",{"_index":2128,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":2063,"title":{},"body":{"coverage.html":{}}}],["8.2145521",{"_index":1339,"title":{},"body":{"components/MapComponent.html":{}}}],["9/9",{"_index":2083,"title":{},"body":{"coverage.html":{}}}],["9999",{"_index":1881,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["_displaytexts",{"_index":1176,"title":{},"body":{"injectables/LoaderService.html":{}}}],["_loading",{"_index":1177,"title":{},"body":{"injectables/LoaderService.html":{}}}],["a0a0a0",{"_index":2341,"title":{},"body":{"miscellaneous/variables.html":{}}}],["abc123",{"_index":2162,"title":{},"body":{"miscellaneous/functions.html":{}}}],["access",{"_index":207,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthStorageService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/variables.html":{}}}],["access_token_key",{"_index":477,"title":{},"body":{"injectables/AuthStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["accessors",{"_index":438,"title":{},"body":{"injectables/AuthStorageService.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/ErrorComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"injectables/LoaderService.html":{},"components/MapComponent.html":{},"injectables/SettingsStorageService.html":{}}}],["accesstoken",{"_index":439,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["accesstoken(token",{"_index":491,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["account",{"_index":1786,"title":{},"body":{"injectables/UserService.html":{}}}],["accounts",{"_index":1802,"title":{},"body":{"injectables/UserService.html":{}}}],["accumulated",{"_index":919,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["accumulations",{"_index":924,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["action",{"_index":2244,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["activated",{"_index":1692,"title":{},"body":{"guards/QueryParameterGuard.html":{},"miscellaneous/functions.html":{}}}],["activatedroute",{"_index":702,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"injectables/ErrorService.html":{},"components/LoginComponent.html":{},"components/MapSelectViewComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["activatedroutesnapshot",{"_index":234,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"guards/LoaderGuard.html":{},"guards/QueryParameterGuard.html":{},"miscellaneous/functions.html":{}}}],["active",{"_index":608,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{},"components/LoaderComponent.html":{},"injectables/WaterRightsService.html":{}}}],["actual_component",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["actually",{"_index":1300,"title":{},"body":{"components/MapComponent.html":{}}}],["add",{"_index":989,"title":{},"body":{"components/FrameComponent.html":{},"injectables/LoaderService.html":{},"classes/ModuleProvider.html":{}}}],["addloader",{"_index":1180,"title":{},"body":{"injectables/LoaderService.html":{}}}],["addloader(toresolve",{"_index":1182,"title":{},"body":{"injectables/LoaderService.html":{}}}],["adds",{"_index":1016,"title":{},"body":{"components/IonIconComponent.html":{}}}],["administration",{"_index":2138,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["afterviewinit",{"_index":691,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/LoaderComponent.html":{},"components/MapComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["alias",{"_index":1394,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/typealiases.html":{}}}],["aliases",{"_index":2195,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":2327,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alive",{"_index":566,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["allow",{"_index":803,"title":{},"body":{"components/ErrorComponent.html":{},"components/IonIconComponent.html":{}}}],["allowed",{"_index":240,"title":{},"body":{"guards/AuthGuard.html":{}}}],["allows",{"_index":573,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"interceptors/LoaderInterceptor.html":{}}}],["already",{"_index":1537,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{},"miscellaneous/typealiases.html":{}}}],["always",{"_index":404,"title":{},"body":{"injectables/AuthService.html":{},"components/MapComponent.html":{},"miscellaneous/variables.html":{}}}],["amount",{"_index":1707,"title":{},"body":{"interceptors/SanitizeUrlInterceptor.html":{}}}],["amounts",{"_index":935,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["angular",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/IonIconComponent.html":{},"properties.html":{}}}],["angular/animations",{"_index":2110,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":820,"title":{},"body":{"components/ErrorComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"modules/WisdomModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interceptors/BaseUrlInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"injectables/ConsumersService.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"interceptors/LoaderInterceptor.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/UserService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["angular/compiler",{"_index":1807,"title":{},"body":{"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/core",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/ExampleComponent.html":{},"modules/ExampleModule.html":{},"injectables/ExampleService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"guards/QueryParameterGuard.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"components/SideBarComponent.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"modules/WisdomModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":184,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"injectables/ErrorService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"guards/LoaderGuard.html":{},"components/LoginComponent.html":{},"components/MapSelectViewComponent.html":{},"classes/ModuleProvider.html":{},"guards/QueryParameterGuard.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"interfaces/WisdomInterface.html":{},"modules/WisdomModule.html":{},"dependencies.html":{}}}],["animation",{"_index":1080,"title":{},"body":{"components/LoaderComponent.html":{},"injectables/LoaderService.html":{}}}],["annotation",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["annotationplugin",{"_index":37,"title":{},"body":{"components/AppComponent.html":{}}}],["another",{"_index":658,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["any).options.padding",{"_index":1448,"title":{},"body":{"components/MapComponent.html":{}}}],["api",{"_index":521,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/WaterUsageForecastsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["api.ts",{"_index":2089,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["api_url",{"_index":769,"title":{},"body":{"injectables/ConsumersService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apiurl",{"_index":2303,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["app.component",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":22,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"coverage.html":{},"index.html":{}}}],["append",{"_index":655,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["application",{"_index":958,"title":{},"body":{"components/FrameComponent.html":{}}}],["application/json",{"_index":780,"title":{},"body":{"injectables/ConsumersService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/UserService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["application/x",{"_index":414,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["appmodule",{"_index":113,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{}}}],["approutingmodule",{"_index":121,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["area",{"_index":1918,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["arg0",{"_index":2317,"title":{},"body":{"miscellaneous/variables.html":{}}}],["array",{"_index":534,"title":{},"body":{"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"guards/QueryParameterGuard.html":{}}}],["array.from(this.selectedshapes[layerkey",{"_index":1526,"title":{},"body":{"components/MapComponent.html":{}}}],["arrays",{"_index":2258,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["assets/leaflet/images",{"_index":60,"title":{},"body":{"components/AppComponent.html":{}}}],["associated",{"_index":1795,"title":{},"body":{"injectables/UserService.html":{}}}],["association",{"_index":1944,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["async",{"_index":1570,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["asynchronously",{"_index":1567,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["attention",{"_index":1308,"title":{},"body":{"components/MapComponent.html":{}}}],["attribute",{"_index":1030,"title":{},"body":{"components/IonIconComponent.html":{},"guards/QueryParameterGuard.html":{}}}],["attribution",{"_index":1464,"title":{},"body":{"components/MapComponent.html":{}}}],["auth",{"_index":229,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"components/FrameComponent.html":{},"components/LoginComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["auth.service",{"_index":257,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["auth/auth",{"_index":988,"title":{},"body":{"components/FrameComponent.html":{}}}],["auth/auth.guard",{"_index":186,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/ModuleProvider.html":{}}}],["auth/auth.interceptor",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/auth.service",{"_index":987,"title":{},"body":{"components/FrameComponent.html":{}}}],["auth/login/login.component",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["auth_api",{"_index":1818,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth_url",{"_index":399,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authentication",{"_index":338,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["authguard",{"_index":185,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"classes/ModuleProvider.html":{},"coverage.html":{}}}],["authinterceptor",{"_index":123,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"coverage.html":{},"index.html":{}}}],["authority",{"_index":1888,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["authorization",{"_index":328,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"miscellaneous/variables.html":{}}}],["authorized",{"_index":2269,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["authrequest",{"_index":348,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["authservice",{"_index":217,"title":{"injectables/AuthService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/FrameComponent.html":{},"components/LoginComponent.html":{},"coverage.html":{}}}],["authstorage",{"_index":222,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/FrameComponent.html":{},"components/LoginComponent.html":{}}}],["authstorageservice",{"_index":216,"title":{"injectables/AuthStorageService.html":{}},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthStorageService.html":{},"components/FrameComponent.html":{},"components/LoginComponent.html":{},"coverage.html":{}}}],["authstorageservice.getstorage(access_token_key",{"_index":493,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["authstorageservice.getstorage(expires_in_key",{"_index":498,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["authstorageservice.getstorage(refresh_token_key",{"_index":501,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["authstorageservice.getstorage(scopes_key",{"_index":505,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["authstorageservice.setstorage(`${unixtime",{"_index":495,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["authstorageservice.setstorage(scopes",{"_index":503,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["authstorageservice.setstorage(token",{"_index":492,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["automatically",{"_index":2043,"title":{},"body":{"interfaces/WisdomInterface.html":{}}}],["available",{"_index":272,"title":{},"body":{"guards/AuthGuard.html":{},"classes/ModuleProvider.html":{},"classes/StaticLoader.html":{},"modules.html":{}}}],["avoid",{"_index":294,"title":{},"body":{"guards/AuthGuard.html":{}}}],["await",{"_index":1198,"title":{},"body":{"injectables/LoaderService.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["awaited",{"_index":1185,"title":{},"body":{"injectables/LoaderService.html":{}}}],["awaits",{"_index":1194,"title":{},"body":{"injectables/LoaderService.html":{}}}],["back",{"_index":842,"title":{},"body":{"components/ErrorComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["backgroundcolor",{"_index":740,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["bad",{"_index":2271,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["bar",{"_index":984,"title":{},"body":{"components/FrameComponent.html":{},"injectables/SettingsStorageService.html":{},"components/SideBarComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["bar'},{'name",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["bar.component",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["bar.component.html",{"_index":1743,"title":{},"body":{"components/SideBarComponent.html":{}}}],["bar.component.ts",{"_index":1742,"title":{},"body":{"components/SideBarComponent.html":{},"coverage.html":{}}}],["bar.component.ts:13",{"_index":1744,"title":{},"body":{"components/SideBarComponent.html":{}}}],["bar/side",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"components/SideBarComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["base",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"interceptors/BaseUrlInterceptor.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["baseurl",{"_index":2086,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["baseurlinterceptor",{"_index":124,"title":{"interceptors/BaseUrlInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/BaseUrlInterceptor.html":{},"coverage.html":{},"index.html":{}}}],["bearer",{"_index":337,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["before",{"_index":1710,"title":{},"body":{"interceptors/SanitizeUrlInterceptor.html":{}}}],["behavior",{"_index":1866,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["behaviorsubject",{"_index":538,"title":{},"body":{"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"components/ConsumerDetailComponent.html":{},"components/MapComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["behaviorsubject([[nan",{"_index":1843,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["behaviorsubject([nan",{"_index":714,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["behaviour",{"_index":645,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["beta.1",{"_index":2118,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":1173,"title":{},"body":{"injectables/LoaderService.html":{}}}],["beware",{"_index":2170,"title":{},"body":{"miscellaneous/functions.html":{}}}],["bkg",{"_index":1467,"title":{},"body":{"components/MapComponent.html":{}}}],["blue",{"_index":741,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["body",{"_index":1828,"title":{},"body":{"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{}}}],["body.roles",{"_index":1830,"title":{},"body":{"injectables/UserService.html":{}}}],["body.scopes",{"_index":1829,"title":{},"body":{"injectables/UserService.html":{}}}],["boolean",{"_index":252,"title":{},"body":{"guards/AuthGuard.html":{},"components/BreadcrumbsComponent.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/ErrorComponent.html":{},"components/FrameComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"guards/QueryParameterGuard.html":{},"injectables/SettingsStorageService.html":{},"injectables/WaterRightsService.html":{}}}],["bootstrap",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["both",{"_index":2344,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bounce",{"_index":1106,"title":{},"body":{"components/LoaderComponent.html":{}}}],["bounds",{"_index":1836,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["bounds[0].push(coordinates[0",{"_index":1861,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["bounds[1].push(coordinates[1",{"_index":1862,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["box",{"_index":1059,"title":{},"body":{"interfaces/LayerData.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"interfaces/ShapeData.html":{}}}],["breadcrumb",{"_index":525,"title":{"interfaces/Breadcrumb.html":{}},"body":{"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"coverage.html":{}}}],["breadcrumbs",{"_index":541,"title":{},"body":{"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"components/ConsumerDetailComponent.html":{},"components/MapSelectViewComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["breadcrumbs'},{'name",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["breadcrumbs.component.html",{"_index":565,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["breadcrumbs.service",{"_index":588,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["breadcrumbs/breadcrumbs.component",{"_index":2050,"title":{},"body":{"modules/WisdomModule.html":{}}}],["breadcrumbscomponent",{"_index":70,"title":{"components/BreadcrumbsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"modules/WisdomModule.html":{},"coverage.html":{},"index.html":{}}}],["breadcrumbsservice",{"_index":542,"title":{"injectables/BreadcrumbsService.html":{}},"body":{"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"components/ConsumerDetailComponent.html":{},"components/MapSelectViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"coverage.html":{}}}],["breadcrumb}s",{"_index":545,"title":{},"body":{"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{}}}],["break",{"_index":1263,"title":{},"body":{"components/LoginComponent.html":{}}}],["bring",{"_index":974,"title":{},"body":{"components/FrameComponent.html":{}}}],["browse",{"_index":2191,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"dependencies.html":{},"modules.html":{}}}],["browserify",{"_index":393,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["browsermodule",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["bulma",{"_index":604,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{},"components/ErrorComponent.html":{},"dependencies.html":{}}}],["bulma/bulma",{"_index":2051,"title":{},"body":{"modules/WisdomModule.html":{}}}],["bulmaistoggleabledirective",{"_index":105,"title":{"directives/BulmaIsToggleableDirective.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"modules/WisdomModule.html":{},"coverage.html":{},"index.html":{}}}],["businesses",{"_index":947,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["button",{"_index":2332,"title":{},"body":{"miscellaneous/variables.html":{}}}],["button.style.backgroundimage",{"_index":2333,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cache",{"_index":643,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"miscellaneous/variables.html":{}}}],["cache.interceptor",{"_index":167,"title":{},"body":{"modules/AppModule.html":{}}}],["cache.ts",{"_index":2069,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["cached",{"_index":1535,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["cachedkeys",{"_index":1590,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["cachedquery",{"_index":1577,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["cachedquery.box",{"_index":1589,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["cachedquery.shapes",{"_index":1584,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["cacheinterceptor",{"_index":125,"title":{"interceptors/CacheInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/CacheInterceptor.html":{},"coverage.html":{},"index.html":{}}}],["caching",{"_index":654,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["calc(100vh",{"_index":1132,"title":{},"body":{"components/LoaderComponent.html":{}}}],["calculate",{"_index":922,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["calculation",{"_index":912,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/enumerations.html":{}}}],["calendar",{"_index":1632,"title":{},"body":{"components/MapSelectViewComponent.html":{},"miscellaneous/variables.html":{}}}],["call",{"_index":1225,"title":{},"body":{"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["callback",{"_index":2316,"title":{},"body":{"miscellaneous/variables.html":{}}}],["called",{"_index":1141,"title":{},"body":{"guards/LoaderGuard.html":{}}}],["can't",{"_index":274,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canactivate",{"_index":192,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"guards/LoaderGuard.html":{},"guards/QueryParameterGuard.html":{},"miscellaneous/variables.html":{}}}],["canactivate(route",{"_index":233,"title":{},"body":{"guards/AuthGuard.html":{},"guards/QueryParameterGuard.html":{}}}],["canactivatechild",{"_index":1144,"title":{},"body":{"guards/LoaderGuard.html":{}}}],["capture",{"_index":844,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["captured",{"_index":2308,"title":{},"body":{"miscellaneous/variables.html":{}}}],["case",{"_index":825,"title":{},"body":{"components/ErrorComponent.html":{},"components/LoginComponent.html":{}}}],["catch(e",{"_index":999,"title":{},"body":{"components/FrameComponent.html":{}}}],["catcherror",{"_index":852,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["catcherror(requesterror",{"_index":855,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["causing",{"_index":2168,"title":{},"body":{"miscellaneous/functions.html":{}}}],["center",{"_index":1273,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/variables.html":{}}}],["centercontent",{"_index":2325,"title":{},"body":{"miscellaneous/variables.html":{}}}],["certain",{"_index":819,"title":{},"body":{"components/ErrorComponent.html":{},"guards/QueryParameterGuard.html":{}}}],["change",{"_index":1147,"title":{},"body":{"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{}}}],["chart",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["chart.js",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["chart.js/auto",{"_index":724,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["chart.register(annotationplugin",{"_index":61,"title":{},"body":{"components/AppComponent.html":{}}}],["chartdata",{"_index":693,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["chartjs",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["charts",{"_index":2017,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{},"dependencies.html":{}}}],["check",{"_index":279,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/BreadcrumbsComponent.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/LoaderInterceptor.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"guards/QueryParameterGuard.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"miscellaneous/variables.html":{}}}],["checking",{"_index":202,"title":{},"body":{"guards/AuthGuard.html":{}}}],["checks",{"_index":243,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interceptors/SanitizeUrlInterceptor.html":{}}}],["child",{"_index":1151,"title":{},"body":{"guards/LoaderGuard.html":{}}}],["child(1",{"_index":1111,"title":{},"body":{"components/LoaderComponent.html":{}}}],["child(2",{"_index":1115,"title":{},"body":{"components/LoaderComponent.html":{}}}],["child(3",{"_index":1118,"title":{},"body":{"components/LoaderComponent.html":{}}}],["children",{"_index":193,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["class",{"_index":57,"title":{"classes/ModuleProvider.html":{},"classes/StaticLoader.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/ExampleComponent.html":{},"modules/ExampleModule.html":{},"injectables/ExampleService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"classes/ModuleProvider.html":{},"guards/QueryParameterGuard.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"components/SideBarComponent.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"modules/WisdomModule.html":{},"coverage.html":{}}}],["classes",{"_index":609,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{},"classes/ModuleProvider.html":{},"classes/StaticLoader.html":{},"index.html":{}}}],["classes.trim().split(/\\s",{"_index":636,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["cleaned",{"_index":1992,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["clear",{"_index":434,"title":{},"body":{"injectables/AuthStorageService.html":{},"injectables/LoaderService.html":{},"components/MapComponent.html":{},"injectables/SettingsStorageService.html":{}}}],["clearloading",{"_index":1181,"title":{},"body":{"injectables/LoaderService.html":{}}}],["clears",{"_index":297,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthStorageService.html":{}}}],["cli",{"_index":1808,"title":{},"body":{"injectables/UserService.html":{}}}],["click",{"_index":613,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{},"directives/LangSelectorDirective.html":{},"interfaces/Marker.html":{}}}],["clickable",{"_index":563,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["clicked",{"_index":619,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["clicking",{"_index":605,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{},"directives/LangSelectorDirective.html":{}}}],["clicklangselect",{"_index":1043,"title":{},"body":{"directives/LangSelectorDirective.html":{}}}],["client",{"_index":920,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["closed",{"_index":487,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["cluster_appmodule",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_bootstrap",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_declarations",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_imports",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_providers",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_examplemodule",{"_index":896,"title":{},"body":{"modules/ExampleModule.html":{},"index.html":{}}}],["cluster_examplemodule_declarations",{"_index":899,"title":{},"body":{"modules/ExampleModule.html":{},"index.html":{}}}],["cluster_examplemodule_exports",{"_index":898,"title":{},"body":{"modules/ExampleModule.html":{},"index.html":{}}}],["cluster_examplemodule_imports",{"_index":897,"title":{},"body":{"modules/ExampleModule.html":{}}}],["cluster_waterusageforecastsmodule",{"_index":2009,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{},"index.html":{}}}],["cluster_waterusageforecastsmodule_declarations",{"_index":2011,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{},"index.html":{}}}],["cluster_waterusageforecastsmodule_imports",{"_index":2010,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{}}}],["cluster_wisdommodule",{"_index":2046,"title":{},"body":{"modules/WisdomModule.html":{},"index.html":{}}}],["cluster_wisdommodule_declarations",{"_index":2047,"title":{},"body":{"modules/WisdomModule.html":{},"index.html":{}}}],["cluster_wisdommodule_exports",{"_index":2048,"title":{},"body":{"modules/WisdomModule.html":{},"index.html":{}}}],["code",{"_index":295,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"interfaces/LayerData.html":{},"components/MapComponent.html":{},"interfaces/ShapeData.html":{},"miscellaneous/functions.html":{}}}],["codes",{"_index":322,"title":{},"body":{"guards/AuthGuard.html":{},"components/ErrorComponent.html":{}}}],["codetype",{"_index":822,"title":{},"body":{"components/ErrorComponent.html":{}}}],["collect",{"_index":870,"title":{},"body":{"injectables/ErrorService.html":{}}}],["collected",{"_index":557,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["collectedlang",{"_index":1676,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["collecting",{"_index":540,"title":{},"body":{"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"components/ErrorComponent.html":{}}}],["color",{"_index":1473,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/functions.html":{}}}],["column",{"_index":1139,"title":{},"body":{"components/LoaderComponent.html":{}}}],["common",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"interceptors/BaseUrlInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interceptors/ErrorInterceptor.html":{},"modules/ExampleModule.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"interceptors/LoaderInterceptor.html":{},"components/MapSelectViewComponent.html":{},"classes/StaticLoader.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["commonenvironment",{"_index":2301,"title":{},"body":{"miscellaneous/variables.html":{}}}],["commonmodule",{"_index":2014,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{},"modules/WisdomModule.html":{}}}],["communicated",{"_index":1175,"title":{},"body":{"injectables/LoaderService.html":{}}}],["communication",{"_index":1090,"title":{},"body":{"components/LoaderComponent.html":{},"injectables/LoaderService.html":{}}}],["complaining",{"_index":1026,"title":{},"body":{"components/IonIconComponent.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"interfaces/WisdomInterface.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["component_template",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"index.html":{}}}],["concept",{"_index":2350,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config",{"_index":1397,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/typealiases.html":{}}}],["considered",{"_index":561,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["consists",{"_index":2257,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["console.error(e",{"_index":1000,"title":{},"body":{"components/FrameComponent.html":{},"components/LoginComponent.html":{}}}],["console.error(error",{"_index":1257,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log(\"successfully",{"_index":1248,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log(requesterror",{"_index":857,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["const",{"_index":191,"title":{},"body":{"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"injectables/ConsumersService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/SettingsStorageService.html":{},"injectables/UserService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["constant",{"_index":2347,"title":{},"body":{"miscellaneous/variables.html":{}}}],["constructing",{"_index":1663,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["constructor",{"_index":214,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"classes/ModuleProvider.html":{},"guards/QueryParameterGuard.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["constructor(authservice",{"_index":965,"title":{},"body":{"components/FrameComponent.html":{},"components/LoginComponent.html":{}}}],["constructor(authstorage",{"_index":215,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{}}}],["constructor(breadcrumbs",{"_index":1623,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["constructor(elref",{"_index":1018,"title":{},"body":{"components/IonIconComponent.html":{}}}],["constructor(http",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ConsumersService.html":{},"injectables/MapService.html":{},"injectables/UserService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["constructor(location",{"_index":799,"title":{},"body":{"components/ErrorComponent.html":{}}}],["constructor(private",{"_index":347,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/BreadcrumbsComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"guards/QueryParameterGuard.html":{},"injectables/UserService.html":{}}}],["constructor(route",{"_index":701,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["constructor(router",{"_index":872,"title":{},"body":{"injectables/ErrorService.html":{},"guards/QueryParameterGuard.html":{}}}],["constructor(service",{"_index":569,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"components/MapComponent.html":{}}}],["constructor(translateservice",{"_index":1044,"title":{},"body":{"directives/LangSelectorDirective.html":{}}}],["consumer",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["consumer/:consumer",{"_index":2359,"title":{},"body":{"miscellaneous/variables.html":{}}}],["consumerdetailcomponent",{"_index":72,"title":{"components/ConsumerDetailComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["consumergroup",{"_index":926,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["consumericon",{"_index":728,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["consumerlocationsresponse",{"_index":709,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"miscellaneous/typealiases.html":{}}}],["consumers",{"_index":770,"title":{},"body":{"injectables/ConsumersService.html":{},"miscellaneous/variables.html":{}}}],["consumersservice",{"_index":704,"title":{"injectables/ConsumersService.html":{}},"body":{"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"coverage.html":{}}}],["consumption",{"_index":1634,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["container",{"_index":785,"title":{},"body":{"interfaces/Error.html":{},"components/ErrorComponent.html":{},"components/LoaderComponent.html":{},"components/MapComponent.html":{},"miscellaneous/variables.html":{}}}],["container.addeventlistener(\"click",{"_index":2331,"title":{},"body":{"miscellaneous/variables.html":{}}}],["containing",{"_index":224,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/Error.html":{},"interfaces/LayerData.html":{},"components/LoginComponent.html":{},"guards/QueryParameterGuard.html":{},"interfaces/ShapeData.html":{}}}],["content",{"_index":403,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ConsumersService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"interfaces/Marker.html":{},"injectables/UserService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"miscellaneous/variables.html":{}}}],["context",{"_index":416,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/CacheInterceptor.html":{},"injectables/ConsumersService.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"interceptors/LoaderInterceptor.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"miscellaneous/variables.html":{}}}],["context/use",{"_index":1548,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["continue",{"_index":1858,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["control",{"_index":644,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"components/MapComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["coordinates",{"_index":694,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/LayerData.html":{},"components/MapComponent.html":{},"interfaces/Marker.html":{},"interfaces/ShapeData.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"miscellaneous/functions.html":{}}}],["coordinates[0",{"_index":758,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["coordinates[1",{"_index":759,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["core",{"_index":2367,"title":{},"body":{"miscellaneous/variables.html":{}}}],["core.frame.account",{"_index":1004,"title":{},"body":{"components/FrameComponent.html":{}}}],["core.frame.administration",{"_index":1006,"title":{},"body":{"components/FrameComponent.html":{}}}],["core.frame.logout",{"_index":1005,"title":{},"body":{"components/FrameComponent.html":{}}}],["core.frame.permissions",{"_index":1008,"title":{},"body":{"components/FrameComponent.html":{}}}],["core.frame.roles",{"_index":1009,"title":{},"body":{"components/FrameComponent.html":{}}}],["core.frame.usermanagement",{"_index":1007,"title":{},"body":{"components/FrameComponent.html":{}}}],["core.login.forgotpassword",{"_index":1267,"title":{},"body":{"components/LoginComponent.html":{}}}],["core.login.login",{"_index":1268,"title":{},"body":{"components/LoginComponent.html":{}}}],["core.login.password",{"_index":1266,"title":{},"body":{"components/LoginComponent.html":{}}}],["core.login.username",{"_index":1265,"title":{},"body":{"components/LoginComponent.html":{}}}],["corner",{"_index":1061,"title":{},"body":{"interfaces/LayerData.html":{},"interfaces/ShapeData.html":{}}}],["correct",{"_index":1024,"title":{},"body":{"components/IonIconComponent.html":{},"interceptors/SanitizeUrlInterceptor.html":{}}}],["coverage",{"_index":2055,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["covering",{"_index":791,"title":{},"body":{"components/ErrorComponent.html":{},"components/LoaderComponent.html":{},"miscellaneous/variables.html":{}}}],["create",{"_index":1785,"title":{},"body":{"injectables/UserService.html":{}}}],["created",{"_index":2279,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["creates",{"_index":874,"title":{},"body":{"injectables/ErrorService.html":{}}}],["createuser",{"_index":1778,"title":{},"body":{"injectables/UserService.html":{}}}],["createuser(firstname",{"_index":1781,"title":{},"body":{"injectables/UserService.html":{}}}],["creating",{"_index":1646,"title":{},"body":{"interfaces/Marker.html":{}}}],["creation",{"_index":1788,"title":{},"body":{"injectables/UserService.html":{}}}],["crs",{"_index":771,"title":{},"body":{"injectables/ConsumersService.html":{}}}],["cservice",{"_index":703,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["current",{"_index":244,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/BreadcrumbsComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoginComponent.html":{},"guards/QueryParameterGuard.html":{},"miscellaneous/typealiases.html":{}}}],["currently",{"_index":624,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{},"injectables/ErrorService.html":{},"directives/LangSelectorDirective.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"guards/QueryParameterGuard.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["curtain",{"_index":2361,"title":{},"body":{"miscellaneous/variables.html":{}}}],["curtain.ts",{"_index":2070,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["custom",{"_index":783,"title":{},"body":{"interfaces/Error.html":{},"interfaces/Marker.html":{},"miscellaneous/variables.html":{}}}],["d35a0c",{"_index":1322,"title":{},"body":{"components/MapComponent.html":{}}}],["danger",{"_index":827,"title":{},"body":{"components/ErrorComponent.html":{}}}],["dark",{"_index":2116,"title":{},"body":{"dependencies.html":{}}}],["data",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthStorageService.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"interfaces/LayerData.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"classes/ModuleProvider.html":{},"guards/QueryParameterGuard.html":{},"injectables/SettingsStorageService.html":{},"interfaces/ShapeData.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["data.box[0",{"_index":1500,"title":{},"body":{"components/MapComponent.html":{}}}],["data.box[2",{"_index":1501,"title":{},"body":{"components/MapComponent.html":{}}}],["data.legaltitle",{"_index":1885,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["data.locations",{"_index":1856,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["data.map",{"_index":2033,"title":{},"body":{"injectables/WaterUsageHistoryService.html":{}}}],["data.map(({usage",{"_index":739,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["data.map(({year",{"_index":743,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["data.shapes",{"_index":1493,"title":{},"body":{"components/MapComponent.html":{}}}],["data.subject",{"_index":1886,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["data.ts",{"_index":1055,"title":{},"body":{"interfaces/LayerData.html":{},"interfaces/ShapeData.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["data?.address",{"_index":1894,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["data?.annotation",{"_index":1966,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["data?.bailee",{"_index":1896,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["data?.dateofchange?.toisostring()?.slice(0",{"_index":1898,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["data?.externalid",{"_index":1903,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["data?.filereference",{"_index":1905,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["data?.grantingauthority",{"_index":1889,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["data?.id",{"_index":1900,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["data?.no",{"_index":1901,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["data?.registeringauthority",{"_index":1891,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["data?.waterauthority",{"_index":1892,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["data[data.length",{"_index":746,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["database",{"_index":1803,"title":{},"body":{"injectables/UserService.html":{}}}],["datasets",{"_index":738,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["date",{"_index":462,"title":{},"body":{"injectables/AuthStorageService.html":{},"injectables/WaterUsageHistoryService.html":{},"miscellaneous/variables.html":{}}}],["date(raw.dateofchange",{"_index":2003,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["date(raw.valid.from",{"_index":2006,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["date(raw.valid.until",{"_index":2007,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["date(recorded_at",{"_index":2035,"title":{},"body":{"injectables/WaterUsageHistoryService.html":{}}}],["dayjs",{"_index":2121,"title":{},"body":{"dependencies.html":{}}}],["db",{"_index":1531,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{},"miscellaneous/variables.html":{}}}],["db.createobjectstore(\"queries",{"_index":1565,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["db.createobjectstore(\"shapes",{"_index":1566,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["db.deleteobjectstore(\"queries",{"_index":1563,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["db.deleteobjectstore(\"shapes",{"_index":1564,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["db_name",{"_index":1550,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dbschema",{"_index":1533,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["de",{"_index":1466,"title":{},"body":{"components/MapComponent.html":{}}}],["de/by",{"_index":1470,"title":{},"body":{"components/MapComponent.html":{}}}],["de_de",{"_index":1764,"title":{},"body":{"classes/StaticLoader.html":{},"miscellaneous/variables.html":{}}}],["de_delang",{"_index":1755,"title":{},"body":{"classes/StaticLoader.html":{},"miscellaneous/variables.html":{}}}],["de_delangcommon",{"_index":1756,"title":{},"body":{"classes/StaticLoader.html":{},"miscellaneous/variables.html":{}}}],["deciding",{"_index":239,"title":{},"body":{"guards/AuthGuard.html":{}}}],["declarations",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"modules/ExampleModule.html":{},"modules/WaterUsageForecastsModule.html":{},"modules/WisdomModule.html":{}}}],["decorators",{"_index":620,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{},"components/ConsumerDetailComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["default",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"injectables/ErrorService.html":{},"interfaces/LayerData.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"interfaces/Marker.html":{},"interfaces/ShapeData.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"miscellaneous/variables.html":{}}}],["defaultlanguage",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["defaults",{"_index":1341,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"classes/ModuleProvider.html":{},"guards/QueryParameterGuard.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"components/SideBarComponent.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["delay",{"_index":1112,"title":{},"body":{"components/LoaderComponent.html":{}}}],["delete",{"_index":836,"title":{},"body":{"components/ErrorComponent.html":{}}}],["deleted",{"_index":2239,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["deleteusersid200",{"_index":2197,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["deleteusersid403",{"_index":2199,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["deleteusersid404",{"_index":2201,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["dependencies",{"_index":115,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ExampleModule.html":{},"modules/WaterUsageForecastsModule.html":{},"modules/WisdomModule.html":{},"dependencies.html":{},"index.html":{}}}],["depletes",{"_index":296,"title":{},"body":{"guards/AuthGuard.html":{}}}],["describes",{"_index":2254,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["description",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/ExampleComponent.html":{},"modules/ExampleModule.html":{},"injectables/ExampleService.html":{},"interfaces/ForecastResponse.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"interfaces/LayerData.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"interfaces/Marker.html":{},"classes/ModuleProvider.html":{},"guards/QueryParameterGuard.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"interfaces/ShapeData.html":{},"components/SideBarComponent.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"injectables/WaterUsageForecastsService.html":{},"interfaces/WisdomInterface.html":{},"miscellaneous/functions.html":{},"properties.html":{}}}],["destroy",{"_index":577,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["detail",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"miscellaneous/variables.html":{}}}],["detail'},{'name",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["detail.component",{"_index":2019,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{}}}],["detail.component.html",{"_index":692,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["detail.component.ts",{"_index":690,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/WaterRightDetailComponent.html":{},"coverage.html":{}}}],["detail.component.ts:20",{"_index":1845,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["detail.component.ts:21",{"_index":1846,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["detail.component.ts:23",{"_index":721,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["detail.component.ts:24",{"_index":718,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["detail.component.ts:25",{"_index":717,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["detail.component.ts:26",{"_index":720,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["detail.component.ts:27",{"_index":715,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["detail.component.ts:29",{"_index":713,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["detail.component.ts:30",{"_index":722,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["detail.component.ts:32",{"_index":707,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["detail.component.ts:34",{"_index":1839,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["detail.component.ts:38",{"_index":1840,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["detail.component.ts:41",{"_index":712,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["detail.component.ts:58",{"_index":710,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["detail.component.ts:75",{"_index":711,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["detail.component.ts:76",{"_index":1842,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["detail/consumer",{"_index":689,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"coverage.html":{}}}],["detail/water",{"_index":1835,"title":{},"body":{"components/WaterRightDetailComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"coverage.html":{}}}],["details",{"_index":1990,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["detecting",{"_index":1154,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["determine",{"_index":2360,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deterministically",{"_index":2158,"title":{},"body":{"miscellaneous/functions.html":{}}}],["deutsch",{"_index":1002,"title":{},"body":{"components/FrameComponent.html":{}}}],["dev",{"_index":2304,"title":{},"body":{"miscellaneous/variables.html":{}}}],["digit",{"_index":2149,"title":{},"body":{"miscellaneous/functions.html":{}}}],["direct",{"_index":1149,"title":{},"body":{"guards/LoaderGuard.html":{},"guards/QueryParameterGuard.html":{}}}],["direction",{"_index":1479,"title":{},"body":{"components/MapComponent.html":{}}}],["directive",{"_index":65,"title":{"directives/BulmaIsToggleableDirective.html":{},"directives/LangSelectorDirective.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"coverage.html":{}}}],["directives",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"index.html":{}}}],["directly",{"_index":1027,"title":{},"body":{"components/IonIconComponent.html":{},"components/MapComponent.html":{},"miscellaneous/variables.html":{}}}],["disable",{"_index":2363,"title":{},"body":{"miscellaneous/variables.html":{}}}],["discharge",{"_index":1916,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["display",{"_index":548,"title":{},"body":{"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/MapComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/enumerations.html":{}}}],["displayed",{"_index":531,"title":{},"body":{"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/LangSelectorDirective.html":{},"components/MapComponent.html":{},"interfaces/Marker.html":{}}}],["displaying",{"_index":1270,"title":{},"body":{"components/MapComponent.html":{},"components/SideBarComponent.html":{}}}],["displaylayer",{"_index":1455,"title":{},"body":{"components/MapComponent.html":{}}}],["displayname",{"_index":940,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/MapComponent.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["displays",{"_index":1062,"title":{},"body":{"interfaces/LayerData.html":{},"interfaces/ShapeData.html":{}}}],["displaytext",{"_index":1183,"title":{},"body":{"injectables/LoaderService.html":{}}}],["displaytexts",{"_index":1086,"title":{},"body":{"components/LoaderComponent.html":{},"injectables/LoaderService.html":{}}}],["displaytextsubject",{"_index":1178,"title":{},"body":{"injectables/LoaderService.html":{}}}],["district",{"_index":1385,"title":{},"body":{"components/MapComponent.html":{},"components/WaterRightDetailComponent.html":{},"miscellaneous/enumerations.html":{}}}],["div",{"_index":1138,"title":{},"body":{"components/LoaderComponent.html":{},"miscellaneous/variables.html":{}}}],["divided",{"_index":504,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["dl",{"_index":1469,"title":{},"body":{"components/MapComponent.html":{}}}],["doc",{"_index":483,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["docs",{"_index":1310,"title":{},"body":{"components/MapComponent.html":{}}}],["document.getelementbyid(`${location?.id}`)?.scrollintoview",{"_index":1865,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["documentation",{"_index":2056,"title":{},"body":{"coverage.html":{}}}],["doesn't",{"_index":921,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"classes/ModuleProvider.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["dot",{"_index":2150,"title":{},"body":{"miscellaneous/functions.html":{}}}],["during",{"_index":1787,"title":{},"body":{"injectables/UserService.html":{}}}],["dynamic",{"_index":2112,"title":{},"body":{"dependencies.html":{}}}],["e.g",{"_index":2177,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ease",{"_index":1109,"title":{},"body":{"components/LoaderComponent.html":{}}}],["efforts",{"_index":1091,"title":{},"body":{"components/LoaderComponent.html":{}}}],["el",{"_index":1987,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["el.water_right",{"_index":1988,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["element",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["elementclasses",{"_index":614,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["elementclasses(classes",{"_index":634,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["elementref",{"_index":1019,"title":{},"body":{"components/IonIconComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{}}}],["elements",{"_index":1363,"title":{},"body":{"components/MapComponent.html":{}}}],["elref",{"_index":1021,"title":{},"body":{"components/IonIconComponent.html":{}}}],["emit",{"_index":882,"title":{},"body":{"injectables/ErrorService.html":{},"components/MapComponent.html":{}}}],["emitselection",{"_index":1282,"title":{},"body":{"components/MapComponent.html":{}}}],["emitted",{"_index":1297,"title":{},"body":{"components/MapComponent.html":{}}}],["emitter",{"_index":884,"title":{},"body":{"injectables/ErrorService.html":{}}}],["empty",{"_index":1305,"title":{},"body":{"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"miscellaneous/variables.html":{}}}],["en_us",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"classes/StaticLoader.html":{},"miscellaneous/variables.html":{}}}],["en_us\"].sidebar",{"_index":1770,"title":{},"body":{"classes/StaticLoader.html":{}}}],["en_us\"].sidebar[key",{"_index":1772,"title":{},"body":{"classes/StaticLoader.html":{}}}],["en_uslang",{"_index":1757,"title":{},"body":{"classes/StaticLoader.html":{},"miscellaneous/variables.html":{}}}],["en_uslangcommon",{"_index":1758,"title":{},"body":{"classes/StaticLoader.html":{},"miscellaneous/variables.html":{}}}],["end",{"_index":936,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/functions.html":{}}}],["endyear",{"_index":941,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["enforce",{"_index":1395,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/typealiases.html":{}}}],["english",{"_index":1003,"title":{},"body":{"components/FrameComponent.html":{}}}],["ensuring",{"_index":574,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["entire",{"_index":792,"title":{},"body":{"components/ErrorComponent.html":{}}}],["entries",{"_index":1690,"title":{},"body":{"guards/QueryParameterGuard.html":{},"miscellaneous/typealiases.html":{}}}],["entries.ts",{"_index":2214,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["entry",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"interfaces/WisdomInterface.html":{}}}],["entry[0",{"_index":1747,"title":{},"body":{"components/SideBarComponent.html":{}}}],["enum",{"_index":913,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["enumerations",{"_index":2134,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":511,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apiurl",{"_index":519,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{}}}],["environment.baseurl",{"_index":517,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{}}}],["environments/environment",{"_index":514,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{}}}],["equation",{"_index":931,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["err",{"_index":1168,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["error",{"_index":290,"title":{"interfaces/Error.html":{}},"body":{"guards/AuthGuard.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/LoginComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["error'},{'name",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["error(err",{"_index":1167,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["error(requesterror",{"_index":868,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["error.component.html",{"_index":794,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.service",{"_index":821,"title":{},"body":{"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{}}}],["errorcode",{"_index":795,"title":{},"body":{"components/ErrorComponent.html":{}}}],["errorcomponent",{"_index":76,"title":{"components/ErrorComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"coverage.html":{},"index.html":{}}}],["errordescription",{"_index":786,"title":{},"body":{"interfaces/Error.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{}}}],["errorinterceptor",{"_index":126,"title":{"interceptors/ErrorInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"coverage.html":{},"index.html":{}}}],["errorname",{"_index":787,"title":{},"body":{"interfaces/Error.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{}}}],["errorpresent",{"_index":871,"title":{},"body":{"injectables/ErrorService.html":{}}}],["errors",{"_index":806,"title":{},"body":{"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"miscellaneous/variables.html":{}}}],["errorservice",{"_index":801,"title":{"injectables/ErrorService.html":{}},"body":{"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"coverage.html":{}}}],["errresponse",{"_index":291,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["errresponse.error",{"_index":1256,"title":{},"body":{"components/LoginComponent.html":{}}}],["errresponse.status",{"_index":1255,"title":{},"body":{"components/LoginComponent.html":{}}}],["etag",{"_index":647,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["etag](https://developer.mozilla.org/en",{"_index":666,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["etagmap",{"_index":650,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["etags",{"_index":661,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["event",{"_index":357,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"injectables/ErrorService.html":{},"interfaces/Marker.html":{}}}],["event.headers.get(\"etag",{"_index":681,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["event.headers.get(\"last",{"_index":683,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["eventemitter",{"_index":883,"title":{},"body":{"injectables/ErrorService.html":{},"components/MapComponent.html":{}}}],["events",{"_index":879,"title":{},"body":{"injectables/ErrorService.html":{}}}],["everything",{"_index":1306,"title":{},"body":{"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["evt",{"_index":1652,"title":{},"body":{"interfaces/Marker.html":{},"components/WaterRightDetailComponent.html":{}}}],["exactly",{"_index":1379,"title":{},"body":{"components/MapComponent.html":{}}}],["example",{"_index":891,"title":{},"body":{"components/ExampleComponent.html":{},"modules/ExampleModule.html":{},"injectables/ExampleService.html":{},"components/MapComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["example.component",{"_index":901,"title":{},"body":{"modules/ExampleModule.html":{}}}],["example.component.html",{"_index":892,"title":{},"body":{"components/ExampleComponent.html":{}}}],["example.example.key",{"_index":894,"title":{},"body":{"components/ExampleComponent.html":{}}}],["examplecomponent",{"_index":78,"title":{"components/ExampleComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"modules/ExampleModule.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["examplemodule",{"_index":895,"title":{"modules/ExampleModule.html":{}},"body":{"modules/ExampleModule.html":{},"index.html":{},"modules.html":{}}}],["exampleservice",{"_index":902,"title":{"injectables/ExampleService.html":{}},"body":{"injectables/ExampleService.html":{},"coverage.html":{}}}],["except",{"_index":960,"title":{},"body":{"components/FrameComponent.html":{}}}],["executed",{"_index":618,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["exist",{"_index":2246,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["exists",{"_index":2281,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["expects",{"_index":1683,"title":{},"body":{"guards/QueryParameterGuard.html":{}}}],["expiration",{"_index":461,"title":{},"body":{"injectables/AuthStorageService.html":{},"miscellaneous/variables.html":{}}}],["expires",{"_index":480,"title":{},"body":{"injectables/AuthStorageService.html":{},"miscellaneous/variables.html":{}}}],["expires_in_key",{"_index":479,"title":{},"body":{"injectables/AuthStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["expiresin",{"_index":440,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["expiresin(unixtime",{"_index":494,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["explanation",{"_index":2355,"title":{},"body":{"miscellaneous/variables.html":{}}}],["export",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/ExampleComponent.html":{},"modules/ExampleModule.html":{},"injectables/ExampleService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"interfaces/LayerData.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"interfaces/Marker.html":{},"classes/ModuleProvider.html":{},"guards/QueryParameterGuard.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"interfaces/ShapeData.html":{},"components/SideBarComponent.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"interfaces/WisdomInterface.html":{},"modules/WisdomModule.html":{}}}],["exported",{"_index":905,"title":{},"body":{"injectables/ExampleService.html":{},"interfaces/WisdomInterface.html":{}}}],["exports",{"_index":198,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ExampleModule.html":{},"modules/WisdomModule.html":{}}}],["extends",{"_index":1532,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["extension",{"_index":2336,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f",{"_index":1231,"title":{},"body":{"components/LoginComponent.html":{}}}],["f.valid",{"_index":1240,"title":{},"body":{"components/LoginComponent.html":{}}}],["f.value",{"_index":1241,"title":{},"body":{"components/LoginComponent.html":{}}}],["fails",{"_index":1686,"title":{},"body":{"guards/QueryParameterGuard.html":{}}}],["false",{"_index":419,"title":{},"body":{"injectables/AuthService.html":{},"components/BreadcrumbsComponent.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ErrorComponent.html":{},"injectables/ErrorService.html":{},"components/FrameComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"guards/QueryParameterGuard.html":{},"miscellaneous/variables.html":{}}}],["farming_forestry_fishing_industry",{"_index":949,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["feature",{"_index":1476,"title":{},"body":{"components/MapComponent.html":{}}}],["feature.properties.key",{"_index":1482,"title":{},"body":{"components/MapComponent.html":{}}}],["fetch",{"_index":1554,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["fetchconsumers",{"_index":763,"title":{},"body":{"injectables/ConsumersService.html":{}}}],["fetchconsumers(params",{"_index":765,"title":{},"body":{"injectables/ConsumersService.html":{}}}],["fetched",{"_index":1436,"title":{},"body":{"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["fetched[layerkey",{"_index":1438,"title":{},"body":{"components/MapComponent.html":{}}}],["fetchforecastdata",{"_index":945,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["fetchforecastdata(key",{"_index":2025,"title":{},"body":{"injectables/WaterUsageForecastsService.html":{}}}],["fetchlayerdata",{"_index":1571,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["fetchlayerdata(resolution",{"_index":1643,"title":{},"body":{"injectables/MapService.html":{}}}],["fetchwaterrightdetails",{"_index":1968,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["fetchwaterrightdetails(no",{"_index":1971,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["fetchwaterrightlocations",{"_index":1969,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["fetchwaterrightlocations(params",{"_index":1973,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["fetchwaterusagehistory",{"_index":2028,"title":{},"body":{"injectables/WaterUsageHistoryService.html":{}}}],["fetchwaterusagehistory(id",{"_index":2030,"title":{},"body":{"injectables/WaterUsageHistoryService.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/ExampleComponent.html":{},"modules/ExampleModule.html":{},"injectables/ExampleService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"interfaces/LayerData.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"interfaces/Marker.html":{},"classes/ModuleProvider.html":{},"guards/QueryParameterGuard.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"interfaces/ShapeData.html":{},"components/SideBarComponent.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"interfaces/WisdomInterface.html":{},"modules/WisdomModule.html":{},"coverage.html":{}}}],["find",{"_index":1033,"title":{},"body":{"components/IonIconComponent.html":{},"miscellaneous/functions.html":{}}}],["first",{"_index":1792,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["firstname",{"_index":1791,"title":{},"body":{"injectables/UserService.html":{}}}],["firstvaluefrom",{"_index":1547,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["firstvaluefrom(this.http.get(`${api_url",{"_index":1598,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["fix",{"_index":1701,"title":{},"body":{"interceptors/SanitizeUrlInterceptor.html":{}}}],["fixme",{"_index":1815,"title":{},"body":{"injectables/UserService.html":{}}}],["flat",{"_index":1698,"title":{},"body":{"guards/QueryParameterGuard.html":{}}}],["flex",{"_index":2326,"title":{},"body":{"miscellaneous/variables.html":{}}}],["float",{"_index":932,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["fo",{"_index":478,"title":{},"body":{"injectables/AuthStorageService.html":{},"miscellaneous/variables.html":{}}}],["follow",{"_index":2261,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["following",{"_index":1299,"title":{},"body":{"components/MapComponent.html":{},"interfaces/WisdomInterface.html":{},"miscellaneous/typealiases.html":{}}}],["force",{"_index":1569,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["forecast",{"_index":909,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/enumerations.html":{}}}],["forecastentry",{"_index":906,"title":{"interfaces/ForecastEntry.html":{}},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{},"coverage.html":{}}}],["forecastmodel",{"_index":946,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["forecastresponse",{"_index":918,"title":{"interfaces/ForecastResponse.html":{}},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{},"coverage.html":{}}}],["forecastresponse[\"partials\"][0][\"consumergroup",{"_index":929,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["forecastresponse[\"partials\"][0][\"referenceusages",{"_index":938,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["forecasts",{"_index":911,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/MapSelectViewComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/variables.html":{}}}],["forecasts.breadcrumbs.water",{"_index":1633,"title":{},"body":{"components/MapSelectViewComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["forecasts.display.loading",{"_index":954,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["forecasts.label.name",{"_index":2354,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forecasts.map",{"_index":1640,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["forecasts.module.ts",{"_index":2013,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{}}}],["forecasts.service.ts",{"_index":908,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["forecasts.service.ts:67",{"_index":2024,"title":{},"body":{"injectables/WaterUsageForecastsService.html":{}}}],["forecasts.service.ts:74",{"_index":2026,"title":{},"body":{"injectables/WaterUsageForecastsService.html":{}}}],["forecasts.water",{"_index":1876,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["forecasts/src/lib/map",{"_index":2090,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["forecasts/src/lib/routing.ts",{"_index":2093,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["forecasts/src/lib/services/consumers.service.ts",{"_index":762,"title":{},"body":{"injectables/ConsumersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["forecasts/src/lib/services/consumers.service.ts:27",{"_index":764,"title":{},"body":{"injectables/ConsumersService.html":{}}}],["forecasts/src/lib/services/consumers.service.ts:34",{"_index":767,"title":{},"body":{"injectables/ConsumersService.html":{}}}],["forecasts/src/lib/services/water",{"_index":907,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["forecasts/src/lib/views/detail",{"_index":687,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/WaterRightDetailComponent.html":{},"coverage.html":{}}}],["forecasts/src/lib/views/map",{"_index":1616,"title":{},"body":{"components/MapSelectViewComponent.html":{},"coverage.html":{}}}],["forecasts/src/lib/views/result",{"_index":2104,"title":{},"body":{"coverage.html":{}}}],["forecasts/src/lib/water",{"_index":2012,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{}}}],["forecasts/src/public",{"_index":2106,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["forecasttype",{"_index":914,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/enumerations.html":{}}}],["forecastusage",{"_index":939,"title":{"interfaces/ForecastUsage.html":{}},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{},"coverage.html":{}}}],["form",{"_index":407,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/LoginComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/variables.html":{}}}],["formsmodule",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["found",{"_index":2181,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fragment",{"_index":528,"title":{},"body":{"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{}}}],["fragments",{"_index":544,"title":{},"body":{"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{}}}],["frame",{"_index":961,"title":{},"body":{"components/FrameComponent.html":{}}}],["frame'},{'name",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["frame.component.html",{"_index":962,"title":{},"body":{"components/FrameComponent.html":{}}}],["frame/error/error.component",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["frame/error/error.interceptor",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["frame/frame.component",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["frame/loader/loader.component",{"_index":168,"title":{},"body":{"modules/AppModule.html":{}}}],["frame/loader/loader.guard",{"_index":190,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/ModuleProvider.html":{}}}],["frame/loader/loader.interceptor",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["frame/side",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["framecomponent",{"_index":79,"title":{"components/FrameComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"coverage.html":{},"index.html":{}}}],["framing",{"_index":957,"title":{},"body":{"components/FrameComponent.html":{}}}],["fromobject",{"_index":424,"title":{},"body":{"injectables/AuthService.html":{}}}],["frontend",{"_index":2193,"title":{},"body":{"properties.html":{}}}],["full",{"_index":2357,"title":{},"body":{"miscellaneous/variables.html":{}}}],["full_res",{"_index":1373,"title":{},"body":{"components/MapComponent.html":{}}}],["fully",{"_index":575,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"miscellaneous/functions.html":{}}}],["function",{"_index":293,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthStorageService.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/ErrorComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/Marker.html":{},"injectables/SettingsStorageService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["functions",{"_index":2139,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":209,"title":{},"body":{"guards/AuthGuard.html":{},"components/FrameComponent.html":{},"miscellaneous/variables.html":{}}}],["generate",{"_index":1806,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["generates",{"_index":2157,"title":{},"body":{"miscellaneous/functions.html":{}}}],["geo",{"_index":1058,"title":{},"body":{"interfaces/LayerData.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"interfaces/ShapeData.html":{}}}],["geobasis",{"_index":1465,"title":{},"body":{"components/MapComponent.html":{}}}],["geodata",{"_index":1549,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{},"miscellaneous/variables.html":{}}}],["geojson",{"_index":749,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/LayerData.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"interfaces/ShapeData.html":{},"injectables/WaterRightsService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["geojson.coordinates[0",{"_index":753,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["geojson.coordinates[1",{"_index":752,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["geojsonlayer",{"_index":1462,"title":{},"body":{"components/MapComponent.html":{}}}],["geojsonlayer.adddata(object.assign(shape.geojson",{"_index":1494,"title":{},"body":{"components/MapComponent.html":{}}}],["geojsonlayer.addto(map",{"_index":1497,"title":{},"body":{"components/MapComponent.html":{}}}],["geojsonobject",{"_index":1065,"title":{},"body":{"interfaces/LayerData.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"interfaces/ShapeData.html":{},"miscellaneous/typealiases.html":{}}}],["getaccesstoken",{"_index":454,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["getboolstorage",{"_index":1722,"title":{},"body":{"injectables/SettingsStorageService.html":{}}}],["getboolstorage(key",{"_index":1724,"title":{},"body":{"injectables/SettingsStorageService.html":{}}}],["getdisplaytexts",{"_index":1199,"title":{},"body":{"injectables/LoaderService.html":{}}}],["getelementclasses",{"_index":625,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["getexpiresin",{"_index":459,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["gethidesidebar",{"_index":975,"title":{},"body":{"components/FrameComponent.html":{},"injectables/SettingsStorageService.html":{}}}],["gethideuserbar",{"_index":982,"title":{},"body":{"components/FrameComponent.html":{},"injectables/SettingsStorageService.html":{}}}],["getloading",{"_index":1201,"title":{},"body":{"injectables/LoaderService.html":{}}}],["getoptions",{"_index":1820,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getrefreshtoken",{"_index":469,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["getresolvedurl",{"_index":2078,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getresolvedurl(route",{"_index":2141,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getscopes",{"_index":473,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["getshowtype",{"_index":816,"title":{},"body":{"components/ErrorComponent.html":{}}}],["getstorage",{"_index":436,"title":{},"body":{"injectables/AuthStorageService.html":{},"injectables/SettingsStorageService.html":{}}}],["getstorage(key",{"_index":447,"title":{},"body":{"injectables/AuthStorageService.html":{},"injectables/SettingsStorageService.html":{}}}],["getter",{"_index":484,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["gettranslation",{"_index":1751,"title":{},"body":{"classes/StaticLoader.html":{}}}],["gettranslation(lang",{"_index":1752,"title":{},"body":{"classes/StaticLoader.html":{}}}],["getusers",{"_index":1779,"title":{},"body":{"injectables/UserService.html":{}}}],["getusers200",{"_index":1809,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["getusersid200",{"_index":2206,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["getusersid404",{"_index":2208,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["getusersme200",{"_index":2210,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["give",{"_index":1307,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/typealiases.html":{}}}],["given",{"_index":385,"title":{},"body":{"injectables/AuthService.html":{},"directives/LangSelectorDirective.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"classes/ModuleProvider.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["globalthis.localstorage.getitem(\"lang",{"_index":174,"title":{},"body":{"modules/AppModule.html":{}}}],["globalthis.localstorage.setitem(\"lang",{"_index":1052,"title":{},"body":{"directives/LangSelectorDirective.html":{}}}],["globalthis.sessionstorage.getitem(key",{"_index":490,"title":{},"body":{"injectables/AuthStorageService.html":{},"injectables/SettingsStorageService.html":{}}}],["globalthis.sessionstorage.removeitem(key",{"_index":488,"title":{},"body":{"injectables/AuthStorageService.html":{},"injectables/SettingsStorageService.html":{}}}],["globalthis.sessionstorage.setitem(key",{"_index":489,"title":{},"body":{"injectables/AuthStorageService.html":{},"injectables/SettingsStorageService.html":{}}}],["go",{"_index":287,"title":{},"body":{"guards/AuthGuard.html":{},"components/ErrorComponent.html":{}}}],["goback",{"_index":797,"title":{},"body":{"components/ErrorComponent.html":{}}}],["gracefully",{"_index":323,"title":{},"body":{"guards/AuthGuard.html":{}}}],["grant_type",{"_index":425,"title":{},"body":{"injectables/AuthService.html":{}}}],["graph",{"_index":2192,"title":{},"body":{"modules.html":{}}}],["grid",{"_index":1134,"title":{},"body":{"components/LoaderComponent.html":{}}}],["group",{"_index":925,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["gt",{"_index":2154,"title":{},"body":{"miscellaneous/functions.html":{}}}],["gt;&lt;/map&gt",{"_index":1388,"title":{},"body":{"components/MapComponent.html":{}}}],["guard",{"_index":199,"title":{"guards/AuthGuard.html":{},"guards/LoaderGuard.html":{},"guards/QueryParameterGuard.html":{}},"body":{"guards/AuthGuard.html":{},"guards/LoaderGuard.html":{},"injectables/LoaderService.html":{},"guards/QueryParameterGuard.html":{},"coverage.html":{}}}],["guards",{"_index":200,"title":{},"body":{"guards/AuthGuard.html":{},"guards/LoaderGuard.html":{},"guards/QueryParameterGuard.html":{},"interfaces/WisdomInterface.html":{},"index.html":{}}}],["handle",{"_index":319,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"components/LoaderComponent.html":{},"miscellaneous/variables.html":{}}}],["handleconsumerdata",{"_index":699,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["handleconsumerdata(data",{"_index":708,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["handled",{"_index":793,"title":{},"body":{"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{}}}],["handler",{"_index":340,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/BaseUrlInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"injectables/ErrorService.html":{},"interfaces/Marker.html":{}}}],["handling",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LoaderService.html":{}}}],["header",{"_index":351,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["headers",{"_index":354,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interceptors/CacheInterceptor.html":{},"injectables/ConsumersService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/UserService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"miscellaneous/variables.html":{}}}],["height",{"_index":1128,"title":{},"body":{"components/LoaderComponent.html":{},"components/MapComponent.html":{}}}],["height=&quot;70vh&quot",{"_index":1371,"title":{},"body":{"components/MapComponent.html":{}}}],["helper",{"_index":1805,"title":{},"body":{"injectables/UserService.html":{}}}],["here",{"_index":893,"title":{},"body":{"components/ExampleComponent.html":{},"components/IonIconComponent.html":{},"components/MapComponent.html":{},"classes/ModuleProvider.html":{}}}],["hex",{"_index":1324,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/functions.html":{}}}],["hide",{"_index":977,"title":{},"body":{"components/FrameComponent.html":{},"injectables/SettingsStorageService.html":{},"miscellaneous/variables.html":{}}}],["hide_sidebar_key",{"_index":1733,"title":{},"body":{"injectables/SettingsStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["hide_user_bar_key",{"_index":1734,"title":{},"body":{"injectables/SettingsStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["hidesidebar",{"_index":963,"title":{},"body":{"components/FrameComponent.html":{},"injectables/SettingsStorageService.html":{}}}],["hidesidebar(setting",{"_index":993,"title":{},"body":{"components/FrameComponent.html":{},"injectables/SettingsStorageService.html":{}}}],["hideuserbar",{"_index":964,"title":{},"body":{"components/FrameComponent.html":{},"injectables/SettingsStorageService.html":{}}}],["hideuserbar(setting",{"_index":995,"title":{},"body":{"components/FrameComponent.html":{},"injectables/SettingsStorageService.html":{}}}],["higher",{"_index":547,"title":{},"body":{"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{}}}],["history",{"_index":805,"title":{},"body":{"components/ErrorComponent.html":{},"injectables/WaterUsageHistoryService.html":{},"miscellaneous/variables.html":{}}}],["history.service",{"_index":727,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["history.service.ts",{"_index":2027,"title":{},"body":{"injectables/WaterUsageHistoryService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["history.service.ts:18",{"_index":2029,"title":{},"body":{"injectables/WaterUsageHistoryService.html":{}}}],["history.service.ts:25",{"_index":2031,"title":{},"body":{"injectables/WaterUsageHistoryService.html":{}}}],["historydata",{"_index":695,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["historyresponse",{"_index":716,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"injectables/WaterUsageHistoryService.html":{},"miscellaneous/typealiases.html":{}}}],["holding",{"_index":660,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["holds",{"_index":1362,"title":{},"body":{"components/MapComponent.html":{}}}],["host",{"_index":616,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["hostbinding",{"_index":628,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["hostbinding(\"class",{"_index":632,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["hostlistener",{"_index":630,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{},"directives/LangSelectorDirective.html":{}}}],["hostlistener(\"click",{"_index":637,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{},"directives/LangSelectorDirective.html":{}}}],["hostlistener('click",{"_index":621,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{},"directives/LangSelectorDirective.html":{}}}],["hostlisteners",{"_index":612,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{},"directives/LangSelectorDirective.html":{}}}],["households_and_small_businesses",{"_index":948,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["hovering",{"_index":1650,"title":{},"body":{"interfaces/Marker.html":{}}}],["hservice",{"_index":705,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["html",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["http",{"_index":369,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/CacheInterceptor.html":{},"injectables/ConsumersService.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/UserService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["http_interceptors",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ConsumersService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/UserService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["httpclientmodule",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["httpcode",{"_index":788,"title":{},"body":{"interfaces/Error.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{}}}],["httpcontext",{"_index":386,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ConsumersService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"miscellaneous/variables.html":{}}}],["httpcontexttoken",{"_index":512,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{},"miscellaneous/variables.html":{}}}],["httperror",{"_index":789,"title":{},"body":{"interfaces/Error.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{}}}],["httperrorresponse",{"_index":1160,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["httpevent",{"_index":342,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/BaseUrlInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/LoaderInterceptor.html":{},"interceptors/SanitizeUrlInterceptor.html":{}}}],["httphandler",{"_index":334,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/BaseUrlInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/LoaderInterceptor.html":{},"interceptors/SanitizeUrlInterceptor.html":{}}}],["httpheaders",{"_index":387,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/CacheInterceptor.html":{},"injectables/ConsumersService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/UserService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"miscellaneous/variables.html":{}}}],["httpinterceptor",{"_index":343,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/BaseUrlInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/LoaderInterceptor.html":{},"interceptors/SanitizeUrlInterceptor.html":{}}}],["httpoptions",{"_index":412,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["httpparams",{"_index":388,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["httpparams({fromobject",{"_index":427,"title":{},"body":{"injectables/AuthService.html":{}}}],["httprequest",{"_index":333,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/BaseUrlInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/LoaderInterceptor.html":{},"interceptors/SanitizeUrlInterceptor.html":{}}}],["httpresponse",{"_index":665,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/UserService.html":{}}}],["httpresponsebase",{"_index":1159,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["https://bulma.io/documentation/components/menu",{"_index":991,"title":{},"body":{"components/FrameComponent.html":{}}}],["https://github.com/microsoft/tsdoc/issues/308",{"_index":486,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["https://ionic.io/ionicons",{"_index":1036,"title":{},"body":{"components/IonIconComponent.html":{}}}],["https://tile.openstreetmap.org/{z}/{x}/{y}.png",{"_index":1364,"title":{},"body":{"components/MapComponent.html":{}}}],["https://unpkg.com/ionicons@5.5.2/dist/svg/business.svg",{"_index":2311,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://unpkg.com/ionicons@5.5.2/dist/svg/water.svg",{"_index":2314,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://wisdom04.vlba.uni",{"_index":1312,"title":{},"body":{"components/MapComponent.html":{}}}],["i18n/lang",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["i18n/static",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["icon",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"components/ConsumerDetailComponent.html":{},"components/IonIconComponent.html":{},"components/MapSelectViewComponent.html":{},"interfaces/Marker.html":{},"components/WaterRightDetailComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["icon'},{'name",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["icon.component",{"_index":2053,"title":{},"body":{"modules/WisdomModule.html":{}}}],["icon.component.ts",{"_index":1012,"title":{},"body":{"components/IonIconComponent.html":{},"coverage.html":{}}}],["icon.component.ts:12",{"_index":1020,"title":{},"body":{"components/IonIconComponent.html":{}}}],["icon.component.ts:31",{"_index":1022,"title":{},"body":{"components/IonIconComponent.html":{}}}],["icon.default.imagepath",{"_index":59,"title":{},"body":{"components/AppComponent.html":{}}}],["icon.setattribute(\"name",{"_index":2335,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon.setattribute(\"size",{"_index":2338,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon.style.color",{"_index":2340,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon.style.pointerevents",{"_index":2334,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon/ion",{"_index":1011,"title":{},"body":{"components/IonIconComponent.html":{},"modules/WisdomModule.html":{},"coverage.html":{}}}],["icons",{"_index":729,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/IonIconComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["icons.ts",{"_index":2091,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["iconsize",{"_index":2312,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iconurl",{"_index":2310,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":696,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["idb",{"_index":1546,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{},"dependencies.html":{}}}],["idb.get(\"queries",{"_index":1578,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["idb.transaction(\"shapes",{"_index":1580,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["idb.transaction([\"queries",{"_index":1605,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["identifier",{"_index":2057,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["identify",{"_index":1536,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["ignore",{"_index":261,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/LoaderService.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"classes/StaticLoader.html":{}}}],["image",{"_index":33,"title":{},"body":{"components/AppComponent.html":{}}}],["implement",{"_index":1301,"title":{},"body":{"components/MapComponent.html":{}}}],["implementation",{"_index":1824,"title":{},"body":{"injectables/UserService.html":{}}}],["implementing",{"_index":2040,"title":{},"body":{"interfaces/WisdomInterface.html":{}}}],["implements",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/BaseUrlInterceptor.html":{},"components/BreadcrumbsComponent.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"guards/QueryParameterGuard.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"classes/StaticLoader.html":{},"components/WaterRightDetailComponent.html":{}}}],["import",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/ExampleComponent.html":{},"modules/ExampleModule.html":{},"injectables/ExampleService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"interfaces/LayerData.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"interfaces/Marker.html":{},"classes/ModuleProvider.html":{},"guards/QueryParameterGuard.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"interfaces/ShapeData.html":{},"components/SideBarComponent.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"interfaces/WisdomInterface.html":{},"modules/WisdomModule.html":{}}}],["imported",{"_index":1630,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["imports",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ExampleModule.html":{},"modules/WaterUsageForecastsModule.html":{},"modules/WisdomModule.html":{}}}],["include",{"_index":2042,"title":{},"body":{"interfaces/WisdomInterface.html":{}}}],["incorrect",{"_index":1816,"title":{},"body":{"injectables/UserService.html":{}}}],["index",{"_index":23,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"interfaces/LayerData.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"interfaces/Marker.html":{},"classes/ModuleProvider.html":{},"guards/QueryParameterGuard.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"interfaces/ShapeData.html":{},"components/SideBarComponent.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"interfaces/WisdomInterface.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexed",{"_index":1542,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{},"miscellaneous/variables.html":{}}}],["indexeddb",{"_index":1555,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["infinite",{"_index":1108,"title":{},"body":{"components/LoaderComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/ExampleComponent.html":{},"modules/ExampleModule.html":{},"injectables/ExampleService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"interfaces/LayerData.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"interfaces/Marker.html":{},"classes/ModuleProvider.html":{},"guards/QueryParameterGuard.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"interfaces/ShapeData.html":{},"components/SideBarComponent.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"interfaces/WisdomInterface.html":{},"modules/WisdomModule.html":{}}}],["information",{"_index":2250,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["infos",{"_index":784,"title":{},"body":{"interfaces/Error.html":{}}}],["init",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/LoaderComponent.html":{},"components/MapComponent.html":{}}}],["initial",{"_index":1796,"title":{},"body":{"injectables/UserService.html":{}}}],["initialize",{"_index":2322,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject",{"_index":327,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/IonIconComponent.html":{},"miscellaneous/variables.html":{}}}],["injectable",{"_index":253,"title":{"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"injectables/BreadcrumbsService.html":{},"injectables/ConsumersService.html":{},"injectables/ErrorService.html":{},"injectables/ExampleService.html":{},"injectables/LoaderService.html":{},"injectables/MapService.html":{},"injectables/SettingsStorageService.html":{},"injectables/UserService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"interceptors/CacheInterceptor.html":{},"injectables/ConsumersService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"injectables/ExampleService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"guards/QueryParameterGuard.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"injectables/UserService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"coverage.html":{}}}],["injectables",{"_index":359,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"injectables/BreadcrumbsService.html":{},"injectables/ConsumersService.html":{},"injectables/ErrorService.html":{},"injectables/ExampleService.html":{},"injectables/LoaderService.html":{},"injectables/MapService.html":{},"injectables/SettingsStorageService.html":{},"injectables/UserService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"index.html":{}}}],["injected",{"_index":339,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/MapComponent.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"interfaces/WisdomInterface.html":{},"miscellaneous/variables.html":{}}}],["injects",{"_index":336,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["inner",{"_index":1337,"title":{},"body":{"components/MapComponent.html":{}}}],["input",{"_index":629,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"miscellaneous/typealiases.html":{}}}],["input(\"center",{"_index":1403,"title":{},"body":{"components/MapComponent.html":{}}}],["input(\"class",{"_index":631,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["input(\"height",{"_index":1399,"title":{},"body":{"components/MapComponent.html":{}}}],["input(\"layers",{"_index":1411,"title":{},"body":{"components/MapComponent.html":{}}}],["input(\"layerselectable",{"_index":1414,"title":{},"body":{"components/MapComponent.html":{}}}],["input(\"markers",{"_index":1416,"title":{},"body":{"components/MapComponent.html":{}}}],["input(\"scrollwheelzoom",{"_index":1407,"title":{},"body":{"components/MapComponent.html":{}}}],["input(\"selectedcolor",{"_index":1410,"title":{},"body":{"components/MapComponent.html":{}}}],["input(\"selectlang",{"_index":1049,"title":{},"body":{"directives/LangSelectorDirective.html":{}}}],["input(\"tileurl",{"_index":1401,"title":{},"body":{"components/MapComponent.html":{}}}],["input(\"unselectedcolor",{"_index":1409,"title":{},"body":{"components/MapComponent.html":{}}}],["input(\"zoom",{"_index":1405,"title":{},"body":{"components/MapComponent.html":{}}}],["inputcenter",{"_index":1404,"title":{},"body":{"components/MapComponent.html":{}}}],["inputheight",{"_index":1400,"title":{},"body":{"components/MapComponent.html":{}}}],["inputlayers",{"_index":1290,"title":{},"body":{"components/MapComponent.html":{}}}],["inputlayers(layerconfig",{"_index":1412,"title":{},"body":{"components/MapComponent.html":{}}}],["inputlayerselectable",{"_index":1415,"title":{},"body":{"components/MapComponent.html":{}}}],["inputmarkers",{"_index":1291,"title":{},"body":{"components/MapComponent.html":{}}}],["inputmarkers(markers",{"_index":1417,"title":{},"body":{"components/MapComponent.html":{}}}],["inputs",{"_index":611,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/MapComponent.html":{}}}],["inputscrollwheelzoom",{"_index":1408,"title":{},"body":{"components/MapComponent.html":{}}}],["inputtileurl",{"_index":1402,"title":{},"body":{"components/MapComponent.html":{}}}],["inputzoom",{"_index":1406,"title":{},"body":{"components/MapComponent.html":{}}}],["insert",{"_index":653,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["insertroute",{"_index":1670,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["insertroute.canactivate",{"_index":1672,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["insertroute.canactivate.push(authguard",{"_index":1674,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["instanceof",{"_index":680,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"injectables/ErrorService.html":{},"interceptors/LoaderInterceptor.html":{}}}],["instant",{"_index":2167,"title":{},"body":{"miscellaneous/functions.html":{}}}],["instead",{"_index":409,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["insufficient",{"_index":2241,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["interact",{"_index":228,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/UserService.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["interaction",{"_index":363,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["intercept",{"_index":330,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/BaseUrlInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/LoaderInterceptor.html":{},"interceptors/SanitizeUrlInterceptor.html":{}}}],["intercept(request",{"_index":332,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/BaseUrlInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/LoaderInterceptor.html":{},"interceptors/SanitizeUrlInterceptor.html":{}}}],["intercepting",{"_index":1709,"title":{},"body":{"interceptors/SanitizeUrlInterceptor.html":{}}}],["interceptor",{"_index":324,"title":{"interceptors/AuthInterceptor.html":{},"interceptors/BaseUrlInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/LoaderInterceptor.html":{},"interceptors/SanitizeUrlInterceptor.html":{}},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"coverage.html":{}}}],["interceptors",{"_index":325,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/BaseUrlInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/LoaderInterceptor.html":{},"interceptors/SanitizeUrlInterceptor.html":{}}}],["interface",{"_index":524,"title":{"interfaces/Breadcrumb.html":{},"interfaces/Error.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"interfaces/LayerData.html":{},"interfaces/MapDB.html":{},"interfaces/Marker.html":{},"interfaces/ShapeData.html":{},"interfaces/WisdomInterface.html":{}},"body":{"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"interfaces/Error.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"interfaces/LayerData.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"interfaces/Marker.html":{},"interfaces/ShapeData.html":{},"injectables/WaterUsageForecastsService.html":{},"interfaces/WisdomInterface.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["interfaces",{"_index":526,"title":{},"body":{"interfaces/Breadcrumb.html":{},"interfaces/Error.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"interfaces/LayerData.html":{},"interfaces/MapDB.html":{},"interfaces/Marker.html":{},"interfaces/ShapeData.html":{},"interfaces/WisdomInterface.html":{},"index.html":{}}}],["internal",{"_index":449,"title":{},"body":{"injectables/AuthStorageService.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"injectables/LoaderService.html":{},"injectables/SettingsStorageService.html":{}}}],["internally",{"_index":1191,"title":{},"body":{"injectables/LoaderService.html":{},"components/MapComponent.html":{},"miscellaneous/functions.html":{}}}],["intersection",{"_index":1303,"title":{},"body":{"components/MapComponent.html":{}}}],["invert",{"_index":1392,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/variables.html":{}}}],["invertselection",{"_index":2315,"title":{},"body":{"miscellaneous/variables.html":{}}}],["invertselection(options",{"_index":2342,"title":{},"body":{"miscellaneous/variables.html":{}}}],["invertselectioncontrol",{"_index":1453,"title":{},"body":{"components/MapComponent.html":{}}}],["invertselectioncontrol.addto(map",{"_index":1510,"title":{},"body":{"components/MapComponent.html":{}}}],["ion",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"modules/WisdomModule.html":{},"miscellaneous/variables.html":{}}}],["ionic.io/ioniconshttps",{"_index":2260,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ioniconcomponent",{"_index":81,"title":{"components/IonIconComponent.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"modules/WisdomModule.html":{},"coverage.html":{},"index.html":{}}}],["ionicons",{"_index":1013,"title":{},"body":{"components/IonIconComponent.html":{}}}],["isactive",{"_index":610,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["isallset",{"_index":567,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["isloading",{"_index":1087,"title":{},"body":{"components/LoaderComponent.html":{}}}],["issue",{"_index":1232,"title":{},"body":{"components/LoginComponent.html":{}}}],["item",{"_index":1100,"title":{},"body":{"components/LoaderComponent.html":{},"injectables/SettingsStorageService.html":{}}}],["item:nth",{"_index":1110,"title":{},"body":{"components/LoaderComponent.html":{}}}],["items",{"_index":2328,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iterate",{"_index":2171,"title":{},"body":{"miscellaneous/functions.html":{}}}],["iterated",{"_index":1687,"title":{},"body":{"guards/QueryParameterGuard.html":{}}}],["itself",{"_index":923,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/IonIconComponent.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["join",{"_index":392,"title":{},"body":{"injectables/AuthService.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/MapComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["join(auth_api",{"_index":1832,"title":{},"body":{"injectables/UserService.html":{}}}],["join(auth_url",{"_index":422,"title":{},"body":{"injectables/AuthService.html":{}}}],["js",{"_index":1017,"title":{},"body":{"components/IonIconComponent.html":{}}}],["json",{"_index":410,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ConsumersService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/UserService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"miscellaneous/variables.html":{}}}],["json.parse(cleaned",{"_index":1998,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["json.parse(json.stringify(raw",{"_index":2000,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["json.stringify(res",{"_index":1993,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["justify",{"_index":2329,"title":{},"body":{"miscellaneous/variables.html":{}}}],["k",{"_index":1596,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["k.split",{"_index":1435,"title":{},"body":{"components/MapComponent.html":{}}}],["k.substring(0",{"_index":1595,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["key",{"_index":345,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthStorageService.html":{},"interceptors/CacheInterceptor.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"directives/LangSelectorDirective.html":{},"interfaces/LayerData.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"classes/ModuleProvider.html":{},"injectables/SettingsStorageService.html":{},"interfaces/ShapeData.html":{},"classes/StaticLoader.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["key[0",{"_index":1538,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["keyframes",{"_index":1120,"title":{},"body":{"components/LoaderComponent.html":{}}}],["keys",{"_index":969,"title":{},"body":{"components/FrameComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"guards/QueryParameterGuard.html":{},"interfaces/WisdomInterface.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["keys.length",{"_index":1592,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["keys.map(k",{"_index":1594,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["keys?.map(k",{"_index":1434,"title":{},"body":{"components/MapComponent.html":{}}}],["kombination",{"_index":1259,"title":{},"body":{"components/LoginComponent.html":{}}}],["korrekt",{"_index":1261,"title":{},"body":{"components/LoginComponent.html":{}}}],["l",{"_index":1064,"title":{},"body":{"interfaces/LayerData.html":{},"components/MapComponent.html":{},"interfaces/Marker.html":{},"interfaces/ShapeData.html":{}}}],["l.control.extend",{"_index":2320,"title":{},"body":{"miscellaneous/variables.html":{}}}],["l.control.layers",{"_index":1452,"title":{},"body":{"components/MapComponent.html":{}}}],["l.controloptions",{"_index":2319,"title":{},"body":{"miscellaneous/variables.html":{}}}],["l.divicon",{"_index":1649,"title":{},"body":{"interfaces/Marker.html":{}}}],["l.domutil.create",{"_index":2330,"title":{},"body":{"miscellaneous/variables.html":{}}}],["l.geojson(undefined",{"_index":1463,"title":{},"body":{"components/MapComponent.html":{}}}],["l.icon",{"_index":1648,"title":{},"body":{"interfaces/Marker.html":{}}}],["l.layer",{"_index":1358,"title":{},"body":{"components/MapComponent.html":{}}}],["l.map",{"_index":1353,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/variables.html":{}}}],["l.map(nativemapelement",{"_index":1442,"title":{},"body":{"components/MapComponent.html":{}}}],["l.marker(marker.coordinates",{"_index":1516,"title":{},"body":{"components/MapComponent.html":{}}}],["l.markerclustergroup",{"_index":1512,"title":{},"body":{"components/MapComponent.html":{}}}],["l.path",{"_index":1483,"title":{},"body":{"components/MapComponent.html":{}}}],["l.tilelayer(this.tileurl).addto(map",{"_index":1449,"title":{},"body":{"components/MapComponent.html":{}}}],["l.util.setoptions(this",{"_index":2323,"title":{},"body":{"miscellaneous/variables.html":{}}}],["label[0",{"_index":1746,"title":{},"body":{"components/SideBarComponent.html":{}}}],["labels",{"_index":742,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"miscellaneous/typealiases.html":{}}}],["lang",{"_index":1001,"title":{},"body":{"components/FrameComponent.html":{},"directives/LangSelectorDirective.html":{},"classes/ModuleProvider.html":{},"classes/StaticLoader.html":{}}}],["langs",{"_index":1659,"title":{},"body":{"classes/ModuleProvider.html":{},"classes/StaticLoader.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["langs(lang",{"_index":1664,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["langs/de_de",{"_index":1759,"title":{},"body":{"classes/StaticLoader.html":{}}}],["langs/en_us",{"_index":1760,"title":{},"body":{"classes/StaticLoader.html":{}}}],["langs[lang",{"_index":1769,"title":{},"body":{"classes/StaticLoader.html":{}}}],["langselectordirective",{"_index":107,"title":{"directives/LangSelectorDirective.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"coverage.html":{},"index.html":{}}}],["language",{"_index":1042,"title":{},"body":{"directives/LangSelectorDirective.html":{},"classes/ModuleProvider.html":{},"classes/StaticLoader.html":{},"miscellaneous/variables.html":{}}}],["languages",{"_index":1762,"title":{},"body":{"classes/StaticLoader.html":{},"miscellaneous/variables.html":{}}}],["large",{"_index":2339,"title":{},"body":{"miscellaneous/variables.html":{}}}],["last",{"_index":648,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/UserService.html":{}}}],["lastmodified",{"_index":675,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["lastmodifiedmap",{"_index":651,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["lastname",{"_index":1782,"title":{},"body":{"injectables/UserService.html":{}}}],["later",{"_index":1477,"title":{},"body":{"components/MapComponent.html":{}}}],["latitude",{"_index":1343,"title":{},"body":{"components/MapComponent.html":{}}}],["layer",{"_index":1057,"title":{},"body":{"interfaces/LayerData.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"interfaces/Marker.html":{},"interfaces/ShapeData.html":{},"miscellaneous/typealiases.html":{}}}],["layer.bindtooltip(feature.properties.name",{"_index":1478,"title":{},"body":{"components/MapComponent.html":{}}}],["layer.fire(\"click",{"_index":1509,"title":{},"body":{"components/MapComponent.html":{}}}],["layer.on(\"click",{"_index":1481,"title":{},"body":{"components/MapComponent.html":{}}}],["layerconfig",{"_index":1274,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/typealiases.html":{}}}],["layerdata",{"_index":1053,"title":{"interfaces/LayerData.html":{}},"body":{"interfaces/LayerData.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"interfaces/ShapeData.html":{},"coverage.html":{}}}],["layerdata.box",{"_index":1615,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["layerdata.shapes",{"_index":1609,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["layerdata[\"box",{"_index":1553,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["layerkey",{"_index":1350,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/typealiases.html":{}}}],["layername",{"_index":1525,"title":{},"body":{"components/MapComponent.html":{}}}],["layernames",{"_index":1275,"title":{},"body":{"components/MapComponent.html":{}}}],["layers",{"_index":1283,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/variables.html":{}}}],["layers.push(layer",{"_index":1492,"title":{},"body":{"components/MapComponent.html":{}}}],["layers]=&quot",{"_index":1372,"title":{},"body":{"components/MapComponent.html":{}}}],["layerscontrol",{"_index":1451,"title":{},"body":{"components/MapComponent.html":{}}}],["layerscontrol.addbaselayer(geojsonlayer",{"_index":1502,"title":{},"body":{"components/MapComponent.html":{}}}],["layerscontrol.addto(map",{"_index":1506,"title":{},"body":{"components/MapComponent.html":{}}}],["layerselectable",{"_index":1284,"title":{},"body":{"components/MapComponent.html":{}}}],["lazily",{"_index":1557,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["leads",{"_index":2041,"title":{},"body":{"interfaces/WisdomInterface.html":{}}}],["leaflet",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"interfaces/LayerData.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"interfaces/Marker.html":{},"interfaces/ShapeData.html":{},"components/WaterRightDetailComponent.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["leaflet.markercluster",{"_index":1393,"title":{},"body":{"components/MapComponent.html":{},"dependencies.html":{}}}],["leafletmouseevent",{"_index":1651,"title":{},"body":{"interfaces/Marker.html":{},"components/WaterRightDetailComponent.html":{}}}],["left",{"_index":532,"title":{},"body":{"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{}}}],["legend",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["length",{"_index":2180,"title":{},"body":{"miscellaneous/functions.html":{}}}],["level",{"_index":1331,"title":{},"body":{"components/MapComponent.html":{}}}],["lib",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["linear",{"_index":916,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/enumerations.html":{}}}],["link",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/IonIconComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"interfaces/Marker.html":{},"guards/QueryParameterGuard.html":{},"components/WaterRightDetailComponent.html":{}}}],["list",{"_index":543,"title":{},"body":{"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"interfaces/LayerData.html":{},"interfaces/ShapeData.html":{},"injectables/UserService.html":{}}}],["literal",{"_index":955,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"miscellaneous/typealiases.html":{}}}],["live",{"_index":580,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["lmarker",{"_index":1515,"title":{},"body":{"components/MapComponent.html":{}}}],["lmarker.addto(markerlayer",{"_index":1523,"title":{},"body":{"components/MapComponent.html":{}}}],["lmarker.bindtooltip(marker.tooltip",{"_index":1520,"title":{},"body":{"components/MapComponent.html":{}}}],["lmarker.on(\"click",{"_index":1522,"title":{},"body":{"components/MapComponent.html":{}}}],["lmarker.seticon(marker.icon",{"_index":1518,"title":{},"body":{"components/MapComponent.html":{}}}],["load",{"_index":1155,"title":{},"body":{"interceptors/LoaderInterceptor.html":{},"components/SideBarComponent.html":{}}}],["loader",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"classes/StaticLoader.html":{},"miscellaneous/variables.html":{}}}],["loader'},{'name",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["loader.component.html",{"_index":1085,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader.component.scss",{"_index":1084,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader.service",{"_index":1095,"title":{},"body":{"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{}}}],["loader.ts",{"_index":1749,"title":{},"body":{"classes/StaticLoader.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loader.ts:36",{"_index":1753,"title":{},"body":{"classes/StaticLoader.html":{}}}],["loadercomponent",{"_index":84,"title":{"components/LoaderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"coverage.html":{},"index.html":{}}}],["loaderguard",{"_index":189,"title":{"guards/LoaderGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/LoaderGuard.html":{},"classes/ModuleProvider.html":{},"coverage.html":{}}}],["loaderinterceptor",{"_index":127,"title":{"interceptors/LoaderInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/LoaderInterceptor.html":{},"coverage.html":{},"index.html":{}}}],["loaderservice",{"_index":1088,"title":{"injectables/LoaderService.html":{}},"body":{"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"coverage.html":{}}}],["loading",{"_index":1076,"title":{},"body":{"components/LoaderComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"miscellaneous/variables.html":{}}}],["loadings",{"_index":1196,"title":{},"body":{"injectables/LoaderService.html":{}}}],["localhost:8090/auth",{"_index":1819,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["location",{"_index":800,"title":{},"body":{"components/ErrorComponent.html":{},"components/WaterRightDetailComponent.html":{},"miscellaneous/variables.html":{}}}],["location.name",{"_index":1864,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location.real",{"_index":1859,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.basinno?.key",{"_index":1927,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.basinno?.name",{"_index":1928,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.county",{"_index":1930,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.eusurveyarea?.key",{"_index":1933,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.eusurveyarea?.name",{"_index":1934,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.field",{"_index":1936,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.floodarea",{"_index":1962,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.groundwatervolume",{"_index":1939,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.id",{"_index":1909,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.irrigationarea?.amount",{"_index":1919,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.irrigationarea?.unit",{"_index":1920,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.legalscope",{"_index":1908,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.localsubdistrict",{"_index":1942,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.location",{"_index":1857,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.maintenanceassociation?.key",{"_index":1945,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.maintenanceassociation?.name",{"_index":1946,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.municipalarea?.key",{"_index":1948,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.municipalarea?.name",{"_index":1949,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.name",{"_index":1907,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.no",{"_index":1911,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.plot",{"_index":1951,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.rainsupplement?.amount",{"_index":1923,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.rainsupplement?.duration",{"_index":1925,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.rainsupplement?.unit",{"_index":1924,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.rivershed",{"_index":1953,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.serialno",{"_index":1955,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.topmap1to25000?.key",{"_index":1958,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.topmap1to25000?.name",{"_index":1959,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.waterbody",{"_index":1960,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.waterprotectionarea",{"_index":1964,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["log",{"_index":973,"title":{},"body":{"components/FrameComponent.html":{}}}],["logarithmic",{"_index":915,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/enumerations.html":{}}}],["logged",{"_index":275,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["login",{"_index":195,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/FrameComponent.html":{},"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["login'},{'name",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["login(username",{"_index":372,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.component.html",{"_index":1216,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":86,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"coverage.html":{},"index.html":{}}}],["loginhasissue",{"_index":1217,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginurltree",{"_index":266,"title":{},"body":{"guards/AuthGuard.html":{}}}],["loginurltree.queryparams",{"_index":269,"title":{},"body":{"guards/AuthGuard.html":{}}}],["logout",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{},"components/FrameComponent.html":{}}}],["logout(token",{"_index":377,"title":{},"body":{"injectables/AuthService.html":{}}}],["logs",{"_index":375,"title":{},"body":{"injectables/AuthService.html":{}}}],["long",{"_index":581,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["longer",{"_index":2365,"title":{},"body":{"miscellaneous/variables.html":{}}}],["longitude",{"_index":1342,"title":{},"body":{"components/MapComponent.html":{}}}],["look",{"_index":1568,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{},"miscellaneous/variables.html":{}}}],["lt;map",{"_index":1370,"title":{},"body":{"components/MapComponent.html":{}}}],["lx",{"_index":1391,"title":{},"body":{"components/MapComponent.html":{}}}],["lx.control.invertselection",{"_index":1508,"title":{},"body":{"components/MapComponent.html":{}}}],["made",{"_index":2272,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["main",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["make",{"_index":1031,"title":{},"body":{"components/IonIconComponent.html":{},"components/MapComponent.html":{}}}],["makes",{"_index":578,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["making",{"_index":370,"title":{},"body":{"injectables/AuthService.html":{},"directives/BulmaIsToggleableDirective.html":{},"miscellaneous/variables.html":{}}}],["management",{"_index":1777,"title":{},"body":{"injectables/UserService.html":{}}}],["many",{"_index":1704,"title":{},"body":{"interceptors/SanitizeUrlInterceptor.html":{}}}],["map",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageHistoryService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["map'},{'name",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["map(str",{"_index":1445,"title":{},"body":{"components/MapComponent.html":{}}}],["map.component.css",{"_index":1272,"title":{},"body":{"components/MapComponent.html":{}}}],["map.fitbounds",{"_index":1499,"title":{},"body":{"components/MapComponent.html":{}}}],["map.getrenderer(map",{"_index":1447,"title":{},"body":{"components/MapComponent.html":{}}}],["map.on(\"baselayerchange",{"_index":1504,"title":{},"body":{"components/MapComponent.html":{}}}],["map.removecontrol(invertselectioncontrol",{"_index":1507,"title":{},"body":{"components/MapComponent.html":{}}}],["map.removecontrol(layerscontrol",{"_index":1457,"title":{},"body":{"components/MapComponent.html":{}}}],["map.removelayer(this.selectedgeojsonlayer",{"_index":1459,"title":{},"body":{"components/MapComponent.html":{}}}],["map.service",{"_index":1390,"title":{},"body":{"components/MapComponent.html":{}}}],["map/map.component",{"_index":2054,"title":{},"body":{"modules/WisdomModule.html":{}}}],["mapcomponent",{"_index":88,"title":{"components/MapComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"interfaces/Marker.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"modules/WisdomModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["mapcomponent.inputlayers",{"_index":1398,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/typealiases.html":{}}}],["mapdb",{"_index":1528,"title":{"interfaces/MapDB.html":{}},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{},"coverage.html":{}}}],["mapelement",{"_index":1276,"title":{},"body":{"components/MapComponent.html":{}}}],["mapped",{"_index":1352,"title":{},"body":{"components/MapComponent.html":{}}}],["maps",{"_index":1271,"title":{},"body":{"components/MapComponent.html":{}}}],["mapselection",{"_index":1622,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["mapselection(selection",{"_index":1625,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["mapselectviewcomponent",{"_index":90,"title":{"components/MapSelectViewComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["mapservice",{"_index":1292,"title":{"injectables/MapService.html":{}},"body":{"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"coverage.html":{}}}],["marker",{"_index":697,"title":{"interfaces/Marker.html":{}},"body":{"components/ConsumerDetailComponent.html":{},"components/MapComponent.html":{},"interfaces/Marker.html":{},"components/WaterRightDetailComponent.html":{},"coverage.html":{}}}],["marker.icon",{"_index":1517,"title":{},"body":{"components/MapComponent.html":{}}}],["marker.onclick",{"_index":1521,"title":{},"body":{"components/MapComponent.html":{}}}],["marker.tooltip",{"_index":1519,"title":{},"body":{"components/MapComponent.html":{}}}],["markerlayer",{"_index":1511,"title":{},"body":{"components/MapComponent.html":{}}}],["markerlayer.addto(map",{"_index":1524,"title":{},"body":{"components/MapComponent.html":{}}}],["markerlayer.removefrom(map",{"_index":1514,"title":{},"body":{"components/MapComponent.html":{}}}],["markers",{"_index":1277,"title":{},"body":{"components/MapComponent.html":{},"interfaces/Marker.html":{},"components/WaterRightDetailComponent.html":{}}}],["markers.push",{"_index":1863,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["marker}s",{"_index":1419,"title":{},"body":{"components/MapComponent.html":{}}}],["match",{"_index":657,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["matching",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/ExampleComponent.html":{},"modules/ExampleModule.html":{},"injectables/ExampleService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"interfaces/LayerData.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"interfaces/Marker.html":{},"classes/ModuleProvider.html":{},"guards/QueryParameterGuard.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"interfaces/ShapeData.html":{},"components/SideBarComponent.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"interfaces/WisdomInterface.html":{},"modules/WisdomModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.max(...bounds[0",{"_index":1870,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["math.max(...bounds[1",{"_index":1871,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["math.min(...bounds[0",{"_index":1872,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["math.min(...bounds[1",{"_index":1873,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["meaning",{"_index":1396,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/typealiases.html":{}}}],["message",{"_index":1229,"title":{},"body":{"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"interfaces/LayerData.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"interfaces/ShapeData.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["method",{"_index":238,"title":{},"body":{"guards/AuthGuard.html":{},"miscellaneous/functions.html":{}}}],["methods",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"classes/ModuleProvider.html":{},"guards/QueryParameterGuard.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"miscellaneous/enumerations.html":{}}}],["minimalistic",{"_index":890,"title":{},"body":{"components/ExampleComponent.html":{},"modules/ExampleModule.html":{}}}],["miscellaneous",{"_index":2133,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":1725,"title":{},"body":{"injectables/SettingsStorageService.html":{}}}],["mixed",{"_index":1383,"title":{},"body":{"components/MapComponent.html":{}}}],["mode",{"_index":2305,"title":{},"body":{"miscellaneous/variables.html":{}}}],["model",{"_index":933,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["modernized",{"_index":2159,"title":{},"body":{"miscellaneous/functions.html":{}}}],["modified",{"_index":649,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["modified](https://developer.mozilla.org/en",{"_index":668,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["modifies",{"_index":1028,"title":{},"body":{"components/IonIconComponent.html":{}}}],["module",{"_index":112,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ExampleModule.html":{},"modules/WaterUsageForecastsModule.html":{},"modules/WisdomModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/ExampleModule.html":{},"classes/ModuleProvider.html":{},"classes/StaticLoader.html":{},"interfaces/WisdomInterface.html":{},"miscellaneous/variables.html":{}}}],["module.ts",{"_index":1658,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["module.wisdominterface.route",{"_index":1671,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["module.wisdominterface.translations[lang",{"_index":1678,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["modulelang",{"_index":1677,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["moduleprovider",{"_index":187,"title":{"classes/ModuleProvider.html":{}},"body":{"modules/AppRoutingModule.html":{},"classes/ModuleProvider.html":{},"classes/StaticLoader.html":{},"coverage.html":{}}}],["moduleprovider.langs(\"de_de",{"_index":1766,"title":{},"body":{"classes/StaticLoader.html":{},"miscellaneous/variables.html":{}}}],["moduleprovider.langs(\"en_us",{"_index":1767,"title":{},"body":{"classes/StaticLoader.html":{},"miscellaneous/variables.html":{}}}],["moduleprovider.routes",{"_index":194,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["modules",{"_index":114,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ExampleModule.html":{},"classes/ModuleProvider.html":{},"modules/WaterUsageForecastsModule.html":{},"interfaces/WisdomInterface.html":{},"modules/WisdomModule.html":{},"index.html":{},"modules.html":{}}}],["more",{"_index":1693,"title":{},"body":{"guards/QueryParameterGuard.html":{}}}],["mouse",{"_index":1320,"title":{},"body":{"components/MapComponent.html":{}}}],["mouseevent",{"_index":2318,"title":{},"body":{"miscellaneous/variables.html":{}}}],["moved",{"_index":1817,"title":{},"body":{"injectables/UserService.html":{}}}],["multi",{"_index":178,"title":{},"body":{"modules/AppModule.html":{}}}],["municipal",{"_index":927,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/MapComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/enumerations.html":{}}}],["name",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/ExampleComponent.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"interfaces/LayerData.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"classes/ModuleProvider.html":{},"guards/QueryParameterGuard.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"interfaces/ShapeData.html":{},"components/SideBarComponent.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"interfaces/WisdomInterface.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["name(name",{"_index":1038,"title":{},"body":{"components/IonIconComponent.html":{}}}],["name(s",{"_index":1793,"title":{},"body":{"injectables/UserService.html":{}}}],["names",{"_index":1034,"title":{},"body":{"components/IonIconComponent.html":{},"components/MapComponent.html":{},"injectables/UserService.html":{}}}],["namespace",{"_index":2045,"title":{},"body":{"interfaces/WisdomInterface.html":{},"miscellaneous/variables.html":{}}}],["name}}{{id",{"_index":761,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["nan",{"_index":497,"title":{},"body":{"injectables/AuthStorageService.html":{},"components/ConsumerDetailComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["native",{"_index":1029,"title":{},"body":{"components/IonIconComponent.html":{}}}],["nativemapelement",{"_index":1440,"title":{},"body":{"components/MapComponent.html":{}}}],["navigate",{"_index":241,"title":{},"body":{"guards/AuthGuard.html":{}}}],["navigation",{"_index":1142,"title":{},"body":{"guards/LoaderGuard.html":{}}}],["navigationstart",{"_index":875,"title":{},"body":{"injectables/ErrorService.html":{}}}],["necessary",{"_index":232,"title":{},"body":{"guards/AuthGuard.html":{},"components/IonIconComponent.html":{},"injectables/UserService.html":{}}}],["need",{"_index":1662,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["needed",{"_index":584,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IonIconComponent.html":{}}}],["needs",{"_index":205,"title":{},"body":{"guards/AuthGuard.html":{},"components/MapComponent.html":{},"injectables/UserService.html":{}}}],["nested",{"_index":2255,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["nesting",{"_index":990,"title":{},"body":{"components/FrameComponent.html":{}}}],["new",{"_index":280,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newurl",{"_index":1717,"title":{},"body":{"interceptors/SanitizeUrlInterceptor.html":{}}}],["next",{"_index":283,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/BaseUrlInterceptor.html":{},"components/BreadcrumbsComponent.html":{},"interceptors/CacheInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/LoaderInterceptor.html":{},"components/LoginComponent.html":{},"interceptors/SanitizeUrlInterceptor.html":{}}}],["next(value",{"_index":1165,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["next.handle",{"_index":520,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{}}}],["next.handle(authrequest).pipe(tap(event",{"_index":356,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["next.handle(request",{"_index":671,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/LoaderInterceptor.html":{}}}],["next.handle(request).pipe",{"_index":854,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["next.handle(request.clone",{"_index":677,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"interceptors/SanitizeUrlInterceptor.html":{}}}],["ng2",{"_index":2016,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{},"dependencies.html":{}}}],["ngafterviewinit",{"_index":700,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/MapComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["ngchartsmodule",{"_index":2015,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{}}}],["ngform",{"_index":1223,"title":{},"body":{"components/LoginComponent.html":{}}}],["ngmodule",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ExampleModule.html":{},"modules/WaterUsageForecastsModule.html":{},"modules/WisdomModule.html":{}}}],["ngondestroy",{"_index":568,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["ngoninit",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/LoaderComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["ngx",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"modules/ExampleModule.html":{},"directives/LangSelectorDirective.html":{},"classes/StaticLoader.html":{},"components/WaterRightDetailComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"modules/WisdomModule.html":{},"dependencies.html":{}}}],["nicht",{"_index":1260,"title":{},"body":{"components/LoginComponent.html":{}}}],["node",{"_index":606,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["nomenclature",{"_index":1069,"title":{},"body":{"interfaces/LayerData.html":{},"interfaces/ShapeData.html":{}}}],["non",{"_index":320,"title":{},"body":{"guards/AuthGuard.html":{}}}],["none",{"_index":656,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"miscellaneous/variables.html":{}}}],["notifies",{"_index":1158,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["now",{"_index":2343,"title":{},"body":{"miscellaneous/variables.html":{}}}],["null",{"_index":451,"title":{},"body":{"injectables/AuthStorageService.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/SettingsStorageService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["nullable",{"_index":2253,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["nullish",{"_index":458,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["nullstring",{"_index":2212,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["num",{"_index":2151,"title":{},"body":{"miscellaneous/functions.html":{}}}],["number",{"_index":463,"title":{},"body":{"injectables/AuthStorageService.html":{},"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"interfaces/LayerData.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"interfaces/Marker.html":{},"interfaces/ShapeData.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["nutskey",{"_index":1072,"title":{},"body":{"interfaces/LayerData.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"interfaces/ShapeData.html":{}}}],["oauth",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{}}}],["oauth/check_token",{"_index":426,"title":{},"body":{"injectables/AuthService.html":{}}}],["oauth/revoke",{"_index":429,"title":{},"body":{"injectables/AuthService.html":{}}}],["oauth/token",{"_index":423,"title":{},"body":{"injectables/AuthService.html":{}}}],["oauth2.0",{"_index":1797,"title":{},"body":{"injectables/UserService.html":{}}}],["obj",{"_index":2164,"title":{},"body":{"miscellaneous/functions.html":{}}}],["object",{"_index":2039,"title":{},"body":{"interfaces/WisdomInterface.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["object.assign",{"_index":1765,"title":{},"body":{"classes/StaticLoader.html":{},"injectables/WaterRightsService.html":{},"miscellaneous/variables.html":{}}}],["object.assign(collectedlang",{"_index":1679,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["object.assign(this",{"_index":833,"title":{},"body":{"components/ErrorComponent.html":{}}}],["object.entries(config",{"_index":1430,"title":{},"body":{"components/MapComponent.html":{}}}],["object.entries(layerdata",{"_index":1460,"title":{},"body":{"components/MapComponent.html":{}}}],["object.entries(requests",{"_index":1437,"title":{},"body":{"components/MapComponent.html":{}}}],["object.entries(sidebarlangs",{"_index":1768,"title":{},"body":{"classes/StaticLoader.html":{}}}],["object.entries(values",{"_index":1771,"title":{},"body":{"classes/StaticLoader.html":{}}}],["object.keys(layerdata).length",{"_index":1505,"title":{},"body":{"components/MapComponent.html":{}}}],["object.values(modules",{"_index":1669,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["observable",{"_index":250,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interceptors/BaseUrlInterceptor.html":{},"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"interceptors/CacheInterceptor.html":{},"injectables/ConsumersService.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/MapComponent.html":{},"guards/QueryParameterGuard.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["observable(subscriber",{"_index":281,"title":{},"body":{"guards/AuthGuard.html":{}}}],["observable.pipe(tap",{"_index":1164,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["observe",{"_index":554,"title":{},"body":{"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{}}}],["of(langs[lang",{"_index":1774,"title":{},"body":{"classes/StaticLoader.html":{}}}],["official",{"_index":1035,"title":{},"body":{"components/IonIconComponent.html":{}}}],["old",{"_index":212,"title":{},"body":{"guards/AuthGuard.html":{}}}],["oldenburg",{"_index":1344,"title":{},"body":{"components/MapComponent.html":{}}}],["oldenburg.de/repos/service",{"_index":1313,"title":{},"body":{"components/MapComponent.html":{}}}],["oldv",{"_index":1562,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["omit",{"_index":1979,"title":{},"body":{"injectables/WaterRightsService.html":{},"miscellaneous/typealiases.html":{}}}],["onadd",{"_index":2324,"title":{},"body":{"miscellaneous/variables.html":{}}}],["onclick",{"_index":1647,"title":{},"body":{"interfaces/Marker.html":{},"components/WaterRightDetailComponent.html":{}}}],["ondestroy",{"_index":564,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["one",{"_index":213,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/MapComponent.html":{},"interfaces/Marker.html":{},"classes/StaticLoader.html":{}}}],["oneachfeature",{"_index":1475,"title":{},"body":{"components/MapComponent.html":{}}}],["oninit",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["only_keys",{"_index":1377,"title":{},"body":{"components/MapComponent.html":{}}}],["onsubmit",{"_index":1219,"title":{},"body":{"components/LoginComponent.html":{}}}],["onsubmit(f",{"_index":1222,"title":{},"body":{"components/LoginComponent.html":{}}}],["onto",{"_index":1321,"title":{},"body":{"components/MapComponent.html":{}}}],["opacity",{"_index":1123,"title":{},"body":{"components/LoaderComponent.html":{}}}],["opendb",{"_index":1545,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["opendb(db_name",{"_index":1560,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["operate",{"_index":341,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["operations",{"_index":1583,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["operations.push(querystore.put",{"_index":1614,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["operations.push(shapestore.put(shape",{"_index":1610,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["operations.push(store.get(key).then(shape",{"_index":1585,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["operations.push(tx.done",{"_index":1587,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["option",{"_index":1319,"title":{},"body":{"components/MapComponent.html":{}}}],["optional",{"_index":221,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"interfaces/Marker.html":{},"classes/ModuleProvider.html":{},"guards/QueryParameterGuard.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":400,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["order",{"_index":876,"title":{},"body":{"injectables/ErrorService.html":{},"components/LoaderComponent.html":{},"miscellaneous/functions.html":{}}}],["original",{"_index":2306,"title":{},"body":{"miscellaneous/variables.html":{}}}],["osm",{"_index":1366,"title":{},"body":{"components/MapComponent.html":{}}}],["oss",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/FrameComponent.html":{},"components/LoginComponent.html":{}}}],["otherwise",{"_index":2182,"title":{},"body":{"miscellaneous/functions.html":{}}}],["out",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"modules/ExampleModule.html":{},"components/FrameComponent.html":{},"components/LoaderComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"modules/WisdomModule.html":{},"index.html":{}}}],["output",{"_index":885,"title":{},"body":{"injectables/ErrorService.html":{},"components/MapComponent.html":{}}}],["outputs",{"_index":1288,"title":{},"body":{"components/MapComponent.html":{}}}],["overflow",{"_index":1135,"title":{},"body":{"components/LoaderComponent.html":{}}}],["overview",{"_index":2185,"title":{"index.html":{}},"body":{"index.html":{}}}],["package",{"_index":2109,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":249,"title":{},"body":{"guards/AuthGuard.html":{},"components/BreadcrumbsComponent.html":{},"components/FrameComponent.html":{},"components/LoginComponent.html":{}}}],["pairs",{"_index":1349,"title":{},"body":{"components/MapComponent.html":{}}}],["param",{"_index":259,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"interceptors/CacheInterceptor.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"classes/ModuleProvider.html":{},"guards/QueryParameterGuard.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{}}}],["parameter.guard.ts",{"_index":1682,"title":{},"body":{"guards/QueryParameterGuard.html":{},"coverage.html":{}}}],["parameter.guard.ts:25",{"_index":1688,"title":{},"body":{"guards/QueryParameterGuard.html":{}}}],["parameter.guard.ts:41",{"_index":1691,"title":{},"body":{"guards/QueryParameterGuard.html":{}}}],["parameters",{"_index":220,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"classes/ModuleProvider.html":{},"guards/QueryParameterGuard.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"miscellaneous/functions.html":{}}}],["parameters[0",{"_index":1066,"title":{},"body":{"interfaces/LayerData.html":{},"components/MapComponent.html":{},"interfaces/ShapeData.html":{}}}],["parameters[1",{"_index":1821,"title":{},"body":{"injectables/UserService.html":{}}}],["parameters[2",{"_index":413,"title":{},"body":{"injectables/AuthService.html":{}}}],["params",{"_index":533,"title":{},"body":{"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"injectables/ConsumersService.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/WaterRightsService.html":{}}}],["params.appendall({key",{"_index":1593,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["params.id",{"_index":775,"title":{},"body":{"injectables/ConsumersService.html":{}}}],["params.in",{"_index":773,"title":{},"body":{"injectables/ConsumersService.html":{},"injectables/WaterRightsService.html":{}}}],["params.isactive",{"_index":1980,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["params.isreal",{"_index":1982,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["params.set(\"resolution",{"_index":1591,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["params.usageabove",{"_index":777,"title":{},"body":{"injectables/ConsumersService.html":{}}}],["parse",{"_index":1689,"title":{},"body":{"guards/QueryParameterGuard.html":{}}}],["parsefloat(str",{"_index":1446,"title":{},"body":{"components/MapComponent.html":{}}}],["parseint(expiresin",{"_index":499,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["parseint(this.inputzoom",{"_index":1428,"title":{},"body":{"components/MapComponent.html":{}}}],["partial",{"_index":766,"title":{},"body":{"injectables/ConsumersService.html":{},"injectables/WaterRightsService.html":{},"miscellaneous/typealiases.html":{}}}],["partials",{"_index":928,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["pass",{"_index":848,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{}}}],["passed",{"_index":536,"title":{},"body":{"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"interceptors/ErrorInterceptor.html":{},"components/MapComponent.html":{},"guards/QueryParameterGuard.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["password",{"_index":373,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["password).subscribe",{"_index":1243,"title":{},"body":{"components/LoginComponent.html":{}}}],["passwordinput",{"_index":1218,"title":{},"body":{"components/LoginComponent.html":{}}}],["patchusers204",{"_index":2215,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["patchusers403",{"_index":2217,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["patchusers404",{"_index":2219,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["patchusersme200",{"_index":2221,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["path",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/MapComponent.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["path.bringtoback",{"_index":1486,"title":{},"body":{"components/MapComponent.html":{}}}],["path.bringtofront",{"_index":1489,"title":{},"body":{"components/MapComponent.html":{}}}],["path.replace(/\\/+/g",{"_index":1716,"title":{},"body":{"interceptors/SanitizeUrlInterceptor.html":{}}}],["path.setstyle({color",{"_index":1485,"title":{},"body":{"components/MapComponent.html":{}}}],["pathmatch",{"_index":2356,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pathwithparams",{"_index":1713,"title":{},"body":{"interceptors/SanitizeUrlInterceptor.html":{}}}],["pathwithparams.split",{"_index":1715,"title":{},"body":{"interceptors/SanitizeUrlInterceptor.html":{}}}],["per",{"_index":262,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["person",{"_index":1794,"title":{},"body":{"injectables/UserService.html":{}}}],["pipe(map",{"_index":1984,"title":{},"body":{"injectables/WaterRightsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["pipe(map((raw",{"_index":1999,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["pipe(map((res",{"_index":1991,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["pipe(takewhile",{"_index":590,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["pipe(tap(event",{"_index":679,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["plugin",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["point",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"injectables/ConsumersService.html":{},"injectables/WaterRightsService.html":{}}}],["polynomial",{"_index":917,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/enumerations.html":{}}}],["position",{"_index":1101,"title":{},"body":{"components/LoaderComponent.html":{},"miscellaneous/variables.html":{}}}],["possible",{"_index":247,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/CacheInterceptor.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["possibly",{"_index":1081,"title":{},"body":{"components/LoaderComponent.html":{}}}],["post",{"_index":401,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["postoauthtoken200",{"_index":394,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/typealiases.html":{}}}],["postoauthtoken400",{"_index":1235,"title":{},"body":{"components/LoginComponent.html":{},"miscellaneous/typealiases.html":{}}}],["postoauthtoken401",{"_index":1237,"title":{},"body":{"components/LoginComponent.html":{},"miscellaneous/typealiases.html":{}}}],["postrevoke200",{"_index":396,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/typealiases.html":{}}}],["postrevoke403",{"_index":2227,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["predefined",{"_index":2161,"title":{},"body":{"miscellaneous/functions.html":{}}}],["prefers",{"_index":2115,"title":{},"body":{"dependencies.html":{}}}],["prepare",{"_index":1572,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["prepend",{"_index":508,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{}}}],["prepends",{"_index":510,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{}}}],["prependurl",{"_index":515,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{}}}],["presence",{"_index":877,"title":{},"body":{"injectables/ErrorService.html":{}}}],["present",{"_index":303,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ErrorService.html":{}}}],["presentation",{"_index":2147,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pretty",{"_index":1822,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["prettyprintnum",{"_index":2079,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["prettyprintnum(12345678",{"_index":2153,"title":{},"body":{"miscellaneous/functions.html":{}}}],["prettyprintnum(num",{"_index":2146,"title":{},"body":{"miscellaneous/functions.html":{}}}],["print",{"_index":2152,"title":{},"body":{"miscellaneous/functions.html":{}}}],["private",{"_index":260,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthStorageService.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"components/ErrorComponent.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"interfaces/LayerData.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"classes/ModuleProvider.html":{},"injectables/SettingsStorageService.html":{},"interfaces/ShapeData.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["privileges",{"_index":2242,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["prod",{"_index":2345,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":2302,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prognosis",{"_index":1635,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["promise",{"_index":1162,"title":{},"body":{"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"guards/QueryParameterGuard.html":{}}}],["promise(resolve",{"_index":1163,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["promise.all(operations",{"_index":1588,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["promise.allsettled(this.promises",{"_index":1209,"title":{},"body":{"injectables/LoaderService.html":{}}}],["promises",{"_index":1179,"title":{},"body":{"injectables/LoaderService.html":{}}}],["proof",{"_index":2349,"title":{},"body":{"miscellaneous/variables.html":{}}}],["properly",{"_index":1309,"title":{},"body":{"components/MapComponent.html":{}}}],["properties",{"_index":24,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"injectables/ErrorService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"interfaces/LayerData.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"interfaces/Marker.html":{},"interfaces/ShapeData.html":{},"components/SideBarComponent.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"interfaces/WisdomInterface.html":{},"properties.html":{}}}],["protection",{"_index":1963,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["protocol",{"_index":1712,"title":{},"body":{"interceptors/SanitizeUrlInterceptor.html":{}}}],["protocol}://${path",{"_index":1718,"title":{},"body":{"interceptors/SanitizeUrlInterceptor.html":{}}}],["provide",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"classes/ModuleProvider.html":{},"interfaces/WisdomInterface.html":{}}}],["providedin",{"_index":258,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"injectables/ConsumersService.html":{},"injectables/ErrorService.html":{},"injectables/ExampleService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"guards/LoaderGuard.html":{},"injectables/LoaderService.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"guards/QueryParameterGuard.html":{},"injectables/SettingsStorageService.html":{},"injectables/UserService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["provider",{"_index":188,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/StaticLoader.html":{}}}],["provider.ts",{"_index":1654,"title":{},"body":{"classes/ModuleProvider.html":{},"coverage.html":{}}}],["provider.ts:13",{"_index":1660,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["provider.ts:24",{"_index":1667,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["provider.ts:40",{"_index":1665,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["providers",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["provides",{"_index":1763,"title":{},"body":{"classes/StaticLoader.html":{},"interfaces/WisdomInterface.html":{},"miscellaneous/variables.html":{}}}],["providing",{"_index":943,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["proxy",{"_index":2309,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":1711,"title":{},"body":{"interceptors/SanitizeUrlInterceptor.html":{},"miscellaneous/variables.html":{}}}],["public_institutions",{"_index":950,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["pure",{"_index":1661,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["putusers201",{"_index":1811,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["putusers409",{"_index":1813,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["puzzle",{"_index":2337,"title":{},"body":{"miscellaneous/variables.html":{}}}],["queries",{"_index":1534,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["query",{"_index":529,"title":{},"body":{"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"guards/QueryParameterGuard.html":{},"interceptors/SanitizeUrlInterceptor.html":{}}}],["query.join",{"_index":1720,"title":{},"body":{"interceptors/SanitizeUrlInterceptor.html":{}}}],["query.length",{"_index":1719,"title":{},"body":{"interceptors/SanitizeUrlInterceptor.html":{}}}],["querykey",{"_index":1576,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["queryparameterguard",{"_index":1680,"title":{"guards/QueryParameterGuard.html":{}},"body":{"guards/QueryParameterGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["queryparams",{"_index":1250,"title":{},"body":{"components/LoginComponent.html":{},"guards/QueryParameterGuard.html":{},"miscellaneous/variables.html":{}}}],["querystore",{"_index":1612,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["quot",{"_index":1387,"title":{},"body":{"components/MapComponent.html":{}}}],["quot;12.345.678&quot",{"_index":2155,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rate.amount",{"_index":1913,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["rate.unit}}/{{rate.duration",{"_index":1914,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["raw.dateofchange",{"_index":2001,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["raw.valid",{"_index":2004,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["rawlayerdata",{"_index":1597,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["rawlayerdata.shapes",{"_index":1599,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["rawlayerdata.shapes.map(rawshape",{"_index":1600,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["rawshape",{"_index":1603,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["rawshape.geojson",{"_index":1602,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["rawshape.nuts_key",{"_index":1601,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["readonly",{"_index":1558,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["reads",{"_index":1656,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["readwrite",{"_index":1606,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["ready",{"_index":286,"title":{},"body":{"guards/AuthGuard.html":{}}}],["real",{"_index":1977,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["received",{"_index":433,"title":{},"body":{"injectables/AuthStorageService.html":{},"interceptors/CacheInterceptor.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"interfaces/LayerData.html":{},"interfaces/ShapeData.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["reconstruct",{"_index":1544,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["record",{"_index":910,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/MapComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"interfaces/WisdomInterface.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["recorded_at",{"_index":2034,"title":{},"body":{"injectables/WaterUsageHistoryService.html":{}}}],["recordedat",{"_index":698,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["recreated",{"_index":2143,"title":{},"body":{"miscellaneous/functions.html":{}}}],["redirect",{"_index":1685,"title":{},"body":{"guards/QueryParameterGuard.html":{}}}],["redirectto",{"_index":196,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/QueryParameterGuard.html":{},"miscellaneous/variables.html":{}}}],["reduces",{"_index":1706,"title":{},"body":{"interceptors/SanitizeUrlInterceptor.html":{}}}],["reexported",{"_index":1655,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["ref",{"_index":1356,"title":{},"body":{"components/MapComponent.html":{}}}],["reference",{"_index":402,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/IonIconComponent.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/variables.html":{}}}],["referenceusages",{"_index":930,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["refresh",{"_index":211,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"miscellaneous/variables.html":{}}}],["refresh(token",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{}}}],["refresh_token",{"_index":428,"title":{},"body":{"injectables/AuthService.html":{}}}],["refresh_token_key",{"_index":481,"title":{},"body":{"injectables/AuthStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["refresherrresponse",{"_index":314,"title":{},"body":{"guards/AuthGuard.html":{}}}],["refresherrresponse.status",{"_index":316,"title":{},"body":{"guards/AuthGuard.html":{}}}],["refreshes",{"_index":382,"title":{},"body":{"injectables/AuthService.html":{}}}],["refreshing",{"_index":246,"title":{},"body":{"guards/AuthGuard.html":{}}}],["refreshresponse",{"_index":306,"title":{},"body":{"guards/AuthGuard.html":{}}}],["refreshresponse.access_token",{"_index":308,"title":{},"body":{"guards/AuthGuard.html":{}}}],["refreshresponse.expires_in",{"_index":313,"title":{},"body":{"guards/AuthGuard.html":{}}}],["refreshresponse.refresh_token",{"_index":309,"title":{},"body":{"guards/AuthGuard.html":{}}}],["refreshresponse.scope",{"_index":311,"title":{},"body":{"guards/AuthGuard.html":{}}}],["refreshtoken",{"_index":441,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["refreshtoken(token",{"_index":500,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["registers",{"_index":36,"title":{},"body":{"components/AppComponent.html":{}}}],["relative",{"_index":1102,"title":{},"body":{"components/LoaderComponent.html":{}}}],["removes",{"_index":546,"title":{},"body":{"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{}}}],["removing",{"_index":353,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["render",{"_index":1023,"title":{},"body":{"components/IonIconComponent.html":{}}}],["renders",{"_index":1335,"title":{},"body":{"components/MapComponent.html":{}}}],["replace(/\"'([^'\"\\s:,]+)'\"/g",{"_index":1996,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["replace(/\"\\s*([^\"]+)\\s*\"/g",{"_index":1994,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["replace(/'\"([^'\"\\s:,]+)\"'/g",{"_index":1997,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["replace(/'\\s*([^']+)\\s*'/g",{"_index":1995,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["replaceurl",{"_index":998,"title":{},"body":{"components/FrameComponent.html":{},"components/LoginComponent.html":{}}}],["reply",{"_index":278,"title":{},"body":{"guards/AuthGuard.html":{},"miscellaneous/functions.html":{}}}],["report",{"_index":1146,"title":{},"body":{"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{}}}],["reported",{"_index":1174,"title":{},"body":{"injectables/LoaderService.html":{}}}],["represent",{"_index":1056,"title":{},"body":{"interfaces/LayerData.html":{},"interfaces/ShapeData.html":{}}}],["representation",{"_index":2283,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["representing",{"_index":1073,"title":{},"body":{"interfaces/LayerData.html":{},"interfaces/ShapeData.html":{}}}],["represents",{"_index":1539,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["request",{"_index":329,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interceptors/BaseUrlInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["request.clone",{"_index":349,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["request.clone({url",{"_index":522,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{}}}],["request.context.get(use_api_url",{"_index":518,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{}}}],["request.context.get(use_base_url",{"_index":516,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{}}}],["request.context.get(use_cache",{"_index":670,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["request.context.get(use_error_curtain",{"_index":853,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["request.context.get(use_loader",{"_index":1161,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["request.headers",{"_index":678,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["request.headers.set(\"if",{"_index":674,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["request.headers.set(token_header_key",{"_index":355,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["request.url",{"_index":523,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{}}}],["request.urlwithparams",{"_index":672,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["requested",{"_index":242,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["requesterror.error.error",{"_index":863,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["requesterror.error.errordescription",{"_index":866,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["requesterror.error.errorname",{"_index":864,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["requesterror.error.httpcode",{"_index":859,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["requesterror.error.httperror",{"_index":861,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["requesterror.message",{"_index":867,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["requesterror.name",{"_index":865,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["requesterror.ok",{"_index":856,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["requesterror.status",{"_index":860,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["requesterror.statustext",{"_index":862,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["requests",{"_index":371,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/BaseUrlInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"injectables/LoaderService.html":{},"components/MapComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["requests[layerkey",{"_index":1432,"title":{},"body":{"components/MapComponent.html":{}}}],["required",{"_index":2044,"title":{},"body":{"interfaces/WisdomInterface.html":{}}}],["res",{"_index":1985,"title":{},"body":{"injectables/WaterRightsService.html":{},"miscellaneous/functions.html":{}}}],["res.dateofchange",{"_index":2002,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["res.map",{"_index":1986,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["res.valid",{"_index":2005,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["reset",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorService.html":{},"modules/ExampleModule.html":{},"guards/LoaderGuard.html":{},"components/MapComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"modules/WisdomModule.html":{},"index.html":{}}}],["resolution",{"_index":1302,"title":{},"body":{"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["resolution&#39",{"_index":1375,"title":{},"body":{"components/MapComponent.html":{}}}],["resolution.district",{"_index":1386,"title":{},"body":{"components/MapComponent.html":{}}}],["resolution.municipal",{"_index":1376,"title":{},"body":{"components/MapComponent.html":{}}}],["resolution.tokeylength(resolution",{"_index":1575,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["resolutionnum",{"_index":1574,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["resolutions",{"_index":2137,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["resolve(err",{"_index":1169,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["resolve(value",{"_index":1166,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["resolved",{"_index":2142,"title":{},"body":{"miscellaneous/functions.html":{}}}],["resolving",{"_index":1304,"title":{},"body":{"components/MapComponent.html":{}}}],["respond",{"_index":1079,"title":{},"body":{"components/LoaderComponent.html":{},"components/MapComponent.html":{}}}],["response",{"_index":284,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["response.access_token",{"_index":1244,"title":{},"body":{"components/LoginComponent.html":{}}}],["response.expires_in",{"_index":1247,"title":{},"body":{"components/LoginComponent.html":{}}}],["response.refresh_token",{"_index":1245,"title":{},"body":{"components/LoginComponent.html":{}}}],["response.scope",{"_index":1246,"title":{},"body":{"components/LoginComponent.html":{}}}],["response_types/login/postoauthtoken200",{"_index":395,"title":{},"body":{"injectables/AuthService.html":{}}}],["response_types/login/postoauthtoken400",{"_index":1236,"title":{},"body":{"components/LoginComponent.html":{}}}],["response_types/login/postoauthtoken401",{"_index":1238,"title":{},"body":{"components/LoginComponent.html":{}}}],["response_types/login/postrevoke200",{"_index":397,"title":{},"body":{"injectables/AuthService.html":{}}}],["response_types/users/getusers200",{"_index":1810,"title":{},"body":{"injectables/UserService.html":{}}}],["response_types/users/putusers201",{"_index":1812,"title":{},"body":{"injectables/UserService.html":{}}}],["response_types/users/putusers409",{"_index":1814,"title":{},"body":{"injectables/UserService.html":{}}}],["responsetype",{"_index":415,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ConsumersService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/UserService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"miscellaneous/variables.html":{}}}],["rest",{"_index":1540,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["rest/main/api/get",{"_index":1314,"title":{},"body":{"components/MapComponent.html":{}}}],["result",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["resultdataviewcomponent",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/ExampleComponent.html":{},"modules/ExampleModule.html":{},"injectables/ExampleService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"interfaces/LayerData.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"interfaces/Marker.html":{},"classes/ModuleProvider.html":{},"guards/QueryParameterGuard.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"interfaces/ShapeData.html":{},"components/SideBarComponent.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"interfaces/WisdomInterface.html":{},"modules/WisdomModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieved",{"_index":1556,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["return",{"_index":265,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"injectables/ConsumersService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"directives/LangSelectorDirective.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"classes/ModuleProvider.html":{},"guards/QueryParameterGuard.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":1541,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["returning",{"_index":850,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["returns",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoaderComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"classes/ModuleProvider.html":{},"guards/QueryParameterGuard.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"miscellaneous/functions.html":{}}}],["returntologin",{"_index":299,"title":{},"body":{"guards/AuthGuard.html":{}}}],["returnurl",{"_index":270,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["returnurl.queryparams",{"_index":1251,"title":{},"body":{"components/LoginComponent.html":{}}}],["returnurl.tostring().split(\"?\")[0",{"_index":1252,"title":{},"body":{"components/LoginComponent.html":{}}}],["revokes",{"_index":379,"title":{},"body":{"injectables/AuthService.html":{}}}],["revoking",{"_index":970,"title":{},"body":{"components/FrameComponent.html":{}}}],["right",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"coverage.html":{}}}],["right.address",{"_index":1893,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.annotation",{"_index":1965,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.bailee",{"_index":1895,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.basin",{"_index":1926,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.county",{"_index":1929,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.eu",{"_index":1931,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.external",{"_index":1902,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.field",{"_index":1935,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.file",{"_index":1904,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.flood",{"_index":1961,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.fluid",{"_index":1915,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.granting",{"_index":1887,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.groundwater",{"_index":1937,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.internal",{"_index":1899,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.irrigation",{"_index":1917,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.local",{"_index":1940,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.location",{"_index":1910,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.locations",{"_index":1906,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.maintenance",{"_index":1943,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.municipal",{"_index":1947,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.plot",{"_index":1950,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.rain",{"_index":1921,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.registering",{"_index":1890,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.rivershed",{"_index":1952,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.serial",{"_index":1954,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.since",{"_index":1877,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.top",{"_index":1956,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.water",{"_index":1884,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.withdrawal",{"_index":1912,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right/:waterright",{"_index":2358,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rights",{"_index":1975,"title":{},"body":{"injectables/WaterRightsService.html":{},"miscellaneous/variables.html":{}}}],["rights.service",{"_index":1848,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["rights.service.ts",{"_index":1967,"title":{},"body":{"injectables/WaterRightsService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["rights.service.ts:116",{"_index":1970,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["rights.service.ts:123",{"_index":1974,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["rights.service.ts:147",{"_index":1972,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["rocket",{"_index":2351,"title":{},"body":{"miscellaneous/variables.html":{}}}],["role",{"_index":1799,"title":{},"body":{"injectables/UserService.html":{}}}],["roles",{"_index":1783,"title":{},"body":{"injectables/UserService.html":{}}}],["root",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"injectables/ConsumersService.html":{},"injectables/ErrorService.html":{},"injectables/ExampleService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"guards/LoaderGuard.html":{},"injectables/LoaderService.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"guards/QueryParameterGuard.html":{},"injectables/SettingsStorageService.html":{},"injectables/UserService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["root'},{'name",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["route",{"_index":231,"title":{},"body":{"guards/AuthGuard.html":{},"components/ConsumerDetailComponent.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"components/LoginComponent.html":{},"components/MapSelectViewComponent.html":{},"guards/QueryParameterGuard.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"interfaces/WisdomInterface.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["route.data[\"queryparams",{"_index":1697,"title":{},"body":{"guards/QueryParameterGuard.html":{}}}],["route.data[\"redirect",{"_index":1695,"title":{},"body":{"guards/QueryParameterGuard.html":{}}}],["route.queryparams[param",{"_index":1699,"title":{},"body":{"guards/QueryParameterGuard.html":{}}}],["route.url[0]?.path",{"_index":264,"title":{},"body":{"guards/AuthGuard.html":{}}}],["routed",{"_index":1228,"title":{},"body":{"components/LoginComponent.html":{}}}],["router",{"_index":218,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"injectables/ConsumersService.html":{},"injectables/ErrorService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"components/LoginComponent.html":{},"guards/QueryParameterGuard.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["router#parseurl",{"_index":1684,"title":{},"body":{"guards/QueryParameterGuard.html":{}}}],["routermodule",{"_index":182,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/WaterUsageForecastsModule.html":{},"modules/WisdomModule.html":{}}}],["routermodule.forroot(routes",{"_index":197,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":236,"title":{},"body":{"guards/AuthGuard.html":{},"guards/LoaderGuard.html":{},"guards/QueryParameterGuard.html":{}}}],["routes",{"_index":183,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/LoaderGuard.html":{},"classes/ModuleProvider.html":{},"index.html":{},"routes.html":{}}}],["routes.push(insertroute",{"_index":1675,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["routing",{"_index":1221,"title":{},"body":{"components/LoginComponent.html":{}}}],["routing.module",{"_index":151,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":181,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":560,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/LoaderComponent.html":{}}}],["run",{"_index":2243,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["rxjs",{"_index":255,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interceptors/BaseUrlInterceptor.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"guards/QueryParameterGuard.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"dependencies.html":{}}}],["same",{"_index":1789,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["sanitize",{"_index":170,"title":{},"body":{"modules/AppModule.html":{},"interceptors/SanitizeUrlInterceptor.html":{}}}],["sanitizeurlinterceptor",{"_index":128,"title":{"interceptors/SanitizeUrlInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"coverage.html":{},"index.html":{}}}],["schema",{"_index":1530,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{},"miscellaneous/variables.html":{}}}],["schema_v",{"_index":1552,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["scope",{"_index":1798,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["scopeguard",{"_index":1673,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["scopes",{"_index":442,"title":{},"body":{"injectables/AuthStorageService.html":{},"injectables/UserService.html":{},"interfaces/WisdomInterface.html":{},"miscellaneous/variables.html":{}}}],["scopes(scopes",{"_index":502,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["scopes_key",{"_index":482,"title":{},"body":{"injectables/AuthStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["screen",{"_index":1077,"title":{},"body":{"components/LoaderComponent.html":{}}}],["scroll",{"_index":1137,"title":{},"body":{"components/LoaderComponent.html":{},"components/MapComponent.html":{}}}],["scrollwheelzoom",{"_index":1285,"title":{},"body":{"components/MapComponent.html":{}}}],["se",{"_index":263,"title":{},"body":{"guards/AuthGuard.html":{}}}],["see",{"_index":1311,"title":{},"body":{"components/MapComponent.html":{},"interfaces/WisdomInterface.html":{}}}],["select",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["select.get",{"_index":1641,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["selectable",{"_index":1316,"title":{},"body":{"components/MapComponent.html":{}}}],["selected",{"_index":1289,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/variables.html":{}}}],["selectedcolor",{"_index":1286,"title":{},"body":{"components/MapComponent.html":{}}}],["selectedgeojsonlayer",{"_index":1278,"title":{},"body":{"components/MapComponent.html":{}}}],["selectedlayer",{"_index":1279,"title":{},"body":{"components/MapComponent.html":{}}}],["selectedshapes",{"_index":1280,"title":{},"body":{"components/MapComponent.html":{}}}],["selectedshapes.add(key",{"_index":1490,"title":{},"body":{"components/MapComponent.html":{}}}],["selectedshapes.delete(key",{"_index":1487,"title":{},"body":{"components/MapComponent.html":{}}}],["selectedshapes.has(key",{"_index":1484,"title":{},"body":{"components/MapComponent.html":{}}}],["selection",{"_index":1298,"title":{},"body":{"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{}}}],["selection.keys",{"_index":1637,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["selection.keys.length",{"_index":1639,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["selection.ts",{"_index":2072,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectionready",{"_index":1621,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["selectlang",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["selector",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["selector.directive",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["selector.directive.ts",{"_index":1041,"title":{},"body":{"directives/LangSelectorDirective.html":{},"coverage.html":{}}}],["selector.directive.ts:17",{"_index":1046,"title":{},"body":{"directives/LangSelectorDirective.html":{}}}],["selector.directive.ts:24",{"_index":1048,"title":{},"body":{"directives/LangSelectorDirective.html":{}}}],["selector.directive.ts:8",{"_index":1045,"title":{},"body":{"directives/LangSelectorDirective.html":{}}}],["send",{"_index":315,"title":{},"body":{"guards/AuthGuard.html":{}}}],["sends",{"_index":298,"title":{},"body":{"guards/AuthGuard.html":{}}}],["sent",{"_index":664,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"miscellaneous/variables.html":{}}}],["separated",{"_index":559,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"miscellaneous/functions.html":{}}}],["server",{"_index":230,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/CacheInterceptor.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"interfaces/LayerData.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"interfaces/ShapeData.html":{},"injectables/UserService.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["service",{"_index":226,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"injectables/ExampleService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/SettingsStorageService.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["services",{"_index":1078,"title":{},"body":{"components/LoaderComponent.html":{}}}],["services/consumers.service",{"_index":725,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["services/water",{"_index":726,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["session",{"_index":444,"title":{},"body":{"injectables/AuthStorageService.html":{},"injectables/SettingsStorageService.html":{}}}],["set",{"_index":248,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthStorageService.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"interceptors/LoaderInterceptor.html":{},"components/MapComponent.html":{},"interfaces/Marker.html":{},"guards/QueryParameterGuard.html":{},"injectables/SettingsStorageService.html":{}}}],["set(index",{"_index":549,"title":{},"body":{"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{}}}],["set(use_api_url",{"_index":417,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ConsumersService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"miscellaneous/variables.html":{}}}],["set(use_cache",{"_index":418,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["set(use_error_curtain",{"_index":420,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["set(use_loader",{"_index":781,"title":{},"body":{"injectables/ConsumersService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["setaccesstoken(token",{"_index":456,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["setboolstorage",{"_index":1723,"title":{},"body":{"injectables/SettingsStorageService.html":{}}}],["setboolstorage(key",{"_index":1727,"title":{},"body":{"injectables/SettingsStorageService.html":{}}}],["setelementclasses(classes",{"_index":626,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["setexpiresin(unixtime",{"_index":464,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["sethidesidebar(setting",{"_index":980,"title":{},"body":{"components/FrameComponent.html":{},"injectables/SettingsStorageService.html":{}}}],["sethideuserbar(setting",{"_index":985,"title":{},"body":{"components/FrameComponent.html":{},"injectables/SettingsStorageService.html":{}}}],["setinputlayers(layerconfig",{"_index":1369,"title":{},"body":{"components/MapComponent.html":{}}}],["setinputmarkers(markers",{"_index":1389,"title":{},"body":{"components/MapComponent.html":{}}}],["setname(name",{"_index":1037,"title":{},"body":{"components/IonIconComponent.html":{}}}],["setrefreshtoken(token",{"_index":471,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["sets",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthStorageService.html":{},"components/MapComponent.html":{}}}],["setscopes(scopes",{"_index":475,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["setstorage",{"_index":437,"title":{},"body":{"injectables/AuthStorageService.html":{},"injectables/SettingsStorageService.html":{}}}],["setstorage(data",{"_index":450,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["setstorage(key",{"_index":1729,"title":{},"body":{"injectables/SettingsStorageService.html":{}}}],["setter",{"_index":485,"title":{},"body":{"injectables/AuthStorageService.html":{},"components/IonIconComponent.html":{}}}],["setting",{"_index":979,"title":{},"body":{"components/FrameComponent.html":{},"injectables/SettingsStorageService.html":{},"miscellaneous/variables.html":{}}}],["settings",{"_index":971,"title":{},"body":{"components/FrameComponent.html":{},"injectables/SettingsStorageService.html":{}}}],["settingsstorage",{"_index":966,"title":{},"body":{"components/FrameComponent.html":{}}}],["settingsstorageservice",{"_index":967,"title":{"injectables/SettingsStorageService.html":{}},"body":{"components/FrameComponent.html":{},"injectables/SettingsStorageService.html":{},"coverage.html":{}}}],["settingsstorageservice.getboolstorage(hide_sidebar_key",{"_index":1738,"title":{},"body":{"injectables/SettingsStorageService.html":{}}}],["settingsstorageservice.getboolstorage(hide_user_bar_key",{"_index":1740,"title":{},"body":{"injectables/SettingsStorageService.html":{}}}],["settingsstorageservice.getstorage(key",{"_index":1736,"title":{},"body":{"injectables/SettingsStorageService.html":{}}}],["settingsstorageservice.setboolstorage(hide_sidebar_key",{"_index":1737,"title":{},"body":{"injectables/SettingsStorageService.html":{}}}],["settingsstorageservice.setboolstorage(hide_user_bar_key",{"_index":1739,"title":{},"body":{"injectables/SettingsStorageService.html":{}}}],["settingsstorageservice.setstorage(key",{"_index":1735,"title":{},"body":{"injectables/SettingsStorageService.html":{}}}],["shall",{"_index":1800,"title":{},"body":{"injectables/UserService.html":{}}}],["shape",{"_index":1068,"title":{},"body":{"interfaces/LayerData.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"interfaces/ShapeData.html":{}}}],["shape.key",{"_index":1496,"title":{},"body":{"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["shape.name",{"_index":1495,"title":{},"body":{"components/MapComponent.html":{}}}],["shapedata",{"_index":1063,"title":{"interfaces/ShapeData.html":{}},"body":{"interfaces/LayerData.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"interfaces/ShapeData.html":{},"coverage.html":{}}}],["shapekeys",{"_index":1608,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["shapekeys.push(shape.key",{"_index":1611,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["shapes",{"_index":1060,"title":{},"body":{"interfaces/LayerData.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"interfaces/ShapeData.html":{},"miscellaneous/variables.html":{}}}],["shapes.push(shape",{"_index":1586,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["shapestore",{"_index":1607,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["show",{"_index":815,"title":{},"body":{"components/ErrorComponent.html":{},"components/MapComponent.html":{},"miscellaneous/variables.html":{}}}],["showerror",{"_index":796,"title":{},"body":{"components/ErrorComponent.html":{}}}],["shown",{"_index":1230,"title":{},"body":{"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["showtype",{"_index":798,"title":{},"body":{"components/ErrorComponent.html":{}}}],["side",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["sidebar",{"_index":978,"title":{},"body":{"components/FrameComponent.html":{},"injectables/SettingsStorageService.html":{},"components/SideBarComponent.html":{},"classes/StaticLoader.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["sidebar.ts",{"_index":2059,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["sidebar.water",{"_index":2353,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sidebarcomponent",{"_index":97,"title":{"components/SideBarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"coverage.html":{},"index.html":{}}}],["sidebarentries",{"_index":2231,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["sidebarentry",{"_index":2232,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["sidebarentrylvl1",{"_index":2233,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["sidebarentrylvl2",{"_index":2234,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["sidebarentrylvl3",{"_index":2235,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["sidebarlabel",{"_index":2236,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["sidebarlangs",{"_index":1761,"title":{},"body":{"classes/StaticLoader.html":{}}}],["signed",{"_index":204,"title":{},"body":{"guards/AuthGuard.html":{}}}],["simple",{"_index":1750,"title":{},"body":{"classes/StaticLoader.html":{}}}],["simply",{"_index":1543,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["single",{"_index":1067,"title":{},"body":{"interfaces/LayerData.html":{},"interfaces/ShapeData.html":{}}}],["site",{"_index":959,"title":{},"body":{"components/FrameComponent.html":{}}}],["slash",{"_index":558,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["slashes",{"_index":1705,"title":{},"body":{"interceptors/SanitizeUrlInterceptor.html":{}}}],["small",{"_index":292,"title":{},"body":{"guards/AuthGuard.html":{}}}],["smooth",{"_index":1867,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["snapshot",{"_index":1694,"title":{},"body":{"guards/QueryParameterGuard.html":{},"miscellaneous/functions.html":{}}}],["solution",{"_index":2144,"title":{},"body":{"miscellaneous/functions.html":{}}}],["somewhere",{"_index":845,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/SanitizeUrlInterceptor.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/ExampleComponent.html":{},"modules/ExampleModule.html":{},"injectables/ExampleService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"interfaces/LayerData.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"interfaces/Marker.html":{},"classes/ModuleProvider.html":{},"guards/QueryParameterGuard.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"interfaces/ShapeData.html":{},"components/SideBarComponent.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"interfaces/WisdomInterface.html":{},"modules/WisdomModule.html":{}}}],["sparkles",{"_index":2352,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specific",{"_index":1754,"title":{},"body":{"classes/StaticLoader.html":{}}}],["split",{"_index":1444,"title":{},"body":{"components/MapComponent.html":{}}}],["split(\"is",{"_index":641,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["stackoverflow",{"_index":2145,"title":{},"body":{"miscellaneous/functions.html":{}}}],["standard",{"_index":2276,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["start",{"_index":937,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"classes/StaticLoader.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["starts",{"_index":1143,"title":{},"body":{"guards/LoaderGuard.html":{}}}],["startyear",{"_index":942,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["state",{"_index":235,"title":{},"body":{"guards/AuthGuard.html":{},"guards/QueryParameterGuard.html":{},"miscellaneous/enumerations.html":{}}}],["state.url",{"_index":271,"title":{},"body":{"guards/AuthGuard.html":{}}}],["state.url.includes(\"login",{"_index":268,"title":{},"body":{"guards/AuthGuard.html":{}}}],["statements",{"_index":2058,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":435,"title":{},"body":{"injectables/AuthStorageService.html":{},"classes/ModuleProvider.html":{},"injectables/SettingsStorageService.html":{},"injectables/UserService.html":{}}}],["staticloader",{"_index":164,"title":{"classes/StaticLoader.html":{}},"body":{"modules/AppModule.html":{},"classes/StaticLoader.html":{},"coverage.html":{}}}],["stating",{"_index":1193,"title":{},"body":{"injectables/LoaderService.html":{}}}],["status",{"_index":321,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/UserService.html":{}}}],["step",{"_index":808,"title":{},"body":{"components/ErrorComponent.html":{}}}],["still",{"_index":245,"title":{},"body":{"guards/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["stops",{"_index":1025,"title":{},"body":{"components/IonIconComponent.html":{}}}],["storage",{"_index":223,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthStorageService.html":{},"components/FrameComponent.html":{},"injectables/SettingsStorageService.html":{}}}],["storage.service",{"_index":256,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/FrameComponent.html":{},"components/LoginComponent.html":{}}}],["storage.service.ts",{"_index":431,"title":{},"body":{"injectables/AuthStorageService.html":{},"injectables/SettingsStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["storage.service.ts:104",{"_index":474,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["storage.service.ts:21",{"_index":443,"title":{},"body":{"injectables/AuthStorageService.html":{},"injectables/SettingsStorageService.html":{}}}],["storage.service.ts:31",{"_index":1726,"title":{},"body":{"injectables/SettingsStorageService.html":{}}}],["storage.service.ts:33",{"_index":453,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["storage.service.ts:38",{"_index":448,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["storage.service.ts:42",{"_index":1728,"title":{},"body":{"injectables/SettingsStorageService.html":{}}}],["storage.service.ts:46",{"_index":457,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["storage.service.ts:54",{"_index":455,"title":{},"body":{"injectables/AuthStorageService.html":{},"injectables/SettingsStorageService.html":{}}}],["storage.service.ts:62",{"_index":465,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["storage.service.ts:64",{"_index":1731,"title":{},"body":{"injectables/SettingsStorageService.html":{}}}],["storage.service.ts:68",{"_index":1730,"title":{},"body":{"injectables/SettingsStorageService.html":{}}}],["storage.service.ts:70",{"_index":460,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["storage.service.ts:76",{"_index":1732,"title":{},"body":{"injectables/SettingsStorageService.html":{}}}],["storage.service.ts:80",{"_index":472,"title":{},"body":{"injectables/AuthStorageService.html":{},"injectables/SettingsStorageService.html":{}}}],["storage.service.ts:88",{"_index":470,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["storage.service.ts:96",{"_index":476,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["store",{"_index":1581,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/SettingsStorageService.html":{}}}],["stored",{"_index":446,"title":{},"body":{"injectables/AuthStorageService.html":{},"injectables/LoaderService.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/SettingsStorageService.html":{}}}],["storing",{"_index":432,"title":{},"body":{"injectables/AuthStorageService.html":{},"injectables/SettingsStorageService.html":{}}}],["str",{"_index":2160,"title":{},"body":{"miscellaneous/functions.html":{}}}],["string",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"interfaces/LayerData.html":{},"components/LoaderComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"classes/ModuleProvider.html":{},"guards/QueryParameterGuard.html":{},"injectables/SettingsStorageService.html":{},"interfaces/ShapeData.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"interfaces/WisdomInterface.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["strings",{"_index":535,"title":{},"body":{"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"guards/QueryParameterGuard.html":{},"miscellaneous/functions.html":{}}}],["stringtocolor",{"_index":2080,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["stringtocolor(str",{"_index":2156,"title":{},"body":{"miscellaneous/functions.html":{}}}],["structure",{"_index":2256,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["style",{"_index":1472,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/functions.html":{}}}],["styles",{"_index":1074,"title":{},"body":{"components/LoaderComponent.html":{},"components/MapComponent.html":{}}}],["styleurls",{"_index":1083,"title":{},"body":{"components/LoaderComponent.html":{},"components/MapComponent.html":{}}}],["sub",{"_index":1941,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["subject",{"_index":539,"title":{},"body":{"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"injectables/LoaderService.html":{},"components/MapComponent.html":{}}}],["submits",{"_index":1226,"title":{},"body":{"components/LoginComponent.html":{}}}],["subscribe",{"_index":878,"title":{},"body":{"injectables/ErrorService.html":{},"components/LoaderComponent.html":{}}}],["subscribe(data",{"_index":734,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["subscribe(next",{"_index":592,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["subscriber.complete",{"_index":289,"title":{},"body":{"guards/AuthGuard.html":{}}}],["subscriber.next(loginurltree",{"_index":301,"title":{},"body":{"guards/AuthGuard.html":{}}}],["subscriber.next(true",{"_index":288,"title":{},"body":{"guards/AuthGuard.html":{}}}],["successful",{"_index":1227,"title":{},"body":{"components/LoginComponent.html":{}}}],["successfully",{"_index":2263,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["such",{"_index":2038,"title":{},"body":{"interfaces/WisdomInterface.html":{}}}],["supplement",{"_index":1922,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["support",{"_index":2189,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":579,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["survey",{"_index":1932,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["svg",{"_index":2190,"title":{},"body":{"modules.html":{}}}],["swap",{"_index":2174,"title":{},"body":{"miscellaneous/functions.html":{}}}],["switch",{"_index":824,"title":{},"body":{"components/ErrorComponent.html":{},"components/LoginComponent.html":{}}}],["sync",{"_index":2169,"title":{},"body":{"miscellaneous/functions.html":{}}}],["system",{"_index":2247,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["t",{"_index":2165,"title":{},"body":{"miscellaneous/functions.html":{}}}],["table",{"_index":2108,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2107,"title":{},"body":{"coverage.html":{}}}],["takewhile",{"_index":587,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["tap",{"_index":344,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"interceptors/LoaderInterceptor.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["templateurl",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapSelectViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["territorial",{"_index":1070,"title":{},"body":{"interfaces/LayerData.html":{},"interfaces/ShapeData.html":{}}}],["text",{"_index":530,"title":{},"body":{"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"components/ConsumerDetailComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/MapSelectViewComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["texts",{"_index":1082,"title":{},"body":{"components/LoaderComponent.html":{},"injectables/LoaderService.html":{}}}],["therefore",{"_index":562,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["these&#39",{"_index":1380,"title":{},"body":{"components/MapComponent.html":{}}}],["things",{"_index":602,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["third",{"_index":2148,"title":{},"body":{"miscellaneous/functions.html":{}}}],["this._displaytexts.clear",{"_index":1213,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this._displaytexts.delete(toresolve",{"_index":1211,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this._displaytexts.set(toresolve",{"_index":1206,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this._loading.asobservable",{"_index":1204,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this._loading.next(false",{"_index":1210,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this._loading.next(true",{"_index":1208,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.alive",{"_index":591,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["this.authservice.login(username",{"_index":1242,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.logout(this.authstorage.accesstoken!).subscribe",{"_index":996,"title":{},"body":{"components/FrameComponent.html":{}}}],["this.authservice.refresh(this.authstorage.refreshtoken).subscribe",{"_index":305,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.authservice.validate(token!).subscribe",{"_index":282,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.authstorage.accesstoken",{"_index":276,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/LoginComponent.html":{}}}],["this.authstorage.clear",{"_index":300,"title":{},"body":{"guards/AuthGuard.html":{},"components/FrameComponent.html":{}}}],["this.authstorage.expiresin",{"_index":312,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["this.authstorage.refreshtoken",{"_index":302,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["this.authstorage.scopes",{"_index":310,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["this.bounds.next",{"_index":1869,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["this.bounds.subscribe(bounds",{"_index":1850,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["this.breadcrumbs.set(0",{"_index":1631,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["this.breadcrumbs.set(2",{"_index":751,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["this.center",{"_index":1425,"title":{},"body":{"components/MapComponent.html":{}}}],["this.chartdata",{"_index":737,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["this.classes",{"_index":635,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["this.classes.join",{"_index":633,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["this.classes.push(\"is",{"_index":639,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["this.coordinates.next(coordinates",{"_index":756,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["this.coordinates.subscribe(coordinates",{"_index":757,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["this.cservice.fetchconsumers({id",{"_index":733,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["this.data",{"_index":1855,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["this.displaytexts",{"_index":1099,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.displaytextsubject.asobservable",{"_index":1203,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.displaytextsubject.next",{"_index":1214,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.displaytextsubject.next(array.from(this._displaytexts.values",{"_index":1207,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.elementclasses",{"_index":640,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["this.elref.nativeelement?.setattribute(\"name",{"_index":1039,"title":{},"body":{"components/IonIconComponent.html":{}}}],["this.emitselection",{"_index":1491,"title":{},"body":{"components/MapComponent.html":{}}}],["this.errorcode",{"_index":835,"title":{},"body":{"components/ErrorComponent.html":{}}}],["this.errordescription",{"_index":840,"title":{},"body":{"components/ErrorComponent.html":{}}}],["this.errorname",{"_index":839,"title":{},"body":{"components/ErrorComponent.html":{}}}],["this.errorpresent.emit(error",{"_index":888,"title":{},"body":{"injectables/ErrorService.html":{}}}],["this.errorpresent.emit(false",{"_index":887,"title":{},"body":{"injectables/ErrorService.html":{}}}],["this.etagmap.get(key",{"_index":673,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["this.etagmap.set(key",{"_index":682,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["this.fragments",{"_index":593,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["this.fragments.includes(undefined",{"_index":594,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["this.fragments.length",{"_index":550,"title":{},"body":{"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{}}}],["this.fragments[index",{"_index":552,"title":{},"body":{"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{}}}],["this.handleconsumerdata(data",{"_index":735,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["this.height",{"_index":1421,"title":{},"body":{"components/MapComponent.html":{}}}],["this.hservice.fetchwaterusagehistory(this.id",{"_index":736,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["this.http.get(join(auth_api",{"_index":1825,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(url.tostring",{"_index":779,"title":{},"body":{"injectables/ConsumersService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["this.http.post",{"_index":421,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.put",{"_index":1831,"title":{},"body":{"injectables/UserService.html":{}}}],["this.httpcode",{"_index":837,"title":{},"body":{"components/ErrorComponent.html":{}}}],["this.httpcode)[0",{"_index":823,"title":{},"body":{"components/ErrorComponent.html":{}}}],["this.httperror",{"_index":838,"title":{},"body":{"components/ErrorComponent.html":{}}}],["this.id",{"_index":731,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["this.idb",{"_index":1559,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["this.inputcenter",{"_index":1424,"title":{},"body":{"components/MapComponent.html":{}}}],["this.inputheight",{"_index":1420,"title":{},"body":{"components/MapComponent.html":{}}}],["this.inputlayerselectable",{"_index":1480,"title":{},"body":{"components/MapComponent.html":{}}}],["this.inputscrollwheelzoom",{"_index":1443,"title":{},"body":{"components/MapComponent.html":{}}}],["this.inputtileurl",{"_index":1422,"title":{},"body":{"components/MapComponent.html":{}}}],["this.inputzoom",{"_index":1426,"title":{},"body":{"components/MapComponent.html":{}}}],["this.isactive",{"_index":638,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["this.isloading",{"_index":1097,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.keys",{"_index":1636,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["this.lang",{"_index":1050,"title":{},"body":{"directives/LangSelectorDirective.html":{}}}],["this.lastmodifiedmap.get(key",{"_index":676,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["this.lastmodifiedmap.set(key",{"_index":684,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["this.layerconfig.next(layerconfig",{"_index":1413,"title":{},"body":{"components/MapComponent.html":{}}}],["this.layerconfig.subscribe(async",{"_index":1429,"title":{},"body":{"components/MapComponent.html":{}}}],["this.layerdata.next(fetched",{"_index":1439,"title":{},"body":{"components/MapComponent.html":{}}}],["this.layerdata.subscribe(layerdata",{"_index":1454,"title":{},"body":{"components/MapComponent.html":{}}}],["this.layernames[key",{"_index":1503,"title":{},"body":{"components/MapComponent.html":{}}}],["this.layernames[layerkey",{"_index":1431,"title":{},"body":{"components/MapComponent.html":{}}}],["this.location.back",{"_index":841,"title":{},"body":{"components/ErrorComponent.html":{}}}],["this.loginhasissue",{"_index":1258,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.map",{"_index":1450,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.map?.flytobounds(bounds",{"_index":1851,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["this.mapcomponent.map!.flyto(coordinates",{"_index":760,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["this.mapelement.nativeelement",{"_index":1441,"title":{},"body":{"components/MapComponent.html":{}}}],["this.marker",{"_index":754,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["this.markers",{"_index":1868,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["this.markers.next(markers",{"_index":1418,"title":{},"body":{"components/MapComponent.html":{}}}],["this.markers.subscribe(markers",{"_index":1513,"title":{},"body":{"components/MapComponent.html":{}}}],["this.name",{"_index":750,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["this.passwordinput?.nativeelement.select",{"_index":1262,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.promises",{"_index":1212,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.promises.push(toresolve",{"_index":1205,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.recordedat",{"_index":745,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["this.route.snapshot.params[\"consumer",{"_index":732,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["this.route.snapshot.params[\"waterright",{"_index":1853,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["this.router.createurltree([api_url",{"_index":1989,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["this.router.events.subscribe(event",{"_index":886,"title":{},"body":{"injectables/ErrorService.html":{}}}],["this.router.navigate([\"login",{"_index":997,"title":{},"body":{"components/FrameComponent.html":{}}}],["this.router.navigate([route",{"_index":1253,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.parseurl(\"/login",{"_index":267,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.router.parseurl(`${api_url}/${forecastmodel",{"_index":951,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["this.router.parseurl(api_url",{"_index":772,"title":{},"body":{"injectables/ConsumersService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["this.router.parseurl(redirect",{"_index":1696,"title":{},"body":{"guards/QueryParameterGuard.html":{}}}],["this.router.parseurl(this.route.snapshot.queryparams[\"returnurl",{"_index":1249,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.selected.emit",{"_index":1527,"title":{},"body":{"components/MapComponent.html":{}}}],["this.selectedcolor",{"_index":1488,"title":{},"body":{"components/MapComponent.html":{}}}],["this.selectedgeojsonlayer",{"_index":1458,"title":{},"body":{"components/MapComponent.html":{}}}],["this.selectedlayer",{"_index":1498,"title":{},"body":{"components/MapComponent.html":{}}}],["this.selectedshapes",{"_index":1456,"title":{},"body":{"components/MapComponent.html":{}}}],["this.selectedshapes[key",{"_index":1461,"title":{},"body":{"components/MapComponent.html":{}}}],["this.selectionready",{"_index":1638,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["this.service.addloader(promise",{"_index":1171,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["this.service.clearloading",{"_index":1152,"title":{},"body":{"guards/LoaderGuard.html":{}}}],["this.service.displaytexts.subscribe(values",{"_index":1098,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.service.errorpresent.subscribe",{"_index":830,"title":{},"body":{"components/ErrorComponent.html":{}}}],["this.service.fetchlayerdata",{"_index":1433,"title":{},"body":{"components/MapComponent.html":{}}}],["this.service.fetchwaterrightdetails(waterright",{"_index":1854,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["this.service.loading.subscribe(value",{"_index":1096,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.service.observe",{"_index":589,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["this.service.throwerror",{"_index":858,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["this.settingsstorage.hidesidebar",{"_index":992,"title":{},"body":{"components/FrameComponent.html":{}}}],["this.settingsstorage.hideuserbar",{"_index":994,"title":{},"body":{"components/FrameComponent.html":{}}}],["this.showerror",{"_index":832,"title":{},"body":{"components/ErrorComponent.html":{}}}],["this.subject.asobservable",{"_index":555,"title":{},"body":{"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{}}}],["this.subject.next(this.fragments",{"_index":553,"title":{},"body":{"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{}}}],["this.tileurl",{"_index":1423,"title":{},"body":{"components/MapComponent.html":{}}}],["this.translate.instant(\"water",{"_index":1875,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["this.translateservice.use(this.lang",{"_index":1051,"title":{},"body":{"directives/LangSelectorDirective.html":{}}}],["this.unselectedcolor",{"_index":1474,"title":{},"body":{"components/MapComponent.html":{}}}],["this.zoom",{"_index":1427,"title":{},"body":{"components/MapComponent.html":{}}}],["this[\"data\"][\"valid",{"_index":1874,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["though",{"_index":411,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["through",{"_index":2172,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["throw",{"_index":1264,"title":{},"body":{"components/LoginComponent.html":{}}}],["throwerror",{"_index":254,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{}}}],["throwerror(error",{"_index":880,"title":{},"body":{"injectables/ErrorService.html":{}}}],["tile",{"_index":1326,"title":{},"body":{"components/MapComponent.html":{}}}],["tileurl",{"_index":1281,"title":{},"body":{"components/MapComponent.html":{}}}],["time",{"_index":468,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["times",{"_index":2366,"title":{},"body":{"miscellaneous/variables.html":{}}}],["timestamp",{"_index":496,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["timestamps",{"_index":663,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["title",{"_index":25,"title":{},"body":{"components/AppComponent.html":{}}}],["todo",{"_index":318,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthStorageService.html":{},"components/FrameComponent.html":{},"components/MapComponent.html":{},"classes/ModuleProvider.html":{}}}],["toenum",{"_index":2075,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["toenum(length",{"_index":2179,"title":{},"body":{"miscellaneous/functions.html":{}}}],["toggle",{"_index":607,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{},"miscellaneous/variables.html":{}}}],["toggleable",{"_index":603,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["toggleable'},{'name",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["toggleable.directive",{"_index":2052,"title":{},"body":{"modules/WisdomModule.html":{}}}],["toggleable.directive.ts",{"_index":601,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{},"coverage.html":{}}}],["toggleable.directive.ts:15",{"_index":623,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["toggleable.directive.ts:17",{"_index":622,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["toggleable.directive.ts:22",{"_index":615,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["toggleable.directive.ts:26",{"_index":627,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["toggleable.directive.ts:36",{"_index":617,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["token",{"_index":208,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"miscellaneous/variables.html":{}}}],["token_header_key",{"_index":346,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tokens",{"_index":225,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/LoginComponent.html":{}}}],["tokeylength",{"_index":2076,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["tokeylength(res",{"_index":2183,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tooltip",{"_index":755,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"interfaces/Marker.html":{},"components/WaterRightDetailComponent.html":{}}}],["top",{"_index":1103,"title":{},"body":{"components/LoaderComponent.html":{},"interfaces/WisdomInterface.html":{}}}],["topright",{"_index":2321,"title":{},"body":{"miscellaneous/variables.html":{}}}],["toresolve",{"_index":1186,"title":{},"body":{"injectables/LoaderService.html":{}}}],["transforms",{"_index":2184,"title":{},"body":{"miscellaneous/functions.html":{}}}],["transition",{"_index":1127,"title":{},"body":{"components/LoaderComponent.html":{}}}],["translate",{"_index":595,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"miscellaneous/functions.html":{}}}],["translate/core",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"modules/ExampleModule.html":{},"directives/LangSelectorDirective.html":{},"classes/StaticLoader.html":{},"components/WaterRightDetailComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"modules/WisdomModule.html":{},"dependencies.html":{}}}],["translated",{"_index":2259,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["translateloader",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"classes/StaticLoader.html":{}}}],["translatemodule",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"modules/ExampleModule.html":{},"modules/WaterUsageForecastsModule.html":{},"modules/WisdomModule.html":{}}}],["translatemodule.forroot",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["translateobject",{"_index":2081,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["translateobject(service",{"_index":2163,"title":{},"body":{"miscellaneous/functions.html":{}}}],["translateservice",{"_index":537,"title":{},"body":{"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"directives/LangSelectorDirective.html":{},"components/WaterRightDetailComponent.html":{},"miscellaneous/functions.html":{}}}],["translation",{"_index":1047,"title":{},"body":{"directives/LangSelectorDirective.html":{},"components/MapComponent.html":{},"interfaces/WisdomInterface.html":{},"miscellaneous/typealiases.html":{}}}],["translations",{"_index":1666,"title":{},"body":{"classes/ModuleProvider.html":{},"classes/StaticLoader.html":{},"interfaces/WisdomInterface.html":{},"miscellaneous/variables.html":{}}}],["translator",{"_index":2348,"title":{},"body":{"miscellaneous/variables.html":{}}}],["traversing",{"_index":804,"title":{},"body":{"components/ErrorComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["tries",{"_index":210,"title":{},"body":{"guards/AuthGuard.html":{}}}],["trimmedkeys",{"_index":1573,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["true",{"_index":179,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/BreadcrumbsComponent.html":{},"injectables/ConsumersService.html":{},"components/ErrorComponent.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"guards/LoaderGuard.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"guards/QueryParameterGuard.html":{},"injectables/SettingsStorageService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"miscellaneous/variables.html":{}}}],["true}).catch(e",{"_index":1254,"title":{},"body":{"components/LoginComponent.html":{}}}],["try",{"_index":304,"title":{},"body":{"guards/AuthGuard.html":{}}}],["ts",{"_index":1773,"title":{},"body":{"classes/StaticLoader.html":{}}}],["tslib",{"_index":2129,"title":{},"body":{"dependencies.html":{}}}],["tuple",{"_index":2175,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tupleswap",{"_index":1847,"title":{},"body":{"components/WaterRightDetailComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["tupleswap(location.location.coordinates",{"_index":1860,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["tupleswap(tuple",{"_index":2173,"title":{},"body":{"miscellaneous/functions.html":{}}}],["two",{"_index":2178,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tx",{"_index":1579,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["tx.objectstore(\"queries",{"_index":1613,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["tx.objectstore(\"shapes",{"_index":1582,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["type",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"interfaces/LayerData.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"interfaces/Marker.html":{},"classes/ModuleProvider.html":{},"guards/QueryParameterGuard.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"interfaces/ShapeData.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"interfaces/WisdomInterface.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":2194,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1170,"title":{},"body":{"interceptors/LoaderInterceptor.html":{},"guards/QueryParameterGuard.html":{},"injectables/SettingsStorageService.html":{}}}],["unauthorized",{"_index":2274,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["undefined",{"_index":452,"title":{},"body":{"injectables/AuthStorageService.html":{},"components/BreadcrumbsComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"guards/QueryParameterGuard.html":{},"injectables/SettingsStorageService.html":{},"components/WaterRightDetailComponent.html":{},"miscellaneous/functions.html":{}}}],["under",{"_index":1188,"title":{},"body":{"injectables/LoaderService.html":{},"interfaces/WisdomInterface.html":{}}}],["unhandled",{"_index":846,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["unique",{"_index":1790,"title":{},"body":{"injectables/UserService.html":{}}}],["units",{"_index":1071,"title":{},"body":{"interfaces/LayerData.html":{},"interfaces/ShapeData.html":{}}}],["unix",{"_index":467,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["unixtime",{"_index":466,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["unknown",{"_index":1604,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["unselected",{"_index":1329,"title":{},"body":{"components/MapComponent.html":{}}}],["unselectedcolor",{"_index":1287,"title":{},"body":{"components/MapComponent.html":{}}}],["until",{"_index":1879,"title":{},"body":{"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{}}}],["unused",{"_index":904,"title":{},"body":{"injectables/ExampleService.html":{}}}],["up",{"_index":572,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"interceptors/SanitizeUrlInterceptor.html":{}}}],["update",{"_index":307,"title":{},"body":{"guards/AuthGuard.html":{},"components/BreadcrumbsComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoaderComponent.html":{},"components/MapComponent.html":{},"miscellaneous/typealiases.html":{}}}],["updated",{"_index":2264,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["updates",{"_index":350,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"directives/LangSelectorDirective.html":{},"injectables/LoaderService.html":{}}}],["upgrade(db",{"_index":1561,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["upon",{"_index":583,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoginComponent.html":{}}}],["url",{"_index":398,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/BaseUrlInterceptor.html":{},"injectables/ConsumersService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/UserService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["url.interceptor",{"_index":156,"title":{},"body":{"modules/AppModule.html":{}}}],["url.interceptor.ts",{"_index":507,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"coverage.html":{}}}],["url.interceptor.ts:23",{"_index":509,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{}}}],["url.interceptor.ts:28",{"_index":1708,"title":{},"body":{"interceptors/SanitizeUrlInterceptor.html":{}}}],["url.queryparams[\"consumer",{"_index":2032,"title":{},"body":{"injectables/WaterUsageHistoryService.html":{}}}],["url.queryparams[\"consumergroup",{"_index":952,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["url.queryparams[\"id",{"_index":776,"title":{},"body":{"injectables/ConsumersService.html":{}}}],["url.queryparams[\"in",{"_index":774,"title":{},"body":{"injectables/ConsumersService.html":{},"injectables/WaterRightsService.html":{}}}],["url.queryparams[\"is_active",{"_index":1981,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["url.queryparams[\"is_real",{"_index":1983,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["url.queryparams[\"key",{"_index":953,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["url.queryparams[\"usage_above",{"_index":778,"title":{},"body":{"injectables/ConsumersService.html":{}}}],["url.split",{"_index":1714,"title":{},"body":{"interceptors/SanitizeUrlInterceptor.html":{}}}],["url.ts",{"_index":2068,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["urlencoded",{"_index":408,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["urls",{"_index":1703,"title":{},"body":{"interceptors/SanitizeUrlInterceptor.html":{}}}],["urltree",{"_index":251,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"guards/LoaderGuard.html":{},"guards/QueryParameterGuard.html":{}}}],["us/docs/web/http/headers/etag",{"_index":667,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["us/docs/web/http/headers/last",{"_index":669,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["usage",{"_index":686,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/MapSelectViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["usages",{"_index":934,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["use",{"_index":273,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/MapComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["use_api_url",{"_index":390,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/BaseUrlInterceptor.html":{},"injectables/ConsumersService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["use_base_url",{"_index":513,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["use_cache",{"_index":389,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/CacheInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["use_error_curtain",{"_index":391,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["use_loader",{"_index":768,"title":{},"body":{"injectables/ConsumersService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"interceptors/LoaderInterceptor.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["useclass",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":227,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/BaseUrlInterceptor.html":{},"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"injectables/ErrorService.html":{},"components/IonIconComponent.html":{},"interfaces/LayerData.html":{},"injectables/LoaderService.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"interfaces/Marker.html":{},"guards/QueryParameterGuard.html":{},"interfaces/ShapeData.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["useful",{"_index":2176,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":203,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/FrameComponent.html":{},"components/LoginComponent.html":{},"injectables/SettingsStorageService.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["username",{"_index":376,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["users",{"_index":1826,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["userservice",{"_index":1775,"title":{"injectables/UserService.html":{}},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["userservice.httpoptions",{"_index":1827,"title":{},"body":{"injectables/UserService.html":{}}}],["uses",{"_index":1014,"title":{},"body":{"components/IonIconComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"interfaces/WisdomInterface.html":{}}}],["using",{"_index":2166,"title":{},"body":{"miscellaneous/functions.html":{}}}],["usually",{"_index":851,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/SanitizeUrlInterceptor.html":{}}}],["utility",{"_index":818,"title":{},"body":{"components/ErrorComponent.html":{},"classes/ModuleProvider.html":{},"miscellaneous/functions.html":{}}}],["val",{"_index":831,"title":{},"body":{"components/ErrorComponent.html":{}}}],["val.error",{"_index":834,"title":{},"body":{"components/ErrorComponent.html":{}}}],["valid",{"_index":206,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["valid.from.toisostring().slice(0",{"_index":1878,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["valid.until.toisostring().slice(0",{"_index":1880,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["validate",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{}}}],["validate(token",{"_index":383,"title":{},"body":{"injectables/AuthService.html":{}}}],["validtostring",{"_index":1837,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["validtostring(data?.valid",{"_index":1897,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["validtostring(valid",{"_index":1841,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["value",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthStorageService.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"injectables/ErrorService.html":{},"components/LoaderComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"injectables/SettingsStorageService.html":{},"components/SideBarComponent.html":{},"classes/StaticLoader.html":{},"components/WaterRightDetailComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":445,"title":{},"body":{"injectables/AuthStorageService.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"injectables/SettingsStorageService.html":{},"classes/StaticLoader.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["variable",{"_index":2060,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2284,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1551,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{},"miscellaneous/functions.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["via",{"_index":646,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"components/IonIconComponent.html":{},"components/MapComponent.html":{},"injectables/UserService.html":{}}}],["view",{"_index":1619,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["view'},{'name",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["view.component",{"_index":2021,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{}}}],["view.component.html",{"_index":1620,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["view.component.ts",{"_index":1618,"title":{},"body":{"components/MapSelectViewComponent.html":{},"coverage.html":{}}}],["view.component.ts:12",{"_index":1629,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["view.component.ts:14",{"_index":1628,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["view.component.ts:16",{"_index":1624,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["view.component.ts:23",{"_index":1627,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["view.component.ts:31",{"_index":1626,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["view/consumer",{"_index":688,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"coverage.html":{}}}],["view/map",{"_index":1617,"title":{},"body":{"components/MapSelectViewComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"coverage.html":{}}}],["view/result",{"_index":2023,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{},"coverage.html":{}}}],["view/water",{"_index":1834,"title":{},"body":{"components/WaterRightDetailComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"coverage.html":{}}}],["viewchild",{"_index":723,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["viewchild(\"map",{"_index":730,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/MapComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["viewchild(\"passwordinput",{"_index":1239,"title":{},"body":{"components/LoginComponent.html":{}}}],["viewchild('map",{"_index":719,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/MapComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["viewchild('passwordinput",{"_index":1233,"title":{},"body":{"components/LoginComponent.html":{}}}],["views/detail",{"_index":2018,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{}}}],["views/map",{"_index":2020,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{}}}],["views/result",{"_index":2022,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{}}}],["void",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthStorageService.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"injectables/ErrorService.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"interfaces/Marker.html":{},"injectables/SettingsStorageService.html":{},"components/WaterRightDetailComponent.html":{},"miscellaneous/variables.html":{}}}],["volume",{"_index":1938,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["wait",{"_index":277,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{}}}],["want",{"_index":1668,"title":{},"body":{"classes/ModuleProvider.html":{},"miscellaneous/variables.html":{}}}],["warning",{"_index":829,"title":{},"body":{"components/ErrorComponent.html":{}}}],["wasserverbrauch",{"_index":2346,"title":{},"body":{"miscellaneous/variables.html":{}}}],["water",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"miscellaneous/variables.html":{}}}],["waterright",{"_index":1852,"title":{},"body":{"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{}}}],["waterrightdetailcomponent",{"_index":100,"title":{"components/WaterRightDetailComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["waterrightdetailrawresponse",{"_index":1978,"title":{},"body":{"injectables/WaterRightsService.html":{},"miscellaneous/typealiases.html":{}}}],["waterrightdetailresponse",{"_index":1844,"title":{},"body":{"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"miscellaneous/typealiases.html":{}}}],["waterrighticon",{"_index":1849,"title":{},"body":{"components/WaterRightDetailComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["waterrightlocationresponse",{"_index":1976,"title":{},"body":{"injectables/WaterRightsService.html":{},"miscellaneous/typealiases.html":{}}}],["waterrightsservice",{"_index":1838,"title":{"injectables/WaterRightsService.html":{}},"body":{"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"coverage.html":{}}}],["waterusageforecastsmodule",{"_index":2008,"title":{"modules/WaterUsageForecastsModule.html":{}},"body":{"modules/WaterUsageForecastsModule.html":{},"index.html":{},"modules.html":{}}}],["waterusageforecastsservice",{"_index":944,"title":{"injectables/WaterUsageForecastsService.html":{}},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{},"coverage.html":{}}}],["waterusagehistoryservice",{"_index":706,"title":{"injectables/WaterUsageHistoryService.html":{}},"body":{"components/ConsumerDetailComponent.html":{},"injectables/WaterUsageHistoryService.html":{},"coverage.html":{}}}],["webcomponents",{"_index":1015,"title":{},"body":{"components/IonIconComponent.html":{}}}],["webkit",{"_index":1105,"title":{},"body":{"components/LoaderComponent.html":{}}}],["website",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/IonIconComponent.html":{}}}],["weird",{"_index":1702,"title":{},"body":{"interceptors/SanitizeUrlInterceptor.html":{}}}],["whether",{"_index":586,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/ErrorComponent.html":{},"injectables/ErrorService.html":{},"components/LoaderComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"guards/QueryParameterGuard.html":{}}}],["whole",{"_index":2362,"title":{},"body":{"miscellaneous/variables.html":{}}}],["window",{"_index":2307,"title":{},"body":{"miscellaneous/variables.html":{}}}],["window.location.origin",{"_index":2300,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wisdom",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/FrameComponent.html":{},"components/LoginComponent.html":{},"classes/ModuleProvider.html":{},"interfaces/WisdomInterface.html":{},"miscellaneous/variables.html":{}}}],["wisdom_modules/.../auth",{"_index":2285,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wisdom_modules/.../auth.interceptor.ts",{"_index":2297,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wisdom_modules/.../auth.service.ts",{"_index":2288,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wisdom_modules/.../consumers.service.ts",{"_index":2196,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["wisdom_modules/.../deleteusersid200.ts",{"_index":2198,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../deleteusersid403.ts",{"_index":2200,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../deleteusersid404.ts",{"_index":2202,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../environment.common.ts",{"_index":2293,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wisdom_modules/.../environment.prod.ts",{"_index":2289,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wisdom_modules/.../environment.ts",{"_index":2290,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wisdom_modules/.../getusers200.ts",{"_index":2205,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../getusersid200.ts",{"_index":2207,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../getusersid404.ts",{"_index":2209,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../getusersme200.ts",{"_index":2211,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../invert",{"_index":2292,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wisdom_modules/.../layer",{"_index":2203,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../map",{"_index":2291,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wisdom_modules/.../map.component.ts",{"_index":2204,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../map.service.ts",{"_index":2286,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wisdom_modules/.../patchusers204.ts",{"_index":2216,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../patchusers403.ts",{"_index":2218,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../patchusers404.ts",{"_index":2220,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../patchusersme200.ts",{"_index":2222,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../postoauthtoken200.ts",{"_index":2223,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../postoauthtoken400.ts",{"_index":2224,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../postoauthtoken401.ts",{"_index":2225,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../postrevoke200.ts",{"_index":2226,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../postrevoke403.ts",{"_index":2228,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../public",{"_index":2299,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wisdom_modules/.../putusers201.ts",{"_index":2229,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../putusers409.ts",{"_index":2230,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../resolution.ts",{"_index":2136,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["wisdom_modules/.../routing.ts",{"_index":2296,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wisdom_modules/.../settings",{"_index":2294,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wisdom_modules/.../side",{"_index":2213,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../static",{"_index":2295,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wisdom_modules/.../use",{"_index":2298,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wisdom_modules/.../user.service.ts",{"_index":2287,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wisdom_modules/.../user.ts",{"_index":2237,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../util.ts",{"_index":2140,"title":{},"body":{"miscellaneous/functions.html":{}}}],["wisdom_modules/.../water",{"_index":2135,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.component.ts",{"_index":556,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"coverage.html":{}}}],["wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.component.ts:19",{"_index":585,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.component.ts:21",{"_index":570,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.component.ts:33",{"_index":582,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.component.ts:48",{"_index":571,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.component.ts:57",{"_index":576,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.service.ts",{"_index":527,"title":{},"body":{"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"coverage.html":{}}}],["wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.service.ts:29",{"_index":598,"title":{},"body":{"injectables/BreadcrumbsService.html":{}}}],["wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.service.ts:34",{"_index":599,"title":{},"body":{"injectables/BreadcrumbsService.html":{}}}],["wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.service.ts:44",{"_index":597,"title":{},"body":{"injectables/BreadcrumbsService.html":{}}}],["wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.service.ts:51",{"_index":596,"title":{},"body":{"injectables/BreadcrumbsService.html":{}}}],["wisdom_modules/common/src/lib/bulma/bulma",{"_index":600,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{},"coverage.html":{}}}],["wisdom_modules/common/src/lib/guards/query",{"_index":1681,"title":{},"body":{"guards/QueryParameterGuard.html":{},"coverage.html":{}}}],["wisdom_modules/common/src/lib/http",{"_index":2067,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["wisdom_modules/common/src/lib/ion",{"_index":1010,"title":{},"body":{"components/IonIconComponent.html":{},"coverage.html":{}}}],["wisdom_modules/common/src/lib/map/invert",{"_index":2071,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["wisdom_modules/common/src/lib/map/layer",{"_index":1054,"title":{},"body":{"interfaces/LayerData.html":{},"interfaces/ShapeData.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts",{"_index":1269,"title":{},"body":{"components/MapComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:131",{"_index":1296,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:139",{"_index":1347,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:145",{"_index":1348,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:150",{"_index":1351,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:153",{"_index":1315,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:156",{"_index":1317,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:160",{"_index":1357,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:163",{"_index":1354,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:170",{"_index":1361,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:176",{"_index":1360,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:178",{"_index":1359,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:181",{"_index":1332,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:185",{"_index":1293,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:196",{"_index":1336,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:226",{"_index":1334,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:352",{"_index":1333,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:53",{"_index":1355,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:56",{"_index":1295,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:58",{"_index":1346,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:61",{"_index":1325,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:63",{"_index":1365,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:66",{"_index":1294,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:68",{"_index":1340,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:71",{"_index":1330,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:73",{"_index":1368,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:79",{"_index":1318,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:82",{"_index":1328,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:84",{"_index":1323,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.service.ts",{"_index":1529,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["wisdom_modules/common/src/lib/map/map.service.ts:70",{"_index":1642,"title":{},"body":{"injectables/MapService.html":{}}}],["wisdom_modules/common/src/lib/map/map.service.ts:97",{"_index":1644,"title":{},"body":{"injectables/MapService.html":{}}}],["wisdom_modules/common/src/lib/map/marker.ts",{"_index":1645,"title":{},"body":{"interfaces/Marker.html":{},"coverage.html":{}}}],["wisdom_modules/common/src/lib/map/resolution.ts",{"_index":2074,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["wisdom_modules/common/src/lib/util.ts",{"_index":2077,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["wisdom_modules/common/src/lib/wisdom.module.ts",{"_index":2049,"title":{},"body":{"modules/WisdomModule.html":{}}}],["wisdom_modules/common/src/wisdominterface.ts",{"_index":2037,"title":{},"body":{"interfaces/WisdomInterface.html":{},"coverage.html":{}}}],["wisdom_modules/core/src/app/app",{"_index":180,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["wisdom_modules/core/src/app/app.component.ts",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["wisdom_modules/core/src/app/app.component.ts:13",{"_index":47,"title":{},"body":{"components/AppComponent.html":{}}}],["wisdom_modules/core/src/app/app.component.ts:20",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["wisdom_modules/core/src/app/app.module.ts",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["wisdom_modules/core/src/app/auth/auth",{"_index":430,"title":{},"body":{"injectables/AuthStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["wisdom_modules/core/src/app/auth/auth.guard.ts",{"_index":201,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["wisdom_modules/core/src/app/auth/auth.guard.ts:23",{"_index":219,"title":{},"body":{"guards/AuthGuard.html":{}}}],["wisdom_modules/core/src/app/auth/auth.guard.ts:47",{"_index":237,"title":{},"body":{"guards/AuthGuard.html":{}}}],["wisdom_modules/core/src/app/auth/auth.interceptor.ts",{"_index":326,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["wisdom_modules/core/src/app/auth/auth.interceptor.ts:17",{"_index":331,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["wisdom_modules/core/src/app/auth/auth.interceptor.ts:30",{"_index":335,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["wisdom_modules/core/src/app/auth/auth.service.ts",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["wisdom_modules/core/src/app/auth/auth.service.ts:101",{"_index":378,"title":{},"body":{"injectables/AuthService.html":{}}}],["wisdom_modules/core/src/app/auth/auth.service.ts:41",{"_index":368,"title":{},"body":{"injectables/AuthService.html":{}}}],["wisdom_modules/core/src/app/auth/auth.service.ts:54",{"_index":374,"title":{},"body":{"injectables/AuthService.html":{}}}],["wisdom_modules/core/src/app/auth/auth.service.ts:72",{"_index":384,"title":{},"body":{"injectables/AuthService.html":{}}}],["wisdom_modules/core/src/app/auth/auth.service.ts:84",{"_index":381,"title":{},"body":{"injectables/AuthService.html":{}}}],["wisdom_modules/core/src/app/auth/login/login.component.ts",{"_index":1215,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["wisdom_modules/core/src/app/auth/login/login.component.ts:18",{"_index":1234,"title":{},"body":{"components/LoginComponent.html":{}}}],["wisdom_modules/core/src/app/auth/login/login.component.ts:21",{"_index":1220,"title":{},"body":{"components/LoginComponent.html":{}}}],["wisdom_modules/core/src/app/auth/login/login.component.ts:45",{"_index":1224,"title":{},"body":{"components/LoginComponent.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/login/postoauthtoken200.ts",{"_index":2268,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/login/postoauthtoken400.ts",{"_index":2270,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/login/postoauthtoken401.ts",{"_index":2273,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/login/postrevoke200.ts",{"_index":2275,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/login/postrevoke403.ts",{"_index":2277,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/users/deleteusersid200.ts",{"_index":2238,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/users/deleteusersid403.ts",{"_index":2240,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/users/deleteusersid404.ts",{"_index":2245,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/users/getusers200.ts",{"_index":2248,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/users/getusersid200.ts",{"_index":2249,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/users/getusersid404.ts",{"_index":2251,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/users/getusersme200.ts",{"_index":2252,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/users/patchusers204.ts",{"_index":2262,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/users/patchusers403.ts",{"_index":2265,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/users/patchusers404.ts",{"_index":2266,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/users/patchusersme200.ts",{"_index":2267,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/users/putusers201.ts",{"_index":2278,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/users/putusers409.ts",{"_index":2280,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/types/user.ts",{"_index":2282,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/user.service.ts",{"_index":1776,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["wisdom_modules/core/src/app/auth/user.service.ts:25",{"_index":1780,"title":{},"body":{"injectables/UserService.html":{}}}],["wisdom_modules/core/src/app/auth/user.service.ts:37",{"_index":1804,"title":{},"body":{"injectables/UserService.html":{}}}],["wisdom_modules/core/src/app/auth/user.service.ts:47",{"_index":1801,"title":{},"body":{"injectables/UserService.html":{}}}],["wisdom_modules/core/src/app/auth/user.service.ts:67",{"_index":1784,"title":{},"body":{"injectables/UserService.html":{}}}],["wisdom_modules/core/src/app/base",{"_index":506,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{},"coverage.html":{}}}],["wisdom_modules/core/src/app/cache.interceptor.ts",{"_index":642,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"coverage.html":{}}}],["wisdom_modules/core/src/app/cache.interceptor.ts:23",{"_index":659,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["wisdom_modules/core/src/app/cache.interceptor.ts:25",{"_index":662,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["wisdom_modules/core/src/app/cache.interceptor.ts:35",{"_index":652,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["wisdom_modules/core/src/app/frame/error/error.component.ts",{"_index":790,"title":{},"body":{"components/ErrorComponent.html":{},"coverage.html":{}}}],["wisdom_modules/core/src/app/frame/error/error.component.ts:17",{"_index":814,"title":{},"body":{"components/ErrorComponent.html":{}}}],["wisdom_modules/core/src/app/frame/error/error.component.ts:20",{"_index":812,"title":{},"body":{"components/ErrorComponent.html":{}}}],["wisdom_modules/core/src/app/frame/error/error.component.ts:22",{"_index":813,"title":{},"body":{"components/ErrorComponent.html":{}}}],["wisdom_modules/core/src/app/frame/error/error.component.ts:24",{"_index":809,"title":{},"body":{"components/ErrorComponent.html":{}}}],["wisdom_modules/core/src/app/frame/error/error.component.ts:26",{"_index":811,"title":{},"body":{"components/ErrorComponent.html":{}}}],["wisdom_modules/core/src/app/frame/error/error.component.ts:28",{"_index":810,"title":{},"body":{"components/ErrorComponent.html":{}}}],["wisdom_modules/core/src/app/frame/error/error.component.ts:34",{"_index":817,"title":{},"body":{"components/ErrorComponent.html":{}}}],["wisdom_modules/core/src/app/frame/error/error.component.ts:41",{"_index":802,"title":{},"body":{"components/ErrorComponent.html":{}}}],["wisdom_modules/core/src/app/frame/error/error.component.ts:71",{"_index":807,"title":{},"body":{"components/ErrorComponent.html":{}}}],["wisdom_modules/core/src/app/frame/error/error.interceptor.ts",{"_index":843,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"coverage.html":{}}}],["wisdom_modules/core/src/app/frame/error/error.interceptor.ts:21",{"_index":847,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["wisdom_modules/core/src/app/frame/error/error.interceptor.ts:34",{"_index":849,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["wisdom_modules/core/src/app/frame/error/error.service.ts",{"_index":869,"title":{},"body":{"injectables/ErrorService.html":{},"coverage.html":{}}}],["wisdom_modules/core/src/app/frame/error/error.service.ts:13",{"_index":873,"title":{},"body":{"injectables/ErrorService.html":{}}}],["wisdom_modules/core/src/app/frame/error/error.service.ts:35",{"_index":881,"title":{},"body":{"injectables/ErrorService.html":{}}}],["wisdom_modules/core/src/app/frame/error/error.ts",{"_index":782,"title":{},"body":{"interfaces/Error.html":{},"coverage.html":{}}}],["wisdom_modules/core/src/app/frame/frame.component.ts",{"_index":956,"title":{},"body":{"components/FrameComponent.html":{},"coverage.html":{}}}],["wisdom_modules/core/src/app/frame/frame.component.ts:19",{"_index":968,"title":{},"body":{"components/FrameComponent.html":{}}}],["wisdom_modules/core/src/app/frame/frame.component.ts:36",{"_index":976,"title":{},"body":{"components/FrameComponent.html":{}}}],["wisdom_modules/core/src/app/frame/frame.component.ts:40",{"_index":981,"title":{},"body":{"components/FrameComponent.html":{}}}],["wisdom_modules/core/src/app/frame/frame.component.ts:45",{"_index":983,"title":{},"body":{"components/FrameComponent.html":{}}}],["wisdom_modules/core/src/app/frame/frame.component.ts:49",{"_index":986,"title":{},"body":{"components/FrameComponent.html":{}}}],["wisdom_modules/core/src/app/frame/frame.component.ts:54",{"_index":972,"title":{},"body":{"components/FrameComponent.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.component.ts",{"_index":1075,"title":{},"body":{"components/LoaderComponent.html":{},"coverage.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.component.ts:16",{"_index":1089,"title":{},"body":{"components/LoaderComponent.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.component.ts:25",{"_index":1094,"title":{},"body":{"components/LoaderComponent.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.component.ts:27",{"_index":1093,"title":{},"body":{"components/LoaderComponent.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.component.ts:33",{"_index":1092,"title":{},"body":{"components/LoaderComponent.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.guard.ts",{"_index":1140,"title":{},"body":{"guards/LoaderGuard.html":{},"coverage.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.guard.ts:19",{"_index":1145,"title":{},"body":{"guards/LoaderGuard.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.guard.ts:28",{"_index":1148,"title":{},"body":{"guards/LoaderGuard.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.guard.ts:34",{"_index":1150,"title":{},"body":{"guards/LoaderGuard.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.interceptor.ts",{"_index":1153,"title":{},"body":{"interceptors/LoaderInterceptor.html":{},"coverage.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.interceptor.ts:23",{"_index":1156,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.interceptor.ts:39",{"_index":1157,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.service.ts",{"_index":1172,"title":{},"body":{"injectables/LoaderService.html":{},"coverage.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.service.ts:17",{"_index":1197,"title":{},"body":{"injectables/LoaderService.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.service.ts:22",{"_index":1190,"title":{},"body":{"injectables/LoaderService.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.service.ts:27",{"_index":1195,"title":{},"body":{"injectables/LoaderService.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.service.ts:30",{"_index":1200,"title":{},"body":{"injectables/LoaderService.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.service.ts:38",{"_index":1192,"title":{},"body":{"injectables/LoaderService.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.service.ts:40",{"_index":1202,"title":{},"body":{"injectables/LoaderService.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.service.ts:49",{"_index":1184,"title":{},"body":{"injectables/LoaderService.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.service.ts:67",{"_index":1189,"title":{},"body":{"injectables/LoaderService.html":{}}}],["wisdom_modules/core/src/app/frame/side",{"_index":1741,"title":{},"body":{"components/SideBarComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/i18n/lang",{"_index":1040,"title":{},"body":{"directives/LangSelectorDirective.html":{},"coverage.html":{}}}],["wisdom_modules/core/src/app/i18n/static",{"_index":1748,"title":{},"body":{"classes/StaticLoader.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["wisdom_modules/core/src/app/module",{"_index":1653,"title":{},"body":{"classes/ModuleProvider.html":{},"coverage.html":{}}}],["wisdom_modules/core/src/app/sanitize",{"_index":1700,"title":{},"body":{"interceptors/SanitizeUrlInterceptor.html":{},"coverage.html":{}}}],["wisdom_modules/core/src/app/settings",{"_index":1721,"title":{},"body":{"injectables/SettingsStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["wisdom_modules/core/src/environments/environment.common.ts",{"_index":2084,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["wisdom_modules/core/src/environments/environment.prod.ts",{"_index":2085,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["wisdom_modules/core/src/environments/environment.ts",{"_index":2087,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["wisdom_modules/example/src/lib/example.component.ts",{"_index":889,"title":{},"body":{"components/ExampleComponent.html":{},"coverage.html":{}}}],["wisdom_modules/example/src/lib/example.module.ts",{"_index":900,"title":{},"body":{"modules/ExampleModule.html":{}}}],["wisdom_modules/example/src/lib/example.service.ts",{"_index":903,"title":{},"body":{"injectables/ExampleService.html":{},"coverage.html":{}}}],["wisdom_modules/example/src/public",{"_index":2088,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["wisdom_modules/water",{"_index":685,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/MapSelectViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["wisdominterface",{"_index":2036,"title":{"interfaces/WisdomInterface.html":{}},"body":{"interfaces/WisdomInterface.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["wisdommodule",{"_index":122,"title":{"modules/WisdomModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ExampleModule.html":{},"modules/WaterUsageForecastsModule.html":{},"modules/WisdomModule.html":{},"index.html":{},"modules.html":{}}}],["without",{"_index":352,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/MapComponent.html":{}}}],["work",{"_index":1032,"title":{},"body":{"components/IonIconComponent.html":{}}}],["workspace",{"_index":1745,"title":{},"body":{"components/SideBarComponent.html":{},"properties.html":{}}}],["workspace's",{"_index":1657,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["wrong",{"_index":1823,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["www",{"_index":406,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["x",{"_index":405,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["y",{"_index":1136,"title":{},"body":{"components/LoaderComponent.html":{}}}],["year",{"_index":744,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["yes",{"_index":1187,"title":{},"body":{"injectables/LoaderService.html":{},"injectables/MapService.html":{},"injectables/UserService.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/functions.html":{}}}],["you're",{"_index":285,"title":{},"body":{"guards/AuthGuard.html":{}}}],["yourself",{"_index":2364,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z",{"_index":1130,"title":{},"body":{"components/LoaderComponent.html":{}}}],["zone.js",{"_index":2131,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"modules/ExampleModule.html":{},"components/MapComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"modules/WisdomModule.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    wisdom_modules/core/src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component of the app, the main entry point for angular.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/app.component.ts:20\n                \n            \n\n\n            \n                \n                    On init this sets the Default image path for Leaflet.\nThis also registers the AnnotationPlugin for chart.js.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"WISdoM-OSS\"\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/core/src/app/app.component.ts:13\n                        \n                    \n\n            \n                \n                    The title of the website.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from \"@angular/core\";\nimport {Chart} from \"chart.js\";\nimport AnnotationPlugin from \"chartjs-plugin-annotation\";\nimport {Icon} from \"leaflet\";\n\n/** Component of the app, the main entry point for angular. */\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\"\n})\nexport class AppComponent implements OnInit {\n  /** The title of the website. */\n  title = \"WISdoM-OSS\";\n\n  /**\n   * On init this sets the Default image path for Leaflet.\n   *\n   * This also registers the {@link AnnotationPlugin} for chart.js.\n   */\n  ngOnInit(): void {\n    Icon.Default.imagePath = \"assets/leaflet/images/\";\n    Chart.register(AnnotationPlugin);\n  }\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'breadcrumbs'},{'name': 'ConsumerDetailComponent', 'selector': 'lib-consumer-detail'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'ExampleComponent', 'selector': ''},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IonIconComponent', 'selector': 'ion-icon'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'map'},{'name': 'MapSelectViewComponent', 'selector': 'lib-map-select-view'},{'name': 'ResultDataViewComponent', 'selector': 'lib-result-data-view'},{'name': 'SideBarComponent', 'selector': 'app-side-bar'},{'name': 'WaterRightDetailComponent', 'selector': 'lib-water-right-detail'}];\n    var DIRECTIVES = [{'name': 'BulmaIsToggleableDirective', 'selector': '.is-toggleable'},{'name': 'LangSelectorDirective', 'selector': '[selectLang]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nErrorComponent\n\nErrorComponent\n\nAppModule -->\n\nErrorComponent->AppModule\n\n\n\n\n\nFrameComponent\n\nFrameComponent\n\nAppModule -->\n\nFrameComponent->AppModule\n\n\n\n\n\nLangSelectorDirective\n\nLangSelectorDirective\n\nAppModule -->\n\nLangSelectorDirective->AppModule\n\n\n\n\n\nLoaderComponent\n\nLoaderComponent\n\nAppModule -->\n\nLoaderComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nSideBarComponent\n\nSideBarComponent\n\nAppModule -->\n\nSideBarComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nWisdomModule\n\nWisdomModule\n\nAppModule -->\n\nWisdomModule->AppModule\n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nAppModule -->\n\nAuthInterceptor->AppModule\n\n\n\n\n\nBaseUrlInterceptor\n\nBaseUrlInterceptor\n\nAppModule -->\n\nBaseUrlInterceptor->AppModule\n\n\n\n\n\nCacheInterceptor\n\nCacheInterceptor\n\nAppModule -->\n\nCacheInterceptor->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\nLoaderInterceptor\n\nLoaderInterceptor\n\nAppModule -->\n\nLoaderInterceptor->AppModule\n\n\n\n\n\nSanitizeUrlInterceptor\n\nSanitizeUrlInterceptor\n\nAppModule -->\n\nSanitizeUrlInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            wisdom_modules/core/src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            ErrorComponent\n                        \n                        \n                            FrameComponent\n                        \n                        \n                            LangSelectorDirective\n                        \n                        \n                            LoaderComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            SideBarComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AuthInterceptor\n                        \n                        \n                            BaseUrlInterceptor\n                        \n                        \n                            CacheInterceptor\n                        \n                        \n                            ErrorInterceptor\n                        \n                        \n                            LoaderInterceptor\n                        \n                        \n                            SanitizeUrlInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            WisdomModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {HttpClientModule, HTTP_INTERCEPTORS} from \"@angular/common/http\";\nimport {NgModule} from \"@angular/core\";\nimport {FormsModule} from \"@angular/forms\";\nimport {BrowserModule} from \"@angular/platform-browser\";\nimport {TranslateLoader, TranslateModule} from \"@ngx-translate/core\";\nimport {WisdomModule} from \"common\";\n\nimport {AppRoutingModule} from \"./app-routing.module\";\nimport {AppComponent} from \"./app.component\";\nimport {LoginComponent} from \"./auth/login/login.component\";\nimport {AuthInterceptor} from \"./auth/auth.interceptor\";\nimport {BaseUrlInterceptor} from \"./base-url.interceptor\";\nimport {ErrorComponent} from \"./frame/error/error.component\";\nimport {FrameComponent} from \"./frame/frame.component\";\nimport {SideBarComponent} from \"./frame/side-bar/side-bar.component\";\nimport {LangSelectorDirective} from \"./i18n/lang-selector.directive\";\nimport {StaticLoader} from \"./i18n/static-loader\";\nimport {CacheInterceptor} from \"./cache.interceptor\";\nimport {LoaderComponent} from \"./frame/loader/loader.component\";\nimport {LoaderInterceptor} from \"./frame/loader/loader.interceptor\";\nimport {SanitizeUrlInterceptor} from \"./sanitize-url.interceptor\";\nimport {ErrorInterceptor} from \"./frame/error/error.interceptor\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    FrameComponent,\n    LangSelectorDirective,\n    SideBarComponent,\n    ErrorComponent,\n    LoaderComponent\n  ],\n  imports: [\n    WisdomModule,\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    TranslateModule.forRoot({\n      defaultLanguage: globalThis.localStorage.getItem(\"lang\") || \"en_US\",\n      loader: {\n        provide: TranslateLoader,\n        useClass: StaticLoader\n      }\n    })\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ErrorInterceptor,\n      multi: true\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: LoaderInterceptor,\n      multi: true\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: BaseUrlInterceptor,\n      multi: true\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: CacheInterceptor,\n      multi: true\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: SanitizeUrlInterceptor,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            wisdom_modules/core/src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from \"@angular/core\";\nimport {RouterModule, Routes} from \"@angular/router\";\n\nimport {LoginComponent} from \"./auth/login/login.component\";\nimport {AuthGuard} from \"./auth/auth.guard\";\nimport {FrameComponent} from \"./frame/frame.component\";\nimport {ModuleProvider} from \"./module-provider\";\nimport {LoaderGuard} from \"./frame/loader/loader.guard\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: FrameComponent,\n    canActivate: [AuthGuard, LoaderGuard],\n    children: \"ModuleProvider.routes()\"\n  },\n  {path: \"login\", component: LoginComponent, canActivate: [LoaderGuard]},\n  {path: \"**\", redirectTo: \"\"}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                wisdom_modules/core/src/app/auth/auth.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard checking if the user is signed in, it needs to have a valid access\ntoken to browser further.\nAlso tries to refresh the token if the old one is not valid.\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authStorage: AuthStorageService, authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/core/src/app/auth/auth.guard.ts:23\n                            \n                        \n\n                \n                    \n                            Constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authStorage\n                                                  \n                                                        \n                                                                        AuthStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The storage containing the tokens\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The service used to interact with the auth server\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The router to route to the login if necessary\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/auth/auth.guard.ts:47\n                \n            \n\n\n            \n                \n                    Method deciding if a user is allowed to navigate to the requested route.\nThis one checks if the current token is still valid.\nIf the token is not valid it tries to refresh the token.\nIf no refreshing is the possible the route will be set to the login page.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | UrlTree | boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {Injectable} from \"@angular/core\";\nimport {\n  CanActivate,\n  Router,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree\n} from \"@angular/router\";\nimport {throwError, Observable} from \"rxjs\";\n\nimport {AuthStorageService} from \"./auth-storage.service\";\nimport {AuthService} from \"./auth.service\";\n\n/**\n * Guard checking if the user is signed in, it needs to have a valid access\n * token to browser further.\n *\n * Also tries to refresh the token if the old one is not valid.\n */\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AuthGuard implements CanActivate {\n\n  /**\n   * Constructor.\n   * @param authStorage The storage containing the tokens\n   * @param authService The service used to interact with the auth server\n   * @param router The router to route to the login if necessary\n   */\n  constructor(\n    private authStorage: AuthStorageService,\n    private authService: AuthService,\n    private router: Router\n  ) {}\n\n  /**\n   * Method deciding if a user is allowed to navigate to the requested route.\n   *\n   * This one checks if the current token is still valid.\n   * If the token is not valid it tries to refresh the token.\n   * If no refreshing is the possible the route will be set to the login page.\n   *\n   * @param route\n   * @param state\n   */\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable | UrlTree | boolean {\n    // ignore login path per se\n    if (route.url[0]?.path === \"login\") return true;\n    let loginUrlTree = this.router.parseUrl(\"/login\");\n    if (!state.url.includes(\"login\")) {\n      loginUrlTree.queryParams = {returnUrl: state.url};\n    }\n\n    // if no token is available the use can't be logged in\n    let token = this.authStorage.accessToken;\n    if (!token) return loginUrlTree;\n\n    // wait for the server to reply with a token check\n    return new Observable(subscriber => {\n      this.authService.validate(token!).subscribe({\n        next: response => {\n          // token is valid, you're ready to go\n          subscriber.next(true);\n          subscriber.complete();\n        },\n\n        error: errResponse => {\n          /**\n           * Small function to avoid code depletes.\n           * Clears the auth storage and sends the user to the login page.\n           */\n          let returnToLogin = () => {\n            this.authStorage.clear();\n            subscriber.next(loginUrlTree);\n            subscriber.complete();\n          };\n\n          if (this.authStorage.refreshToken) {\n            // if a refresh token is present, try to refresh\n            this.authService.refresh(this.authStorage.refreshToken).subscribe({\n              next: refreshResponse => {\n                // refresh token was valid, update with new data\n                this.authStorage.accessToken = refreshResponse.access_token;\n                this.authStorage.refreshToken = refreshResponse.refresh_token;\n                this.authStorage.scopes = refreshResponse.scope;\n                this.authStorage.expiresIn = refreshResponse.expires_in;\n                subscriber.next(true);\n                subscriber.complete();\n                return;\n              },\n\n              error: refreshErrResponse => {\n                // token is no valid, send the user to the login page\n                if (refreshErrResponse.status === 400) return returnToLogin();\n                // TODO: handle non-400 status codes gracefully\n                else return returnToLogin();\n              }\n            });\n            return;\n          }\n\n          return returnToLogin();\n        }\n      });\n    });\n  }\n\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AuthInterceptor.html":{"url":"interceptors/AuthInterceptor.html","title":"interceptor - AuthInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  AuthInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/core/src/app/auth/auth.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                Interceptor to inject the authorization token into every request.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authStorage: AuthStorageService)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/core/src/app/auth/auth.interceptor.ts:17\n                            \n                        \n\n                \n                    \n                            Constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authStorage\n                                                  \n                                                        \n                                                                        AuthStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The storage containing the tokens to inject\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/auth/auth.interceptor.ts:30\n                \n            \n\n\n            \n                \n                    Injects the token as Bearer authentication into a HttpRequest\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The request the token should be injected in\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The next handler to operate on the request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest\n} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\nimport {tap, Observable} from \"rxjs\";\n\nimport {AuthStorageService} from \"./auth-storage.service\";\n\n/** Key for the token. */\nconst TOKEN_HEADER_KEY = \"Authorization\";\n\n/** Interceptor to inject the authorization token into every request. */\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  /**\n   * Constructor.\n   * @param authStorage The storage containing the tokens to inject\n   */\n  constructor(private authStorage: AuthStorageService) {}\n\n  /**\n   * Injects the token as Bearer authentication into a HttpRequest\n   * @param request The request the token should be injected in\n   * @param next The next handler to operate on the request\n   */\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    let authRequest = request;\n    const token = this.authStorage.accessToken;\n    if (token) {\n      authRequest = request.clone({\n        // this updates the header without removing every other header\n        headers: request.headers.set(TOKEN_HEADER_KEY, \"Bearer \" + token)\n      });\n    }\n    return next.handle(authRequest).pipe(tap(event => {\n      // TODO: handle if the event is 401\n    }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/core/src/app/auth/auth.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service handling the OAuth interaction.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                refresh\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/core/src/app/auth/auth.service.ts:41\n                            \n                        \n\n                \n                    \n                            Constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                For making requests with the auth server\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/auth/auth.service.ts:54\n                \n            \n\n\n            \n                \n                    Logs the user in.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Username of the user\n\n                                    \n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Password of the user\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout(token: string)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/auth/auth.service.ts:101\n                \n            \n\n\n            \n                \n                    Revokes the token.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Token of the user\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refresh\n                        \n                    \n                \n            \n            \n                \nrefresh(token: string)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/auth/auth.service.ts:84\n                \n            \n\n\n            \n                \n                    Refreshes the current token.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Refresh token\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(token: string)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/auth/auth.service.ts:72\n                \n            \n\n\n            \n                \n                    Checks if the given token is valid.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Token to check\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpClient,\n  HttpContext,\n  HttpHeaders,\n  HttpParams\n} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\nimport {USE_CACHE, USE_API_URL, USE_ERROR_CURTAIN} from \"common\";\nimport {join} from \"path-browserify\";\nimport {Observable} from \"rxjs\";\n\nimport PostOAuthToken200 from \"./response_types/login/PostOAuthToken200\";\nimport PostRevoke200 from \"./response_types/login/PostRevoke200\";\n\n/** Url for the interaction. */\nconst AUTH_URL = \"auth\";\n\n/**\n * Options for the post request in the service.\n * As per reference the content type is always \"x-www-form-urlencoded\" instead\n * of \"json\".\n * The response is a json though.\n */\nconst httpOptions: Parameters[2] = {\n  headers: new HttpHeaders({\n    \"Content-Type\": \"application/x-www-form-urlencoded\"\n  }),\n  responseType: \"json\",\n  context: new HttpContext()\n    .set(USE_API_URL, true)\n    .set(USE_CACHE, false)\n    .set(USE_ERROR_CURTAIN, false)\n}\n\n/**\n * Service handling the OAuth interaction.\n */\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AuthService {\n\n  /**\n   * Constructor.\n   * @param http For making requests with the auth server\n   */\n  constructor(private http: HttpClient) {}\n\n  /**\n   * Logs the user in.\n   * @param username Username of the user\n   * @param password Password of the user\n   */\n  login(username: string, password: string) {\n    return this.http.post(\n      join(AUTH_URL, \"oauth/token\"),\n      new HttpParams({\n        fromObject: {\n          grant_type: \"password\",\n          username,\n          password\n        }\n      }),\n      httpOptions\n    ) as Observable;\n  }\n\n  /**\n   * Checks if the given token is valid.\n   * @param token Token to check\n   */\n  validate(token: string) {\n    return this.http.post(\n      join(AUTH_URL, \"oauth/check_token\"),\n      new HttpParams({fromObject: {token}}),\n      httpOptions\n    );\n  }\n\n  /**\n   * Refreshes the current token.\n   * @param token Refresh token\n   */\n  refresh(token: string) {\n    return this.http.post(\n      join(AUTH_URL, \"oauth/token\"),\n      new HttpParams({\n        fromObject: {\n          grant_type: \"refresh_token\",\n          refresh_token: token\n        }\n      }),\n      httpOptions\n    ) as Observable;\n  }\n\n  /**\n   * Revokes the token.\n   * @param token Token of the user\n   */\n  logout(token: string) {\n    return this.http.post(\n      join(AUTH_URL, \"oauth/revoke\"),\n      new HttpParams({fromObject: {\n        token\n      }}),\n      httpOptions\n    ) as Observable;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthStorageService.html":{"url":"injectables/AuthStorageService.html","title":"injectable - AuthStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/core/src/app/auth/auth-storage.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Class for storing the data received from the auth server.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                    Private\n                                    Static\n                                getStorage\n                            \n                            \n                                    Private\n                                    Static\n                                setStorage\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    accessToken\n                                \n                                \n                                    expiresIn\n                                \n                                \n                                    refreshToken\n                                \n                                \n                                    scopes\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/auth/auth-storage.service.ts:21\n                \n            \n\n\n            \n                \n                    Clears the session storage from the values stored by this service.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        getStorage\n                        \n                    \n                \n            \n            \n                \n                    \n                    getStorage(key: string)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/auth/auth-storage.service.ts:38\n                \n            \n\n\n            \n                \n                    Internal function to get session storage values.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        setStorage\n                        \n                    \n                \n            \n            \n                \n                    \n                    setStorage(data: string | null | undefined, key: string)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/auth/auth-storage.service.ts:33\n                \n            \n\n\n            \n                \n                    Internal function to set session storage values.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            string | null | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        accessToken\n                    \n                \n\n                \n                    \n                        getaccessToken()\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/auth/auth-storage.service.ts:54\n                                \n                            \n                    \n                        \n                                Get the access token.\n\n\n                                \n                                \n                        \n                    \n\n                \n                    \n                        setaccessToken(token: string | null | undefined)\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/auth/auth-storage.service.ts:46\n                                \n                            \n                    \n                        \n                                Set the access token.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            token\n                                                    \n                                                            \n                                                                        string | null | undefined\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    May be a nullish value or the token\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        expiresIn\n                    \n                \n\n                \n                    \n                        getexpiresIn()\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/auth/auth-storage.service.ts:70\n                                \n                            \n                    \n                        \n                                Returns the expiration date.\n\n\n                                \n                                \n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n                \n                    \n                        setexpiresIn(unixTime: number | string | null | undefined)\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/auth/auth-storage.service.ts:62\n                                \n                            \n                    \n                        \n                                Set the expiration date.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            unixTime\n                                                    \n                                                            \n                                                                        number | string | null | undefined\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    May be a nullish value or the unix time as number or string\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        refreshToken\n                    \n                \n\n                \n                    \n                        getrefreshToken()\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/auth/auth-storage.service.ts:88\n                                \n                            \n                    \n                        \n                                Get the refresh token.\n\n\n                                \n                                \n                        \n                    \n\n                \n                    \n                        setrefreshToken(token: string | null | undefined)\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/auth/auth-storage.service.ts:80\n                                \n                            \n                    \n                        \n                                Set the refresh token.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            token\n                                                    \n                                                            \n                                                                        string | null | undefined\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    May be a nullish value or the token\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        scopes\n                    \n                \n\n                \n                    \n                        getscopes()\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/auth/auth-storage.service.ts:104\n                                \n                            \n                    \n                        \n                                Get the scopes.\n\n\n                                \n                                \n                        \n                    \n\n                \n                    \n                        setscopes(scopes: string | null | undefined)\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/auth/auth-storage.service.ts:96\n                                \n                            \n                    \n                        \n                                Sets the scopes.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            scopes\n                                                    \n                                                            \n                                                                        string | null | undefined\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    May be a nullish value or the scopes\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\n\n/** Key for the access token. */\nconst ACCESS_TOKEN_KEY = \"auth-token\";\n/** Key fo the expiration date. */\nconst EXPIRES_IN_KEY = \"auth-expires-in\";\n/** Key for the refresh token. */\nconst REFRESH_TOKEN_KEY = \"auth-refresh-token\";\n/** Key for the scopes. */\nconst SCOPES_KEY = \"auth-scopes\";\n\n/** Class for storing the data received from the auth server. */\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AuthStorageService {\n\n  // TODO: doc the getter and setter when https://github.com/microsoft/tsdoc/issues/308 is closed\n\n  /** Clears the session storage from the values stored by this service. */\n  clear(): void {\n    for (let key of [\n      ACCESS_TOKEN_KEY,\n      REFRESH_TOKEN_KEY,\n      EXPIRES_IN_KEY,\n      SCOPES_KEY\n    ]) {\n      globalThis.sessionStorage.removeItem(key);\n    }\n  }\n\n  /** Internal function to set session storage values. */\n  private static setStorage(data: string | null | undefined, key: string) {\n    if (data) globalThis.sessionStorage.setItem(key, data);\n    else globalThis.sessionStorage.removeItem(key);\n  }\n  /** Internal function to get session storage values. */\n  private static getStorage(key: string) {\n    return globalThis.sessionStorage.getItem(key);\n  }\n\n  /**\n   * Set the access token.\n   * @param token May be a nullish value or the token\n   */\n  set accessToken(token: string | null | undefined) {\n    AuthStorageService.setStorage(token, ACCESS_TOKEN_KEY);\n  }\n\n  /**\n   * Get the access token.\n   * @returns A nullish value or the token\n   */\n  get accessToken() {\n    return AuthStorageService.getStorage(ACCESS_TOKEN_KEY);\n  }\n\n  /**\n   * Set the expiration date.\n   * @param unixTime May be a nullish value or the unix time as number or string\n   */\n  set expiresIn(unixTime: number | string | null | undefined) {\n    AuthStorageService.setStorage(`${unixTime}`, EXPIRES_IN_KEY);\n  }\n\n  /**\n   * Returns the expiration date.\n   * @returns The date is unix timestamp or NaN\n   */\n  get expiresIn(): number {\n    let expiresIn = AuthStorageService.getStorage(EXPIRES_IN_KEY);\n    if (expiresIn) return parseInt(expiresIn);\n    return NaN;\n  }\n\n  /**\n   * Set the refresh token.\n   * @param token May be a nullish value or the token\n   */\n  set refreshToken(token: string | null | undefined) {\n    AuthStorageService.setStorage(token, REFRESH_TOKEN_KEY);\n  }\n\n  /**\n   * Get the refresh token.\n   * @returns A nullish value or the token\n   */\n  get refreshToken() {\n    return AuthStorageService.getStorage(REFRESH_TOKEN_KEY);\n  }\n\n  /**\n   * Sets the scopes.\n   * @param scopes May be a nullish value or the scopes\n   */\n  set scopes(scopes: string | null | undefined) {\n    AuthStorageService.setStorage(scopes, SCOPES_KEY);\n  }\n\n  /**\n   * Get the scopes.\n   * @returns The scopes divided by \" \" or a nullish value\n   */\n  get scopes() {\n    return AuthStorageService.getStorage(SCOPES_KEY);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/BaseUrlInterceptor.html":{"url":"interceptors/BaseUrlInterceptor.html","title":"interceptor - BaseUrlInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  BaseUrlInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/core/src/app/base-url.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                Class used to prepend the base url to requests.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/base-url.interceptor.ts:23\n                \n            \n\n\n            \n                \n                    Prepends the base url from the environment to request url\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Request to prepend the url\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The next handler\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n  HttpContextToken\n} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\nimport {USE_BASE_URL, USE_API_URL} from \"common\";\nimport {Observable} from \"rxjs\";\n\nimport {environment} from \"../environments/environment\";\n\n/** Class used to prepend the base url to requests. */\n@Injectable()\nexport class BaseUrlInterceptor implements HttpInterceptor {\n\n  /**\n   * Prepends the base url from the environment to request url\n   * @param request Request to prepend the url\n   * @param next The next handler\n   */\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    let prependUrl = \"\";\n    if (request.context.get(USE_BASE_URL)) prependUrl = environment.baseUrl;\n    if (request.context.get(USE_API_URL)) prependUrl = environment.apiUrl;\n    return next.handle(\n      // prepend the api url with the base url from the environment\n      request.clone({url: prependUrl +  request.url})\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Breadcrumb.html":{"url":"interfaces/Breadcrumb.html","title":"interface - Breadcrumb","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Breadcrumb\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Breadcrumb fragment interface.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            link\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            query\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional icon name to be displayed on the left of the fragment name.\nThis will use an IonIconComponent for the icon.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        link:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Router link to be set for the fragment.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        query\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        query:         Params\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Params\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional query parameters for the router link.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:     string | string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    String or array of strings to be displayed as fragment.\nEvery element will be passed to the TranslateService.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\nimport {Params, ActivatedRouteSnapshot, UrlTree} from \"@angular/router\";\nimport {Observable, BehaviorSubject, Subject} from \"rxjs\";\n\n/** Breadcrumb fragment interface. */\nexport interface Breadcrumb {\n  /**\n   * Optional icon name to be displayed on the left of the fragment name.\n   * This will use an {@link IonIconComponent} for the icon.\n   */\n  icon?: string,\n  /**\n   * String or array of strings to be displayed as fragment.\n   * Every element will be passed to the {@link TranslateService}.\n   */\n  text: string | string[],\n  /** Router link to be set for the fragment. */\n  link: string,\n  /** Optional query parameters for the router link. */\n  query?: Params\n}\n\n/** Service collecting the breadcrumbs. */\n@Injectable({\n  providedIn: 'root'\n})\nexport class BreadcrumbsService {\n  /** List of breadcrumbs. */\n  fragments: Breadcrumb[] = [];\n  /**\n   * {@link Subject} for the {@link Breadcrumb}s, to be used as\n   * {@link Observable}.\n   */\n  private subject: BehaviorSubject\n    = new BehaviorSubject([]);\n\n  /**\n   * Set a new breadcrumb fragment.\n   *\n   * This removes all fragments with a higher index than the set one.\n   * @param index Index of the breadcrumb array\n   * @param value Breadcrumb fragment to display\n   */\n  set(index: number, value: Breadcrumb) {\n    this.fragments.length = index + 1;\n    this.fragments[index] = value;\n    this.subject.next(this.fragments);\n  }\n\n  /** Observe the breadcrumb fragments. */\n  observe(): Observable {\n    return this.subject.asObservable();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BreadcrumbsComponent.html":{"url":"components/BreadcrumbsComponent.html","title":"component - BreadcrumbsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BreadcrumbsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component to display breadcrumbs collected by the BreadcrumbsService.\nThis will display a slash separated row with all breadcrumb fragments.\nThe one the most right is considered the current page and is therefore not\nclickable.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                breadcrumbs\n            \n\n\n\n\n            \n                templateUrl\n                ./breadcrumbs.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                alive\n                            \n                            \n                                fragments\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isAllSet\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: BreadcrumbsService)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.component.ts:21\n                            \n                        \n\n                \n                    \n                            Constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        BreadcrumbsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to get breadcrumb fragments from\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isAllSet\n                        \n                    \n                \n            \n            \n                \nisAllSet()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.component.ts:48\n                \n            \n\n\n            \n                \n                    Check if all fragments up to the most right are set.\nIf one is undefined this will return false.\nThis allows ensuring that only fully defined breadcrumbs will be displayed.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.component.ts:57\n                \n            \n\n\n            \n                \n                    On destroy set alive to false.\nThis makes sure that the component does not live as long as the service.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.component.ts:33\n                \n            \n\n\n            \n                \n                    Upon init this will observe the service and update the breadcrumbs if\nneeded.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        alive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.component.ts:19\n                        \n                    \n\n            \n                \n                    Whether this component is alive.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fragments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         (Breadcrumb | undefined)[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.component.ts:21\n                        \n                    \n\n            \n                \n                    Breadcrumb fragments that will be displayed.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from \"@angular/core\";\nimport {takeWhile} from \"rxjs\";\n\nimport {Breadcrumb, BreadcrumbsService} from \"./breadcrumbs.service\";\n\n/**\n * Component to display breadcrumbs collected by the {@link BreadcrumbsService}.\n *\n * This will display a slash separated row with all breadcrumb fragments.\n * The one the most right is considered the current page and is therefore not\n * clickable.\n */\n@Component({\n  selector: 'breadcrumbs',\n  templateUrl: './breadcrumbs.component.html'\n})\nexport class BreadcrumbsComponent implements OnInit, OnDestroy {\n  /** Whether this component is alive. */\n  private alive: boolean = true;\n  /** Breadcrumb fragments that will be displayed. */\n  fragments: (Breadcrumb | undefined)[] = [];\n\n  /**\n   * Constructor.\n   * @param service Service to get breadcrumb fragments from\n   */\n  constructor(private service: BreadcrumbsService) { }\n\n  /**\n   * Upon init this will observe the service and update the breadcrumbs if\n   * needed.\n   */\n  ngOnInit(): void {\n    this.service.observe()\n      .pipe(takeWhile(() => this.alive))\n      .subscribe(next => {\n      this.fragments = next\n    });\n  }\n\n  /**\n   * Check if all fragments up to the most right are set.\n   *\n   * If one is undefined this will return `false`.\n   *\n   * This allows ensuring that only fully defined breadcrumbs will be displayed.\n   */\n  isAllSet(): boolean {\n    return !this.fragments.includes(undefined);\n  }\n\n  /**\n   * On destroy set {@link alive} to `false`.\n   *\n   * This makes sure that the component does not live as long as the service.\n   */\n  ngOnDestroy(): void {\n    this.alive = false;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            \n          \n          \n            \n              {{text | translate}}\n            \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                        {{text | translate}}                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'breadcrumbs'},{'name': 'ConsumerDetailComponent', 'selector': 'lib-consumer-detail'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'ExampleComponent', 'selector': ''},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IonIconComponent', 'selector': 'ion-icon'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'map'},{'name': 'MapSelectViewComponent', 'selector': 'lib-map-select-view'},{'name': 'ResultDataViewComponent', 'selector': 'lib-result-data-view'},{'name': 'SideBarComponent', 'selector': 'app-side-bar'},{'name': 'WaterRightDetailComponent', 'selector': 'lib-water-right-detail'}];\n    var DIRECTIVES = [{'name': 'BulmaIsToggleableDirective', 'selector': '.is-toggleable'},{'name': 'LangSelectorDirective', 'selector': '[selectLang]'}];\n    var ACTUAL_COMPONENT = {'name': 'BreadcrumbsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BreadcrumbsService.html":{"url":"injectables/BreadcrumbsService.html","title":"injectable - BreadcrumbsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BreadcrumbsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service collecting the breadcrumbs.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fragments\n                            \n                            \n                                    Private\n                                subject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                observe\n                            \n                            \n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        observe\n                        \n                    \n                \n            \n            \n                \nobserve()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.service.ts:51\n                \n            \n\n\n            \n                \n                    Observe the breadcrumb fragments.\n\n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        set\n                        \n                    \n                \n            \n            \n                \nset(index: number, value: Breadcrumb)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.service.ts:44\n                \n            \n\n\n            \n                \n                    Set a new breadcrumb fragment.\nThis removes all fragments with a higher index than the set one.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Index of the breadcrumb array\n\n                                    \n                                \n                                \n                                    value\n                                    \n                                                Breadcrumb\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Breadcrumb fragment to display\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        fragments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Breadcrumb[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.service.ts:29\n                        \n                    \n\n            \n                \n                    List of breadcrumbs.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.service.ts:34\n                        \n                    \n\n            \n                \n                    Subject for the Breadcrumbs, to be used as\nObservable.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\nimport {Params, ActivatedRouteSnapshot, UrlTree} from \"@angular/router\";\nimport {Observable, BehaviorSubject, Subject} from \"rxjs\";\n\n/** Breadcrumb fragment interface. */\nexport interface Breadcrumb {\n  /**\n   * Optional icon name to be displayed on the left of the fragment name.\n   * This will use an {@link IonIconComponent} for the icon.\n   */\n  icon?: string,\n  /**\n   * String or array of strings to be displayed as fragment.\n   * Every element will be passed to the {@link TranslateService}.\n   */\n  text: string | string[],\n  /** Router link to be set for the fragment. */\n  link: string,\n  /** Optional query parameters for the router link. */\n  query?: Params\n}\n\n/** Service collecting the breadcrumbs. */\n@Injectable({\n  providedIn: 'root'\n})\nexport class BreadcrumbsService {\n  /** List of breadcrumbs. */\n  fragments: Breadcrumb[] = [];\n  /**\n   * {@link Subject} for the {@link Breadcrumb}s, to be used as\n   * {@link Observable}.\n   */\n  private subject: BehaviorSubject\n    = new BehaviorSubject([]);\n\n  /**\n   * Set a new breadcrumb fragment.\n   *\n   * This removes all fragments with a higher index than the set one.\n   * @param index Index of the breadcrumb array\n   * @param value Breadcrumb fragment to display\n   */\n  set(index: number, value: Breadcrumb) {\n    this.fragments.length = index + 1;\n    this.fragments[index] = value;\n    this.subject.next(this.fragments);\n  }\n\n  /** Observe the breadcrumb fragments. */\n  observe(): Observable {\n    return this.subject.asObservable();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/BulmaIsToggleableDirective.html":{"url":"directives/BulmaIsToggleableDirective.html","title":"directive - BulmaIsToggleableDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  BulmaIsToggleableDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/common/src/lib/bulma/bulma-is-toggleable.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                Directive for making things toggleable with bulma.\nClicking on the node that has this directive will toggle the \"is-active\"\nclass.\n\n            \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        .is-toggleable\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                classes\n                            \n                            \n                                    Private\n                                isActive\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    elementClasses\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        class\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/bulma/bulma-is-toggleable.directive.ts:22\n                            \n                        \n                \n                    \n                        The classes of the host node.\n\n                    \n                \n            \n        \n\n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            click\n                        \n                        \n                    \n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/common/src/lib/bulma/bulma-is-toggleable.directive.ts:36\n                \n            \n\n\n            \n                \n                    Function to be executed when the host is clicked.\nWill toggle the \"is-active\" class on the host node.\n\n\n                \n            \n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toggle\n                        \n                    \n                \n            \n            \n                \ntoggle()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('click')\n                \n            \n\n            \n                \n                    Defined in wisdom_modules/common/src/lib/bulma/bulma-is-toggleable.directive.ts:36\n                \n            \n\n\n            \n                \n                    Function to be executed when the host is clicked.\nWill toggle the \"is-active\" class on the host node.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        classes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/bulma/bulma-is-toggleable.directive.ts:17\n                        \n                    \n\n            \n                \n                    The classes of the host node.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/bulma/bulma-is-toggleable.directive.ts:15\n                        \n                    \n\n            \n                \n                    Is the host currently active.\n\n                \n            \n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        elementClasses\n                    \n                \n\n                \n                    \n                        getelementClasses()\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/common/src/lib/bulma/bulma-is-toggleable.directive.ts:22\n                                \n                            \n                    \n                        \n                                The classes of the host node.\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        setelementClasses(classes: string)\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/common/src/lib/bulma/bulma-is-toggleable.directive.ts:26\n                                \n                            \n                    \n                        \n                                Set the classes of the host node.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            classes\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import {HostBinding, Directive, Input, HostListener} from \"@angular/core\";\n\n/**\n * Directive for making things toggleable with bulma.\n *\n * Clicking on the node that has this directive will toggle the \"is-active\"\n * class.\n */\n@Directive({\n  selector: \".is-toggleable\"\n})\nexport class BulmaIsToggleableDirective {\n\n  /** Is the host currently active. */\n  private isActive: boolean = false;\n  /** The classes of the host node. */\n  private classes: string[] = [];\n\n  /** The classes of the host node. */\n  @Input(\"class\")\n  @HostBinding(\"class\")\n  get elementClasses(): string {\n    return this.classes.join(\" \");\n  }\n  /** Set the classes of the host node. */\n  set elementClasses(classes: string) {\n    this.classes = classes.trim().split(/\\s+/);\n  }\n\n  /**\n   * Function to be executed when the host is clicked.\n   *\n   * Will toggle the \"is-active\" class on the host node.\n   */\n  @HostListener(\"click\")\n  toggle() {\n    this.isActive = !this.isActive;\n    if (this.isActive) this.classes.push(\"is-active\")\n    else {\n      this.elementClasses = this.elementClasses\n        .split(\"is-active\")\n        .join(\"\");\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/CacheInterceptor.html":{"url":"interceptors/CacheInterceptor.html","title":"interceptor - CacheInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  CacheInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/core/src/app/cache.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                Interceptor to handle cache-control behaviour via\nETag and\nLast-Modified\nheaders.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                eTagMap\n                            \n                            \n                                    Private\n                                lastModifiedMap\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/cache.interceptor.ts:35\n                \n            \n\n\n            \n                \n                    Intercept requests to insert caching headers, if the context\nUSE_CACHE is set.\nWill append If-None-Match and Last-Modified-Since if possible.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Any http request\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The next interceptor or another request handler\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        eTagMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/core/src/app/cache.interceptor.ts:23\n                        \n                    \n\n            \n                \n                    Map holding all ETags received from the server.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        lastModifiedMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/core/src/app/cache.interceptor.ts:25\n                        \n                    \n\n            \n                \n                    Map holding all timestamps sent by the server.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpHeaders,\n  HttpInterceptor,\n  HttpRequest,\n  HttpResponse\n} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\nimport {USE_CACHE} from \"common\";\nimport {tap, Observable} from \"rxjs\";\n\n/**\n * Interceptor to handle cache-control behaviour via\n * [ETag](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/ETag) and\n * [Last-Modified](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Last-Modified)\n * headers.\n */\n@Injectable()\nexport class CacheInterceptor implements HttpInterceptor {\n\n  /** Map holding all ETags received from the server. */\n  private eTagMap: Map = new Map();\n  /** Map holding all timestamps sent by the server. */\n  private lastModifiedMap: Map = new Map();\n\n  /**\n   * Intercept requests to insert caching headers, if the context\n   * {@link USE_CACHE} is set.\n   * Will append `If-None-Match` and `Last-Modified-Since` if possible.\n   *\n   * @param request Any http request\n   * @param next The next interceptor or another request handler\n   */\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    // do not insert any cache headers if USE_CACHE is false\n    if (!request.context.get(USE_CACHE)) return next.handle(request);\n\n    let key = request.urlWithParams;\n\n    let eTag = this.eTagMap.get(key);\n    if (eTag) request.headers.set(\"If-None-Match\", eTag);\n\n    let lastModified = this.lastModifiedMap.get(key);\n    if (lastModified) request.headers.set(\"If-Modified-Since\", lastModified);\n\n    return next.handle(request.clone({\n      headers: request.headers\n    })).pipe(tap(event => {\n      if (!(event instanceof HttpResponse)) return;\n\n      let eTag = event.headers.get(\"ETag\");\n      if (eTag) this.eTagMap.set(key, eTag);\n\n      let lastModified = event.headers.get(\"Last-Modified\");\n      if (lastModified) this.lastModifiedMap.set(key, lastModified);\n    }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConsumerDetailComponent.html":{"url":"components/ConsumerDetailComponent.html","title":"component - ConsumerDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ConsumerDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    wisdom_modules/water-usage-forecasts/src/lib/views/detail-view/consumer-detail/consumer-detail.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-consumer-detail\n            \n\n\n\n\n            \n                templateUrl\n                ./consumer-detail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                chartData\n                            \n                            \n                                    Private\n                                coordinates\n                            \n                            \n                                historyData\n                            \n                            \n                                id\n                            \n                            \n                                mapComponent\n                            \n                            \n                                    Optional\n                                marker\n                            \n                            \n                                name\n                            \n                            \n                                recordedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleConsumerData\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, cService: ConsumersService, hService: WaterUsageHistoryService, breadcrumbs: BreadcrumbsService)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/detail-view/consumer-detail/consumer-detail.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cService\n                                                  \n                                                        \n                                                                        ConsumersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        hService\n                                                  \n                                                        \n                                                                        WaterUsageHistoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        breadcrumbs\n                                                  \n                                                        \n                                                                        BreadcrumbsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleConsumerData\n                        \n                    \n                \n            \n            \n                \nhandleConsumerData(data: ConsumerLocationsResponse)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/water-usage-forecasts/src/lib/views/detail-view/consumer-detail/consumer-detail.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                ConsumerLocationsResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/water-usage-forecasts/src/lib/views/detail-view/consumer-detail/consumer-detail.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/water-usage-forecasts/src/lib/views/detail-view/consumer-detail/consumer-detail.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        chartData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ChartData\n\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/detail-view/consumer-detail/consumer-detail.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        coordinates\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject<>\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([NaN, NaN])\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/detail-view/consumer-detail/consumer-detail.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        historyData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         HistoryResponse\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/detail-view/consumer-detail/consumer-detail.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/detail-view/consumer-detail/consumer-detail.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mapComponent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MapComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('map')\n                        \n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/detail-view/consumer-detail/consumer-detail.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        marker\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Marker\n\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/detail-view/consumer-detail/consumer-detail.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/detail-view/consumer-detail/consumer-detail.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recordedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/detail-view/consumer-detail/consumer-detail.component.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {ViewChild, Component, OnInit, AfterViewInit} from \"@angular/core\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {ChartData} from \"chart.js/auto\";\nimport {MapComponent, Marker, BreadcrumbsService} from \"common\";\nimport {BehaviorSubject} from \"rxjs\";\n\nimport {\n  ConsumerLocationsResponse,\n  ConsumersService\n} from \"../../../services/consumers.service\";\nimport {\n  HistoryResponse,\n  WaterUsageHistoryService\n} from \"../../../services/water-usage-history.service\";\nimport {consumerIcon} from \"../../../map-icons\";\n\n@Component({\n  selector: 'lib-consumer-detail',\n  templateUrl: './consumer-detail.component.html'\n})\nexport class ConsumerDetailComponent implements OnInit, AfterViewInit {\n\n  name: string = \"\";\n  id: string = \"\";\n  historyData: HistoryResponse = [];\n  marker?: Marker;\n  private coordinates: BehaviorSubject =\n    new BehaviorSubject([NaN, NaN]);\n  chartData?: ChartData;\n  recordedAt: string = \"\";\n\n  @ViewChild(\"map\") mapComponent!: MapComponent;\n\n  constructor(\n    private route: ActivatedRoute,\n    private cService: ConsumersService,\n    private hService: WaterUsageHistoryService,\n    private breadcrumbs: BreadcrumbsService\n  ) { }\n\n  ngOnInit(): void {\n    this.id = this.route.snapshot.params[\"consumer\"];\n    this.cService.fetchConsumers({id: [this.id]})\n      .subscribe(data => this.handleConsumerData(data ?? []));\n    this.hService.fetchWaterUsageHistory(this.id)\n      .subscribe(data => {\n        this.chartData = {\n          datasets: [{\n            data: data.map(({usage}) => usage),\n            backgroundColor: \"blue\"\n          }],\n          labels: data.map(({year}) => year)\n        };\n        this.recordedAt = data[data.length - 1].recordedAt.toISOString().substring(0, 10);\n      });\n  }\n\n  handleConsumerData(data: ConsumerLocationsResponse) {\n    for (let {id, name, geojson} of data) {\n      this.name = name;\n      this.breadcrumbs.set(2, {\n        text: name,\n        link: \"#\"\n      });\n      let coordinates = [geojson.coordinates[1], geojson.coordinates[0]] as [number, number];\n      this.marker = {\n        coordinates,\n        tooltip: name,\n        icon: consumerIcon\n      }\n      this.coordinates.next(coordinates);\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.coordinates.subscribe(coordinates => {\n      if (coordinates[0] && coordinates[1]) this.mapComponent.map!.flyTo(coordinates);\n    });\n  }\n\n}\n\n    \n\n    \n        \n\n{{name}}\n{{id}}\n\n\n  \n    \n  \n\n\n\n  \n    \n      \n    \n  \n  \n    {{recordedAt}}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{name}}{{id}}                                {{recordedAt}}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'breadcrumbs'},{'name': 'ConsumerDetailComponent', 'selector': 'lib-consumer-detail'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'ExampleComponent', 'selector': ''},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IonIconComponent', 'selector': 'ion-icon'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'map'},{'name': 'MapSelectViewComponent', 'selector': 'lib-map-select-view'},{'name': 'ResultDataViewComponent', 'selector': 'lib-result-data-view'},{'name': 'SideBarComponent', 'selector': 'app-side-bar'},{'name': 'WaterRightDetailComponent', 'selector': 'lib-water-right-detail'}];\n    var DIRECTIVES = [{'name': 'BulmaIsToggleableDirective', 'selector': '.is-toggleable'},{'name': 'LangSelectorDirective', 'selector': '[selectLang]'}];\n    var ACTUAL_COMPONENT = {'name': 'ConsumerDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConsumersService.html":{"url":"injectables/ConsumersService.html","title":"injectable - ConsumersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ConsumersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/water-usage-forecasts/src/lib/services/consumers.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchConsumers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, router: Router)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/services/consumers.service.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        fetchConsumers\n                        \n                    \n                \n            \n            \n                \nfetchConsumers(params: Partial)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/water-usage-forecasts/src/lib/services/consumers.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {HttpClient, HttpContext, HttpHeaders} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\nimport {Router} from \"@angular/router\";\nimport {USE_API_URL, USE_LOADER} from \"common\";\nimport {Observable} from \"rxjs\";\n\nconst API_URL = \"consumers/\";\n\nexport type ConsumerLocationsResponse = {\n  id: number,\n  name: string,\n  geojson: {\n    crs: {\n      type: \"name\",\n      properties: {\n        name: string\n      }\n    },\n    type: \"Point\",\n    coordinates: [number, number]\n  }\n}[];\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConsumersService {\n\n  constructor(\n    private http: HttpClient,\n    private router: Router\n  ) {}\n\n  fetchConsumers(params: Partial): Observable {\n    let url = this.router.parseUrl(API_URL);\n    if (params.in) url.queryParams[\"in\"] = params.in;\n    if (params.id) url.queryParams[\"id\"] = params.id;\n    if (params.usageAbove) url.queryParams[\"usage_above\"] = params.usageAbove;\n    return this.http.get(url.toString(), {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\"\n      }),\n      responseType: \"json\",\n      context: new HttpContext()\n        .set(USE_API_URL, true)\n        .set(USE_LOADER, true)\n    }) as Observable;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Error.html":{"url":"interfaces/Error.html","title":"interface - Error","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Error\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/core/src/app/frame/error/error.ts\n        \n\n\n            \n                Description\n            \n            \n                Custom error type containing infos to display in the main container.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            error\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            errorDescription\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            errorName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            httpCode\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            httpError\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Internal error code.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorDescription\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorDescription:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Internal error description.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Internal error name.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        httpCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        httpCode:     number | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Http code of the error.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        httpError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        httpError:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Http code name of the error.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Error {\n  /** Http code of the error. */\n  httpCode?: number | string;\n  /** Http code name of the error. */\n  httpError?: string;\n  /** Internal error code. */\n  error?: string;\n  /** Internal error name. */\n  errorName?: string;\n  /** Internal error description. */\n  errorDescription?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorComponent.html":{"url":"components/ErrorComponent.html","title":"component - ErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    wisdom_modules/core/src/app/frame/error/error.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component covering the entire main container to display an error that has not\nbeen handled.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-error\n            \n\n\n\n\n            \n                templateUrl\n                ./error.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                errorCode\n                            \n                            \n                                    Optional\n                                errorDescription\n                            \n                            \n                                    Optional\n                                errorName\n                            \n                            \n                                    Optional\n                                httpCode\n                            \n                            \n                                    Optional\n                                httpError\n                            \n                            \n                                showError\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goBack\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    showType\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(location: Location, service: ErrorService)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/core/src/app/frame/error/error.component.ts:41\n                            \n                        \n\n                \n                    \n                            Constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                        Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Location service to allow traversing the history\n\n                                                        \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        ErrorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Error service collecting the errors\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goBack\n                        \n                    \n                \n            \n            \n                \ngoBack()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/frame/error/error.component.ts:71\n                \n            \n\n\n            \n                \n                    Return one step in the history.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        errorCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/core/src/app/frame/error/error.component.ts:24\n                        \n                    \n\n            \n                \n                    Internal error code.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        errorDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/core/src/app/frame/error/error.component.ts:28\n                        \n                    \n\n            \n                \n                    Internal error description.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        errorName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/core/src/app/frame/error/error.component.ts:26\n                        \n                    \n\n            \n                \n                    Internal error name.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        httpCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | string\n\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/core/src/app/frame/error/error.component.ts:20\n                        \n                    \n\n            \n                \n                    Http code of the error.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        httpError\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/core/src/app/frame/error/error.component.ts:22\n                        \n                    \n\n            \n                \n                    Http code name of the error.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showError\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/core/src/app/frame/error/error.component.ts:17\n                        \n                    \n\n            \n                \n                    Whether to show the component.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        showType\n                    \n                \n\n                \n                    \n                        getshowType()\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/frame/error/error.component.ts:34\n                                \n                            \n                    \n                        \n                                Utility function to return the bulma type name for certain http error\ncodes.\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import {Location} from \"@angular/common\";\nimport {Component, OnInit} from \"@angular/core\";\n\nimport {ErrorService} from \"./error.service\";\n\n/**\n * Component covering the entire main container to display an error that has not\n * been handled.\n */\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html'\n})\nexport class ErrorComponent {\n\n  /** Whether to show the component. */\n  showError: boolean = false;\n\n  /** Http code of the error. */\n  httpCode?: number | string;\n  /** Http code name of the error. */\n  httpError?: string;\n  /** Internal error code. */\n  errorCode?: string;\n  /** Internal error name. */\n  errorName?: string;\n  /** Internal error description. */\n  errorDescription?: string;\n\n  /**\n   * Utility function to return the bulma type name for certain http error\n   * codes.\n   */\n  get showType(): string {\n    let codeType = (\"\" + this.httpCode)[0];\n    switch (codeType) {\n      case \"5\": return \"danger\";\n      case \"4\": return \"warning\";\n      default: return \"info\";\n    }\n  }\n\n  /**\n   * Constructor.\n   * @param location Location service to allow traversing the history\n   * @param service Error service collecting the errors\n   */\n  constructor(\n    private location: Location,\n    private service: ErrorService\n  ) {\n    this.service.errorPresent.subscribe(\n      val => {\n        if (val) {\n          this.showError = true;\n          Object.assign(this, val);\n          if (val.error) this.errorCode = val.error;\n        }\n        else {\n          this.showError = false;\n          delete this.httpCode;\n          delete this.httpError;\n          delete this.errorCode;\n          delete this.errorName;\n          delete this.errorDescription;\n        }\n      });\n  }\n\n  /** Return one step in the history. */\n  goBack() {\n    this.location.back();\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          {{httpCode}}\n        \n        \n          {{httpError}}\n        \n        \n          {{errorName}}\n        \n        \n          {{errorDescription}}\n        \n        \n          \n            \n          \n          Go Back\n        \n        \n          {{errorCode}}\n        \n      \n    \n  \n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{httpCode}}                          {{httpError}}                          {{errorName}}                          {{errorDescription}}                                                          Go Back                          {{errorCode}}                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'breadcrumbs'},{'name': 'ConsumerDetailComponent', 'selector': 'lib-consumer-detail'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'ExampleComponent', 'selector': ''},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IonIconComponent', 'selector': 'ion-icon'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'map'},{'name': 'MapSelectViewComponent', 'selector': 'lib-map-select-view'},{'name': 'ResultDataViewComponent', 'selector': 'lib-result-data-view'},{'name': 'SideBarComponent', 'selector': 'app-side-bar'},{'name': 'WaterRightDetailComponent', 'selector': 'lib-water-right-detail'}];\n    var DIRECTIVES = [{'name': 'BulmaIsToggleableDirective', 'selector': '.is-toggleable'},{'name': 'LangSelectorDirective', 'selector': '[selectLang]'}];\n    var ACTUAL_COMPONENT = {'name': 'ErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ErrorInterceptor.html":{"url":"interceptors/ErrorInterceptor.html","title":"interceptor - ErrorInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  ErrorInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/core/src/app/frame/error/error.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                Interceptor for http request.\nThis one is set as the last element to capture http error that were not\nhandled somewhere else.\nThese unhandled errors will be passed to the ErrorService.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(service: ErrorService)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/core/src/app/frame/error/error.interceptor.ts:21\n                            \n                        \n\n                \n                    \n                            Constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        ErrorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Error service to pass the errors into\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/frame/error/error.interceptor.ts:34\n                \n            \n\n\n            \n                \n                    Intercept all returning errors and pass them to the ErrorService.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Request to check\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Next interceptor, usually none for this interceptor\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest\n} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\nimport {USE_ERROR_CURTAIN} from \"common\";\nimport {catchError, throwError, Observable} from \"rxjs\";\n\nimport {ErrorService} from \"./error.service\";\n\n/**\n * Interceptor for http request.\n * This one is set as the last element to capture http error that were not\n * handled somewhere else.\n *\n * These unhandled errors will be passed to the {@link ErrorService}.\n */\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n\n  /**\n   * Constructor.\n   * @param service Error service to pass the errors into\n   */\n  constructor(private service: ErrorService) {}\n\n  /**\n   * Intercept all returning errors and pass them to the {@link ErrorService}.\n   * @param request Request to check\n   * @param next Next interceptor, usually none for this interceptor\n   */\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    let context = request.context.get(USE_ERROR_CURTAIN);\n    if (!context) return next.handle(request);\n\n    return next.handle(request).pipe(\n      catchError(requestError => {\n        if (!requestError.ok) {\n          console.log(requestError);\n          this.service.throwError({\n            httpCode: requestError.error.httpCode ?? requestError.status,\n            httpError: requestError.error.httpError ?? requestError.statusText,\n            error: requestError.error.error,\n            errorName: requestError.error.errorName ?? requestError.name,\n            errorDescription: requestError.error.errorDescription ?? requestError.message\n          });\n        }\n        return throwError(() => new Error(requestError));\n      })\n    )\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorService.html":{"url":"injectables/ErrorService.html","title":"injectable - ErrorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ErrorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/core/src/app/frame/error/error.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Error service to collect errors from the ErrorInterceptor.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorPresent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                throwError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/core/src/app/frame/error/error.service.ts:13\n                            \n                        \n\n                \n                    \n                            Constructor.\nThis also creates an event handler on the NavigationStart event in\norder to reset the error presence.\n(Set errorPresent to false.)\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router to subscribe to events\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        throwError\n                        \n                    \n                \n            \n            \n                \nthrowError(error: Error)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/frame/error/error.service.ts:35\n                \n            \n\n\n            \n                \n                    Emit an error.\nThis is used by the ErrorInterceptor to pass errors to this\nservice.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                Error\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Error to pass\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorPresent\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/core/src/app/frame/error/error.service.ts:13\n                        \n                    \n\n            \n                \n                    Event emitter whether an event is currently present.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import {EventEmitter, Injectable, Output} from \"@angular/core\";\nimport {ActivatedRoute, Router, NavigationStart} from \"@angular/router\";\n\nimport {Error} from \"./error\";\n\n/** Error service to collect errors from the {@link ErrorInterceptor}. */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ErrorService {\n\n  /** Event emitter whether an event is currently present. */\n  errorPresent = new EventEmitter();\n\n  /**\n   * Constructor.\n   *\n   * This also creates an event handler on the {@link NavigationStart} event in\n   * order to reset the error presence.\n   * (Set {@link errorPresent} to `false`.)\n   * @param router Router to subscribe to events\n   */\n  constructor(private router: Router) {\n    this.router.events.subscribe(event => {\n      if (event instanceof NavigationStart) this.errorPresent.emit(false);\n    })\n  }\n\n  /**\n   * Emit an error.\n   * This is used by the {@link ErrorInterceptor} to pass errors to this\n   * service.\n   * @param error Error to pass\n   */\n  throwError(error: Error) {\n    this.errorPresent.emit(error);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ExampleComponent.html":{"url":"components/ExampleComponent.html","title":"component - ExampleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ExampleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    wisdom_modules/example/src/lib/example.component.ts\n\n\n\n    \n        Description\n    \n    \n        Minimalistic example Component.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                templateUrl\n                example.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import {Component, OnInit} from \"@angular/core\";\n\n/** Minimalistic example Component. */\n@Component({\n  templateUrl: \"example.component.html\"\n})\nexport class ExampleComponent {\n\n}\n\n    \n\n    \n        \n\n  \n    Example here\n  \n  \n    \n      \n    \n  \n  \n    \n      {{\"example.example.key\" | translate}}\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Example here                                {{\"example.example.key\" | translate}}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'breadcrumbs'},{'name': 'ConsumerDetailComponent', 'selector': 'lib-consumer-detail'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'ExampleComponent', 'selector': ''},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IonIconComponent', 'selector': 'ion-icon'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'map'},{'name': 'MapSelectViewComponent', 'selector': 'lib-map-select-view'},{'name': 'ResultDataViewComponent', 'selector': 'lib-result-data-view'},{'name': 'SideBarComponent', 'selector': 'app-side-bar'},{'name': 'WaterRightDetailComponent', 'selector': 'lib-water-right-detail'}];\n    var DIRECTIVES = [{'name': 'BulmaIsToggleableDirective', 'selector': '.is-toggleable'},{'name': 'LangSelectorDirective', 'selector': '[selectLang]'}];\n    var ACTUAL_COMPONENT = {'name': 'ExampleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ExampleModule.html":{"url":"modules/ExampleModule.html","title":"module - ExampleModule","body":"\n                   \n\n\n\n\n    Modules\n    ExampleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ExampleModule\n\n\n\ncluster_ExampleModule_imports\n\n\n\ncluster_ExampleModule_exports\n\n\n\ncluster_ExampleModule_declarations\n\n\n\n\nExampleComponent\n\nExampleComponent\n\n\n\nExampleModule\n\nExampleModule\n\nExampleModule -->\n\nExampleComponent->ExampleModule\n\n\n\n\n\nExampleComponent \n\nExampleComponent \n\nExampleComponent  -->\n\nExampleModule->ExampleComponent \n\n\n\n\n\nWisdomModule\n\nWisdomModule\n\nExampleModule -->\n\nWisdomModule->ExampleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            wisdom_modules/example/src/lib/example.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Minimalistic example module.\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ExampleComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            WisdomModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ExampleComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from \"@angular/core\";\nimport {TranslateModule} from \"@ngx-translate/core\";\nimport {WisdomModule} from \"common\";\n\nimport {ExampleComponent} from \"./example.component\";\n\n/** Minimalistic example module. */\n@NgModule({\n  declarations: [\n    ExampleComponent\n  ],\n  imports: [\n    WisdomModule,\n    TranslateModule\n  ],\n  exports: [\n    ExampleComponent\n  ]\n})\nexport class ExampleModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExampleService.html":{"url":"injectables/ExampleService.html","title":"injectable - ExampleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ExampleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/example/src/lib/example.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Unused but exported service as example.\n\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\n\n/** Unused but exported service as example. */\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ExampleService {\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ForecastEntry.html":{"url":"interfaces/ForecastEntry.html","title":"interface - ForecastEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ForecastEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/water-usage-forecasts/src/lib/services/water-usage-forecasts.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            forecast\n                                        \n                                \n                                \n                                        \n                                            reference\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        forecast\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        forecast:         Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Record\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reference\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reference:         Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Record\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {HttpClient, HttpContext, HttpHeaders} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\nimport {Router} from \"@angular/router\";\nimport {USE_API_URL, USE_LOADER} from \"common\";\nimport {Observable} from \"rxjs\";\n\n/** Route of the API access. */\nconst API_URL = \"water-usage-forecasts\";\n\n/** Possible forecast calculation methods. */\nexport enum ForecastType {\n  LOGARITHMIC = \"logarithmic\",\n  LINEAR = \"linear\",\n  POLYNOMIAL = \"polynomial\"\n}\n\n/** Interface for the data received from the server. */\nexport interface ForecastResponse {\n  /**\n   * The results in accumulated form so that the client doesn't have to\n   * calculate it itself.\n   */\n  accumulations: {\n    /** Accumulations by consumer group. */\n    consumerGroup: ForecastEntry,\n    /** Accumulations by municipal. */\n    municipal: ForecastEntry\n  },\n  partials: {\n    consumerGroup: {\n      key: string,\n      name: string\n    },\n    municipal: ForecastResponse[\"partials\"][0][\"consumerGroup\"],\n    referenceUsages: {\n      equation: string,\n      float: number,\n      model: \"logarithmic\" | \"linear\" | \"polynomial\",\n      usages: {\n        amounts: number[],\n        end: number,\n        start: number\n      }\n    },\n    forecast: ForecastResponse[\"partials\"][0][\"referenceUsages\"]\n  }[]\n}\n\nexport interface ForecastEntry {\n  forecast: Record,\n  reference: Record\n}\n\nexport interface ForecastUsage {\n  displayName: string,\n  endYear: number,\n  startYear: number,\n  usages: number[]\n}\n\n/**\n * Service to interact with server providing the data to display.\n */\n@Injectable({\n  providedIn: \"root\"\n})\nexport class WaterUsageForecastsService {\n\n  constructor(\n    private http: HttpClient,\n    private router: Router\n  ) {}\n\n  fetchForecastData(\n    key: string | string[],\n    forecastModel: ForecastType,\n    consumerGroup?:\n      \"businesses\" |\n      \"households_and_small_businesses\" |\n      \"farming_forestry_fishing_industry\" |\n      \"public_institutions\" |\n      \"all\"\n  ): Observable {\n    let url = this.router.parseUrl(`${API_URL}/${forecastModel}`);\n    if (consumerGroup) url.queryParams[\"consumerGroup\"] = consumerGroup;\n    url.queryParams[\"key\"] = key;\n    return this.http.get(url.toString(), {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\"\n      }),\n      responseType: \"json\",\n      context: new HttpContext()\n        .set(USE_API_URL, true)\n        .set(USE_LOADER, \"water-usage-forecasts.display.loading\")\n    }) as Observable;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ForecastResponse.html":{"url":"interfaces/ForecastResponse.html","title":"interface - ForecastResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ForecastResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/water-usage-forecasts/src/lib/services/water-usage-forecasts.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the data received from the server.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accumulations\n                                        \n                                \n                                \n                                        \n                                            partials\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accumulations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accumulations:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The results in accumulated form so that the client doesn't have to\ncalculate it itself.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        partials\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        partials:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {HttpClient, HttpContext, HttpHeaders} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\nimport {Router} from \"@angular/router\";\nimport {USE_API_URL, USE_LOADER} from \"common\";\nimport {Observable} from \"rxjs\";\n\n/** Route of the API access. */\nconst API_URL = \"water-usage-forecasts\";\n\n/** Possible forecast calculation methods. */\nexport enum ForecastType {\n  LOGARITHMIC = \"logarithmic\",\n  LINEAR = \"linear\",\n  POLYNOMIAL = \"polynomial\"\n}\n\n/** Interface for the data received from the server. */\nexport interface ForecastResponse {\n  /**\n   * The results in accumulated form so that the client doesn't have to\n   * calculate it itself.\n   */\n  accumulations: {\n    /** Accumulations by consumer group. */\n    consumerGroup: ForecastEntry,\n    /** Accumulations by municipal. */\n    municipal: ForecastEntry\n  },\n  partials: {\n    consumerGroup: {\n      key: string,\n      name: string\n    },\n    municipal: ForecastResponse[\"partials\"][0][\"consumerGroup\"],\n    referenceUsages: {\n      equation: string,\n      float: number,\n      model: \"logarithmic\" | \"linear\" | \"polynomial\",\n      usages: {\n        amounts: number[],\n        end: number,\n        start: number\n      }\n    },\n    forecast: ForecastResponse[\"partials\"][0][\"referenceUsages\"]\n  }[]\n}\n\nexport interface ForecastEntry {\n  forecast: Record,\n  reference: Record\n}\n\nexport interface ForecastUsage {\n  displayName: string,\n  endYear: number,\n  startYear: number,\n  usages: number[]\n}\n\n/**\n * Service to interact with server providing the data to display.\n */\n@Injectable({\n  providedIn: \"root\"\n})\nexport class WaterUsageForecastsService {\n\n  constructor(\n    private http: HttpClient,\n    private router: Router\n  ) {}\n\n  fetchForecastData(\n    key: string | string[],\n    forecastModel: ForecastType,\n    consumerGroup?:\n      \"businesses\" |\n      \"households_and_small_businesses\" |\n      \"farming_forestry_fishing_industry\" |\n      \"public_institutions\" |\n      \"all\"\n  ): Observable {\n    let url = this.router.parseUrl(`${API_URL}/${forecastModel}`);\n    if (consumerGroup) url.queryParams[\"consumerGroup\"] = consumerGroup;\n    url.queryParams[\"key\"] = key;\n    return this.http.get(url.toString(), {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\"\n      }),\n      responseType: \"json\",\n      context: new HttpContext()\n        .set(USE_API_URL, true)\n        .set(USE_LOADER, \"water-usage-forecasts.display.loading\")\n    }) as Observable;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ForecastUsage.html":{"url":"interfaces/ForecastUsage.html","title":"interface - ForecastUsage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ForecastUsage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/water-usage-forecasts/src/lib/services/water-usage-forecasts.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            displayName\n                                        \n                                \n                                \n                                        \n                                            endYear\n                                        \n                                \n                                \n                                        \n                                            startYear\n                                        \n                                \n                                \n                                        \n                                            usages\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endYear\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        endYear:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startYear\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startYear:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        usages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        usages:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {HttpClient, HttpContext, HttpHeaders} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\nimport {Router} from \"@angular/router\";\nimport {USE_API_URL, USE_LOADER} from \"common\";\nimport {Observable} from \"rxjs\";\n\n/** Route of the API access. */\nconst API_URL = \"water-usage-forecasts\";\n\n/** Possible forecast calculation methods. */\nexport enum ForecastType {\n  LOGARITHMIC = \"logarithmic\",\n  LINEAR = \"linear\",\n  POLYNOMIAL = \"polynomial\"\n}\n\n/** Interface for the data received from the server. */\nexport interface ForecastResponse {\n  /**\n   * The results in accumulated form so that the client doesn't have to\n   * calculate it itself.\n   */\n  accumulations: {\n    /** Accumulations by consumer group. */\n    consumerGroup: ForecastEntry,\n    /** Accumulations by municipal. */\n    municipal: ForecastEntry\n  },\n  partials: {\n    consumerGroup: {\n      key: string,\n      name: string\n    },\n    municipal: ForecastResponse[\"partials\"][0][\"consumerGroup\"],\n    referenceUsages: {\n      equation: string,\n      float: number,\n      model: \"logarithmic\" | \"linear\" | \"polynomial\",\n      usages: {\n        amounts: number[],\n        end: number,\n        start: number\n      }\n    },\n    forecast: ForecastResponse[\"partials\"][0][\"referenceUsages\"]\n  }[]\n}\n\nexport interface ForecastEntry {\n  forecast: Record,\n  reference: Record\n}\n\nexport interface ForecastUsage {\n  displayName: string,\n  endYear: number,\n  startYear: number,\n  usages: number[]\n}\n\n/**\n * Service to interact with server providing the data to display.\n */\n@Injectable({\n  providedIn: \"root\"\n})\nexport class WaterUsageForecastsService {\n\n  constructor(\n    private http: HttpClient,\n    private router: Router\n  ) {}\n\n  fetchForecastData(\n    key: string | string[],\n    forecastModel: ForecastType,\n    consumerGroup?:\n      \"businesses\" |\n      \"households_and_small_businesses\" |\n      \"farming_forestry_fishing_industry\" |\n      \"public_institutions\" |\n      \"all\"\n  ): Observable {\n    let url = this.router.parseUrl(`${API_URL}/${forecastModel}`);\n    if (consumerGroup) url.queryParams[\"consumerGroup\"] = consumerGroup;\n    url.queryParams[\"key\"] = key;\n    return this.http.get(url.toString(), {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\"\n      }),\n      responseType: \"json\",\n      context: new HttpContext()\n        .set(USE_API_URL, true)\n        .set(USE_LOADER, \"water-usage-forecasts.display.loading\")\n    }) as Observable;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FrameComponent.html":{"url":"components/FrameComponent.html","title":"component - FrameComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FrameComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    wisdom_modules/core/src/app/frame/frame.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component framing the application.\nEvery site except the login page will display this frame.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-frame\n            \n\n\n\n\n            \n                templateUrl\n                ./frame.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hideSidebar\n                                \n                                \n                                    hideUserBar\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, authStorage: AuthStorageService, router: Router, settingsStorage: SettingsStorageService)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/core/src/app/frame/frame.component.ts:19\n                            \n                        \n\n                \n                    \n                            Constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to interact with the auth server\n\n                                                        \n                                                \n                                                \n                                                        authStorage\n                                                  \n                                                        \n                                                                        AuthStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Storage of the keys for revoking\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router to route the user on logout\n\n                                                        \n                                                \n                                                \n                                                        settingsStorage\n                                                  \n                                                        \n                                                                        SettingsStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Storage of the settings\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/frame/frame.component.ts:54\n                \n            \n\n\n            \n                \n                    Log the user out and bring the user to the login page.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hideSidebar\n                    \n                \n\n                \n                    \n                        gethideSidebar()\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/frame/frame.component.ts:36\n                                \n                            \n                    \n                        \n                                Get hide sidebar setting.\n\n\n                        \n                    \n\n                \n                    \n                        sethideSidebar(setting: boolean)\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/frame/frame.component.ts:40\n                                \n                            \n                    \n                        \n                                Set hide sidebar setting.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            setting\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        hideUserBar\n                    \n                \n\n                \n                    \n                        gethideUserBar()\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/frame/frame.component.ts:45\n                                \n                            \n                    \n                        \n                                Get hide user bar setting.\n\n\n                        \n                    \n\n                \n                    \n                        sethideUserBar(setting: boolean)\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/frame/frame.component.ts:49\n                                \n                            \n                    \n                        \n                                Set hide user bar setting.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            setting\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {Component, OnInit} from \"@angular/core\";\nimport {Router} from \"@angular/router\";\n\nimport {AuthService} from \"../auth/auth.service\";\nimport {AuthStorageService} from \"../auth/auth-storage.service\";\nimport {SettingsStorageService} from \"../settings-storage.service\";\n\n// TODO: add further nesting - https://bulma.io/documentation/components/menu/\n\n/**\n * Component framing the application.\n *\n * Every site except the login page will display this frame.\n */\n@Component({\n  selector: \"app-frame\",\n  templateUrl: \"./frame.component.html\"\n})\nexport class FrameComponent {\n\n  /**\n   * Constructor.\n   * @param authService Service to interact with the auth server\n   * @param authStorage Storage of the keys for revoking\n   * @param router Router to route the user on logout\n   * @param settingsStorage Storage of the settings\n   */\n  constructor(\n    private authService: AuthService,\n    private authStorage: AuthStorageService,\n    private router: Router,\n    private settingsStorage: SettingsStorageService\n  ) {}\n\n  /** Get hide sidebar setting. */\n  get hideSidebar() {\n    return this.settingsStorage.hideSidebar || false;\n  }\n  /** Set hide sidebar setting. */\n  set hideSidebar(setting: boolean) {\n    this.settingsStorage.hideSidebar = setting;\n  }\n\n  /** Get hide user bar setting. */\n  get hideUserBar() {\n    return this.settingsStorage.hideUserBar || false;\n  }\n  /** Set hide user bar setting. */\n  set hideUserBar(setting: boolean) {\n    this.settingsStorage.hideUserBar = setting;\n  }\n\n  /** Log the user out and bring the user to the login page. */\n  logout() {\n    this.authService.logout(this.authStorage.accessToken!).subscribe(() => {\n      this.authStorage.clear();\n      this.router.navigate([\"login\"], {replaceUrl: true})\n        .catch(e => console.error(e));\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n  \n\n\n  \n    \n      \n        \n          \n            \n              \n                \n              \n              \n                WISdoM-OSS\n              \n            \n          \n        \n      \n      \n        \n          \n            \n              \n                \n              \n            \n          \n        \n        \n          \n            \n              \n                \n              \n              \n            {{\"lang\" | translate}}\n          \n            \n            \n              \n                \n                  \n                    \n                      \n                    \n                    \n                      Deutsch\n                    \n                  \n                \n              \n              \n                \n                  \n                    \n                      \n                    \n                    \n                      English\n                    \n                  \n                \n              \n            \n          \n          \n            \n              \n                \n                  \n                \n              \n            \n          \n        \n      \n    \n    \n      \n        \n      \n      \n        \n          \n            \n              \n                \n              \n            \n          \n        \n      \n      \n        \n          {{\"core.frame.account\" | translate}}\n          \n            \n              \n                \n                  \n                    \n                  \n                  \n                    {{\"core.frame.logout\" | translate}}\n                  \n                \n              \n            \n          \n          {{\"core.frame.administration\" | translate}}\n          \n            \n              \n                \n                  \n                    \n                  \n                  \n                    {{\"core.frame.userManagement\" | translate}}\n                  \n                \n              \n            \n            \n              \n                \n                  \n                    \n                  \n                  \n                    {{\"core.frame.permissions\" | translate}}\n                  \n                \n              \n            \n            \n              \n                \n                  \n                    \n                  \n                  \n                    {{\"core.frame.roles\" | translate}}\n                  \n                \n              \n            \n          \n          \n            \n              \n              \n            \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                      WISdoM-OSS                                                                                                                                                                                                                                                                    {{\"lang\" | translate}}                                                                                                                                                                                          Deutsch                                                                                                                                                                                                                            English                                                                                                                                                                                                                                                                                                                                                                                                          {{\"core.frame.account\" | translate}}                                                                                                                                                  {{\"core.frame.logout\" | translate}}                                                                                {{\"core.frame.administration\" | translate}}                                                                                                                                                  {{\"core.frame.userManagement\" | translate}}                                                                                                                                                                                                    {{\"core.frame.permissions\" | translate}}                                                                                                                                                                                                    {{\"core.frame.roles\" | translate}}                                                                                                                                                                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'breadcrumbs'},{'name': 'ConsumerDetailComponent', 'selector': 'lib-consumer-detail'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'ExampleComponent', 'selector': ''},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IonIconComponent', 'selector': 'ion-icon'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'map'},{'name': 'MapSelectViewComponent', 'selector': 'lib-map-select-view'},{'name': 'ResultDataViewComponent', 'selector': 'lib-result-data-view'},{'name': 'SideBarComponent', 'selector': 'app-side-bar'},{'name': 'WaterRightDetailComponent', 'selector': 'lib-water-right-detail'}];\n    var DIRECTIVES = [{'name': 'BulmaIsToggleableDirective', 'selector': '.is-toggleable'},{'name': 'LangSelectorDirective', 'selector': '[selectLang]'}];\n    var ACTUAL_COMPONENT = {'name': 'FrameComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IonIconComponent.html":{"url":"components/IonIconComponent.html","title":"component - IonIconComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IonIconComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    wisdom_modules/common/src/lib/ion-icon/ion-icon.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component is used to inject the icons from IonIcons.\nIonIcons uses WebComponents to display the icons.\nTo allow to use them here, this component adds the icons via js.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ion-icon\n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    name\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(elRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/common/src/lib/ion-icon/ion-icon.component.ts:12\n                            \n                        \n\n                \n                    \n                            Constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        elRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Element reference to itself\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/ion-icon/ion-icon.component.ts:31\n                            \n                        \n                \n                    \n                        The name of the icon.\nIs not used by angular but needed to render the correct icon and necessary\nso that angular stops complaining.\nThis setter also directly modifies the native element to have the \"name\"\ndirectly as an attribute which is needed to make ion icons work.\nYou can find the names at the official website\nhttps://ionic.io/ionicons.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n\n                \n                    \n                        setname(name: string | undefined)\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/common/src/lib/ion-icon/ion-icon.component.ts:31\n                                \n                            \n                    \n                        \n                                The name of the icon.\nIs not used by angular but needed to render the correct icon and necessary\nso that angular stops complaining.\nThis setter also directly modifies the native element to have the \"name\"\ndirectly as an attribute which is needed to make ion icons work.\nYou can find the names at the official website\nhttps://ionic.io/ionicons.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            name\n                                                    \n                                                            \n                                                                        string | undefined\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {Component, Input, ElementRef} from \"@angular/core\";\n\n/**\n * This component is used to inject the icons from IonIcons.\n * IonIcons uses WebComponents to display the icons.\n * To allow to use them here, this component adds the icons via js.\n */\n@Component({\n  selector: \"ion-icon\",\n  template: \"\"\n})\nexport class IonIconComponent {\n\n  /**\n   * Constructor.\n   * @param elRef Element reference to itself\n   */\n  constructor(private elRef: ElementRef) {}\n\n  /**\n   * The name of the icon.\n   * Is not used by angular but needed to render the correct icon and necessary\n   * so that angular stops complaining.\n   *\n   * This setter also directly modifies the native element to have the \"name\"\n   * directly as an attribute which is needed to make ion icons work.\n   *\n   * You can find the names at the official website\n   * {@link https://ionic.io/ionicons}.\n   */\n  @Input() set name(name: string | undefined) {\n    this.elRef.nativeElement?.setAttribute(\"name\", name);\n  };\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'breadcrumbs'},{'name': 'ConsumerDetailComponent', 'selector': 'lib-consumer-detail'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'ExampleComponent', 'selector': ''},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IonIconComponent', 'selector': 'ion-icon'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'map'},{'name': 'MapSelectViewComponent', 'selector': 'lib-map-select-view'},{'name': 'ResultDataViewComponent', 'selector': 'lib-result-data-view'},{'name': 'SideBarComponent', 'selector': 'app-side-bar'},{'name': 'WaterRightDetailComponent', 'selector': 'lib-water-right-detail'}];\n    var DIRECTIVES = [{'name': 'BulmaIsToggleableDirective', 'selector': '.is-toggleable'},{'name': 'LangSelectorDirective', 'selector': '[selectLang]'}];\n    var ACTUAL_COMPONENT = {'name': 'IonIconComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/LangSelectorDirective.html":{"url":"directives/LangSelectorDirective.html","title":"directive - LangSelectorDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  LangSelectorDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/core/src/app/i18n/lang-selector.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                Directive to set the currently displayed language.\n\n            \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selectLang]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clickLangSelect\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectLang\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/core/src/app/i18n/lang-selector.directive.ts:8\n                            \n                        \n\n                \n                    \n                            Constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to update the current language\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        selectLang\n                    \n                \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/core/src/app/i18n/lang-selector.directive.ts:17\n                            \n                        \n                \n                    \n                        The language key that the translation service should use.\n\n                    \n                \n            \n        \n\n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            click\n                        \n                        \n                    \n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/i18n/lang-selector.directive.ts:24\n                \n            \n\n\n            \n                \n                    Upon clicking on the element with this directive the lang of the\ntranslation service updates with the given language key.\n\n\n                \n            \n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clickLangSelect\n                        \n                    \n                \n            \n            \n                \nclickLangSelect()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('click')\n                \n            \n\n            \n                \n                    Defined in wisdom_modules/core/src/app/i18n/lang-selector.directive.ts:24\n                \n            \n\n\n            \n                \n                    Upon clicking on the element with this directive the lang of the\ntranslation service updates with the given language key.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import {Directive, Input, HostListener} from \"@angular/core\";\nimport {TranslateService} from \"@ngx-translate/core\";\n\n/** Directive to set the currently displayed language. */\n@Directive({\n  selector: \"[selectLang]\"\n})\nexport class LangSelectorDirective {\n\n  /**\n   * Constructor.\n   * @param translateService Service to update the current language\n   */\n  constructor(private translateService: TranslateService) {}\n\n  /** The language key that the translation service should use. */\n  @Input(\"selectLang\") lang: string | undefined;\n\n  /**\n   * Upon clicking on the element with this directive the lang of the\n   * translation service updates with the given language key.\n   */\n  @HostListener(\"click\")\n  clickLangSelect() {\n    if (!this.lang) return;\n    this.translateService.use(this.lang);\n    globalThis.localStorage.setItem(\"lang\", this.lang);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LayerData.html":{"url":"interfaces/LayerData.html","title":"interface - LayerData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LayerData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/common/src/lib/map/layer-data.ts\n        \n\n\n            \n                Description\n            \n            \n                Type to represent layer data received from the geo data server.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            box\n                                        \n                                \n                                \n                                        \n                                            shapes\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        box\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        box:     [, , , ]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [, , , ]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Corner coordinates of a box containing all the shapes this displays.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shapes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        shapes:         ShapeData[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ShapeData[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List of shapes.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import * as L from \"leaflet\";\n\n/**\n * GeoJSON data type used by Leaflet.\n * @private\n */\nexport type GeoJsonObject = Parameters[0];\n\n/** Type to represent a single shape with all of its metadata. */\nexport interface ShapeData {\n  /** Name of the shape. */\n  name: string,\n  /** Key of the shape. */\n  key: string,\n  /** Nomenclature of Territorial Units code of the shape. */\n  nutsKey: string,\n  /** GeoJson representing the shape. */\n  geoJson: GeoJsonObject\n}\n\n/** Type to represent layer data received from the geo data server. */\nexport interface LayerData {\n  /** Corner coordinates of a box containing all the shapes this displays. */\n  box: [[number, number], [number, number], [number, number], [number, number]],\n  /** List of shapes. */\n  shapes: ShapeData[]\n}\n\nexport default LayerData;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoaderComponent.html":{"url":"components/LoaderComponent.html","title":"component - LoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    wisdom_modules/core/src/app/frame/loader/loader.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component covering the main container with a loading screen while we wait for\nservices to respond.\nThis will display an animation and possibly some loading texts.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-loader\n            \n\n            \n                styleUrls\n                ./loader.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./loader.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                displayTexts\n                            \n                            \n                                isLoading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: LoaderService)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/core/src/app/frame/loader/loader.component.ts:16\n                            \n                        \n\n                \n                    \n                            Constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        LoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to handle communication efforts\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/frame/loader/loader.component.ts:33\n                \n            \n\n\n            \n                \n                    On init this should subscribe to the service in order to update the loading\nscreen.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        displayTexts\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/core/src/app/frame/loader/loader.component.ts:27\n                        \n                    \n\n            \n                \n                    The texts to display while loading.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/core/src/app/frame/loader/loader.component.ts:25\n                        \n                    \n\n            \n                \n                    Whether the loader should be active.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit, AfterViewInit} from \"@angular/core\";\n\nimport {LoaderService} from \"./loader.service\";\n\n/**\n * Component covering the main container with a loading screen while we wait for\n * services to respond.\n *\n * This will display an animation and possibly some loading texts.\n */\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.scss']\n})\nexport class LoaderComponent implements OnInit {\n\n  /**\n   * Constructor.\n   * @param service Service to handle communication efforts\n   */\n  constructor(private service: LoaderService) {}\n\n  /** Whether the loader should be active. */\n  isLoading = false;\n  /** The texts to display while loading. */\n  displayTexts: string[] = [];\n\n  /**\n   * On init this should subscribe to the service in order to update the loading\n   * screen.\n   */\n  ngOnInit(): void {\n    this.service.loading.subscribe(value => this.isLoading = value);\n    this.service.displayTexts.subscribe(values => this.displayTexts = values);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n      \n        \n          \n        \n              \n          \n        \n              \n          \n        \n      \n      \n      {{text | translate}}\n    \n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./loader.component.scss\n                \n                .item {\n  position: relative;\n  top: 0;\n  -webkit-animation: bounce 1s infinite ease-in-out;\n  animation: bounce 1s infinite ease-in-out;\n}\n\n.item:nth-child(1) {\n  -webkit-animation-delay: -1.4s;\n  animation-delay: 0s - 1s;\n}\n.item:nth-child(2) {\n  -webkit-animation-delay: -0.7s;\n  animation-delay: 0.3s - 1s;\n}\n.item:nth-child(3) {\n  -webkit-animation-delay: -0s;\n  animation-delay: 0.6s - 1;\n}\n\n\n@-webkit-keyframes bounce {\n  0%, 100% {\n    top: -15px;\n    opacity: 0.8;\n  }\n  50% {\n    top: 15px;\n    opacity: 1;\n  }\n}\n\n@keyframes bounce {\n  0%, 100% {\n    top: -10px;\n    opacity: 0.8;\n  }\n  50% {\n    top: 10px;\n    opacity: 1;\n  }\n}\n\n.loader-container {\n  transition: height 0.8s ease;\n  z-index: 2000;\n}\n\n.main-container {\n  height: calc(100vh - 56px);\n  display: grid;\n  overflow-y: scroll;\n}\n\n.main-container > div {\n  grid-column: 1;\n  grid-row: 1;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                            {{text | translate}}              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'breadcrumbs'},{'name': 'ConsumerDetailComponent', 'selector': 'lib-consumer-detail'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'ExampleComponent', 'selector': ''},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IonIconComponent', 'selector': 'ion-icon'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'map'},{'name': 'MapSelectViewComponent', 'selector': 'lib-map-select-view'},{'name': 'ResultDataViewComponent', 'selector': 'lib-result-data-view'},{'name': 'SideBarComponent', 'selector': 'app-side-bar'},{'name': 'WaterRightDetailComponent', 'selector': 'lib-water-right-detail'}];\n    var DIRECTIVES = [{'name': 'BulmaIsToggleableDirective', 'selector': '.is-toggleable'},{'name': 'LangSelectorDirective', 'selector': '[selectLang]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/LoaderGuard.html":{"url":"guards/LoaderGuard.html","title":"guard - LoaderGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    LoaderGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                wisdom_modules/core/src/app/frame/loader/loader.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard to be called when a navigation starts.\nThis will reset the loader.\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                canActivateChild\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(service: LoaderService)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/core/src/app/frame/loader/loader.guard.ts:19\n                            \n                        \n\n                \n                    \n                            Constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        LoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to report the navigation change\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/frame/loader/loader.guard.ts:28\n                \n            \n\n\n            \n                \n                    Report on navigation change for direct routes.\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canActivateChild\n                        \n                    \n                \n            \n            \n                \ncanActivateChild()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/frame/loader/loader.guard.ts:34\n                \n            \n\n\n            \n                \n                    Report on navigation change for child routes.\n\n\n                \n            \n        \n    \n\n        \n\n\n        \n            import {Injectable} from \"@angular/core\";\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree, CanActivateChild\n} from \"@angular/router\";\nimport {Observable} from \"rxjs\";\n\nimport {LoaderService} from \"./loader.service\";\n\n/**\n * Guard to be called when a navigation starts.\n * This will reset the loader.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderGuard implements CanActivate, CanActivateChild {\n\n  /**\n   * Constructor.\n   * @param service Service to report the navigation change\n   */\n  constructor(private service: LoaderService) {}\n\n  /** Report on navigation change for direct routes. */\n  canActivate(): true {\n    this.service.clearLoading();\n    return true;\n  }\n\n  /** Report on navigation change for child routes. */\n  canActivateChild(): true {\n    this.service.clearLoading();\n    return true;\n  }\n\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/LoaderInterceptor.html":{"url":"interceptors/LoaderInterceptor.html","title":"interceptor - LoaderInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  LoaderInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/core/src/app/frame/loader/loader.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                Interceptor for the loading, this allows detecting load change.\nThis will report to the LoaderService when the USE_LOADER\ncontext is set.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(service: LoaderService)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/core/src/app/frame/loader/loader.interceptor.ts:23\n                            \n                        \n\n                \n                    \n                            Constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        LoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Loader service to report to\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/frame/loader/loader.interceptor.ts:39\n                \n            \n\n\n            \n                \n                    Check whether USE_LOADER is set.\nIf so, report to the service.\nWhen the request returns this also notifies the service.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Request to check\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Next interceptor\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpResponseBase,\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n  HttpErrorResponse,\n  HttpResponse\n} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\nimport {USE_LOADER} from \"common\";\nimport {tap, Observable} from \"rxjs\";\n\nimport {LoaderService} from \"./loader.service\";\n\n/**\n * Interceptor for the loading, this allows detecting load change.\n *\n * This will report to the {@link LoaderService} when the {@link USE_LOADER}\n * context is set.\n */\n@Injectable()\nexport class LoaderInterceptor implements HttpInterceptor {\n\n  /**\n   * Constructor.\n   * @param service Loader service to report to\n   */\n  constructor(private service: LoaderService) {}\n\n  /**\n   * Check whether {@link USE_LOADER} is set.\n   * If so, report to the service.\n   *\n   * When the request returns this also notifies the service.\n   * @param request Request to check\n   * @param next Next interceptor\n   */\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n    let context = request.context.get(USE_LOADER);\n    if (!context) return next.handle(request);\n\n    let observable = next.handle(request);\n    let promise = new Promise(resolve => {\n      observable = observable.pipe(tap({\n        next(value) {\n          if (value instanceof HttpResponse) {\n            return resolve(value);\n          }\n        },\n        error(err) {\n          if (err instanceof HttpErrorResponse) {\n            return resolve(err);\n          }\n        }\n      }))\n    });\n    if (typeof context == \"string\") this.service.addLoader(promise, context);\n    else this.service.addLoader(promise);\n    return observable;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoaderService.html":{"url":"injectables/LoaderService.html","title":"injectable - LoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/core/src/app/frame/loader/loader.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Loader service handling the communication between component and interceptor\nand guard.\nAll loading updates will be reported to this service.\nThis is then communicated to the component to display the loader or not.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _displayTexts\n                            \n                            \n                                    Private\n                                _loading\n                            \n                            \n                                    Private\n                                displayTextSubject\n                            \n                            \n                                    Private\n                                promises\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addLoader\n                            \n                            \n                                clearLoading\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    displayTexts\n                                \n                                \n                                    loading\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addLoader\n                        \n                    \n                \n            \n            \n                \naddLoader(toResolve: Promise, displayText?: string)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/frame/loader/loader.service.ts:49\n                \n            \n\n\n            \n                \n                    Add a loader to the currently awaited requests.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    toResolve\n                                    \n                                            Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Promise to wait for\n\n                                    \n                                \n                                \n                                    displayText\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional text to display under the loader animation\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearLoading\n                        \n                    \n                \n            \n            \n                \nclearLoading()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/frame/loader/loader.service.ts:67\n                \n            \n\n\n            \n                \n                    Clear all loading and ignore the updates of these requests.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _displayTexts\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map | string>\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/core/src/app/frame/loader/loader.service.ts:22\n                        \n                    \n\n            \n                \n                    Internally stored texts to display on the component.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/core/src/app/frame/loader/loader.service.ts:38\n                        \n                    \n\n            \n                \n                    Subject stating whether the app currently awaits requests.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        displayTextSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/core/src/app/frame/loader/loader.service.ts:27\n                        \n                    \n\n            \n                \n                     @link Subject} to display the loadings texts, to be used as\n Observable.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        promises\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Promise[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/core/src/app/frame/loader/loader.service.ts:17\n                        \n                    \n\n            \n                \n                    All request that we currently await.\n\n                \n            \n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        displayTexts\n                    \n                \n\n                \n                    \n                        getdisplayTexts()\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/frame/loader/loader.service.ts:30\n                                \n                            \n                    \n                        \n                                Texts to display on the component.\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        loading\n                    \n                \n\n                \n                    \n                        getloading()\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/frame/loader/loader.service.ts:40\n                                \n                            \n                    \n                        \n                                Observable stating whether the app currently awaits requests.\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\nimport {Observable, Subject} from \"rxjs\";\n\n/**\n * Loader service handling the communication between component and interceptor\n * and guard.\n *\n * All loading updates will be reported to this service.\n * This is then communicated to the component to display the loader or not.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderService {\n\n  /** All request that we currently await. */\n  private promises: Promise[] = [];\n  /**\n   * Internally stored texts to display on the component.\n   * @internal\n   */\n  private _displayTexts: Map, string> = new Map();\n  /**\n   *  @link Subject} to display the loadings texts, to be used as\n   *  {@link Observable}.\n   */\n  private displayTextSubject = new Subject();\n\n  /** Texts to display on the component. */\n  get displayTexts(): Observable {\n    return this.displayTextSubject.asObservable();\n  }\n\n  /**\n   * {@link Subject} stating whether the app currently awaits requests.\n   * @internal\n   */\n  private _loading = new Subject();\n  /** {@link Observable} stating whether the app currently awaits requests. */\n  get loading(): Observable {\n    return this._loading.asObservable();\n  }\n\n  /**\n   * Add a loader to the currently awaited requests.\n   * @param toResolve Promise to wait for\n   * @param displayText Optional text to display under the loader animation\n   */\n  addLoader(toResolve: Promise, displayText?: string) {\n    this.promises.push(toResolve);\n    if (displayText) {\n      this._displayTexts.set(toResolve, displayText);\n      this.displayTextSubject.next(Array.from(this._displayTexts.values()));\n    }\n    this._loading.next(true);\n    toResolve\n      .then(() => Promise.allSettled(this.promises))\n      .then(() => this._loading.next(false))\n      .then(() => {\n        this._displayTexts.delete(toResolve);\n        this.displayTextSubject.next(Array.from(this._displayTexts.values()));\n      })\n      .then(() => this.promises = []);\n  }\n\n  /** Clear all loading and ignore the updates of these requests. */\n  clearLoading() {\n    this.promises = [];\n    this._displayTexts.clear();\n    this.displayTextSubject.next([]);\n    this._loading.next(false);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    wisdom_modules/core/src/app/auth/login/login.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for the login page.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loginHasIssue\n                            \n                            \n                                passwordInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, authStorage: AuthStorageService, router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/core/src/app/auth/login/login.component.ts:21\n                            \n                        \n\n                \n                    \n                            Constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to interact with the auth server\n\n                                                        \n                                                \n                                                \n                                                        authStorage\n                                                  \n                                                        \n                                                                        AuthStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service containing the tokens\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router for routing the user after login\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The current route\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit(f: NgForm)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/auth/login/login.component.ts:45\n                \n            \n\n\n            \n                \n                    Function to call when the user submits the login.\nUpon successful login the user will be routed to the main page.\nUpon error the error message will be shown.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    f\n                                    \n                                                NgForm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The values of the login form\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loginHasIssue\n                        \n                    \n                \n            \n                \n                    \n                        Type :      | string\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/core/src/app/auth/login/login.component.ts:21\n                        \n                    \n\n            \n                \n                    Has the login currently some issue.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('passwordInput')\n                        \n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/core/src/app/auth/login/login.component.ts:18\n                        \n                    \n\n            \n                \n                    The password input html element.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {ViewChild, Component, OnInit, ElementRef} from \"@angular/core\";\nimport {NgForm} from \"@angular/forms\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\n\nimport {AuthService} from \"../auth.service\";\nimport {AuthStorageService} from \"../auth-storage.service\";\nimport PostOAuthToken400 from \"../response_types/login/PostOAuthToken400\";\nimport PostOAuthToken401 from \"../response_types/login/PostOAuthToken401\";\n\n/** Component for the login page. */\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"./login.component.html\"\n})\nexport class LoginComponent {\n\n  /** The password input html element. */\n  @ViewChild(\"passwordInput\") passwordInput!: ElementRef;\n\n  /** Has the login currently some issue. */\n  loginHasIssue: false | string = false;\n\n  /**\n   * Constructor.\n   * @param authService Service to interact with the auth server\n   * @param authStorage Service containing the tokens\n   * @param router Router for routing the user after login\n   * @param route The current route\n   */\n  constructor(\n    private authService: AuthService,\n    private authStorage: AuthStorageService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {}\n\n  /**\n   * Function to call when the user submits the login.\n   *\n   * Upon successful login the user will be routed to the main page.\n   *\n   * Upon error the error message will be shown.\n   * @param f The values of the login form\n   */\n  onSubmit(f: NgForm): void {\n    const valid = f.valid;\n    const {username, password} = f.value;\n    this.authService.login(username, password).subscribe({\n      next: response => {\n        this.authStorage.accessToken = response.access_token;\n        this.authStorage.refreshToken = response.refresh_token;\n        this.authStorage.scopes = response.scope;\n        this.authStorage.expiresIn = response.expires_in;\n        console.log(\"successfully logged in\");\n        let returnUrl = this.router.parseUrl(this.route.snapshot.queryParams[\"returnUrl\"] ?? \"\");\n        let queryParams = returnUrl.queryParams;\n        let route = returnUrl.toString().split(\"?\")[0];\n        this.router.navigate([route], {queryParams, replaceUrl: true}).catch(e => console.error(e));\n      },\n      error: errResponse => {\n        let error;\n        switch (errResponse.status) {\n          case 400:\n            error = errResponse.error as PostOAuthToken400;\n            console.error(error);\n            this.loginHasIssue = \"Kombination is nicht korrekt.\";\n            this.passwordInput?.nativeElement.select();\n            break;\n          case 401:\n            error = errResponse.error as PostOAuthToken401;\n            console.error(error);\n            throw errResponse;\n          default:\n            throw errResponse;\n        }\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n        \n          \n            WISdoM OSS\n            \n              \n                {{\"core.login.username\" | translate}}\n                \n                  \n                  \n                    \n                  \n                  \n                    \n                  \n                \n              \n              \n                {{\"core.login.password\" | translate}}\n                \n                  \n                  \n                    \n                  \n                  \n                    \n                  \n                \n              \n              \n                {{\"core.login.forgotPassword\" | translate}}\n              \n              \n                {{loginHasIssue}}\n              \n              \n                \n                  \n                    {{\"core.login.login\" | translate}}\n                  \n                \n              \n            \n          \n        \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                  WISdoM OSS                                          {{\"core.login.username\" | translate}}                                                                                                                                                                                                              {{\"core.login.password\" | translate}}                                                                                                                                                                                                              {{\"core.login.forgotPassword\" | translate}}                                            {{loginHasIssue}}                                                                                  {{\"core.login.login\" | translate}}                                                                                                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'breadcrumbs'},{'name': 'ConsumerDetailComponent', 'selector': 'lib-consumer-detail'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'ExampleComponent', 'selector': ''},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IonIconComponent', 'selector': 'ion-icon'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'map'},{'name': 'MapSelectViewComponent', 'selector': 'lib-map-select-view'},{'name': 'ResultDataViewComponent', 'selector': 'lib-result-data-view'},{'name': 'SideBarComponent', 'selector': 'app-side-bar'},{'name': 'WaterRightDetailComponent', 'selector': 'lib-water-right-detail'}];\n    var DIRECTIVES = [{'name': 'BulmaIsToggleableDirective', 'selector': '.is-toggleable'},{'name': 'LangSelectorDirective', 'selector': '[selectLang]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MapComponent.html":{"url":"components/MapComponent.html","title":"component - MapComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MapComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    wisdom_modules/common/src/lib/map/map.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for displaying maps.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                map\n            \n\n            \n                styleUrls\n                ./map.component.css\n            \n\n\n            \n                template\n                \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                center\n                            \n                            \n                                height\n                            \n                            \n                                    Private\n                                layerConfig\n                            \n                            \n                                    Private\n                                layerData\n                            \n                            \n                                    Private\n                                layerNames\n                            \n                            \n                                    Optional\n                                map\n                            \n                            \n                                    Private\n                                mapElement\n                            \n                            \n                                    Private\n                                markers\n                            \n                            \n                                    Private\n                                    Optional\n                                selectedGeoJsonLayer\n                            \n                            \n                                    Private\n                                    Optional\n                                selectedLayer\n                            \n                            \n                                    Private\n                                selectedShapes\n                            \n                            \n                                tileUrl\n                            \n                            \n                                zoom\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                emitSelection\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                center\n                            \n                            \n                                height\n                            \n                            \n                                layers\n                            \n                            \n                                layerSelectable\n                            \n                            \n                                markers\n                            \n                            \n                                scrollWheelZoom\n                            \n                            \n                                selectedColor\n                            \n                            \n                                tileUrl\n                            \n                            \n                                unselectedColor\n                            \n                            \n                                zoom\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    inputLayers\n                                \n                                \n                                    inputMarkers\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: MapService)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/common/src/lib/map/map.component.ts:185\n                            \n                        \n\n                \n                    \n                            Constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        MapService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to interact with the server for geo data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        center\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/map/map.component.ts:66\n                            \n                        \n                \n                    \n                        Input for the center coordinates of the map.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/map/map.component.ts:56\n                            \n                        \n                \n                    \n                        Input for the height of the map.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        layers\n                    \n                \n                \n                    \n                        Type :         LayerConfig\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/map/map.component.ts:131\n                            \n                        \n                \n                    \n                        Input for the layers that should be displayed.\nThe key of the record is layer key and is also emitted on the selection.\nThe value of the record is an array and the values of that should be the\nfollowing:\n\n  \n    The name of the layer, this will be only used to display a name of\n    the layer (may also be a translation key).\n    // TODO: actually implement translation here\n  \n  \n    This should be the resolution to display the layer at, this may also\nbe\n    null to display the keys directly without any shape intersection\n    resolving.\n  \n  \n    These should be the keys used to display the shapes from.\n    If the given keys are empty or null, this will display everything from\n    the give resolution.\n  \n\n\nAttention: The service needs at least one of the resolution or the\nkeys\nto properly respond.\n```html\n// TODO: update link when geo data docs update\nSee https://wisdom04.vlba.uni-oldenburg.de/repos/service-geo-data-rest/main/api/get-layer\n```\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        layerSelectable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/map/map.component.ts:153\n                            \n                        \n                \n                    \n                        Should the layers be selectable.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        markers\n                    \n                \n                \n                    \n                        Type :         Marker[]\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/map/map.component.ts:156\n                            \n                        \n                \n                    \n                        Markers that should be displayed on the map.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        scrollWheelZoom\n                    \n                \n                \n                    \n                        Type :     boolean | \"center\"\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/map/map.component.ts:79\n                            \n                        \n                \n                    \n                        Input for the option if the map should scroll zoom on mouse scroll.\nIf \"center\" is passed, the map will always zoom onto the center.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedColor\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"#d35a0c\"\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/map/map.component.ts:84\n                            \n                        \n                \n                    \n                        Input for a hex code selected shapes.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        tileUrl\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/map/map.component.ts:61\n                            \n                        \n                \n                    \n                        Input for the tile url of the map.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        unselectedColor\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"#1f5aec\"\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/map/map.component.ts:82\n                            \n                        \n                \n                    \n                        Input for a hex code for unselected shapes.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        zoom\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/map/map.component.ts:71\n                            \n                        \n                \n                    \n                        Input for the map zoom level.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/map/map.component.ts:181\n                            \n                        \n                \n                    \n                        Outputs the currently selected shapes.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        emitSelection\n                        \n                    \n                \n            \n            \n                \n                    \n                    emitSelection()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/common/src/lib/map/map.component.ts:352\n                \n            \n\n\n            \n                \n                    Internally used function to emit the currently selected shapes via the\nselected output.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/common/src/lib/map/map.component.ts:226\n                \n            \n\n\n            \n                \n                    Renders the map with the given input values.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/common/src/lib/map/map.component.ts:196\n                \n            \n\n\n            \n                \n                    While init this sets the input values to the inner, private values.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        center\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"53.1434501, 8.2145521\"\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/map/map.component.ts:68\n                        \n                    \n\n            \n                \n                    Center of the map, defaults to longitude and latitude of Oldenburg.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"500px\"\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/map/map.component.ts:58\n                        \n                    \n\n            \n                \n                    Height of map, defaults to 500px.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        layerConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject({})\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/map/map.component.ts:139\n                        \n                    \n\n            \n                \n                    Subject of the LayerConfig, to be used as\nObservable.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        layerData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject>\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject({})\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/map/map.component.ts:145\n                        \n                    \n\n            \n                \n                    Subject of the pairs of Layerkey and LayerData,\nto be used as Observable.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        layerNames\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Record\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/map/map.component.ts:150\n                        \n                    \n\n            \n                \n                    Subject of the layer names mapped by the LayerKey.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        map\n                        \n                    \n                \n            \n                \n                    \n                        Type :     L.Map\n\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/map/map.component.ts:163\n                        \n                    \n\n            \n                \n                    The leaflet map that is displayed here.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        mapElement\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('map')\n                        \n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/map/map.component.ts:53\n                        \n                    \n\n            \n                \n                    The ref to the map html element.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        markers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/map/map.component.ts:160\n                        \n                    \n\n            \n                \n                    Markers Subject to be used as Observable.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        selectedGeoJsonLayer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     L.Layer\n\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/map/map.component.ts:178\n                        \n                    \n\n            \n                \n                    The currently selected geo json layer.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        selectedLayer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LayerKey\n\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/map/map.component.ts:176\n                        \n                    \n\n            \n                \n                    The currently selected layer in the map control.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        selectedShapes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Record>\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/map/map.component.ts:170\n                        \n                    \n\n            \n                \n                    Internally holds all elements that are currently selected.\nThe set holds all keys of shapes currently selected.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tileUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"https://tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/map/map.component.ts:63\n                        \n                    \n\n            \n                \n                    Tile url of the map, defaults to the osm.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        zoom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 7\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/map/map.component.ts:73\n                        \n                    \n\n            \n                \n                    Zoom level of the map, defaults to 7.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        inputLayers\n                    \n                \n\n\n                \n                    \n                        setinputLayers(layerConfig: LayerConfig)\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/common/src/lib/map/map.component.ts:131\n                                \n                            \n                    \n                        \n                                Input for the layers that should be displayed.\nThe key of the record is layer key and is also emitted on the selection.\nThe value of the record is an array and the values of that should be the\nfollowing:\n\n  \n    The name of the layer, this will be only used to display a name of\n    the layer (may also be a translation key).\n    // TODO: actually implement translation here\n  \n  \n    This should be the resolution to display the layer at, this may also\nbe\n    null to display the keys directly without any shape intersection\n    resolving.\n  \n  \n    These should be the keys used to display the shapes from.\n    If the given keys are empty or null, this will display everything from\n    the give resolution.\n  \n\n\nAttention: The service needs at least one of the resolution or the\nkeys\nto properly respond.\n```html\n// TODO: update link when geo data docs update\nSee https://wisdom04.vlba.uni-oldenburg.de/repos/service-geo-data-rest/main/api/get-layer\n```\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            layerConfig\n                                                    \n                                                            \n                                                                            LayerConfig\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                        Example :\n                                            \n                                                &lt;map\n  height=&quot;70vh&quot;\n  [layers]=&quot;{\n    full_res: [&#39;All of municipal resolution&#39;, Resolution.MUNICIPAL, null],\n    only_keys: [&#39;Only show exactly these&#39;, null, [&#39;01&#39;, &#39;034030000000&#39;]],\n    mixed: [&#39;Show district resolution&#39;, Resolution.DISTRICT, [&#39;01&#39;,\n  &#39;034030000000&#39;]]\n  }&quot;\n&gt;&lt;/map&gt;\n\n// TODO: update link when geo data docs update\n                                            \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        inputMarkers\n                    \n                \n\n\n                \n                    \n                        setinputMarkers(markers: Marker[])\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/common/src/lib/map/map.component.ts:156\n                                \n                            \n                    \n                        \n                                Markers that should be displayed on the map.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            markers\n                                                    \n                                                            \n                                                                            Marker[]\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n  ViewChild,\n  Component,\n  EventEmitter,\n  OnInit,\n  AfterViewInit,\n  Input,\n  Output,\n  ElementRef\n} from \"@angular/core\";\nimport {BehaviorSubject, Subject} from \"rxjs\";\n\nimport * as L from \"leaflet\";\n\nimport {MapService} from \"./map.service\";\nimport LayerData from \"./layer-data\";\nimport {Resolution} from \"./resolution\";\nimport {Marker} from \"./marker\";\n\nimport * as LX from \"./invert-selection\";\n\nimport \"leaflet.markercluster\";\n\n/**\n * GeoJSON data type used by Leaflet.\n * @private\n */\ntype GeoJsonObject = Parameters[0];\n\n/** Type alias to enforce the meaning of the layer keys. */\ntype LayerKey = string;\n\n/** A layer config for the input of {@link MapComponent.inputLayers}. */\ntype LayerConfig = Record;\n\n/**\n * Component for displaying maps.\n */\n@Component({\n  selector: \"map\",\n  template: `\n    \n      \n    \n  `,\n  styleUrls: [\n    \"./map.component.css\"\n  ]\n})\nexport class MapComponent implements OnInit, AfterViewInit {\n\n  /** The ref to the map html element. */\n  @ViewChild(\"map\") private mapElement!: ElementRef;\n\n  /** Input for the height of the map. */\n  @Input(\"height\") inputHeight?: string;\n  /** Height of map, defaults to 500px. */\n  height = \"500px\";\n\n  /** Input for the tile url of the map. */\n  @Input(\"tileUrl\") inputTileUrl?: string;\n  /** Tile url of the map, defaults to the osm. */\n  tileUrl = \"https://tile.openstreetmap.org/{z}/{x}/{y}.png\";\n\n  /** Input for the center coordinates of the map. */\n  @Input(\"center\") inputCenter?: string;\n  /** Center of the map, defaults to longitude and latitude of Oldenburg. */\n  center = \"53.1434501, 8.2145521\";\n\n  /** Input for the map zoom level. */\n  @Input(\"zoom\") inputZoom?: string;\n  /** Zoom level of the map, defaults to 7. */\n  zoom = 7;\n\n  /**\n   * Input for the option if the map should scroll zoom on mouse scroll.\n   * If \"center\" is passed, the map will always zoom onto the center.\n   */\n  @Input(\"scrollWheelZoom\") inputScrollWheelZoom: boolean | \"center\" = true;\n\n  /** Input for a hex code for unselected shapes. */\n  @Input(\"unselectedColor\") unselectedColor = \"#1f5aec\";\n  /** Input for a hex code selected shapes. */\n  @Input(\"selectedColor\") selectedColor = \"#d35a0c\";\n\n  /**\n   * Input for the layers that should be displayed.\n   *\n   * The key of the record is layer key and is also emitted on the selection.\n   * The value of the record is an array and the values of that should be the\n   * following:\n   * \n   *   \n   *     The name of the layer, this will be only used to display a name of\n   *     the layer (may also be a translation key).\n   *     // TODO: actually implement translation here\n   *   \n   *   \n   *     This should be the resolution to display the layer at, this may also\n   * be\n   *     null to display the keys directly without any shape intersection\n   *     resolving.\n   *   \n   *   \n   *     These should be the keys used to display the shapes from.\n   *     If the given keys are empty or null, this will display everything from\n   *     the give resolution.\n   *   \n   * \n   *\n   * **Attention**: The service needs at least one of the resolution or the\n   * keys\n   * to properly respond.\n   *\n   * @example\n   * ```html\n   * \n   * ```\n   * // TODO: update link when geo data docs update\n   * @see https://wisdom04.vlba.uni-oldenburg.de/repos/service-geo-data-rest/main/api/get-layer\n   */\n  @Input(\"layers\")\n  set inputLayers(layerConfig: LayerConfig) {\n    this.layerConfig.next(layerConfig);\n  };\n  /**\n   * {@link Subject} of the {@link LayerConfig}, to be used as\n   * {@link Observable}.\n   * @private\n   */\n  private layerConfig: BehaviorSubject = new BehaviorSubject({});\n  /**\n   * {@link Subject} of the pairs of {@link Layerkey} and {@link LayerData},\n   * to be used as {@link Observable}.\n   * @private\n   */\n  private layerData: BehaviorSubject> = new BehaviorSubject({});\n  /**\n   * {@link Subject} of the layer names mapped by the {@link LayerKey}.\n   * @private\n   */\n  private layerNames: Record = {};\n\n  /** Should the layers be selectable. */\n  @Input(\"layerSelectable\") inputLayerSelectable: boolean = true;\n\n  /** Markers that should be displayed on the map. */\n  @Input(\"markers\") set inputMarkers(markers: Marker[]) {\n    this.markers.next(markers);\n  };\n  /** {@link Marker}s {@link Subject} to be used as {@link Observable}. */\n  private markers = new BehaviorSubject([]);\n\n  /** The leaflet map that is displayed here. */\n  map?: L.Map;\n\n  /**\n   * Internally holds all elements that are currently selected.\n   *\n   * The set holds all keys of shapes currently selected.\n   */\n  private selectedShapes: Record> = {};\n\n  /**\n   * The currently selected layer in the map control.\n   * @private\n   */\n  private selectedLayer?: LayerKey;\n  /** The currently selected geo json layer. */\n  private selectedGeoJsonLayer?: L.Layer;\n\n  /** Outputs the currently selected shapes. */\n  @Output() selected = new EventEmitter();\n\n  /**\n   * Constructor.\n   * @param service Service to interact with the server for geo data\n   */\n  constructor(private service: MapService) {}\n\n  /**\n   * While init this sets the input values to the inner, private values.\n   */\n  ngOnInit(): void {\n    if (this.inputHeight) this.height = this.inputHeight;\n    if (this.inputTileUrl) this.tileUrl = this.inputTileUrl;\n    if (this.inputCenter) this.center = this.inputCenter;\n    if (this.inputZoom) this.zoom = parseInt(this.inputZoom);\n\n    this.layerConfig.subscribe(async config => {\n      let layerData = {};\n      let requests: Record> = {};\n      for (\n        let [layerKey, [displayName, resolution, keys]]\n        of Object.entries(config)\n      ) {\n        this.layerNames[layerKey] = displayName;\n        requests[layerKey] = this.service.fetchLayerData(\n          resolution,\n          keys?.map(k => k.split(\" \").join(\"\"))\n        );\n      }\n      let fetched: Record = {};\n      for (let [layerKey, data] of Object.entries(requests)) {\n        fetched[layerKey] = await data;\n      }\n      this.layerData.next(fetched);\n    });\n  }\n\n  /**\n   * Renders the map with the given input values.\n   */\n  ngAfterViewInit(): void {\n    const nativeMapElement = this.mapElement.nativeElement;\n\n    const map = L.map(nativeMapElement, {\n      scrollWheelZoom: this.inputScrollWheelZoom,\n      center: this.center\n        .split(\", \")\n        .map(str => parseFloat(str)) as [number, number],\n      zoom: this.zoom\n    });\n    map.getRenderer(map as any).options.padding = 100;\n\n    L.tileLayer(this.tileUrl).addTo(map);\n\n    this.map = map;\n    let layersControl: L.Control.Layers;\n    // TODO: make a clear type from this\n    let invertSelectionControl: any;\n\n    this.layerData.subscribe(layerData => {\n      let displayLayer = true;\n\n      // reset selected data\n      this.selectedShapes = {};\n\n      if (layersControl) map.removeControl(layersControl);\n      layersControl = L.control.layers();\n      let layers: L.Layer[] = [];\n\n      if (this.selectedGeoJsonLayer) map.removeLayer(this.selectedGeoJsonLayer);\n\n      // update map with new layer data\n      for (let [key, data] of Object.entries(layerData)) {\n        let selectedShapes = this.selectedShapes[key] = new Set();\n        // use for every layer a new geoJSON layer\n        let geoJsonLayer = L.geoJSON(undefined, {\n          attribution: `\n            \n              📐 © GeoBasis-DE / BKG 2022\n            \n            |\n            \n              🔖 dl-de/by-2-0\n            \n          `,\n          style: {color: this.unselectedColor},\n          onEachFeature: (feature, layer) => {\n            // used properties are injected later into the feature\n            layer.bindTooltip(feature.properties.name, {direction: \"center\"});\n            if (this.inputLayerSelectable) {\n              layer.on(\"click\", () => {\n                let [key, path] = [feature.properties.key, layer as L.Path];\n                if (selectedShapes.has(key)) {\n                  path.setStyle({color: this.unselectedColor});\n                  path.bringToBack();\n                  selectedShapes.delete(key);\n                }\n                else {\n                  path.setStyle({color: this.selectedColor});\n                  path.bringToFront();\n                  selectedShapes.add(key);\n                }\n                this.emitSelection();\n              });\n            }\n            layers.push(layer);\n          }\n        });\n        for (let shape of data.shapes) {\n          geoJsonLayer.addData(Object.assign(shape.geoJson, {properties: {\n            name: shape.name,\n            key: shape.key\n          }}));\n          if (displayLayer) {\n            geoJsonLayer.addTo(map);\n            displayLayer = false;\n            this.selectedLayer = key;\n            this.selectedGeoJsonLayer = geoJsonLayer;\n            map.fitBounds([\n              data.box[0],\n              data.box[2]\n            ]);\n          }\n        }\n        layersControl.addBaseLayer(geoJsonLayer, this.layerNames[key]);\n        map.on(\"baselayerchange\", ({layer}) => {\n          if (layer == geoJsonLayer) {\n            this.selectedGeoJsonLayer = layer;\n            this.selectedLayer = key;\n            this.emitSelection();\n          }\n        })\n      }\n      if (Object.keys(layerData).length > 1) layersControl.addTo(map);\n\n      if (this.inputLayerSelectable) {\n        if (invertSelectionControl) map.removeControl(invertSelectionControl);\n        invertSelectionControl = LX.control.invertSelection(() => {\n          for (let layer of layers) {\n            layer.fire(\"click\");\n          }\n        });\n        invertSelectionControl.addTo(map);\n      }\n    });\n\n    let markerLayer = L.markerClusterGroup();\n    this.markers.subscribe(markers => {\n      markerLayer.removeFrom(map);\n      markerLayer = L.markerClusterGroup();\n      for (let marker of markers) {\n        let lMarker = L.marker(marker.coordinates);\n        if (marker.icon) lMarker.setIcon(marker.icon);\n        if (marker.tooltip) lMarker.bindTooltip(marker.tooltip);\n        if (marker.onClick) lMarker.on(\"click\", marker.onClick)\n        lMarker.addTo(markerLayer);\n      }\n      markerLayer.addTo(map);\n    });\n  }\n\n  /**\n   * Internally used function to emit the currently selected shapes via the\n   * {@link selected} output.\n   * @private\n   */\n  private emitSelection(): void {\n    let layerKey = this.selectedLayer!;\n    let layerName = this.layerNames[layerKey]!;\n    let keys = Array.from(this.selectedShapes[layerKey]);\n    this.selected.emit({\n      layer: layerKey,\n      name: layerName,\n      keys\n    });\n  }\n}\n\n    \n\n\n    \n                \n                    ./map.component.css\n                \n                .map-container {}\n\n.map {\n  height: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'breadcrumbs'},{'name': 'ConsumerDetailComponent', 'selector': 'lib-consumer-detail'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'ExampleComponent', 'selector': ''},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IonIconComponent', 'selector': 'ion-icon'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'map'},{'name': 'MapSelectViewComponent', 'selector': 'lib-map-select-view'},{'name': 'ResultDataViewComponent', 'selector': 'lib-result-data-view'},{'name': 'SideBarComponent', 'selector': 'app-side-bar'},{'name': 'WaterRightDetailComponent', 'selector': 'lib-water-right-detail'}];\n    var DIRECTIVES = [{'name': 'BulmaIsToggleableDirective', 'selector': '.is-toggleable'},{'name': 'LangSelectorDirective', 'selector': '[selectLang]'}];\n    var ACTUAL_COMPONENT = {'name': 'MapComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MapDB.html":{"url":"interfaces/MapDB.html","title":"interface - MapDB","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MapDB\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/common/src/lib/map/map.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The schema the map db uses.\n\n            \n\n            \n                Extends\n            \n            \n                    DBSchema\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            queries\n                                        \n                                \n                                \n                                        \n                                            shapes\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        queries\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        queries:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    All cached queries, used to identify if a query is already in the db.\nThe key[0] represents the resolution of the query, a -1 represents no\nresolution.\nThe rest are the given keys.\nThe value is an array of all the keys the query returned.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shapes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        shapes:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    All shapes in the indexed db.\nThe key is the key of the shape.\nThe value is some ShapeData.\nSince LayerData is simply an array of ShapeData, this may\nbe used to reconstruct some layer data.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  HttpClient,\n  HttpContext,\n  HttpHeaders,\n  HttpParams\n} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\nimport {openDB, DBSchema} from \"idb\";\nimport {Layer} from \"leaflet\";\nimport {firstValueFrom} from \"rxjs\";\n\nimport {Resolution} from \"./resolution\";\nimport {LayerData, ShapeData, GeoJsonObject} from \"./layer-data\";\nimport {USE_API_URL} from \"../http-context/use-api-url\";\nimport {USE_LOADER} from \"../http-context/use-loader\";\n\n/** API url for the map to request data from. */\nconst API_URL = \"geodata\";\n/** Indexed DB name. */\nconst DB_NAME = \"map-db\";\n/** Indexed DB schema version. */\nconst SCHEMA_V = 2;\n\n/** The schema the map db uses. */\ninterface MapDB extends DBSchema {\n  /**\n   * All cached queries, used to identify if a query is already in the db.\n   *\n   * The key[0] represents the resolution of the query, a -1 represents no\n   * resolution.\n   * The rest are the given keys.\n   *\n   * The value is an array of all the keys the query returned.\n   */\n  queries: {\n    key: [number, ...string[]],\n    value: {\n      box: LayerData[\"box\"],\n      shapes: string[]\n    }\n  },\n\n  /**\n   * All shapes in the indexed db.\n   *\n   * The key is the key of the shape.\n   *\n   * The value is some {@link ShapeData}.\n   * Since {@link LayerData} is simply an array of {@link ShapeData}, this may\n   * be used to reconstruct some layer data.\n   */\n  shapes: {\n    key: string,\n    value: ShapeData\n  }\n}\n\n/**\n * Service to interact with the geo data api to fetch map data.\n *\n * Fetched map data is cached in the indexedDB and therefore only retrieved\n * lazily.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MapService {\n\n  /** Indexed DB client. */\n  private readonly idb;\n\n  /**\n   * Constructor.\n   * @param http Client to request geo data\n   */\n  constructor(private http: HttpClient) {\n    this.idb = openDB(DB_NAME, SCHEMA_V, {\n      upgrade(db, oldV) {\n        if (oldV) {\n          db.deleteObjectStore(\"queries\");\n          db.deleteObjectStore(\"shapes\");\n        }\n        db.createObjectStore(\"queries\");\n        db.createObjectStore(\"shapes\");\n      }\n    });\n  }\n\n  /**\n   * Asynchronously fetch the map from the geo data rest api.\n   *\n   * Will only fetch data if not already stored in the indexedDB.\n   * @param resolution The resolution the of the shapes returned by the service\n   * @param keys The keys given to look for shapes\n   * @param force If true, this will ignore the cache and request everything\n   */\n  async fetchLayerData(\n    resolution: Resolution | null | undefined,\n    keys?: string[] | null,\n    force: boolean = false\n  ): Promise {\n    // prepare db and keys\n    let idb = await this.idb;\n    let trimmedKeys = keys ?? [];\n    let resolutionNum = resolution ? Resolution.toKeyLength(resolution) : -1;\n    let queryKey = [resolutionNum, ...trimmedKeys] as [number, ...string[]];\n\n    // check for cached keys or ignore if is force is true\n    let cachedQuery = force ? undefined : await idb.get(\"queries\", queryKey);\n    if (cachedQuery) {\n      let tx = idb.transaction(\"shapes\", \"readonly\");\n      let store = tx.objectStore(\"shapes\");\n      let shapes: ShapeData[] = [];\n      let operations = [];\n      for (let key of cachedQuery.shapes) {\n        operations.push(store.get(key).then(shape => {\n          if (shape) shapes.push(shape);\n        }));\n      }\n      operations.push(tx.done);\n      await Promise.all(operations);\n      return {\n        box: cachedQuery.box,\n        shapes\n      };\n    }\n\n    // if cachedKeys was empty, request data from the server\n    let params = new HttpParams();\n    if (resolution) params = params.set(\"resolution\", resolution);\n    if (keys && keys.length) params = params.appendAll({key: keys.map(k => {\n      if (resolution) return k.substring(0, resolutionNum);\n      return k;\n    })});\n\n    let rawLayerData = await firstValueFrom(this.http.get(`${API_URL}/`, {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\"\n      }),\n      params,\n      responseType: \"json\",\n      context: new HttpContext()\n        .set(USE_API_URL, true)\n        .set(USE_LOADER, true)\n    }));\n\n    rawLayerData.shapes = rawLayerData.shapes.map(rawShape => ({\n      nutsKey: rawShape.nuts_key,\n      geoJson: rawShape.geojson,\n      ...rawShape\n    }));\n\n    let layerData = rawLayerData as unknown as LayerData;\n\n    // store the requested data back into the db\n    let tx = idb.transaction([\"queries\", \"shapes\"], \"readwrite\");\n    let operations = [];\n    let shapeStore = tx.objectStore(\"shapes\");\n    let shapeKeys = [];\n    for (let shape of layerData.shapes) {\n      operations.push(shapeStore.put(shape, shape.key));\n      shapeKeys.push(shape.key);\n    }\n    let queryStore = tx.objectStore(\"queries\");\n    operations.push(queryStore.put({\n      box: layerData.box,\n      shapes: shapeKeys\n    }, queryKey));\n    await Promise.all(operations);\n\n    return layerData;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MapSelectViewComponent.html":{"url":"components/MapSelectViewComponent.html","title":"component - MapSelectViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MapSelectViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    wisdom_modules/water-usage-forecasts/src/lib/views/map-select-view/map-select-view.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-map-select-view\n            \n\n\n\n\n            \n                templateUrl\n                ./map-select-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                keys\n                            \n                            \n                                Resolution\n                            \n                            \n                                selectionReady\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                mapSelection\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(breadcrumbs: BreadcrumbsService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/map-select-view/map-select-view.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        breadcrumbs\n                                                  \n                                                        \n                                                                        BreadcrumbsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        mapSelection\n                        \n                    \n                \n            \n            \n                \nmapSelection(selection: literal type)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/water-usage-forecasts/src/lib/views/map-select-view/map-select-view.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    selection\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/water-usage-forecasts/src/lib/views/map-select-view/map-select-view.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        keys\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/map-select-view/map-select-view.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Resolution\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Resolution\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/map-select-view/map-select-view.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectionReady\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/map-select-view/map-select-view.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from \"@angular/core\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {Resolution, BreadcrumbsService} from \"common\";\n\n@Component({\n  selector: 'lib-map-select-view',\n  templateUrl: './map-select-view.component.html'\n})\nexport class MapSelectViewComponent implements OnInit {\n\n  // imported resolution from the map component\n  Resolution = Resolution;\n\n  keys?: string[];\n\n  selectionReady = false;\n\n  constructor(\n    private breadcrumbs: BreadcrumbsService,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit(): void {\n    this.breadcrumbs.set(0, {\n      icon: \"calendar\",\n      text: \"water-usage-forecasts.breadcrumbs.water-consumption-prognosis\",\n      link: \"/water-usage-forecasts\"\n    })\n  }\n\n  mapSelection(\n    selection: {keys: string[]}\n  ) {\n    this.keys = selection.keys;\n    this.selectionReady = !!selection.keys.length;\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n  \n\n\n  \n    \n      \n        \n      \n      water-usage-forecasts.map-select.get-results\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        water-usage-forecasts.map-select.get-results      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'breadcrumbs'},{'name': 'ConsumerDetailComponent', 'selector': 'lib-consumer-detail'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'ExampleComponent', 'selector': ''},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IonIconComponent', 'selector': 'ion-icon'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'map'},{'name': 'MapSelectViewComponent', 'selector': 'lib-map-select-view'},{'name': 'ResultDataViewComponent', 'selector': 'lib-result-data-view'},{'name': 'SideBarComponent', 'selector': 'app-side-bar'},{'name': 'WaterRightDetailComponent', 'selector': 'lib-water-right-detail'}];\n    var DIRECTIVES = [{'name': 'BulmaIsToggleableDirective', 'selector': '.is-toggleable'},{'name': 'LangSelectorDirective', 'selector': '[selectLang]'}];\n    var ACTUAL_COMPONENT = {'name': 'MapSelectViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MapService.html":{"url":"injectables/MapService.html","title":"injectable - MapService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MapService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/common/src/lib/map/map.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service to interact with the geo data api to fetch map data.\nFetched map data is cached in the indexedDB and therefore only retrieved\nlazily.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                idb\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                fetchLayerData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/common/src/lib/map/map.service.ts:70\n                            \n                        \n\n                \n                    \n                            Constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Client to request geo data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        fetchLayerData\n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchLayerData(resolution: Resolution | null | undefined, keys?: string[] | null, force: boolean)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/common/src/lib/map/map.service.ts:97\n                \n            \n\n\n            \n                \n                    Asynchronously fetch the map from the geo data rest api.\nWill only fetch data if not already stored in the indexedDB.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    resolution\n                                    \n                                                Resolution | null | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The resolution the of the shapes returned by the service\n\n                                    \n                                \n                                \n                                    keys\n                                    \n                                            string[] | null\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The keys given to look for shapes\n\n                                    \n                                \n                                \n                                    force\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                    \n                                        If true, this will ignore the cache and request everything\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        idb\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/map/map.service.ts:70\n                        \n                    \n\n            \n                \n                    Indexed DB client.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpClient,\n  HttpContext,\n  HttpHeaders,\n  HttpParams\n} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\nimport {openDB, DBSchema} from \"idb\";\nimport {Layer} from \"leaflet\";\nimport {firstValueFrom} from \"rxjs\";\n\nimport {Resolution} from \"./resolution\";\nimport {LayerData, ShapeData, GeoJsonObject} from \"./layer-data\";\nimport {USE_API_URL} from \"../http-context/use-api-url\";\nimport {USE_LOADER} from \"../http-context/use-loader\";\n\n/** API url for the map to request data from. */\nconst API_URL = \"geodata\";\n/** Indexed DB name. */\nconst DB_NAME = \"map-db\";\n/** Indexed DB schema version. */\nconst SCHEMA_V = 2;\n\n/** The schema the map db uses. */\ninterface MapDB extends DBSchema {\n  /**\n   * All cached queries, used to identify if a query is already in the db.\n   *\n   * The key[0] represents the resolution of the query, a -1 represents no\n   * resolution.\n   * The rest are the given keys.\n   *\n   * The value is an array of all the keys the query returned.\n   */\n  queries: {\n    key: [number, ...string[]],\n    value: {\n      box: LayerData[\"box\"],\n      shapes: string[]\n    }\n  },\n\n  /**\n   * All shapes in the indexed db.\n   *\n   * The key is the key of the shape.\n   *\n   * The value is some {@link ShapeData}.\n   * Since {@link LayerData} is simply an array of {@link ShapeData}, this may\n   * be used to reconstruct some layer data.\n   */\n  shapes: {\n    key: string,\n    value: ShapeData\n  }\n}\n\n/**\n * Service to interact with the geo data api to fetch map data.\n *\n * Fetched map data is cached in the indexedDB and therefore only retrieved\n * lazily.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MapService {\n\n  /** Indexed DB client. */\n  private readonly idb;\n\n  /**\n   * Constructor.\n   * @param http Client to request geo data\n   */\n  constructor(private http: HttpClient) {\n    this.idb = openDB(DB_NAME, SCHEMA_V, {\n      upgrade(db, oldV) {\n        if (oldV) {\n          db.deleteObjectStore(\"queries\");\n          db.deleteObjectStore(\"shapes\");\n        }\n        db.createObjectStore(\"queries\");\n        db.createObjectStore(\"shapes\");\n      }\n    });\n  }\n\n  /**\n   * Asynchronously fetch the map from the geo data rest api.\n   *\n   * Will only fetch data if not already stored in the indexedDB.\n   * @param resolution The resolution the of the shapes returned by the service\n   * @param keys The keys given to look for shapes\n   * @param force If true, this will ignore the cache and request everything\n   */\n  async fetchLayerData(\n    resolution: Resolution | null | undefined,\n    keys?: string[] | null,\n    force: boolean = false\n  ): Promise {\n    // prepare db and keys\n    let idb = await this.idb;\n    let trimmedKeys = keys ?? [];\n    let resolutionNum = resolution ? Resolution.toKeyLength(resolution) : -1;\n    let queryKey = [resolutionNum, ...trimmedKeys] as [number, ...string[]];\n\n    // check for cached keys or ignore if is force is true\n    let cachedQuery = force ? undefined : await idb.get(\"queries\", queryKey);\n    if (cachedQuery) {\n      let tx = idb.transaction(\"shapes\", \"readonly\");\n      let store = tx.objectStore(\"shapes\");\n      let shapes: ShapeData[] = [];\n      let operations = [];\n      for (let key of cachedQuery.shapes) {\n        operations.push(store.get(key).then(shape => {\n          if (shape) shapes.push(shape);\n        }));\n      }\n      operations.push(tx.done);\n      await Promise.all(operations);\n      return {\n        box: cachedQuery.box,\n        shapes\n      };\n    }\n\n    // if cachedKeys was empty, request data from the server\n    let params = new HttpParams();\n    if (resolution) params = params.set(\"resolution\", resolution);\n    if (keys && keys.length) params = params.appendAll({key: keys.map(k => {\n      if (resolution) return k.substring(0, resolutionNum);\n      return k;\n    })});\n\n    let rawLayerData = await firstValueFrom(this.http.get(`${API_URL}/`, {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\"\n      }),\n      params,\n      responseType: \"json\",\n      context: new HttpContext()\n        .set(USE_API_URL, true)\n        .set(USE_LOADER, true)\n    }));\n\n    rawLayerData.shapes = rawLayerData.shapes.map(rawShape => ({\n      nutsKey: rawShape.nuts_key,\n      geoJson: rawShape.geojson,\n      ...rawShape\n    }));\n\n    let layerData = rawLayerData as unknown as LayerData;\n\n    // store the requested data back into the db\n    let tx = idb.transaction([\"queries\", \"shapes\"], \"readwrite\");\n    let operations = [];\n    let shapeStore = tx.objectStore(\"shapes\");\n    let shapeKeys = [];\n    for (let shape of layerData.shapes) {\n      operations.push(shapeStore.put(shape, shape.key));\n      shapeKeys.push(shape.key);\n    }\n    let queryStore = tx.objectStore(\"queries\");\n    operations.push(queryStore.put({\n      box: layerData.box,\n      shapes: shapeKeys\n    }, queryKey));\n    await Promise.all(operations);\n\n    return layerData;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Marker.html":{"url":"interfaces/Marker.html","title":"interface - Marker","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Marker\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/common/src/lib/map/marker.ts\n        \n\n\n            \n                Description\n            \n            \n                Marker interface for creating custom markers on a MapComponent.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            coordinates\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            icon\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            onClick\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            tooltip\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        coordinates\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        coordinates:     [number, number]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [number, number]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Coordinates of the marker.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:     L.Icon | L.DivIcon\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     L.Icon | L.DivIcon\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional icon for the marker, if not set a default one will be used.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onClick\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        onClick:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Event handler for a click on the marker.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tooltip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tooltip:     Content |  | Tooltip\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Content |  | Tooltip\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Displayed tooltip when hovering the marker.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {Content, LeafletMouseEvent, Layer, Tooltip} from \"leaflet\";\n\nimport * as L from \"leaflet\";\n\n/** Marker interface for creating custom markers on a {@link MapComponent}. */\nexport interface Marker {\n  /** Coordinates of the marker. */\n  coordinates: [number, number],\n  /** Displayed tooltip when hovering the marker. */\n  tooltip?: Content | ((layer: Layer) => Content) | Tooltip,\n  /** Event handler for a click on the marker. */\n  onClick?: (evt: LeafletMouseEvent) => void,\n  /** Optional icon for the marker, if not set a default one will be used. */\n  icon?: L.Icon | L.DivIcon\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ModuleProvider.html":{"url":"classes/ModuleProvider.html","title":"class - ModuleProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ModuleProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/core/src/app/module-provider.ts\n        \n\n\n            \n                Description\n            \n            \n                Class to provide data from the reexported wisdom modules.\nReads its data from the workspace's \"module.ts\".\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                langs\n                            \n                            \n                                    Static\n                                routes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Private\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/core/src/app/module-provider.ts:13\n                            \n                        \n\n                \n                    \n                            This class is a pure utility class and doesn't need constructing.\n\n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        langs\n                        \n                    \n                \n            \n            \n                \n                    \n                    langs(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/module-provider.ts:40\n                \n            \n\n\n            \n                \n                    Get the translations from the wisdom modules given a language key.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The language key for the translations\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        routes\n                        \n                    \n                \n            \n            \n                \n                    \n                    routes()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/module-provider.ts:24\n                \n            \n\n\n            \n                \n                    Get the routes the wisdom modules want to be available at.\n\n\n                    \n                        Returns :         Routes\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Routes} from \"@angular/router\";\n\nimport {AuthGuard} from \"./auth/auth.guard\";\nimport {LoaderGuard} from \"./frame/loader/loader.guard\";\n\nimport * as modules from \"../../../../modules\";\n\n/**\n * Class to provide data from the reexported wisdom modules.\n *\n * Reads its data from the workspace's \"module.ts\".\n */\nexport class ModuleProvider {\n\n  /**\n   * This class is a pure utility class and doesn't need constructing.\n   * @private\n   */\n  private constructor() {}\n\n  /**\n   * Get the routes the wisdom modules want to be available at.\n   */\n  static routes(): Routes {\n    let routes: Routes = [];\n    for (let module of Object.values(modules)) {\n      let insertRoute = module.wisdomInterface.route;\n      if (!insertRoute.canActivate) insertRoute.canActivate = [];\n      // TODO: add ScopeGuard here\n      insertRoute.canActivate.push(AuthGuard, LoaderGuard);\n      routes.push(insertRoute);\n    }\n    return routes;\n  }\n\n  /**\n   * Get the translations from the wisdom modules given a language key.\n   * @param lang The language key for the translations\n   */\n  static langs(lang: string) {\n    let collectedLang = {};\n    for (let module of Object.values(modules)) {\n      let moduleLang = module.wisdomInterface.translations[lang];\n      if (moduleLang) {\n        Object.assign(collectedLang, moduleLang);\n      }\n    }\n    return collectedLang;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/QueryParameterGuard.html":{"url":"guards/QueryParameterGuard.html","title":"guard - QueryParameterGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    QueryParameterGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                wisdom_modules/common/src/lib/guards/query-parameter.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard to check if certain query parameters are set.\nIn the data attribute of route it expects an optional redirectTo\ncontaining an Observable, a Promise or a direct\nUrlTree or a string that will be passed to Router#parseUrl\nand queryParams containing a string or an array of strings.\n\nredirect will be used when the check fails.\nqueryParams will be iterated to check for the keys\n\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/common/src/lib/guards/query-parameter.guard.ts:25\n                            \n                        \n\n                \n                    \n                            Constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router used to parse redirect entries\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/common/src/lib/guards/query-parameter.guard.ts:41\n                \n            \n\n\n            \n                \n                    Whether the route can be activated.\nFor more info check QueryParameterGuard.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Currently activated route snapshot\n\n                                    \n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Current state of the router\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {Injectable} from \"@angular/core\";\nimport {\n  CanActivate,\n  Router,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree\n} from \"@angular/router\";\nimport {Observable} from \"rxjs\";\n\n/**\n * Guard to check if certain query parameters are set.\n *\n * In the `data` attribute of route it expects an optional `redirectTo`\n * containing an {@link Observable}, a {@link Promise} or a direct\n * {@link UrlTree} or a string that will be passed to {@link Router#parseUrl}\n * and `queryParams` containing a string or an array of strings.\n *\n * - `redirect` will be used when the check fails.\n * - `queryParams` will be iterated to check for the keys\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class QueryParameterGuard implements CanActivate {\n\n  /**\n   * Constructor.\n   * @param router Router used to parse redirect entries\n   */\n  constructor(private router: Router) {}\n\n  /**\n   * Whether the route can be activated.\n   *\n   * For more info check {@link QueryParameterGuard}.\n   *\n   * @param route Currently activated route snapshot\n   * @param state Current state of the router\n   */\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean | UrlTree {\n    let redirect  = route.data[\"redirect\"] ?? false;\n    if (typeof redirect === \"string\") redirect = this.router.parseUrl(redirect);\n    for (let param of [route.data[\"queryParams\"] ?? []].flat()) {\n      if (route.queryParams[param] === undefined) return redirect;\n    }\n    return true;\n  }\n\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/SanitizeUrlInterceptor.html":{"url":"interceptors/SanitizeUrlInterceptor.html","title":"interceptor - SanitizeUrlInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  SanitizeUrlInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/core/src/app/sanitize-url.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                Interceptor to fix up weird urls.\nCurrently, this checks for too many slashes (/) and reduces them to the\ncorrect amount.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/sanitize-url.interceptor.ts:28\n                \n            \n\n\n            \n                \n                    Intercepting a request and fix it up if too many slashes (/) were\ninjected somewhere.\nThis interceptor is usually the last before the request will be sent to the\npublic.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Request to check and sanitize\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The next interceptor\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest\n} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\nimport {Observable} from \"rxjs\";\n\n/**\n * Interceptor to fix up weird urls.\n *\n * Currently, this checks for too many slashes (`/`) and reduces them to the\n * correct amount.\n */\n@Injectable()\nexport class SanitizeUrlInterceptor implements HttpInterceptor {\n\n  /**\n   * Intercepting a request and fix it up if too many slashes (`/`) were\n   * injected somewhere.\n   *\n   * This interceptor is usually the last before the request will be sent to the\n   * public.\n   * @param request Request to check and sanitize\n   * @param next The next interceptor\n   */\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n    let {url} = request;\n    let [protocol, pathWithParams] = url.split(\"://\");\n    let [path, ...query] = pathWithParams.split(\"?\");\n    path = path.replace(/\\/+/g, \"/\");\n    let newUrl = `${protocol}://${path}`;\n    if (query.length) {\n      newUrl += `?${query.join(\"?\")}`;\n    }\n    return next.handle(request.clone({\n      url: newUrl\n    }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SettingsStorageService.html":{"url":"injectables/SettingsStorageService.html","title":"injectable - SettingsStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SettingsStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/core/src/app/settings-storage.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Storage service for storing settings in the session storage.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                getBoolStorage\n                            \n                            \n                                    Private\n                                    Static\n                                getStorage\n                            \n                            \n                                    Private\n                                    Static\n                                setBoolStorage\n                            \n                            \n                                    Private\n                                    Static\n                                setStorage\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hideSidebar\n                                \n                                \n                                    hideUserBar\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        getBoolStorage\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBoolStorage(key: string)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/settings-storage.service.ts:54\n                \n            \n\n\n            \n                \n                    Internal function to get boolean session storage values.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Key of the storage item\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | null\n\n                    \n                    \n                        The stored value or null if missing\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        getStorage\n                        \n                    \n                \n            \n            \n                \n                    \n                    getStorage(key: string)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/settings-storage.service.ts:31\n                \n            \n\n\n            \n                \n                    Internal function to get session storage values.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Key of the storage item\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | null\n\n                    \n                    \n                        The stored value or null if missing\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        setBoolStorage\n                        \n                    \n                \n            \n            \n                \n                    \n                    setBoolStorage(key: string, data: boolean | null)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/settings-storage.service.ts:42\n                \n            \n\n\n            \n                \n                    Internal function to set boolean session storage values.\nStore undefined or null to clear the storage.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Key of the storage item\n\n                                    \n                                \n                                \n                                    data\n                                    \n                                            boolean | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Data to store\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        setStorage\n                        \n                    \n                \n            \n            \n                \n                    \n                    setStorage(key: string, data: string | null | undefined)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/settings-storage.service.ts:21\n                \n            \n\n\n            \n                \n                    Internal function to set session storage values.\nStore undefined or null to clear the storage.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Key of the storage item\n\n                                    \n                                \n                                \n                                    data\n                                    \n                                            string | null | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Data to store\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hideSidebar\n                    \n                \n\n                \n                    \n                        gethideSidebar()\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/settings-storage.service.ts:68\n                                \n                            \n                    \n                        \n                                Get hide sidebar setting.\n\n\n                                \n                                    Returns :     boolean | null\n\n                                \n                        \n                    \n\n                \n                    \n                        sethideSidebar(setting: boolean | null)\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/settings-storage.service.ts:64\n                                \n                            \n                    \n                        \n                                Set hide sidebar setting.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            setting\n                                                    \n                                                            \n                                                                        boolean | null\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        hideUserBar\n                    \n                \n\n                \n                    \n                        gethideUserBar()\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/settings-storage.service.ts:80\n                                \n                            \n                    \n                        \n                                Get hide user bar setting.\n\n\n                                \n                                    Returns :     boolean | null\n\n                                \n                        \n                    \n\n                \n                    \n                        sethideUserBar(setting: boolean | null)\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/settings-storage.service.ts:76\n                                \n                            \n                    \n                        \n                                Set hide user bar setting.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            setting\n                                                    \n                                                            \n                                                                        boolean | null\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\n\n/** Key for the sidebar hide setting. */\nconst HIDE_SIDEBAR_KEY = \"hide-sidebar\";\n/** key for the user bar hide setting. */\nconst HIDE_USER_BAR_KEY = \"hide-user-bar\";\n\n/** Storage service for storing settings in the session storage. */\n@Injectable({\n  providedIn: 'root'\n})\nexport class SettingsStorageService {\n\n  /**\n   * Internal function to set session storage values.\n   *\n   * Store undefined or null to clear the storage.\n   * @param key Key of the storage item\n   * @param data Data to store\n   */\n  private static setStorage(key: string, data: string | null | undefined): void {\n    if (data) globalThis.sessionStorage.setItem(key, data);\n    else globalThis.sessionStorage.removeItem(key);\n  }\n  /**\n   * Internal function to get session storage values.\n   *\n   * @param key Key of the storage item\n   * @returns The stored value or null if missing\n   */\n  private static getStorage(key: string): string | null {\n    return globalThis.sessionStorage.getItem(key);\n  }\n\n  /**\n   * Internal function to set boolean session storage values.\n   *\n   * Store undefined or null to clear the storage.\n   * @param key Key of the storage item\n   * @param data Data to store\n   */\n  private static setBoolStorage(key: string, data: boolean | null): void {\n    if (typeof data === \"boolean\") {\n      SettingsStorageService.setStorage(key, `${data}`);\n    }\n    else SettingsStorageService.setStorage(key, data);\n  }\n  /**\n   * Internal function to get boolean session storage values.\n   *\n   * @param key Key of the storage item\n   * @returns The stored value or null if missing\n   */\n  private static getBoolStorage(key: string): boolean | null {\n    let data = SettingsStorageService.getStorage(key);\n    if (!data) return null;\n    return data === \"true\";\n  }\n\n  /**\n   * Set hide sidebar setting.\n   * @param setting\n   */\n  set hideSidebar(setting: boolean | null) {\n    SettingsStorageService.setBoolStorage(HIDE_SIDEBAR_KEY, setting);\n  }\n  /** Get hide sidebar setting. */\n  get hideSidebar(): boolean | null {\n    return SettingsStorageService.getBoolStorage(HIDE_SIDEBAR_KEY);\n  }\n\n  /**\n   * Set hide user bar setting.\n   * @param setting\n   */\n  set hideUserBar(setting: boolean | null) {\n    SettingsStorageService.setBoolStorage(HIDE_USER_BAR_KEY, setting);\n  }\n  /** Get hide user bar setting. */\n  get hideUserBar(): boolean | null {\n    return SettingsStorageService.getBoolStorage(HIDE_USER_BAR_KEY);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ShapeData.html":{"url":"interfaces/ShapeData.html","title":"interface - ShapeData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ShapeData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/common/src/lib/map/layer-data.ts\n        \n\n\n            \n                Description\n            \n            \n                Type to represent a single shape with all of its metadata.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            geoJson\n                                        \n                                \n                                \n                                        \n                                            key\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            nutsKey\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        geoJson\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        geoJson:         GeoJsonObject\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GeoJsonObject\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    GeoJson representing the shape.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Key of the shape.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Name of the shape.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nutsKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nutsKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nomenclature of Territorial Units code of the shape.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import * as L from \"leaflet\";\n\n/**\n * GeoJSON data type used by Leaflet.\n * @private\n */\nexport type GeoJsonObject = Parameters[0];\n\n/** Type to represent a single shape with all of its metadata. */\nexport interface ShapeData {\n  /** Name of the shape. */\n  name: string,\n  /** Key of the shape. */\n  key: string,\n  /** Nomenclature of Territorial Units code of the shape. */\n  nutsKey: string,\n  /** GeoJson representing the shape. */\n  geoJson: GeoJsonObject\n}\n\n/** Type to represent layer data received from the geo data server. */\nexport interface LayerData {\n  /** Corner coordinates of a box containing all the shapes this displays. */\n  box: [[number, number], [number, number], [number, number], [number, number]],\n  /** List of shapes. */\n  shapes: ShapeData[]\n}\n\nexport default LayerData;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SideBarComponent.html":{"url":"components/SideBarComponent.html","title":"component - SideBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SideBarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    wisdom_modules/core/src/app/frame/side-bar/side-bar.component.ts\n\n\n\n    \n        Description\n    \n    \n        The component displaying the sidebar.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-side-bar\n            \n\n\n\n\n            \n                templateUrl\n                ./side-bar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                sideBar\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        sideBar\n                        \n                    \n                \n            \n                \n                    \n                        Default value : sidebar\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/core/src/app/frame/side-bar/side-bar.component.ts:13\n                        \n                    \n\n            \n                \n                    Load the sidebar from the workspace.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component} from \"@angular/core\";\n\nimport {sidebar} from \"../../../../../../sidebar\";\n\n/** The component displaying the sidebar. */\n@Component({\n  selector: \"app-side-bar\",\n  templateUrl: \"./side-bar.component.html\"\n})\nexport class SideBarComponent {\n\n  /** Load the sidebar from the workspace. */\n  sideBar = sidebar;\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n      {{label[0] | translate}}\n    \n  \n\n  \n    \n      \n        \n          \n            \n          \n          {{entry[0] | translate}}\n        \n      \n      \n        \n          \n            \n          \n          {{entry[0] | translate}}\n        \n      \n      \n\n      \n    \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                {{label[0] | translate}}                                                                    {{entry[0] | translate}}                                                                      {{entry[0] | translate}}                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'breadcrumbs'},{'name': 'ConsumerDetailComponent', 'selector': 'lib-consumer-detail'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'ExampleComponent', 'selector': ''},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IonIconComponent', 'selector': 'ion-icon'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'map'},{'name': 'MapSelectViewComponent', 'selector': 'lib-map-select-view'},{'name': 'ResultDataViewComponent', 'selector': 'lib-result-data-view'},{'name': 'SideBarComponent', 'selector': 'app-side-bar'},{'name': 'WaterRightDetailComponent', 'selector': 'lib-water-right-detail'}];\n    var DIRECTIVES = [{'name': 'BulmaIsToggleableDirective', 'selector': '.is-toggleable'},{'name': 'LangSelectorDirective', 'selector': '[selectLang]'}];\n    var ACTUAL_COMPONENT = {'name': 'SideBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StaticLoader.html":{"url":"classes/StaticLoader.html","title":"class - StaticLoader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StaticLoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/core/src/app/i18n/static-loader.ts\n        \n\n\n            \n                Description\n            \n            \n                The loader for the translations.\nSince all translations are available from the start this one is rather simple.\n\n            \n\n\n            \n                Implements\n            \n            \n                        TranslateLoader\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTranslation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getTranslation\n                        \n                    \n                \n            \n            \n                \ngetTranslation(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/i18n/static-loader.ts:36\n                \n            \n\n\n            \n                \n                    Get the translations for a specific language key.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The language key\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {TranslateLoader} from \"@ngx-translate/core\";\nimport {\n  de_DELang as de_DELangCommon,\n  en_USLang as en_USLangCommon\n} from \"common\";\nimport {of, Observable} from \"rxjs\";\n\nimport de_DELang from \"./langs/de_DE\";\nimport en_USLang from \"./langs/en_US\";\nimport {ModuleProvider} from \"../module-provider\";\nimport {langs as sideBarLangs} from \"../../../../../sidebar\";\n\n/** The languages the loader provides. */\nlet langs: any = {\n  de_DE: Object.assign({}, de_DELang, de_DELangCommon, ModuleProvider.langs(\"de_DE\")),\n  en_US: Object.assign({}, en_USLang, en_USLangCommon, ModuleProvider.langs(\"en_US\"))\n}\n\nfor (let [lang, values] of Object.entries(sideBarLangs)) {\n  langs[lang as \"de_DE\" | \"en_US\"].sidebar = {};\n  for (let [key, value] of Object.entries(values)) {\n    langs[lang as \"de_DE\" | \"en_US\"].sidebar[key] = value;\n  }\n}\n\n/**\n * The loader for the translations.\n * Since all translations are available from the start this one is rather simple.\n */\nexport class StaticLoader implements TranslateLoader {\n\n  /**\n   * Get the translations for a specific language key.\n   * @param lang The language key\n   */\n  getTranslation(lang: string): Observable {\n    // @ts-ignore\n    return of(langs[lang]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/core/src/app/auth/user.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service to interact with the user management of the auth server.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createUser\n                            \n                            \n                                getUsers\n                            \n                            \n                                    Private\n                                    Static\n                                httpOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/core/src/app/auth/user.service.ts:25\n                            \n                        \n\n                \n                    \n                            Constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to interact with the server via http\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createUser\n                        \n                    \n                \n            \n            \n                \ncreateUser(firstName: string, lastName: string, username: string, password: string, scopes?: string, roles?: number[])\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/auth/user.service.ts:67\n                \n            \n\n\n            \n                \n                    Create a new user account\nThis will create a new user account.\nDuring the creation a user account must not use the same username\n(login name).\nAll other properties may be not unique.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    firstName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        First name(s) of the person associated to the account\n\n                                    \n                                \n                                \n                                    lastName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Last name(s) of the person associated to the account\n\n                                    \n                                \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Username for the login\n\n                                    \n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The initial account password for this user\n\n                                    \n                                \n                                \n                                    scopes\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The scopes the user may use as OAuth2.0 scope string\n\n                                    \n                                \n                                \n                                    roles\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        List of Role names which the user shall be associated with\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsers\n                        \n                    \n                \n            \n            \n                \ngetUsers()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/auth/user.service.ts:47\n                \n            \n\n\n            \n                \n                    Get all user accounts currently in the database.\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        httpOptions\n                        \n                    \n                \n            \n            \n                \n                    \n                    httpOptions()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/auth/user.service.ts:37\n                \n            \n\n\n            \n                \n                    Helper function to generate the http options necessary for all requests.\n\n\n                    \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {HttpClient, HttpHeaders, HttpResponse} from \"@angular/common/http\";\nimport {join} from \"@angular/compiler-cli\";\nimport {Injectable} from \"@angular/core\";\nimport {Observable} from \"rxjs\";\n\nimport GetUsers200 from \"./response_types/users/GetUsers200\";\nimport PutUsers201 from \"./response_types/users/PutUsers201\";\nimport PutUsers409 from \"./response_types/users/PutUsers409\";\n\n// FIXME: this url is incorrect and the base needs to be moved\n/** Url for the interaction. */\nconst AUTH_API = \"localhost:8090/auth/\";\n\n/** Options passed into the get requests. */\nconst getOptions: Parameters[1] = {\n  responseType: \"json\"\n}\n\n// FIXME: this is currently pretty wrong in the implementation\n\n/** Service to interact with the user management of the auth server. */\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserService {\n\n  /**\n   * Constructor.\n   * @param http Service to interact with the server via http\n   */\n  constructor(private http: HttpClient) {}\n\n  /**\n   * Helper function to generate the http options necessary for all requests.\n   * @private\n   */\n  private static httpOptions(): Parameters[1] {\n    return {\n      responseType: \"json\",\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\"\n      }),\n    }\n  }\n\n  /** Get all user accounts currently in the database. */\n  getUsers() {\n    return this.http.get(join(AUTH_API, \"users\"), UserService.httpOptions()) as\n      Observable>;\n  }\n\n  /**\n   * Create a new user account\n   *\n   * This will create a new user account.\n   * During the creation a user account must not use the same username\n   * (login name).\n   * All other properties may be not unique.\n   *\n   * @param firstName First name(s) of the person associated to the account\n   * @param lastName Last name(s) of the person associated to the account\n   * @param username Username for the login\n   * @param password The initial account password for this user\n   * @param scopes The scopes the user may use as OAuth2.0 scope string\n   * @param roles List of Role names which the user shall be associated with\n   */\n  createUser(\n    firstName: string,\n    lastName: string,\n    username: string,\n    password: string,\n    scopes?: string,\n    roles?: number[]\n  ) {\n    const body: any = {\n      firstName, lastName, username, password\n    };\n    if (scopes) body.scopes = scopes;\n    if (roles) body.roles = roles;\n\n    return this.http.put(\n      join(AUTH_API, \"users\"),\n      body,\n      UserService.httpOptions()\n    ) as Observable |\n      {status: 409} & HttpResponse\n    >;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WaterRightDetailComponent.html":{"url":"components/WaterRightDetailComponent.html","title":"component - WaterRightDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  WaterRightDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    wisdom_modules/water-usage-forecasts/src/lib/views/detail-view/water-right-detail/water-right-detail.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-water-right-detail\n            \n\n\n\n\n            \n                templateUrl\n                ./water-right-detail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bounds\n                            \n                            \n                                data\n                            \n                            \n                                map\n                            \n                            \n                                markers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                validToString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, service: WaterRightsService, translate: TranslateService, breadcrumbs: BreadcrumbsService)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/detail-view/water-right-detail/water-right-detail.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        WaterRightsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        breadcrumbs\n                                                  \n                                                        \n                                                                        BreadcrumbsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/water-usage-forecasts/src/lib/views/detail-view/water-right-detail/water-right-detail.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/water-usage-forecasts/src/lib/views/detail-view/water-right-detail/water-right-detail.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validToString\n                        \n                    \n                \n            \n            \n                \nvalidToString(valid)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/water-usage-forecasts/src/lib/views/detail-view/water-right-detail/water-right-detail.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    valid\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        bounds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject<>\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([[NaN, NaN], [NaN, NaN]])\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/detail-view/water-right-detail/water-right-detail.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WaterRightDetailResponse\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/detail-view/water-right-detail/water-right-detail.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        map\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MapComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('map')\n                        \n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/detail-view/water-right-detail/water-right-detail.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        markers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Marker[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/detail-view/water-right-detail/water-right-detail.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {ViewChild, Component, OnInit, AfterViewInit} from \"@angular/core\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {tupleSwap, MapComponent, Marker, BreadcrumbsService} from \"common\";\nimport {LeafletMouseEvent} from \"leaflet\";\nimport {BehaviorSubject} from \"rxjs\";\n\nimport {\n  WaterRightDetailResponse,\n  WaterRightsService\n} from \"../../../services/water-rights.service\";\nimport {waterRightIcon} from \"../../../map-icons\";\n\n@Component({\n  selector: 'lib-water-right-detail',\n  templateUrl: './water-right-detail.component.html'\n})\nexport class WaterRightDetailComponent implements OnInit, AfterViewInit {\n\n  data: WaterRightDetailResponse = {};\n  markers: Marker[] = [];\n\n  @ViewChild(\"map\") map!: MapComponent;\n  bounds: BehaviorSubject =\n    new BehaviorSubject([[NaN, NaN], [NaN, NaN]]);\n\n  constructor(\n    private route: ActivatedRoute,\n    private service: WaterRightsService,\n    private translate: TranslateService,\n    private breadcrumbs: BreadcrumbsService\n  ) { }\n\n  ngAfterViewInit(): void {\n    this.bounds.subscribe(bounds => this.map.map?.flyToBounds(bounds));\n  }\n\n  ngOnInit(): void {\n    this.breadcrumbs.set(2, {\n      text: \"water-usage-forecasts.breadcrumbs.water-right\",\n      link: \"#\"\n    });\n\n    let waterRight = this.route.snapshot.params[\"waterRight\"];\n    this.service.fetchWaterRightDetails(waterRight)\n      .subscribe(data => {\n        this.data = data;\n\n        let bounds: [number[], number[]] = [[], []];\n        let markers: Marker[] = [];\n        for (let location of data.locations ?? []) {\n          if (!location?.location) continue;\n          if (!location.real) continue;\n          let coordinates = tupleSwap(location.location.coordinates);\n          bounds[0].push(coordinates[0]);\n          bounds[1].push(coordinates[1]);\n          markers.push({\n            coordinates,\n            tooltip: location.name,\n            onClick: (evt: LeafletMouseEvent) => {\n              document.getElementById(`${location?.id}`)?.scrollIntoView({\n                behavior: \"smooth\"\n              })\n            },\n            icon: waterRightIcon\n          });\n        }\n        this.markers = markers;\n        this.bounds.next([\n          [Math.max(...bounds[0]), Math.max(...bounds[1])],\n          [Math.min(...bounds[0]), Math.min(...bounds[1])]\n        ]);\n      });\n  }\n\n  validToString(valid: this[\"data\"][\"valid\"]): string | undefined {\n    let since = this.translate.instant(\"water-usage-forecasts.water-right.since\");\n    if (!valid) return undefined;\n    let from = valid.from.toISOString().slice(0, 10);\n    let until = valid.until.toISOString().slice(0, 10);\n    if (until !== \"9999-12-31\") {\n      return `${from} - ${until}`;\n    }\n    return `${since} ${from}`;\n  }\n\n}\n\n    \n\n    \n        \n\n\n  {{\"water-usage-forecasts.water-right.water-right\" | translate}}\n\n\n\n  \n    \n  \n\n\n\n  \n    {{data.legalTitle}}\n    \n      {{data.subject}}\n      \n        {{\"water-usage-forecasts.water-right.granting-authority\" | translate}}:\n        {{data?.grantingAuthority}}\n        \n      \n      \n        {{\"water-usage-forecasts.water-right.registering-authority\" | translate}}:\n        {{data?.registeringAuthority}}\n        \n      \n      \n        {{\"water-usage-forecasts.water-right.water-authority\" | translate}}:\n        {{data?.waterAuthority}}\n        \n      \n      \n        {{\"water-usage-forecasts.water-right.address\"}}:\n        {{data?.address}}\n        \n      \n      \n        {{\"water-usage-forecasts.water-right.bailee\" | translate}}:\n        {{data?.bailee}}\n        \n      \n    \n  \n  \n    \n      \n        \n          \n            \n              \n            \n            {{validToString(data?.valid)}}\n          \n        \n      \n    \n    \n      \n        \n          \n            \n              \n            \n            {{data?.dateOfChange?.toISOString()?.slice(0, 10)}}\n          \n        \n        \n          \n            \n            \n            \n          \n        \n      \n    \n  \n\n\n\n  \n    \n      \n        \n          {{\"water-usage-forecasts.water-right.internal-id\" | translate}}\n        \n        {{data?.id}}\n      \n    \n    \n      \n        \n          {{\"water-usage-forecasts.water-right.water-right-no\" | translate}}\n        \n        {{data?.no}}\n      \n    \n    \n      \n        \n          {{\"water-usage-forecasts.water-right.external-id\" | translate}}\n        \n        {{data?.externalId}}\n      \n    \n    \n      \n        \n          {{\"water-usage-forecasts.water-right.file-reference\" | translate}}\n        \n        {{data?.fileReference}}\n      \n    \n  \n\n\n\n  \n    \n      {{\"water-usage-forecasts.water-right.locations\" | translate}}\n    \n  \n  \n    \n      \n        \n          {{location?.name}}\n        \n        \n          \n            \n          \n          \n            \n          \n          \n            \n          \n        \n      \n      \n        {{location?.legalScope}}\n      \n      \n        \n          \n            \n              \n                {{\"water-usage-forecasts.water-right.internal-id\" | translate}}\n              \n              {{location?.id}}\n            \n          \n          \n            \n              \n                {{\"water-usage-forecasts.water-right.location-no\" | translate}}\n              \n              {{location?.no}}\n            \n          \n        \n      \n      \n        \n          {{\"water-usage-forecasts.water-right.withdrawal\" | translate}}\n        \n        \n          \n            \n              \n                \n                  {{rate.amount}} {{rate.unit}}/{{rate.duration}}\n                \n              \n            \n          \n        \n      \n      \n        \n          {{\"water-usage-forecasts.water-right.fluid-discharge\" | translate}}\n        \n        \n          \n            \n              \n                \n                  {{rate.amount}} {{rate.unit}}/{{rate.duration}}\n                \n              \n            \n          \n        \n      \n      \n        \n          {{\"water-usage-forecasts.water-right.irrigation-area\" | translate}}\n        \n        \n          \n            \n              \n                {{location?.irrigationArea?.amount}} {{location?.irrigationArea?.unit}}\n              \n            \n          \n        \n      \n      \n        \n          {{\"water-usage-forecasts.water-right.rain-supplement\" | translate}}\n        \n        \n          \n            \n              \n                {{location?.rainSupplement?.amount}} {{location?.rainSupplement?.unit}}\n                /{{location?.rainSupplement?.duration}}\n              \n            \n          \n        \n      \n      \n        \n          \n          \n            {{\"water-usage-forecasts.water-right.basin-no\" | translate}}\n            {{location?.basinNo?.key}} {{location?.basinNo?.name}}\n          \n          \n            {{\"water-usage-forecasts.water-right.county\" | translate}}\n            {{location?.county}}\n          \n          \n            {{\"water-usage-forecasts.water-right.eu-survey-area\" | translate}}\n            {{location?.euSurveyArea?.key}} {{location?.euSurveyArea?.name}}\n          \n          \n            {{\"water-usage-forecasts.water-right.field\" | translate}}\n            {{location?.field}}\n          \n          \n            {{\"water-usage-forecasts.water-right.groundwater-volume\" | translate}}\n            {{location?.groundwaterVolume}}\n          \n          \n            {{\"water-usage-forecasts.water-right.local-sub-district\" | translate}}\n            {{location?.localSubDistrict}}\n          \n          \n            {{\"water-usage-forecasts.water-right.maintenance-association\" | translate}}\n            {{location?.maintenanceAssociation?.key}} {{location?.maintenanceAssociation?.name}}\n          \n          \n            {{\"water-usage-forecasts.water-right.municipal-area\" | translate}}\n            {{location?.municipalArea?.key}} {{location?.municipalArea?.name}}\n          \n          \n            {{\"water-usage-forecasts.water-right.plot\" | translate}}\n            {{location?.plot}}\n          \n          \n            {{\"water-usage-forecasts.water-right.rivershed\" | translate}}\n            {{location?.rivershed}}\n          \n          \n            {{\"water-usage-forecasts.water-right.serial-no\" | translate}}\n            {{location?.serialNo}}\n          \n          \n            {{\"water-usage-forecasts.water-right.top-map-1:25000\" | translate}}\n            {{location?.topMap1to25000?.key}} {{location?.topMap1to25000?.name}}\n          \n          \n            {{\"water-usage-forecasts.water-right.water-body\" | translate}}\n            {{location?.waterBody}}\n          \n          \n            {{\"water-usage-forecasts.water-right.flood-area\" | translate}}\n            {{location?.floodArea}}\n          \n          \n            {{\"water-usage-forecasts.water-right.water-protection-area\" | translate}}\n            {{location?.waterProtectionArea}}\n          \n          \n        \n      \n    \n  \n\n\n\n  \n    \n      {{\"water-usage-forecasts.water-right.annotation\" | translate}}\n    \n  \n  \n    {{data?.annotation}}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{\"water-usage-forecasts.water-right.water-right\" | translate}}              {{data.legalTitle}}          {{data.subject}}              {{\"water-usage-forecasts.water-right.granting-authority\" | translate}}:        {{data?.grantingAuthority}}                            {{\"water-usage-forecasts.water-right.registering-authority\" | translate}}:        {{data?.registeringAuthority}}                            {{\"water-usage-forecasts.water-right.water-authority\" | translate}}:        {{data?.waterAuthority}}                            {{\"water-usage-forecasts.water-right.address\"}}:        {{data?.address}}                            {{\"water-usage-forecasts.water-right.bailee\" | translate}}:        {{data?.bailee}}                                                                                                    {{validToString(data?.valid)}}                                                                                                          {{data?.dateOfChange?.toISOString()?.slice(0, 10)}}                                                                                                                                    {{\"water-usage-forecasts.water-right.internal-id\" | translate}}                {{data?.id}}                                      {{\"water-usage-forecasts.water-right.water-right-no\" | translate}}                {{data?.no}}                                      {{\"water-usage-forecasts.water-right.external-id\" | translate}}                {{data?.externalId}}                                      {{\"water-usage-forecasts.water-right.file-reference\" | translate}}                {{data?.fileReference}}                        {{\"water-usage-forecasts.water-right.locations\" | translate}}                                    {{location?.name}}                                                                                                                                            {{location?.legalScope}}                                                                        {{\"water-usage-forecasts.water-right.internal-id\" | translate}}                            {{location?.id}}                                                                          {{\"water-usage-forecasts.water-right.location-no\" | translate}}                            {{location?.no}}                                                            {{\"water-usage-forecasts.water-right.withdrawal\" | translate}}                                                                                      {{rate.amount}} {{rate.unit}}/{{rate.duration}}                                                                                          {{\"water-usage-forecasts.water-right.fluid-discharge\" | translate}}                                                                                      {{rate.amount}} {{rate.unit}}/{{rate.duration}}                                                                                          {{\"water-usage-forecasts.water-right.irrigation-area\" | translate}}                                                                    {{location?.irrigationArea?.amount}} {{location?.irrigationArea?.unit}}                                                                          {{\"water-usage-forecasts.water-right.rain-supplement\" | translate}}                                                                    {{location?.rainSupplement?.amount}} {{location?.rainSupplement?.unit}}                /{{location?.rainSupplement?.duration}}                                                                                                {{\"water-usage-forecasts.water-right.basin-no\" | translate}}            {{location?.basinNo?.key}} {{location?.basinNo?.name}}                                {{\"water-usage-forecasts.water-right.county\" | translate}}            {{location?.county}}                                {{\"water-usage-forecasts.water-right.eu-survey-area\" | translate}}            {{location?.euSurveyArea?.key}} {{location?.euSurveyArea?.name}}                                {{\"water-usage-forecasts.water-right.field\" | translate}}            {{location?.field}}                                {{\"water-usage-forecasts.water-right.groundwater-volume\" | translate}}            {{location?.groundwaterVolume}}                                {{\"water-usage-forecasts.water-right.local-sub-district\" | translate}}            {{location?.localSubDistrict}}                                {{\"water-usage-forecasts.water-right.maintenance-association\" | translate}}            {{location?.maintenanceAssociation?.key}} {{location?.maintenanceAssociation?.name}}                                {{\"water-usage-forecasts.water-right.municipal-area\" | translate}}            {{location?.municipalArea?.key}} {{location?.municipalArea?.name}}                                {{\"water-usage-forecasts.water-right.plot\" | translate}}            {{location?.plot}}                                {{\"water-usage-forecasts.water-right.rivershed\" | translate}}            {{location?.rivershed}}                                {{\"water-usage-forecasts.water-right.serial-no\" | translate}}            {{location?.serialNo}}                                {{\"water-usage-forecasts.water-right.top-map-1:25000\" | translate}}            {{location?.topMap1to25000?.key}} {{location?.topMap1to25000?.name}}                                {{\"water-usage-forecasts.water-right.water-body\" | translate}}            {{location?.waterBody}}                                {{\"water-usage-forecasts.water-right.flood-area\" | translate}}            {{location?.floodArea}}                                {{\"water-usage-forecasts.water-right.water-protection-area\" | translate}}            {{location?.waterProtectionArea}}                                                    {{\"water-usage-forecasts.water-right.annotation\" | translate}}            {{data?.annotation}}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'breadcrumbs'},{'name': 'ConsumerDetailComponent', 'selector': 'lib-consumer-detail'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'ExampleComponent', 'selector': ''},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IonIconComponent', 'selector': 'ion-icon'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'map'},{'name': 'MapSelectViewComponent', 'selector': 'lib-map-select-view'},{'name': 'ResultDataViewComponent', 'selector': 'lib-result-data-view'},{'name': 'SideBarComponent', 'selector': 'app-side-bar'},{'name': 'WaterRightDetailComponent', 'selector': 'lib-water-right-detail'}];\n    var DIRECTIVES = [{'name': 'BulmaIsToggleableDirective', 'selector': '.is-toggleable'},{'name': 'LangSelectorDirective', 'selector': '[selectLang]'}];\n    var ACTUAL_COMPONENT = {'name': 'WaterRightDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WaterRightsService.html":{"url":"injectables/WaterRightsService.html","title":"injectable - WaterRightsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WaterRightsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/water-usage-forecasts/src/lib/services/water-rights.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchWaterRightDetails\n                            \n                            \n                                fetchWaterRightLocations\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, router: Router)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/services/water-rights.service.ts:116\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        fetchWaterRightDetails\n                        \n                    \n                \n            \n            \n                \nfetchWaterRightDetails(no: number)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/water-usage-forecasts/src/lib/services/water-rights.service.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    no\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetchWaterRightLocations\n                        \n                    \n                \n            \n            \n                \nfetchWaterRightLocations(params: Partial)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/water-usage-forecasts/src/lib/services/water-rights.service.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {HttpClient, HttpContext, HttpHeaders} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\nimport {Router} from \"@angular/router\";\nimport {USE_API_URL, USE_LOADER} from \"common\";\nimport {map, Observable} from \"rxjs\";\n\nconst API_URL = \"water-rights/\";\n\nexport type WaterRightLocationResponse = {\n  name: string,\n  id: number,\n  waterRight: number,\n  active: boolean,\n  real: boolean,\n  geojson: {\n    type: \"Point\",\n    coordinates: [number, number]\n  }\n}[];\n\nexport type WaterRightDetailResponse = Partial\n}>;\n\ntype WaterRightDetailRawResponse =\n  Omit &\n  Partial;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WaterRightsService {\n\n  constructor(\n    private http: HttpClient,\n    private router: Router\n  ) {}\n\n  fetchWaterRightLocations(params: Partial): Observable {\n    let url = this.router.parseUrl(API_URL);\n    if (params.in) url.queryParams[\"in\"] = params.in;\n    if (params.isActive) url.queryParams[\"is_active\"] = params.isActive;\n    if (params.isReal) url.queryParams[\"is_real\"] = params.isReal;\n    return this.http.get(url.toString(), {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\"\n      }),\n      responseType: \"json\",\n      context: new HttpContext()\n        .set(USE_API_URL, true)\n        .set(USE_LOADER, true)\n    }).pipe(map((\n      res: any[]) => res.map(\n        el => Object.assign({}, el, {waterRight: el.water_right})\n      )\n    ));\n  }\n\n  fetchWaterRightDetails(no: number): Observable {\n    let url = this.router.createUrlTree([API_URL, \"details\", no]);\n    return this.http.get(url.toString(), {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\"\n      }),\n      responseType: \"json\",\n      context: new HttpContext()\n        .set(USE_API_URL, true)\n        .set(USE_LOADER, true)\n    }).pipe(map((res: WaterRightDetailRawResponse) => {\n      let cleaned = JSON.stringify(res)\n        .replace(/\"\\s*([^\"]+)\\s*\"/g, '\"$1\"')\n        .replace(/'\\s*([^']+)\\s*'/g, \"'$1'\")\n        .replace(/\"'([^'\"\\s:,]+)'\"/g, '\"$1\"')\n        .replace(/'\"([^'\"\\s:,]+)\"'/g, \"'$1'\")\n      return JSON.parse(cleaned) as WaterRightDetailRawResponse;\n    })).pipe(map((raw: WaterRightDetailRawResponse) => {\n      let res = JSON.parse(JSON.stringify(raw)) as WaterRightDetailResponse;\n      if (raw.dateOfChange) res.dateOfChange = new Date(raw.dateOfChange);\n      if (raw.valid) res.valid = {\n        from: new Date(raw.valid.from),\n        until: new Date(raw.valid.until)\n      };\n      return res;\n    }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WaterUsageForecastsModule.html":{"url":"modules/WaterUsageForecastsModule.html","title":"module - WaterUsageForecastsModule","body":"\n                   \n\n\n\n\n    Modules\n    WaterUsageForecastsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_WaterUsageForecastsModule\n\n\n\ncluster_WaterUsageForecastsModule_imports\n\n\n\ncluster_WaterUsageForecastsModule_declarations\n\n\n\n\nConsumerDetailComponent\n\nConsumerDetailComponent\n\n\n\nWaterUsageForecastsModule\n\nWaterUsageForecastsModule\n\nWaterUsageForecastsModule -->\n\nConsumerDetailComponent->WaterUsageForecastsModule\n\n\n\n\n\nMapSelectViewComponent\n\nMapSelectViewComponent\n\nWaterUsageForecastsModule -->\n\nMapSelectViewComponent->WaterUsageForecastsModule\n\n\n\n\n\nResultDataViewComponent\n\nResultDataViewComponent\n\nWaterUsageForecastsModule -->\n\nResultDataViewComponent->WaterUsageForecastsModule\n\n\n\n\n\nWaterRightDetailComponent\n\nWaterRightDetailComponent\n\nWaterUsageForecastsModule -->\n\nWaterRightDetailComponent->WaterUsageForecastsModule\n\n\n\n\n\nWisdomModule\n\nWisdomModule\n\nWaterUsageForecastsModule -->\n\nWisdomModule->WaterUsageForecastsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            wisdom_modules/water-usage-forecasts/src/lib/water-usage-forecasts.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ConsumerDetailComponent\n                        \n                        \n                            MapSelectViewComponent\n                        \n                        \n                            ResultDataViewComponent\n                        \n                        \n                            WaterRightDetailComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            WisdomModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {CommonModule} from \"@angular/common\";\nimport {NgModule} from \"@angular/core\";\nimport {RouterModule} from \"@angular/router\";\nimport {TranslateModule} from \"@ngx-translate/core\";\nimport {WisdomModule} from \"common\";\nimport {NgChartsModule} from \"ng2-charts\";\n\nimport {\n  ConsumerDetailComponent\n} from \"./views/detail-view/consumer-detail/consumer-detail.component\";\nimport {\n  WaterRightDetailComponent\n} from \"./views/detail-view/water-right-detail/water-right-detail.component\";\nimport {\n  MapSelectViewComponent\n} from \"./views/map-select-view/map-select-view.component\";\nimport {\n  ResultDataViewComponent\n} from \"./views/result-data-view/result-data-view.component\";\n\n@NgModule({\n  declarations: [\n    MapSelectViewComponent,\n    ResultDataViewComponent,\n    ConsumerDetailComponent,\n    WaterRightDetailComponent\n  ],\n  imports: [\n    WisdomModule,\n    NgChartsModule,\n    CommonModule,\n    RouterModule,\n    TranslateModule\n  ]\n})\nexport class WaterUsageForecastsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WaterUsageForecastsService.html":{"url":"injectables/WaterUsageForecastsService.html","title":"injectable - WaterUsageForecastsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WaterUsageForecastsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/water-usage-forecasts/src/lib/services/water-usage-forecasts.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service to interact with server providing the data to display.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchForecastData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, router: Router)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/services/water-usage-forecasts.service.ts:67\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        fetchForecastData\n                        \n                    \n                \n            \n            \n                \nfetchForecastData(key: string | string[], forecastModel: ForecastType, consumerGroup?: \"businesses\" | \"households_and_small_businesses\" | \"farming_forestry_fishing_industry\" | \"public_institutions\" | \"all\")\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/water-usage-forecasts/src/lib/services/water-usage-forecasts.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                            string | string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    forecastModel\n                                    \n                                                ForecastType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    consumerGroup\n                                    \n                                            \"businesses\" | \"households_and_small_businesses\" | \"farming_forestry_fishing_industry\" | \"public_institutions\" | \"all\"\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {HttpClient, HttpContext, HttpHeaders} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\nimport {Router} from \"@angular/router\";\nimport {USE_API_URL, USE_LOADER} from \"common\";\nimport {Observable} from \"rxjs\";\n\n/** Route of the API access. */\nconst API_URL = \"water-usage-forecasts\";\n\n/** Possible forecast calculation methods. */\nexport enum ForecastType {\n  LOGARITHMIC = \"logarithmic\",\n  LINEAR = \"linear\",\n  POLYNOMIAL = \"polynomial\"\n}\n\n/** Interface for the data received from the server. */\nexport interface ForecastResponse {\n  /**\n   * The results in accumulated form so that the client doesn't have to\n   * calculate it itself.\n   */\n  accumulations: {\n    /** Accumulations by consumer group. */\n    consumerGroup: ForecastEntry,\n    /** Accumulations by municipal. */\n    municipal: ForecastEntry\n  },\n  partials: {\n    consumerGroup: {\n      key: string,\n      name: string\n    },\n    municipal: ForecastResponse[\"partials\"][0][\"consumerGroup\"],\n    referenceUsages: {\n      equation: string,\n      float: number,\n      model: \"logarithmic\" | \"linear\" | \"polynomial\",\n      usages: {\n        amounts: number[],\n        end: number,\n        start: number\n      }\n    },\n    forecast: ForecastResponse[\"partials\"][0][\"referenceUsages\"]\n  }[]\n}\n\nexport interface ForecastEntry {\n  forecast: Record,\n  reference: Record\n}\n\nexport interface ForecastUsage {\n  displayName: string,\n  endYear: number,\n  startYear: number,\n  usages: number[]\n}\n\n/**\n * Service to interact with server providing the data to display.\n */\n@Injectable({\n  providedIn: \"root\"\n})\nexport class WaterUsageForecastsService {\n\n  constructor(\n    private http: HttpClient,\n    private router: Router\n  ) {}\n\n  fetchForecastData(\n    key: string | string[],\n    forecastModel: ForecastType,\n    consumerGroup?:\n      \"businesses\" |\n      \"households_and_small_businesses\" |\n      \"farming_forestry_fishing_industry\" |\n      \"public_institutions\" |\n      \"all\"\n  ): Observable {\n    let url = this.router.parseUrl(`${API_URL}/${forecastModel}`);\n    if (consumerGroup) url.queryParams[\"consumerGroup\"] = consumerGroup;\n    url.queryParams[\"key\"] = key;\n    return this.http.get(url.toString(), {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\"\n      }),\n      responseType: \"json\",\n      context: new HttpContext()\n        .set(USE_API_URL, true)\n        .set(USE_LOADER, \"water-usage-forecasts.display.loading\")\n    }) as Observable;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WaterUsageHistoryService.html":{"url":"injectables/WaterUsageHistoryService.html","title":"injectable - WaterUsageHistoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WaterUsageHistoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/water-usage-forecasts/src/lib/services/water-usage-history.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchWaterUsageHistory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, router: Router)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/services/water-usage-history.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        fetchWaterUsageHistory\n                        \n                    \n                \n            \n            \n                \nfetchWaterUsageHistory(id: string)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/water-usage-forecasts/src/lib/services/water-usage-history.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {HttpClient, HttpContext, HttpHeaders} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\nimport {Router} from \"@angular/router\";\nimport {USE_API_URL, USE_LOADER} from \"common\";\nimport {map, Observable} from \"rxjs\";\n\nconst API_URL = \"water-usage-history/\";\n\nexport type HistoryResponse = {\n  year: number,\n  usage: number,\n  recordedAt: Date\n}[];\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WaterUsageHistoryService {\n\n  constructor(\n    private http: HttpClient,\n    private router: Router\n  ) { }\n\n  fetchWaterUsageHistory(id: string): Observable {\n    let url = this.router.parseUrl(API_URL);\n    url.queryParams[\"consumer\"] = id;\n    return this.http.get(url.toString(), {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\"\n      }),\n      responseType: \"json\",\n      context: new HttpContext()\n        .set(USE_API_URL, true)\n        .set(USE_LOADER, true)\n    }).pipe(map(\n      data => data.map(\n        ({\n           year,\n           usage,\n           recorded_at\n        }) => ({\n          year,\n          usage,\n          recordedAt: new Date(recorded_at)\n        })\n      )\n    ))\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WisdomInterface.html":{"url":"interfaces/WisdomInterface.html","title":"interface - WisdomInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  WisdomInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/common/src/WisdomInterface.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the wisdom modules.\nEvery wisdom module must provide such an object implementing this interface.\nThe object must be exported under the name \"wisdomInterface\".\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            route\n                                        \n                                \n                                \n                                        \n                                            scopes\n                                        \n                                \n                                \n                                        \n                                            translations\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        route\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        route:         Route\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Route\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The route that leads to this module.\nThis may also include guards but some guards will be automatically injected.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scopes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scopes:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The scopes required to see the component.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        translations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        translations:     Record>>>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record>>>\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The translations the modules provides and uses.\nThe top most entry should be the namespace, the following the component and\nin the component there should be keys for the translation keys.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {Route} from \"@angular/router\";\n\n/**\n * Interface for the wisdom modules.\n *\n * Every wisdom module must provide such an object implementing this interface.\n * The object must be exported under the name \"wisdomInterface\".\n */\nexport interface WisdomInterface {\n  /**\n   * The route that leads to this module.\n   * This may also include guards but some guards will be automatically injected.\n   */\n  route: Route;\n  /** The scopes required to see the component. */\n  scopes: string[];\n  /**\n   * The translations the modules provides and uses.\n   *\n   * The top most entry should be the namespace, the following the component and\n   * in the component there should be keys for the translation keys.\n   */\n  translations: Record>>>\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WisdomModule.html":{"url":"modules/WisdomModule.html","title":"module - WisdomModule","body":"\n                   \n\n\n\n\n    Modules\n    WisdomModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_WisdomModule\n\n\n\ncluster_WisdomModule_declarations\n\n\n\ncluster_WisdomModule_exports\n\n\n\n\nBreadcrumbsComponent\n\nBreadcrumbsComponent\n\n\n\nWisdomModule\n\nWisdomModule\n\nWisdomModule -->\n\nBreadcrumbsComponent->WisdomModule\n\n\n\n\n\nBulmaIsToggleableDirective\n\nBulmaIsToggleableDirective\n\nWisdomModule -->\n\nBulmaIsToggleableDirective->WisdomModule\n\n\n\n\n\nIonIconComponent\n\nIonIconComponent\n\nWisdomModule -->\n\nIonIconComponent->WisdomModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nWisdomModule -->\n\nMapComponent->WisdomModule\n\n\n\n\n\nBreadcrumbsComponent \n\nBreadcrumbsComponent \n\nBreadcrumbsComponent  -->\n\nWisdomModule->BreadcrumbsComponent \n\n\n\n\n\nBulmaIsToggleableDirective \n\nBulmaIsToggleableDirective \n\nBulmaIsToggleableDirective  -->\n\nWisdomModule->BulmaIsToggleableDirective \n\n\n\n\n\nIonIconComponent \n\nIonIconComponent \n\nIonIconComponent  -->\n\nWisdomModule->IonIconComponent \n\n\n\n\n\nMapComponent \n\nMapComponent \n\nMapComponent  -->\n\nWisdomModule->MapComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            wisdom_modules/common/src/lib/wisdom.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BreadcrumbsComponent\n                        \n                        \n                            BulmaIsToggleableDirective\n                        \n                        \n                            IonIconComponent\n                        \n                        \n                            MapComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BreadcrumbsComponent\n                        \n                        \n                            BulmaIsToggleableDirective\n                        \n                        \n                            IonIconComponent\n                        \n                        \n                            MapComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {CommonModule} from \"@angular/common\";\nimport {NgModule} from \"@angular/core\";\nimport {RouterModule} from \"@angular/router\";\nimport {TranslateModule} from \"@ngx-translate/core\";\n\nimport {BreadcrumbsComponent} from \"./breadcrumbs/breadcrumbs.component\";\nimport {\n  BulmaIsToggleableDirective\n} from \"./bulma/bulma-is-toggleable.directive\";\nimport {IonIconComponent} from \"./ion-icon/ion-icon.component\";\nimport {MapComponent} from \"./map/map.component\";\n\n@NgModule({\n  declarations: [\n    IonIconComponent,\n    BulmaIsToggleableDirective,\n    MapComponent,\n    BreadcrumbsComponent\n  ],\n  imports: [\n    TranslateModule,\n    CommonModule,\n    RouterModule\n  ],\n  exports: [\n    IonIconComponent,\n    BulmaIsToggleableDirective,\n    MapComponent,\n    BreadcrumbsComponent\n  ]\n})\nexport class WisdomModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                sidebar.ts\n            \n            variable\n            langs\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                sidebar.ts\n            \n            variable\n            sidebar\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/WisdomInterface.ts\n            \n            interface\n            WisdomInterface\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.component.ts\n            \n            component\n            BreadcrumbsComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.service.ts\n            \n            injectable\n            BreadcrumbsService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.service.ts\n            \n            interface\n            Breadcrumb\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/bulma/bulma-is-toggleable.directive.ts\n            \n            directive\n            BulmaIsToggleableDirective\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/guards/query-parameter.guard.ts\n            \n            guard\n            QueryParameterGuard\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/http-context/use-api-url.ts\n            \n            variable\n            USE_API_URL\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/http-context/use-base-url.ts\n            \n            variable\n            USE_BASE_URL\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/http-context/use-cache.ts\n            \n            variable\n            USE_CACHE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/http-context/use-error-curtain.ts\n            \n            variable\n            USE_ERROR_CURTAIN\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/http-context/use-loader.ts\n            \n            variable\n            USE_LOADER\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/ion-icon/ion-icon.component.ts\n            \n            component\n            IonIconComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/map/invert-selection.ts\n            \n            variable\n            control\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/map/layer-data.ts\n            \n            interface\n            LayerData\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/map/layer-data.ts\n            \n            interface\n            ShapeData\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/map/map.component.ts\n            \n            component\n            MapComponent\n            \n                100 %\n                (29/29)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/map/map.service.ts\n            \n            injectable\n            MapService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/map/map.service.ts\n            \n            interface\n            MapDB\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/map/map.service.ts\n            \n            variable\n            API_URL\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/map/map.service.ts\n            \n            variable\n            DB_NAME\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/map/map.service.ts\n            \n            variable\n            SCHEMA_V\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/map/marker.ts\n            \n            interface\n            Marker\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/map/resolution.ts\n            \n            function\n            toEnum\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/map/resolution.ts\n            \n            function\n            toKeyLength\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/util.ts\n            \n            function\n            getResolvedUrl\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/util.ts\n            \n            function\n            prettyPrintNum\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/util.ts\n            \n            function\n            stringToColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/util.ts\n            \n            function\n            translateObject\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/util.ts\n            \n            function\n            tupleSwap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/auth/auth-storage.service.ts\n            \n            injectable\n            AuthStorageService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/auth/auth-storage.service.ts\n            \n            variable\n            ACCESS_TOKEN_KEY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/auth/auth-storage.service.ts\n            \n            variable\n            EXPIRES_IN_KEY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/auth/auth-storage.service.ts\n            \n            variable\n            REFRESH_TOKEN_KEY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/auth/auth-storage.service.ts\n            \n            variable\n            SCOPES_KEY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/auth/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/auth/auth.interceptor.ts\n            \n            interceptor\n            AuthInterceptor\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/auth/auth.interceptor.ts\n            \n            variable\n            TOKEN_HEADER_KEY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/auth/auth.service.ts\n            \n            variable\n            AUTH_URL\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/auth/auth.service.ts\n            \n            variable\n            httpOptions\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/auth/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/auth/user.service.ts\n            \n            injectable\n            UserService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/auth/user.service.ts\n            \n            variable\n            AUTH_API\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/auth/user.service.ts\n            \n            variable\n            getOptions\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/base-url.interceptor.ts\n            \n            interceptor\n            BaseUrlInterceptor\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/cache.interceptor.ts\n            \n            interceptor\n            CacheInterceptor\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/frame/error/error.component.ts\n            \n            component\n            ErrorComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/frame/error/error.interceptor.ts\n            \n            interceptor\n            ErrorInterceptor\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/frame/error/error.service.ts\n            \n            injectable\n            ErrorService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/frame/error/error.ts\n            \n            interface\n            Error\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/frame/frame.component.ts\n            \n            component\n            FrameComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/frame/loader/loader.component.ts\n            \n            component\n            LoaderComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/frame/loader/loader.guard.ts\n            \n            guard\n            LoaderGuard\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/frame/loader/loader.interceptor.ts\n            \n            interceptor\n            LoaderInterceptor\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/frame/loader/loader.service.ts\n            \n            injectable\n            LoaderService\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/frame/side-bar/side-bar.component.ts\n            \n            component\n            SideBarComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/i18n/lang-selector.directive.ts\n            \n            directive\n            LangSelectorDirective\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/i18n/static-loader.ts\n            \n            class\n            StaticLoader\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/i18n/static-loader.ts\n            \n            variable\n            langs\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/module-provider.ts\n            \n            class\n            ModuleProvider\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/sanitize-url.interceptor.ts\n            \n            interceptor\n            SanitizeUrlInterceptor\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/settings-storage.service.ts\n            \n            injectable\n            SettingsStorageService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/settings-storage.service.ts\n            \n            variable\n            HIDE_SIDEBAR_KEY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/settings-storage.service.ts\n            \n            variable\n            HIDE_USER_BAR_KEY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/environments/environment.common.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/environments/environment.prod.ts\n            \n            variable\n            baseUrl\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/environments/environment.ts\n            \n            variable\n            baseUrl\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/environments/environment.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/example/src/lib/example.component.ts\n            \n            component\n            ExampleComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/example/src/lib/example.service.ts\n            \n            injectable\n            ExampleService\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/example/src/public-api.ts\n            \n            variable\n            wisdomInterface\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/water-usage-forecasts/src/lib/map-icons.ts\n            \n            variable\n            consumerIcon\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                wisdom_modules/water-usage-forecasts/src/lib/map-icons.ts\n            \n            variable\n            waterRightIcon\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                wisdom_modules/water-usage-forecasts/src/lib/routing.ts\n            \n            variable\n            route\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                wisdom_modules/water-usage-forecasts/src/lib/services/consumers.service.ts\n            \n            injectable\n            ConsumersService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                wisdom_modules/water-usage-forecasts/src/lib/services/consumers.service.ts\n            \n            variable\n            API_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                wisdom_modules/water-usage-forecasts/src/lib/services/water-rights.service.ts\n            \n            injectable\n            WaterRightsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                wisdom_modules/water-usage-forecasts/src/lib/services/water-rights.service.ts\n            \n            variable\n            API_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                wisdom_modules/water-usage-forecasts/src/lib/services/water-usage-forecasts.service.ts\n            \n            injectable\n            WaterUsageForecastsService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                wisdom_modules/water-usage-forecasts/src/lib/services/water-usage-forecasts.service.ts\n            \n            interface\n            ForecastEntry\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                wisdom_modules/water-usage-forecasts/src/lib/services/water-usage-forecasts.service.ts\n            \n            interface\n            ForecastResponse\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                wisdom_modules/water-usage-forecasts/src/lib/services/water-usage-forecasts.service.ts\n            \n            interface\n            ForecastUsage\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                wisdom_modules/water-usage-forecasts/src/lib/services/water-usage-forecasts.service.ts\n            \n            variable\n            API_URL\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/water-usage-forecasts/src/lib/services/water-usage-history.service.ts\n            \n            injectable\n            WaterUsageHistoryService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                wisdom_modules/water-usage-forecasts/src/lib/services/water-usage-history.service.ts\n            \n            variable\n            API_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                wisdom_modules/water-usage-forecasts/src/lib/views/detail-view/consumer-detail/consumer-detail.component.ts\n            \n            component\n            ConsumerDetailComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                wisdom_modules/water-usage-forecasts/src/lib/views/detail-view/water-right-detail/water-right-detail.component.ts\n            \n            component\n            WaterRightDetailComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                wisdom_modules/water-usage-forecasts/src/lib/views/map-select-view/map-select-view.component.ts\n            \n            component\n            MapSelectViewComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                wisdom_modules/water-usage-forecasts/src/lib/views/result-data-view/result-data-view.component.ts\n            \n            component\n            ResultDataViewComponent\n            \n                100 %\n                (21/21)\n            \n        \n        \n            \n                \n                wisdom_modules/water-usage-forecasts/src/public-api.ts\n            \n            variable\n            wisdomInterface\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~14.1.2\n        \n            @angular/common : ~14.1.2\n        \n            @angular/compiler : ~14.1.2\n        \n            @angular/core : ~14.1.2\n        \n            @angular/forms : ~14.1.2\n        \n            @angular/platform-browser : ~14.1.2\n        \n            @angular/platform-browser-dynamic : ~14.1.2\n        \n            @angular/router : ~14.1.2\n        \n            @ngx-translate/core : ^14.0.0\n        \n            bulma : ^0.9.4\n        \n            bulma-prefers-dark : ^0.1.0-beta.1\n        \n            chart.js : ^3.8.0\n        \n            chartjs-plugin-annotation : ^1.4.0\n        \n            dayjs : ^1.11.3\n        \n            idb : ^7.0.2\n        \n            leaflet : ^1.8.0\n        \n            leaflet.markercluster : ^1.5.3\n        \n            ng2-charts : ^3.0.11\n        \n            path-browserify : ^1.0.1\n        \n            rxjs : ~7.5.5\n        \n            tslib : ^2.4.0\n        \n            zone.js : ~0.11.6\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ForecastType   (wisdom_modules/.../water-usage-forecasts.service.ts)\n                        \n                        \n                            Resolution   (wisdom_modules/.../resolution.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    wisdom_modules/water-usage-forecasts/src/lib/services/water-usage-forecasts.service.ts\n    \n        \n            \n                \n                    \n                        \n                        ForecastType\n                    \n                \n                    \n                        \n                            Possible forecast calculation methods.\n\n                        \n                    \n                        \n                            \n                                 LOGARITHMIC\n                            \n                        \n                        \n                            \n                                Value : logarithmic\n                            \n                        \n                        \n                            \n                                 LINEAR\n                            \n                        \n                        \n                            \n                                Value : linear\n                            \n                        \n                        \n                            \n                                 POLYNOMIAL\n                            \n                        \n                        \n                            \n                                Value : polynomial\n                            \n                        \n            \n        \n\n    wisdom_modules/common/src/lib/map/resolution.ts\n    \n        \n            \n                \n                    \n                        \n                        Resolution\n                    \n                \n                    \n                        \n                            Resolutions the map may display.\n\n                        \n                    \n                        \n                            \n                                 STATE\n                            \n                        \n                        \n                            \n                                Value : state\n                            \n                        \n                        \n                            \n                                 DISTRICT\n                            \n                        \n                        \n                            \n                                Value : district\n                            \n                        \n                        \n                            \n                                 ADMINISTRATION\n                            \n                        \n                        \n                            \n                                Value : administration\n                            \n                        \n                        \n                            \n                                 MUNICIPAL\n                            \n                        \n                        \n                            \n                                Value : municipal\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            getResolvedUrl   (wisdom_modules/.../util.ts)\n                        \n                        \n                            prettyPrintNum   (wisdom_modules/.../util.ts)\n                        \n                        \n                            stringToColor   (wisdom_modules/.../util.ts)\n                        \n                        \n                            toEnum   (wisdom_modules/.../resolution.ts)\n                        \n                        \n                            toKeyLength   (wisdom_modules/.../resolution.ts)\n                        \n                        \n                            translateObject   (wisdom_modules/.../util.ts)\n                        \n                        \n                            tupleSwap   (wisdom_modules/.../util.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    wisdom_modules/common/src/lib/util.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getResolvedUrl\n                        \n                    \n                \n            \n            \n                \ngetResolvedUrl(route: ActivatedRouteSnapshot)\n                \n            \n\n\n\n\n            \n                \n                    Function to return a fully resolved url in a string from an activated route\nsnapshot.\nRecreated by this solution on StackOverflow.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Route snapshot of a component.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prettyPrintNum\n                        \n                    \n                \n            \n            \n                \nprettyPrintNum(num: number)\n                \n            \n\n\n\n\n            \n                \n                    Returns a number presentation where every third digit from the end is\nseparated by a dot.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    num\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Number to pretty print\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            prettyPrintNum(12345678) =&gt; &quot;12.345.678&quot;\n                        \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stringToColor\n                        \n                    \n                \n            \n            \n                \nstringToColor(str: string, map?: Record)\n                \n            \n\n\n\n\n            \n                \n                    Generates deterministically a hex color code from any string.\nThis is a modernized version of this\nStackOverflow reply.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    str\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A string to generate a hex color for\n\n                                    \n                                \n                                \n                                    map\n                                    \n                                            Record\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        A color map for predefined strings\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        A hex color code in the style of '#abc123'\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        translateObject\n                        \n                    \n                \n            \n            \n                \ntranslateObject(service: TranslateService, obj: T)\n                \n            \n\n\n\n\n            \n                \n                    Utility function to translate strings in any data object using the given\ntranslate service.\nInternally the instant() method is used, causing this to be sync, beware.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    service\n                                    \n                                            TranslateService\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Translate service to translate with\n\n                                    \n                                \n                                \n                                    obj\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Object to iterate and translate through\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tupleSwap\n                        \n                    \n                \n            \n            \n                \ntupleSwap(tuple)\n                \n            \n\n\n\n\n            \n                \n                    Utility function to swap the values of a tuple.\nUseful if coordinates are in the wrong order.\n(e.g. geojson to leaflet)\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    tuple\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Tuple of two values\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    wisdom_modules/common/src/lib/map/resolution.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        toEnum\n                        \n                    \n                \n            \n            \n                \ntoEnum(length: number)\n                \n            \n\n\n\n\n            \n                \n                    Get the Resolution from a key length.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Key length\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Resolution | undefined\n\n                    \n                    \n                        Resolution if found, otherwise undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toKeyLength\n                        \n                    \n                \n            \n            \n                \ntoKeyLength(res: Resolution)\n                \n            \n\n\n\n\n            \n                \n                    Transforms a Resolution into the key length.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                                Resolution\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Resolution to find key length\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_ExampleModule\n\n\n\ncluster_ExampleModule_declarations\n\n\n\ncluster_ExampleModule_exports\n\n\n\ncluster_WaterUsageForecastsModule\n\n\n\ncluster_WaterUsageForecastsModule_declarations\n\n\n\ncluster_WisdomModule\n\n\n\ncluster_WisdomModule_declarations\n\n\n\ncluster_WisdomModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nErrorComponent\n\nErrorComponent\n\nAppModule -->\n\nErrorComponent->AppModule\n\n\n\n\n\nFrameComponent\n\nFrameComponent\n\nAppModule -->\n\nFrameComponent->AppModule\n\n\n\n\n\nLangSelectorDirective\n\nLangSelectorDirective\n\nAppModule -->\n\nLangSelectorDirective->AppModule\n\n\n\n\n\nLoaderComponent\n\nLoaderComponent\n\nAppModule -->\n\nLoaderComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nSideBarComponent\n\nSideBarComponent\n\nAppModule -->\n\nSideBarComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nWisdomModule\n\nWisdomModule\n\nAppModule -->\n\nWisdomModule->AppModule\n\n\n\n\n\nExampleModule\n\nExampleModule\n\nExampleModule -->\n\nWisdomModule->ExampleModule\n\n\n\n\n\nWaterUsageForecastsModule\n\nWaterUsageForecastsModule\n\nWaterUsageForecastsModule -->\n\nWisdomModule->WaterUsageForecastsModule\n\n\n\n\n\nBreadcrumbsComponent \n\nBreadcrumbsComponent \n\nBreadcrumbsComponent  -->\n\nWisdomModule->BreadcrumbsComponent \n\n\n\n\n\nBulmaIsToggleableDirective \n\nBulmaIsToggleableDirective \n\nBulmaIsToggleableDirective  -->\n\nWisdomModule->BulmaIsToggleableDirective \n\n\n\n\n\nIonIconComponent \n\nIonIconComponent \n\nIonIconComponent  -->\n\nWisdomModule->IonIconComponent \n\n\n\n\n\nMapComponent \n\nMapComponent \n\nMapComponent  -->\n\nWisdomModule->MapComponent \n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nAppModule -->\n\nAuthInterceptor->AppModule\n\n\n\n\n\nBaseUrlInterceptor\n\nBaseUrlInterceptor\n\nAppModule -->\n\nBaseUrlInterceptor->AppModule\n\n\n\n\n\nCacheInterceptor\n\nCacheInterceptor\n\nAppModule -->\n\nCacheInterceptor->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\nLoaderInterceptor\n\nLoaderInterceptor\n\nAppModule -->\n\nLoaderInterceptor->AppModule\n\n\n\n\n\nSanitizeUrlInterceptor\n\nSanitizeUrlInterceptor\n\nAppModule -->\n\nSanitizeUrlInterceptor->AppModule\n\n\n\n\n\nExampleComponent\n\nExampleComponent\n\nExampleModule -->\n\nExampleComponent->ExampleModule\n\n\n\n\n\nExampleComponent \n\nExampleComponent \n\nExampleComponent  -->\n\nExampleModule->ExampleComponent \n\n\n\n\n\nConsumerDetailComponent\n\nConsumerDetailComponent\n\nWaterUsageForecastsModule -->\n\nConsumerDetailComponent->WaterUsageForecastsModule\n\n\n\n\n\nMapSelectViewComponent\n\nMapSelectViewComponent\n\nWaterUsageForecastsModule -->\n\nMapSelectViewComponent->WaterUsageForecastsModule\n\n\n\n\n\nResultDataViewComponent\n\nResultDataViewComponent\n\nWaterUsageForecastsModule -->\n\nResultDataViewComponent->WaterUsageForecastsModule\n\n\n\n\n\nWaterRightDetailComponent\n\nWaterRightDetailComponent\n\nWaterUsageForecastsModule -->\n\nWaterRightDetailComponent->WaterUsageForecastsModule\n\n\n\n\n\nBreadcrumbsComponent\n\nBreadcrumbsComponent\n\nWisdomModule -->\n\nBreadcrumbsComponent->WisdomModule\n\n\n\n\n\nBulmaIsToggleableDirective\n\nBulmaIsToggleableDirective\n\nWisdomModule -->\n\nBulmaIsToggleableDirective->WisdomModule\n\n\n\n\n\nIonIconComponent\n\nIonIconComponent\n\nWisdomModule -->\n\nIonIconComponent->WisdomModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nWisdomModule -->\n\nMapComponent->WisdomModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    14 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    13 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    10 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        3 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ExampleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WaterUsageForecastsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WisdomModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.1.0\n        \n            Description : Workspace for the angular frontend.\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ConsumerLocationsResponse   (wisdom_modules/.../consumers.service.ts)\n                        \n                        \n                            DeleteUsersId200   (wisdom_modules/.../DeleteUsersId200.ts)\n                        \n                        \n                            DeleteUsersId403   (wisdom_modules/.../DeleteUsersId403.ts)\n                        \n                        \n                            DeleteUsersId404   (wisdom_modules/.../DeleteUsersId404.ts)\n                        \n                        \n                            GeoJsonObject   (wisdom_modules/.../layer-data.ts)\n                        \n                        \n                            GeoJsonObject   (wisdom_modules/.../map.component.ts)\n                        \n                        \n                            GetUsers200   (wisdom_modules/.../GetUsers200.ts)\n                        \n                        \n                            GetUsersId200   (wisdom_modules/.../GetUsersId200.ts)\n                        \n                        \n                            GetUsersId404   (wisdom_modules/.../GetUsersId404.ts)\n                        \n                        \n                            GetUsersMe200   (wisdom_modules/.../GetUsersMe200.ts)\n                        \n                        \n                            HistoryResponse   (wisdom_modules/.../water-usage-history.service.ts)\n                        \n                        \n                            LayerConfig   (wisdom_modules/.../map.component.ts)\n                        \n                        \n                            LayerKey   (wisdom_modules/.../map.component.ts)\n                        \n                        \n                            nullString   (wisdom_modules/.../side-bar-entries.ts)\n                        \n                        \n                            PatchUsers204   (wisdom_modules/.../PatchUsers204.ts)\n                        \n                        \n                            PatchUsers403   (wisdom_modules/.../PatchUsers403.ts)\n                        \n                        \n                            PatchUsers404   (wisdom_modules/.../PatchUsers404.ts)\n                        \n                        \n                            PatchUsersMe200   (wisdom_modules/.../PatchUsersMe200.ts)\n                        \n                        \n                            PostOAuthToken200   (wisdom_modules/.../PostOAuthToken200.ts)\n                        \n                        \n                            PostOAuthToken400   (wisdom_modules/.../PostOAuthToken400.ts)\n                        \n                        \n                            PostOAuthToken401   (wisdom_modules/.../PostOAuthToken401.ts)\n                        \n                        \n                            PostRevoke200   (wisdom_modules/.../PostRevoke200.ts)\n                        \n                        \n                            PostRevoke403   (wisdom_modules/.../PostRevoke403.ts)\n                        \n                        \n                            PutUsers201   (wisdom_modules/.../PutUsers201.ts)\n                        \n                        \n                            PutUsers409   (wisdom_modules/.../PutUsers409.ts)\n                        \n                        \n                            SideBarEntries   (wisdom_modules/.../side-bar-entries.ts)\n                        \n                        \n                            SideBarEntry   (wisdom_modules/.../side-bar-entries.ts)\n                        \n                        \n                            SideBarEntryLvl1   (wisdom_modules/.../side-bar-entries.ts)\n                        \n                        \n                            SideBarEntryLvl2   (wisdom_modules/.../side-bar-entries.ts)\n                        \n                        \n                            SideBarEntryLvl3   (wisdom_modules/.../side-bar-entries.ts)\n                        \n                        \n                            SideBarLabel   (wisdom_modules/.../side-bar-entries.ts)\n                        \n                        \n                            User   (wisdom_modules/.../User.ts)\n                        \n                        \n                            WaterRightDetailRawResponse   (wisdom_modules/.../water-rights.service.ts)\n                        \n                        \n                            WaterRightDetailResponse   (wisdom_modules/.../water-rights.service.ts)\n                        \n                        \n                            WaterRightLocationResponse   (wisdom_modules/.../water-rights.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    wisdom_modules/water-usage-forecasts/src/lib/services/consumers.service.ts\n    \n    \n        \n            \n                \n                    \n                    ConsumerLocationsResponse\n                \n            \n            \n                \n                        literal type[]\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/users/DeleteUsersId200.ts\n    \n    \n        \n            \n                \n                    \n                    DeleteUsersId200\n                \n            \n            \n                \n                    The user was deleted\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/users/DeleteUsersId403.ts\n    \n    \n        \n            \n                \n                    \n                    DeleteUsersId403\n                \n            \n            \n                \n                    Insufficient privileges to run this action\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/users/DeleteUsersId404.ts\n    \n    \n        \n            \n                \n                    \n                    DeleteUsersId404\n                \n            \n            \n                \n                    The user does not exist in the system\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    wisdom_modules/common/src/lib/map/layer-data.ts\n    \n    \n        \n            \n                \n                    \n                    GeoJsonObject\n                \n            \n            \n                \n                    GeoJSON data type used by Leaflet.\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    wisdom_modules/common/src/lib/map/map.component.ts\n    \n    \n        \n            \n                \n                    \n                    GeoJsonObject\n                \n            \n            \n                \n                    GeoJSON data type used by Leaflet.\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    LayerConfig\n                \n            \n            \n                \n                    A layer config for the input of MapComponent.inputLayers.\n\n                \n            \n            \n                \n                            Record\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    LayerKey\n                \n            \n            \n                \n                    Type alias to enforce the meaning of the layer keys.\n\n                \n            \n            \n                \n                            string\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/users/GetUsers200.ts\n    \n    \n        \n            \n                \n                    \n                    GetUsers200\n                \n            \n            \n                \n                            User[]\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/users/GetUsersId200.ts\n    \n    \n        \n            \n                \n                    \n                    GetUsersId200\n                \n            \n            \n                \n                    \nInformation about the User\n\n\n                \n            \n            \n                \n                            Omit\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/users/GetUsersId404.ts\n    \n    \n        \n            \n                \n                    \n                    GetUsersId404\n                \n            \n            \n                \n                    The user does not exist in the system\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/users/GetUsersMe200.ts\n    \n    \n        \n            \n                \n                    \n                    GetUsersMe200\n                \n            \n            \n                \n                    Information\n\n                \n            \n            \n                \n                            Omit\n\n                \n            \n        \n    \n    wisdom_modules/water-usage-forecasts/src/lib/services/water-usage-history.service.ts\n    \n    \n        \n            \n                \n                    \n                    HistoryResponse\n                \n            \n            \n                \n                        literal type[]\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/frame/side-bar/side-bar-entries.ts\n    \n    \n        \n            \n                \n                    \n                    nullString\n                \n            \n            \n                \n                    Nullable string.\n\n                \n            \n            \n                \n                        string | null\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SideBarEntries\n                \n            \n            \n                \n                    This type describes the nested data structure of the sidebar.\nThis type consists of nested arrays.\nThe first layer are for labels.\nAll the following are entries with a name, that may be translated if give a\ntranslation key, a possible icon name from ://ionic.io/ioniconshttps,\na path to follow and possible children.\n\n                \n            \n            \n                \n                            SideBarLabel[]\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SideBarEntry\n                \n            \n            \n                \n                    [identifier name, icon name, path]\n\n                \n            \n            \n                \n                            [string, nullString, nullString]\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SideBarEntryLvl1\n                \n            \n            \n                \n                             | SideBarEntry\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SideBarEntryLvl2\n                \n            \n            \n                \n                             | SideBarEntry\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SideBarEntryLvl3\n                \n            \n            \n                \n                            SideBarEntry\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SideBarLabel\n                \n            \n            \n                \n                        [string, nullString, SideBarEntryLvl1[]]\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/users/PatchUsers204.ts\n    \n    \n        \n            \n                \n                    \n                    PatchUsers204\n                \n            \n            \n                \n                    Successfully updated the user\n\n                \n            \n            \n                \n                            Omit\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/users/PatchUsers403.ts\n    \n    \n        \n            \n                \n                    \n                    PatchUsers403\n                \n            \n            \n                \n                    Insufficient privileges to update the users\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/users/PatchUsers404.ts\n    \n    \n        \n            \n                \n                    \n                    PatchUsers404\n                \n            \n            \n                \n                    The user does not exist and therefore cannot be updated\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/users/PatchUsersMe200.ts\n    \n    \n        \n            \n                \n                    \n                    PatchUsersMe200\n                \n            \n            \n                \n                    Successfully updated the user\n\n                \n            \n            \n                \n                            Omit\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/login/PostOAuthToken200.ts\n    \n    \n        \n            \n                \n                    \n                    PostOAuthToken200\n                \n            \n            \n                \n                    The user was authorized successfully\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/login/PostOAuthToken400.ts\n    \n    \n        \n            \n                \n                    \n                    PostOAuthToken400\n                \n            \n            \n                \n                    Bad request made\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/login/PostOAuthToken401.ts\n    \n    \n        \n            \n                \n                    \n                    PostOAuthToken401\n                \n            \n            \n                \n                    Unauthorized\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/login/PostRevoke200.ts\n    \n    \n        \n            \n                \n                    \n                    PostRevoke200\n                \n            \n            \n                \n                    Standard response\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/login/PostRevoke403.ts\n    \n    \n        \n            \n                \n                    \n                    PostRevoke403\n                \n            \n            \n                \n                    The scope of the current user is insufficient\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/users/PutUsers201.ts\n    \n    \n        \n            \n                \n                    \n                    PutUsers201\n                \n            \n            \n                \n                    The user was created successfully\n\n                \n            \n            \n                \n                            User\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/users/PutUsers409.ts\n    \n    \n        \n            \n                \n                    \n                    PutUsers409\n                \n            \n            \n                \n                    A user with the same data already exists\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/types/User.ts\n    \n    \n        \n            \n                \n                    \n                    User\n                \n            \n            \n                \n                    Representation of a user.\n\n                \n            \n            \n                \n                        Partial\n\n                \n            \n        \n    \n    wisdom_modules/water-usage-forecasts/src/lib/services/water-rights.service.ts\n    \n    \n        \n            \n                \n                    \n                    WaterRightDetailRawResponse\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    WaterRightDetailResponse\n                \n            \n            \n                \n                        Partial\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    WaterRightLocationResponse\n                \n            \n            \n                \n                        literal type[]\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ACCESS_TOKEN_KEY   (wisdom_modules/.../auth-storage.service.ts)\n                        \n                        \n                            API_URL   (wisdom_modules/.../map.service.ts)\n                        \n                        \n                            API_URL   (wisdom_modules/.../consumers.service.ts)\n                        \n                        \n                            API_URL   (wisdom_modules/.../water-usage-forecasts.service.ts)\n                        \n                        \n                            API_URL   (wisdom_modules/.../water-rights.service.ts)\n                        \n                        \n                            API_URL   (wisdom_modules/.../water-usage-history.service.ts)\n                        \n                        \n                            AUTH_API   (wisdom_modules/.../user.service.ts)\n                        \n                        \n                            AUTH_URL   (wisdom_modules/.../auth.service.ts)\n                        \n                        \n                            baseUrl   (wisdom_modules/.../environment.prod.ts)\n                        \n                        \n                            baseUrl   (wisdom_modules/.../environment.ts)\n                        \n                        \n                            consumerIcon   (wisdom_modules/.../map-icons.ts)\n                        \n                        \n                            control   (wisdom_modules/.../invert-selection.ts)\n                        \n                        \n                            DB_NAME   (wisdom_modules/.../map.service.ts)\n                        \n                        \n                            environment   (wisdom_modules/.../environment.common.ts)\n                        \n                        \n                            environment   (wisdom_modules/.../environment.prod.ts)\n                        \n                        \n                            environment   (wisdom_modules/.../environment.ts)\n                        \n                        \n                            EXPIRES_IN_KEY   (wisdom_modules/.../auth-storage.service.ts)\n                        \n                        \n                            getOptions   (wisdom_modules/.../user.service.ts)\n                        \n                        \n                            HIDE_SIDEBAR_KEY   (wisdom_modules/.../settings-storage.service.ts)\n                        \n                        \n                            HIDE_USER_BAR_KEY   (wisdom_modules/.../settings-storage.service.ts)\n                        \n                        \n                            httpOptions   (wisdom_modules/.../auth.service.ts)\n                        \n                        \n                            langs   (sidebar.ts)\n                        \n                        \n                            langs   (wisdom_modules/.../static-loader.ts)\n                        \n                        \n                            REFRESH_TOKEN_KEY   (wisdom_modules/.../auth-storage.service.ts)\n                        \n                        \n                            route   (wisdom_modules/.../routing.ts)\n                        \n                        \n                            SCHEMA_V   (wisdom_modules/.../map.service.ts)\n                        \n                        \n                            SCOPES_KEY   (wisdom_modules/.../auth-storage.service.ts)\n                        \n                        \n                            sidebar   (sidebar.ts)\n                        \n                        \n                            TOKEN_HEADER_KEY   (wisdom_modules/.../auth.interceptor.ts)\n                        \n                        \n                            USE_API_URL   (wisdom_modules/.../use-api-url.ts)\n                        \n                        \n                            USE_BASE_URL   (wisdom_modules/.../use-base-url.ts)\n                        \n                        \n                            USE_CACHE   (wisdom_modules/.../use-cache.ts)\n                        \n                        \n                            USE_ERROR_CURTAIN   (wisdom_modules/.../use-error-curtain.ts)\n                        \n                        \n                            USE_LOADER   (wisdom_modules/.../use-loader.ts)\n                        \n                        \n                            waterRightIcon   (wisdom_modules/.../map-icons.ts)\n                        \n                        \n                            wisdomInterface   (wisdom_modules/.../public-api.ts)\n                        \n                        \n                            wisdomInterface   (wisdom_modules/.../public-api.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    wisdom_modules/core/src/app/auth/auth-storage.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ACCESS_TOKEN_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"auth-token\"\n                    \n                \n\n            \n                \n                    Key for the access token.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        EXPIRES_IN_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"auth-expires-in\"\n                    \n                \n\n            \n                \n                    Key fo the expiration date.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        REFRESH_TOKEN_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"auth-refresh-token\"\n                    \n                \n\n            \n                \n                    Key for the refresh token.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SCOPES_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"auth-scopes\"\n                    \n                \n\n            \n                \n                    Key for the scopes.\n\n                \n            \n\n        \n    \n\n    wisdom_modules/common/src/lib/map/map.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        API_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"geodata\"\n                    \n                \n\n            \n                \n                    API url for the map to request data from.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DB_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"map-db\"\n                    \n                \n\n            \n                \n                    Indexed DB name.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SCHEMA_V\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 2\n                    \n                \n\n            \n                \n                    Indexed DB schema version.\n\n                \n            \n\n        \n    \n\n    wisdom_modules/water-usage-forecasts/src/lib/services/consumers.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        API_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"consumers/\"\n                    \n                \n\n\n        \n    \n\n    wisdom_modules/water-usage-forecasts/src/lib/services/water-usage-forecasts.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        API_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"water-usage-forecasts\"\n                    \n                \n\n            \n                \n                    Route of the API access.\n\n                \n            \n\n        \n    \n\n    wisdom_modules/water-usage-forecasts/src/lib/services/water-rights.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        API_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"water-rights/\"\n                    \n                \n\n\n        \n    \n\n    wisdom_modules/water-usage-forecasts/src/lib/services/water-usage-history.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        API_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"water-usage-history/\"\n                    \n                \n\n\n        \n    \n\n    wisdom_modules/core/src/app/auth/user.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AUTH_API\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"localhost:8090/auth/\"\n                    \n                \n\n            \n                \n                    Url for the interaction.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : {\n  responseType: \"json\"\n}\n                    \n                \n\n            \n                \n                    Options passed into the get requests.\n\n                \n            \n\n        \n    \n\n    wisdom_modules/core/src/app/auth/auth.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AUTH_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"auth\"\n                    \n                \n\n            \n                \n                    Url for the interaction.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        httpOptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : {\n  headers: new HttpHeaders({\n    \"Content-Type\": \"application/x-www-form-urlencoded\"\n  }),\n  responseType: \"json\",\n  context: new HttpContext()\n    .set(USE_API_URL, true)\n    .set(USE_CACHE, false)\n    .set(USE_ERROR_CURTAIN, false)\n}\n                    \n                \n\n            \n                \n                    Options for the post request in the service.\nAs per reference the content type is always \"x-www-form-urlencoded\" instead\nof \"json\".\nThe response is a json though.\n\n                \n            \n\n        \n    \n\n    wisdom_modules/core/src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : window.location.origin + \"/\"\n                    \n                \n\n            \n                \n                    Base url for making requests.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.assign({}, commonEnvironment, {\n  production: true,\n  baseUrl,\n  apiUrl: baseUrl + \"api/\"\n})\n                    \n                \n\n            \n                \n                    Environment for the dev mode.\n\n                \n            \n\n        \n    \n\n    wisdom_modules/core/src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : window.location.origin + \"/\"\n                    \n                \n\n            \n                \n                    Url used to call the original window location, will be captured by the proxy.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.assign({}, commonEnvironment, {\n  production: false,\n  baseUrl,\n  apiUrl: baseUrl + \"api/\"\n})\n                    \n                \n\n            \n                \n                    Environment for the dev mode.\n\n                \n            \n\n        \n    \n\n    wisdom_modules/water-usage-forecasts/src/lib/map-icons.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        consumerIcon\n                        \n                    \n                \n            \n                \n                    \n                        Default value : icon({\n  iconUrl: \"https://unpkg.com/ionicons@5.5.2/dist/svg/business.svg\",\n  iconSize: [35, 35]\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        waterRightIcon\n                        \n                    \n                \n            \n                \n                    \n                        Default value : icon({\n  iconUrl: \"https://unpkg.com/ionicons@5.5.2/dist/svg/water.svg\",\n  iconSize: [35, 35]\n})\n                    \n                \n\n\n        \n    \n\n    wisdom_modules/common/src/lib/map/invert-selection.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        control\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  invertSelection: (callback: (arg0: MouseEvent) => void, options?: L.ControlOptions) => {\n    let InvertSelection = L.Control.extend({\n      options: {\n        position: \"topright\"\n      },\n      initialize: function (options: any) {\n        L.Util.setOptions(this, options);\n      },\n      onAdd: function (map: L.Map) {\n        let centerContent = [\n          \"is-flex is-align-content-center\",\n          \"is-align-items-center\",\n          \"is-justify-content-center\"\n        ].join(\" \");\n\n        let container = L.DomUtil.create(\n          \"div\",\n          \"select-all-container leaflet-control-layers leaflet-control\"\n        );\n        container.addEventListener(\"click\", callback);\n        let button = L.DomUtil.create(\n          \"a\",\n          \"leaflet-control-layers-toggle \" + centerContent,\n          container\n        );\n        button.style.backgroundImage = \"none\";\n        let icon = L.DomUtil.create(\n          \"ion-icon\",\n          \"select-all-icon\",\n          button\n        );\n        icon.style.pointerEvents = \"none\";\n        icon.setAttribute(\"name\", \"extension-puzzle\");\n        icon.setAttribute(\"size\", \"large\");\n        icon.style.color = \"#a0a0a0\";\n        return container;\n      }\n    });\n    return new InvertSelection(options);\n  }\n}\n                    \n                \n\n            \n                \n                    Custom control to invert the currently selected shapes on a\nMapComponent.\n\n                \n            \n\n        \n    \n\n    wisdom_modules/core/src/environments/environment.common.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  // empty for now but still injected\n}\n                    \n                \n\n            \n                \n                    Environment values for both dev and prod mode.\n\n                \n            \n\n        \n    \n\n    wisdom_modules/core/src/app/settings-storage.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        HIDE_SIDEBAR_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"hide-sidebar\"\n                    \n                \n\n            \n                \n                    Key for the sidebar hide setting.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        HIDE_USER_BAR_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"hide-user-bar\"\n                    \n                \n\n            \n                \n                    key for the user bar hide setting.\n\n                \n            \n\n        \n    \n\n    sidebar.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        langs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  de_DE: {\n    \"water-usage\": \"Wasserverbrauch\"\n  },\n  en_US: {\n    \"water-usage\": \"Water Usage\"\n  }\n}\n                    \n                \n\n            \n                \n                    This constant is used to inject language content into the translator.\nThe keys to use the injected will use the namespace \"sidebar\".\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sidebar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SideBarEntries\n\n                    \n                \n                \n                    \n                        Default value : [\n  [\n    \"Proof of Concept\", \"rocket\", [\n      [\"Example\", \"sparkles\", \"example\"],\n      [\"No Example\", null, null]\n    ]\n  ],\n  [\n    \"sidebar.water-usage\", \"bar-chart\", [\n      [\"water-usage-forecasts.label.name\", \"calendar\", \"water-usage-forecasts\"]\n    ]\n  ]\n]\n                    \n                \n\n            \n                \n                    This constant describes how the sidebar should directly look like.\nFor further explanation check SideBarEntries.\n\n                \n            \n\n        \n    \n\n    wisdom_modules/core/src/app/i18n/static-loader.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        langs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n  de_DE: Object.assign({}, de_DELang, de_DELangCommon, ModuleProvider.langs(\"de_DE\")),\n  en_US: Object.assign({}, en_USLang, en_USLangCommon, ModuleProvider.langs(\"en_US\"))\n}\n                    \n                \n\n            \n                \n                    The languages the loader provides.\n\n                \n            \n\n        \n    \n\n    wisdom_modules/water-usage-forecasts/src/lib/routing.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Route\n\n                    \n                \n                \n                    \n                        Default value : {\n  path: \"water-usage-forecasts\",\n  children: [\n    {\n      path: \"\",\n      component: MapSelectViewComponent,\n    },\n    {\n      path: \"results\",\n      component: ResultDataViewComponent,\n      data: {\n        redirectTo: \"/water-usage-forecasts\",\n        queryParams: \"key\"\n      },\n      canActivate: [QueryParameterGuard]\n    },\n    {\n      path: \"detail\",\n      children: [\n        {\n          path: \"\",\n          pathMatch: \"full\",\n          redirectTo: \"/water-usage-forecasts\"\n        },\n        {\n          path: \"water-right/:waterRight\",\n          component: WaterRightDetailComponent\n        },\n        {\n          path: \"consumer/:consumer\",\n          component: ConsumerDetailComponent\n        }\n      ]\n    },\n    {\n      path: \"**\",\n      redirectTo: \"/water-usage-forecasts\"\n    }\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    wisdom_modules/core/src/app/auth/auth.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TOKEN_HEADER_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Authorization\"\n                    \n                \n\n            \n                \n                    Key for the token.\n\n                \n            \n\n        \n    \n\n    wisdom_modules/common/src/lib/http-context/use-api-url.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        USE_API_URL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new HttpContextToken(() => false)\n                    \n                \n\n            \n                \n                    HttpContextToken used to determine if the api url should be used.\nDefaults to false.\n\n                \n            \n\n        \n    \n\n    wisdom_modules/common/src/lib/http-context/use-base-url.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        USE_BASE_URL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new HttpContextToken(() => true)\n                    \n                \n\n            \n                \n                    HttpContextToken used to determine if the base url should be used.\nDefaults to true.\n\n                \n            \n\n        \n    \n\n    wisdom_modules/common/src/lib/http-context/use-cache.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        USE_CACHE\n                        \n                    \n                \n            \n                \n                    \n                        Type :     miscellaneous\n\n                    \n                \n                \n                    \n                        Default value : new HttpContextToken(() => true)\n                    \n                \n\n            \n                \n                    HttpContextToken used to determine if cache headers should be sent.\nDefaults to true.\n\n                \n            \n\n        \n    \n\n    wisdom_modules/common/src/lib/http-context/use-error-curtain.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        USE_ERROR_CURTAIN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new HttpContextToken(() => true)\n                    \n                \n\n            \n                \n                    HttpContextToken used to determine if requests that error should show\nthe error message on curtain covering the whole main container.\nDisable this if you want to handle errors yourself.\nDefaults to true.\n\n                \n            \n\n        \n    \n\n    wisdom_modules/common/src/lib/http-context/use-loader.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        USE_LOADER\n                        \n                    \n                \n            \n                \n                    \n                        Type :     miscellaneous\n\n                    \n                \n                \n                    \n                        Default value : new HttpContextToken(() => false)\n                    \n                \n\n            \n                \n                    HttpContextToken used to determine if loader should be shown.\nA given string will be run through the translator and therefore may get\ntranslated.\nUseful for longer loading times.\nDefaults to false.\n\n                \n            \n\n        \n    \n\n    wisdom_modules/example/src/public-api.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        wisdomInterface\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WisdomInterface\n\n                    \n                \n                \n                    \n                        Default value : {\n  route: {\n    path: \"example\",\n    component: ExampleComponent\n  },\n  scopes: [\"example\"],\n  translations: {\n    de_DE,\n    en_US\n  }\n}\n                    \n                \n\n            \n                \n                    The wisdom interface for the core module to inject this module.\n\n                \n            \n\n        \n    \n\n    wisdom_modules/water-usage-forecasts/src/public-api.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        wisdomInterface\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WisdomInterface\n\n                    \n                \n                \n                    \n                        Default value : {\n  route,\n  scopes: [\"water-usage-forecasts\"],\n  translations: {\n    de_DE,\n    en_US\n  }\n}\n                    \n                \n\n            \n                \n                    Public interface for the wisdom core to inject this module.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
