var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.781,1,1.14]],["body/components/AppComponent.html",[0,1.305,1,2.018,2,2.295,3,0.352,4,0.352,5,1.958,6,1.958,7,1.958,8,0.299,9,2.887,10,1.593,11,2.714,12,2.804,13,2.295,14,2.859,15,4.544,16,0.467,17,2.859,18,5.054,19,0.529,20,0.036,21,0.991,22,2.195,23,2.195,24,4.544,25,4.544,26,0.664,27,3.489,28,0.409,29,0.467,30,0.352,31,0.248,32,1.958,33,2.551,34,2.551,35,1.197,36,3.006,37,1.958,38,1.133,39,1.958,40,1.197,41,1.197,42,1.958,43,1.315,44,1.762,45,1.958,46,1.197,47,1.446,48,1.446,49,1.197,50,1.958,51,1.197,52,1.762,53,1.958,54,0.027,55,0.027]],["title/modules/AppModule.html",[56,1.381,57,1.903]],["body/modules/AppModule.html",[1,2.204,3,0.278,4,0.278,8,0.236,12,1.388,20,0.036,28,0.695,29,0.368,30,0.278,31,0.195,41,1.82,46,1.82,51,1.82,54,0.023,55,0.023,57,3.848,58,1.036,59,1.953,60,2.275,61,2.275,62,2.275,63,2.275,64,2.275,65,2.978,66,2.678,67,2.978,68,2.978,69,2.433,70,1.73,71,1.73,72,2.749,73,2.761,74,3.867,75,2.433,76,3.867,77,3.867,78,4.473,79,1.543,80,2.433,81,3.867,82,1.963,83,3.867,84,2.275,85,1.73,86,3.2,87,2.275,88,1.543,89,1.543,90,2.275,91,2.749,92,2.749,93,2.275,94,2.749,95,1.543,96,2.275,97,2.275,98,2.749,99,2.749,100,2.433,101,2.749,102,2.749,103,2.749,104,2.749,105,1.963,106,2.275,107,4.473,108,4.473,109,3.867,110,1.953]],["title/modules/AppRoutingModule.html",[56,1.381,65,1.698]],["body/modules/AppRoutingModule.html",[0,1.267,3,0.398,4,0.398,8,0.337,20,0.036,28,0.688,29,0.528,30,0.398,31,0.28,41,1.684,46,1.684,47,1.632,54,0.029,55,0.029,56,1.798,58,1.484,65,2.755,75,2.477,80,3.088,93,3.258,97,3.258,111,3.938,112,3.938,113,4.909,114,3.002,115,1.988,116,3.088,117,3.938,118,2.21,119,3.258,120,4.909,121,1.798,122,2.034,123,3.258,124,3.938,125,3.938,126,2.811]],["title/guards/AuthGuard.html",[116,1.903,127,1.903]],["body/guards/AuthGuard.html",[3,0.194,4,0.194,8,0.164,13,0.967,16,0.257,19,0.449,20,0.037,26,0.564,28,0.515,29,0.257,30,0.194,31,0.136,38,0.626,47,1.928,54,0.017,55,0.017,85,1.862,110,0.967,115,0.967,116,1.862,122,0.794,123,3.642,127,1.862,128,1.915,129,1.585,130,0.967,131,2.961,132,3.322,133,2.961,134,2.45,135,3.818,136,2.114,137,3.247,138,2.961,139,4.071,140,3.052,141,2.961,142,4.071,143,0.764,144,0.764,145,1.585,146,1.859,147,2.45,148,3.464,149,1.915,150,0.841,151,0.841,152,1.862,153,1.915,154,4.071,155,4.071,156,4.071,157,1.915,158,2.961,159,2.961,160,2.961,161,2.961,162,2.961,163,4.851,164,2.45,165,2.114,166,2.961,167,2.961,168,2.961,169,2.114,170,4.071,171,0.494,172,1.827,173,3.619,174,2.45,175,0.841,176,0.875,177,1.495,178,1.205,179,1.585,180,1.075,181,0.967,182,1.652,183,1.862,184,1.585,185,1.367,186,1.915,187,1.915,188,1.719,189,2.961,190,1.915,191,1.585,192,1.585,193,1.915,194,1.585,195,2.114,196,1.915,197,1.585,198,1.915,199,1.585,200,1.495,201,1.915,202,1.915,203,1.862,204,1.075,205,1.915,206,1.585,207,1.915,208,2.961,209,4.071,210,2.45,211,1.585,212,1.915,213,1.585,214,2.45,215,2.114,216,2.961,217,2.961,218,2.961,219,2.961,220,1.915,221,1.915,222,1.585,223,1.915,224,1.915,225,1.915,226,1.585,227,1.585,228,1.915,229,3.619,230,1.585,231,1.915,232,2.45,233,1.915,234,1.915,235,1.915,236,1.915,237,1.585,238,1.367,239,1.915,240,1.915,241,1.585,242,1.915,243,1.585,244,1.915,245,1.915,246,1.915,247,1.915,248,2.45,249,1.585]],["title/interceptors/AuthInterceptor.html",[67,1.698,250,1.903]],["body/interceptors/AuthInterceptor.html",[3,0.296,4,0.296,8,0.251,16,0.393,19,0.614,20,0.037,26,0.77,28,0.584,29,0.393,30,0.296,31,0.208,38,0.855,54,0.024,55,0.024,67,2.27,79,1.646,121,1.846,130,2.042,137,3.259,143,1.044,144,0.757,145,2.426,146,2.279,150,1.149,151,1.149,152,2.544,171,0.757,172,2.337,175,1.149,176,1.339,177,1.48,178,1.844,181,1.48,183,2.544,188,1.006,195,2.093,203,3.405,250,2.544,251,2.426,252,2.093,253,3.346,254,3.831,255,3.259,256,3.831,257,2.932,258,2.426,259,4.479,260,4.13,261,2.932,262,4.044,263,4.629,264,4.044,265,4.044,266,3.346,267,4.044,268,2.426,269,3.346,270,2.093,271,2.093,272,1.646,273,4.044,274,2.932,275,2.932,276,4.044,277,2.932,278,2.932,279,1.844,280,2.932,281,2.932]],["title/injectables/AuthService.html",[147,1.527,175,0.859]],["body/injectables/AuthService.html",[3,0.202,4,0.202,8,0.172,13,1.011,16,0.268,19,0.748,20,0.037,21,1.61,26,0.855,28,0.623,29,0.268,30,0.202,31,0.142,38,0.95,47,1.269,54,0.018,55,0.018,79,1.124,95,1.124,96,1.657,110,1.011,121,1.399,122,0.83,130,2.268,132,3.629,135,2.187,137,3.303,140,2.622,143,0.791,144,0.517,147,1.547,150,1.276,151,1.276,164,2.535,165,2.187,171,1.076,172,2.489,175,0.87,176,0.914,177,1.011,180,1.124,183,2.825,185,1.429,188,1.429,199,2.535,200,2.392,204,1.124,255,1.124,272,1.124,279,1.26,282,1.124,283,1.429,284,2.656,285,3.063,286,3.063,287,2.656,288,2.535,289,3.063,290,1.657,291,3.449,292,2.002,293,2.535,294,3.063,295,3.629,296,2.002,297,3.063,298,3.206,299,3.063,300,2.002,301,3.063,302,3.063,303,2.002,304,3.063,305,3.063,306,2.002,307,3.063,308,2.002,309,2.187,310,3.72,311,2.002,312,1.657,313,1.26,314,1.429,315,1.657,316,2.002,317,1.429,318,1.657,319,1.429,320,1.657,321,1.657,322,2.002,323,1.657,324,2.002,325,1.26,326,1.26,327,1.429,328,1.657,329,1.657,330,1.657,331,2.187,332,1.657,333,1.657,334,2.535,335,2.535,336,2.535,337,1.657,338,2.656,339,1.657,340,2.825,341,2.002,342,1.657,343,1.429,344,1.657,345,1.657,346,4.167,347,4.167,348,3.063,349,3.063,350,3.063,351,2.002,352,3.063,353,3.063,354,2.002]],["title/injectables/AuthStorageService.html",[146,1.381,175,0.859]],["body/injectables/AuthStorageService.html",[3,0.179,4,0.179,8,0.152,13,0.897,16,0.238,19,0.684,20,0.037,21,1.643,26,1.015,28,0.208,29,0.238,30,0.179,31,0.245,38,0.954,54,0.016,55,0.016,121,1.784,130,0.897,136,1.268,137,2.531,140,1.756,143,0.721,144,0.89,146,1.274,150,1.281,151,1.281,169,3.22,171,1.218,175,0.793,177,2.277,180,0.997,182,2.059,188,1.547,197,2.31,215,1.268,222,3.234,226,2.31,227,3.732,238,3.033,270,3.588,282,0.997,284,1.993,355,3.859,356,1.268,357,2.791,358,2.791,359,3.908,360,3.22,361,2.791,362,2.791,363,2.31,364,3.448,365,4.248,366,3.448,367,2.837,368,1.776,369,1.776,370,4.51,371,4.51,372,2.791,373,2.382,374,2.791,375,1.776,376,3.908,377,2.791,378,5.532,379,3.949,380,1.776,381,1.776,382,1.776,383,1.776,384,1.776,385,1.776,386,1.776,387,1.776,388,3.234,389,1.776,390,1.776,391,1.776,392,1.776,393,1.776,394,1.776,395,1.776,396,1.776,397,1.776,398,1.776,399,2.462,400,1.47,401,1.47,402,1.47,403,2.462,404,1.47,405,2.462,406,2.462,407,1.776,408,1.776,409,1.776,410,1.776,411,1.776,412,2.791,413,1.776,414,1.776,415,1.776,416,2.791,417,1.776,418,1.776,419,1.776,420,1.776,421,1.776,422,1.776,423,1.776,424,1.776,425,1.776,426,1.776,427,1.776]],["title/interceptors/BaseUrlInterceptor.html",[68,1.698,250,1.903]],["body/interceptors/BaseUrlInterceptor.html",[3,0.276,4,0.276,8,0.234,16,0.366,19,0.414,20,0.037,26,0.733,28,0.597,29,0.366,30,0.45,31,0.316,38,0.578,54,0.023,55,0.023,68,2.16,79,1.533,95,2.971,110,1.943,121,1.757,122,1.131,130,1.943,143,0.993,144,1.15,150,0.776,151,0.776,171,0.705,172,2.25,175,1.093,176,1.247,181,1.379,183,2.421,188,0.937,200,1.943,203,3.33,251,2.26,255,3.053,256,3.688,258,2.26,259,4.004,260,4.004,266,3.185,268,2.26,269,3.185,313,1.718,314,1.949,325,1.718,326,3.675,428,3.182,429,1.949,430,3.33,431,5.101,432,3.848,433,2.73,434,2.73,435,3.848,436,3.455,437,4.222,438,2.73,439,3.185,440,3.185,441,3.185,442,1.949,443,3.185,444,2.421,445,4.839,446,2.73,447,2.73,448,2.73,449,2.73,450,2.73,451,2.73,452,2.73]],["title/directives/BulmaIsToggleableDirective.html",[35,1.038,49,1.038]],["body/directives/BulmaIsToggleableDirective.html",[3,0.288,4,0.288,8,0.244,10,1.3,11,1.81,16,0.382,17,2.493,19,0.786,20,0.037,21,1.564,22,2.493,23,2.493,26,1.069,28,0.334,29,0.382,30,0.288,31,0.324,35,1.359,38,0.838,48,1.18,49,1.359,54,0.023,55,0.023,143,1.023,144,0.735,150,1.126,151,1.126,169,2.033,171,1.023,174,3.28,182,2.449,188,0.977,272,1.599,313,1.791,363,3.28,373,2.001,444,2.493,453,4.717,454,2.357,455,3.963,456,3.101,457,4.559,458,4.929,459,2.83,460,3.28,461,3.28,462,4.559,463,2.848,464,4.929,465,3.963,466,3.963,467,3.963,468,3.963,469,2.033,470,2.357,471,2.848,472,2.848,473,2.848,474,2.848,475,2.848,476,2.033,477,2.357,478,2.848,479,2.848,480,2.848,481,2.848,482,2.848,483,2.848,484,2.357,485,4.559,486,2.848,487,3.963,488,3.963,489,2.848]],["title/components/ExampleComponent.html",[0,0.781,40,1.038]],["body/components/ExampleComponent.html",[0,1.281,1,1.266,2,2.239,3,0.34,4,0.34,5,1.887,6,1.887,7,1.887,8,0.288,10,1.535,11,2.623,12,2.506,14,2.79,16,0.45,20,0.036,26,0.844,28,0.394,29,0.45,30,0.34,31,0.239,32,1.887,33,2.489,34,2.489,35,1.153,36,2.962,37,1.887,38,1.116,39,1.887,40,1.81,41,1.153,42,1.887,43,1.266,44,1.697,45,1.887,46,1.153,47,1.393,48,1.393,49,1.153,50,1.887,51,1.153,52,1.697,53,1.887,54,0.026,55,0.026,143,1.145,144,1.281,171,0.868,181,2.239,373,2.239,490,2.781,491,3.543,492,4.435,493,4.367,494,3.361,495,3.361,496,3.67,497,3.67,498,4.435,499,3.166]],["title/modules/ExampleModule.html",[56,1.381,500,1.903]],["body/modules/ExampleModule.html",[3,0.378,4,0.378,8,0.32,20,0.036,28,0.644,29,0.501,30,0.378,31,0.266,40,2.105,54,0.028,55,0.028,58,1.409,59,2.4,66,2.928,69,2.99,70,2.353,71,2.353,73,3.393,75,2.99,80,2.99,87,3.933,88,2.099,89,2.099,90,3.095,126,3.393,500,3.787,501,3.095,502,3.095,503,3.74,504,3.095,505,3.74,506,3.74]],["title/injectables/ExampleService.html",[175,0.859,507,2.159]],["body/injectables/ExampleService.html",[3,0.448,4,0.448,8,0.38,13,2.239,20,0.036,26,0.844,28,0.519,29,0.594,30,0.448,31,0.315,54,0.031,55,0.031,144,1.455,175,1.5,180,2.489,282,2.489,507,3.768,508,3.67,509,4.435]],["title/components/FrameComponent.html",[0,0.781,41,1.038]],["body/components/FrameComponent.html",[0,1.114,1,0.971,2,1.865,3,0.26,4,0.26,5,1.447,6,1.447,7,1.447,8,0.221,10,1.177,11,2.543,12,2.52,14,2.324,16,0.345,19,0.391,20,0.037,26,0.703,28,0.552,29,0.345,30,0.26,31,0.183,32,1.447,33,2.073,34,2.073,35,0.884,36,2.646,37,1.447,38,1.056,39,1.447,40,0.884,41,1.617,42,1.447,43,0.971,44,1.301,45,1.447,46,0.884,47,1.068,48,1.068,49,0.884,50,1.447,51,0.884,52,1.301,53,1.447,54,0.022,55,0.022,110,1.301,115,1.301,143,0.953,144,0.953,146,2.153,147,2.622,148,3.818,150,0.732,151,0.732,152,2.716,171,0.665,178,1.621,182,1.971,230,2.133,288,3.902,373,1.301,439,3.057,491,1.84,499,4.194,510,2.133,511,3.694,512,3.694,513,2.133,514,2.577,515,2.577,516,2.577,517,2.577,518,2.577,519,2.577,520,2.133,521,2.577,522,2.133,523,3.057,524,3.057,525,2.324,526,3.694,527,3.694,528,4.715,529,3.694,530,3.694,531,3.694,532,3.694,533,3.694,534,3.694,535,3.694,536,3.694,537,3.694,538,3.694,539,3.694,540,3.694,541,3.694]],["title/components/IonIconComponent.html",[0,0.781,43,1.14]],["body/components/IonIconComponent.html",[0,1.454,1,1.171,2,2.125,3,0.314,4,0.314,5,1.744,6,1.744,7,1.744,8,0.266,10,1.419,11,2.652,12,2.409,16,0.416,19,0.472,20,0.036,21,1.196,26,0.592,28,0.364,29,0.416,30,0.314,31,0.221,32,1.744,33,2.362,34,2.362,35,1.066,36,2.87,37,1.744,38,1.191,39,1.744,40,1.066,41,1.066,42,1.744,43,1.927,44,2.409,45,1.744,46,1.066,47,1.287,48,1.287,49,1.066,50,1.744,51,1.066,52,1.569,53,1.744,54,0.025,55,0.025,130,1.569,192,3.482,253,3.482,379,3.004,430,2.647,459,3.004,476,3.004,497,3.482,542,3.482,543,3.004,544,2.571,545,5.509,546,5.114,547,4.208,548,4.208,549,4.208,550,4.208,551,4.208,552,4.208,553,4.208,554,4.208,555,3.107]],["title/directives/LangSelectorDirective.html",[35,1.038,51,1.038]],["body/directives/LangSelectorDirective.html",[3,0.358,4,0.358,8,0.303,10,1.617,11,2.095,16,0.474,19,0.696,20,0.036,21,1.304,26,1.025,28,0.537,29,0.474,30,0.358,31,0.251,35,1.574,38,0.749,48,1.467,51,1.574,52,2.719,54,0.027,55,0.027,88,1.987,89,1.987,143,1.184,144,0.914,150,1.006,151,1.006,171,0.914,188,1.214,272,1.987,373,1.788,379,3.275,459,3.275,460,3.797,461,3.797,469,2.528,470,2.93,476,2.528,477,2.93,484,2.93,525,2.227,556,4.616,557,2.93,558,5.385,559,3.54,560,5.715,561,3.54,562,3.54,563,4.588,564,3.54,565,4.588,566,3.54,567,3.54]],["title/components/LoginComponent.html",[0,0.781,46,1.038]],["body/components/LoginComponent.html",[0,1.005,1,0.813,2,1.637,3,0.218,4,0.218,5,1.211,6,1.211,7,1.211,8,0.185,10,0.985,11,2.43,12,2.343,14,2.04,16,0.289,17,2.04,19,0.657,20,0.037,21,0.921,22,2.04,23,1.357,26,0.884,28,0.592,29,0.289,30,0.218,31,0.153,32,1.211,33,1.82,34,1.82,35,0.74,36,2.43,37,1.211,38,1.031,39,1.211,40,0.74,41,0.74,42,1.211,43,0.813,44,1.09,45,1.211,46,1.485,47,1.614,48,0.894,49,0.74,50,1.211,51,0.74,52,1.09,53,1.211,54,0.019,55,0.019,82,1.541,115,1.09,121,1.48,135,1.541,143,0.837,144,0.837,146,1.977,147,2.462,148,3.61,150,0.921,151,0.921,152,2.45,171,0.837,177,1.09,178,1.357,179,1.786,181,1.637,182,1.778,194,1.786,195,1.541,203,1.357,204,1.211,210,3.583,211,3.223,213,1.786,214,1.786,232,1.786,241,1.786,243,1.786,248,1.786,295,1.541,298,1.541,317,2.315,318,1.786,319,2.315,320,1.786,373,2.186,444,2.45,469,1.541,491,2.78,493,3.583,499,3.714,513,1.786,520,1.786,522,1.786,523,2.683,524,2.683,568,1.786,569,3.242,570,4.641,571,3.894,572,3.242,573,3.242,574,2.158,575,3.242,576,4.33,577,2.158,578,2.158,579,3.894,580,2.158,581,2.158,582,2.158,583,2.158,584,2.158,585,2.158,586,2.158,587,2.158,588,2.158,589,2.158,590,2.158,591,2.158,592,2.158,593,2.158,594,2.158,595,2.158,596,3.242,597,3.242,598,3.242,599,2.158,600,2.158,601,2.158,602,2.158,603,2.158,604,2.158,605,3.242,606,3.242,607,3.242,608,3.242,609,3.242]],["title/classes/ModuleProvider.html",[31,0.215,118,1.698]],["body/classes/ModuleProvider.html",[0,0.885,3,0.346,4,0.346,8,0.294,16,0.459,19,0.52,20,0.037,21,1.424,26,0.954,28,0.526,30,0.346,31,0.243,38,0.725,54,0.026,55,0.026,56,2.052,58,1.693,114,3.355,115,1.731,118,2.522,122,1.421,143,1.16,144,1.294,150,0.974,151,0.974,171,1.16,182,2.052,188,1.541,360,4.045,456,2.157,525,2.157,610,4.401,611,2.837,612,2.826,613,3.429,614,4.493,615,3.429,616,3.429,617,4.493,618,3.429,619,3.429,620,3.429,621,4.493,622,5.012,623,3.429,624,3.429]],["title/classes/StaticLoader.html",[31,0.215,100,1.903]],["body/classes/StaticLoader.html",[3,0.36,4,0.36,8,0.305,16,0.477,19,0.541,20,0.036,21,1.45,26,0.678,28,0.655,30,0.36,31,0.253,38,0.753,54,0.027,55,0.027,56,1.626,58,1.342,86,4.224,88,1.999,89,1.999,100,2.897,105,2.543,106,3.811,118,1.999,119,2.947,143,1.189,150,1.012,151,1.012,171,0.919,172,2.577,176,1.626,181,2.326,184,3.811,188,1.222,206,2.947,215,2.543,430,2.24,456,2.24,525,2.24,612,2.24,625,2.543,626,4.606,627,4.606,628,3.562,629,3.811,630,3.562,631,3.811,632,3.562,633,2.947,634,3.811,635,2.947,636,2.947,637,3.562,638,4.606,639,2.947,640,3.562,641,4.606,642,3.562,643,3.562]],["title/injectables/UserService.html",[175,0.859,644,2.159]],["body/injectables/UserService.html",[3,0.266,4,0.266,8,0.226,13,1.33,16,0.353,19,0.663,20,0.037,21,1.686,26,0.907,28,0.63,29,0.353,30,0.266,31,0.187,38,0.793,54,0.022,55,0.022,79,1.479,95,1.479,121,1.995,134,2.18,143,0.968,144,0.68,150,1.066,151,1.066,171,0.968,172,2.541,175,1.066,176,1.203,180,1.479,182,1.995,188,1.499,200,1.33,249,2.18,272,1.479,279,1.657,282,1.479,287,1.881,290,2.18,291,3.94,293,3.105,295,3.399,298,3.399,309,2.678,312,3.105,313,1.657,326,2.36,331,1.881,338,2.678,340,2.995,343,2.678,360,3.12,367,3.166,388,3.616,644,2.678,645,1.881,646,4.37,647,4.762,648,2.634,649,2.634,650,4.762,651,5.033,652,2.634,653,4.37,654,3.752,655,2.634,656,2.634,657,2.18,658,2.634,659,2.18,660,2.634,661,2.18,662,2.634,663,2.18,664,2.634,665,2.634,666,2.634,667,2.634,668,1.881,669,2.18,670,1.881,671,3.752,672,2.634,673,2.634,674,3.105,675,3.752,676,3.752,677,2.634,678,2.634,679,2.634,680,2.634,681,2.634]],["title/interfaces/WisdomInterface.html",[682,1.903,683,1.903]],["body/interfaces/WisdomInterface.html",[3,0.414,4,0.414,8,0.351,16,0.549,17,3.166,19,0.862,20,0.036,21,1.686,30,0.414,54,0.03,55,0.03,122,2.353,367,3.573,682,2.579,683,3.166,684,4.1,685,3.393,686,4.7,687,4.7,688,5.446]],["title/modules/WisdomModule.html",[56,1.381,66,1.527]],["body/modules/WisdomModule.html",[3,0.378,4,0.378,8,0.32,20,0.036,28,0.612,29,0.501,30,0.378,31,0.266,43,2.312,44,1.888,49,2.105,54,0.028,55,0.028,58,1.409,59,2.4,66,3.063,69,2.99,70,2.353,71,2.353,73,3.393,75,2.353,80,2.99,126,3.393,543,2.67,689,3.095,690,3.095,691,3.095,692,3.74,693,3.74,694,3.74,695,3.74]],["title/coverage.html",[696,3.419]],["body/coverage.html",[0,1.273,1,0.943,8,0.214,9,2.07,19,0.38,20,0.037,31,0.257,35,1.24,40,0.858,41,0.858,43,0.943,46,0.858,49,0.858,51,0.858,54,0.021,55,0.021,67,1.404,68,1.404,100,1.574,116,1.574,118,1.404,127,1.574,129,2.07,146,1.142,147,1.263,175,1.321,200,1.263,250,2.274,252,2.581,271,1.786,283,3.031,325,1.574,327,1.786,340,1.574,355,3.522,356,3.522,399,1.786,403,1.786,405,1.786,406,1.786,428,3.031,429,3.031,436,3.031,442,1.786,453,2.07,454,2.07,490,2.07,507,1.786,508,2.07,510,2.07,542,2.07,543,1.786,544,2.07,556,2.07,557,2.07,568,2.07,610,2.07,611,2.07,612,1.574,625,2.581,639,2.07,644,1.786,645,3.031,668,1.786,670,1.786,682,1.574,683,2.274,685,2.07,696,2.07,697,2.502,698,2.502,699,6.009,700,4.245,701,2.502,702,2.502,703,2.502,704,4.245,705,2.502,706,2.502,707,5.983,708,5.615,709,5.615,710,4.245,711,4.245,712,2.502,713,2.502,714,2.502,715,5.427,716,3.615,717,2.502,718,2.07,719,2.992,720,2.992,721,2.992,722,2.07,723,2.07,724,2.502,725,2.502]],["title/dependencies.html",[59,1.837,726,2.524]],["body/dependencies.html",[20,0.037,29,0.536,54,0.029,55,0.029,59,2.021,82,2.858,84,4.104,85,3.12,88,2.247,89,2.247,115,2.021,122,1.659,176,1.828,314,2.858,657,3.313,727,4.004,728,6.042,729,4.004,730,4.004,731,4.004,732,4.96,733,4.004,734,4.004,735,4.004,736,4.004,737,4.004,738,4.004,739,4.004,740,4.004,741,4.004,742,4.004,743,4.004]],["title/index.html",[16,0.405,744,2.503]],["body/index.html",[1,2.134,2,1.602,20,0.036,40,1.943,41,1.654,43,2.134,46,1.654,48,1.315,49,1.943,51,1.654,54,0.025,55,0.025,57,3.884,58,1.196,59,2.155,60,2.626,61,2.626,62,2.626,63,2.626,64,2.626,65,2.707,66,2.977,67,2.707,68,2.707,69,2.685,70,1.996,71,1.996,114,1.781,127,1.996,282,1.781,456,1.996,500,3.563,501,2.626,502,2.626,504,2.626,682,1.996,689,2.626,690,2.626,691,2.626,744,2.626,745,4.268,746,3.173,747,4.823,748,4.268]],["title/modules.html",[58,1.557]],["body/modules.html",[20,0.031,54,0.031,55,0.031,57,2.843,58,1.703,65,2.537,66,2.282,85,3.573,191,3.74,500,2.843,749,5.679,750,5.679,751,5.868,752,4.519]],["title/routes.html",[114,2.319]],["body/routes.html",[20,0.033,54,0.033,55,0.033,114,2.733]],["title/miscellaneous/typealiases.html",[753,1.588,754,3.639]],["body/miscellaneous/typealiases.html",[16,0.393,19,0.904,20,0.024,54,0.024,55,0.024,132,4.322,165,2.093,204,1.646,237,2.426,238,2.093,255,1.646,315,3.346,317,2.887,319,2.887,321,3.346,323,3.346,659,3.346,661,3.346,663,3.346,674,2.426,753,1.844,755,2.932,756,4.044,757,2.932,758,4.044,759,2.932,760,4.044,761,2.932,762,2.932,763,4.044,764,2.932,765,4.044,766,2.932,767,4.044,768,2.932,769,4.044,770,2.932,771,4.044,772,2.932,773,4.044,774,2.932,775,4.044,776,2.932,777,2.932,778,2.932,779,2.932,780,2.932,781,2.932,782,2.932,783,2.932,784,2.932,785,2.932,786,2.932,787,5.914,788,2.932,789,4.629,790,4.044,791,2.932,792,2.932,793,2.932,794,4.629,795,4.044,796,2.932,797,2.932,798,4.044,799,4.991,800,2.932,801,2.932,802,2.932,803,4.991,804,4.629,805,2.932,806,2.932,807,2.932,808,2.932,809,2.932,810,2.932,811,2.932,812,2.932,813,2.932,814,2.932,815,2.932,816,2.932,817,2.932,818,2.932,819,2.932,820,2.932,821,2.932,822,2.932,823,2.932,824,2.932,825,2.932,826,2.932,827,2.932,828,2.932]],["title/miscellaneous/variables.html",[753,1.588,829,3.011]],["body/miscellaneous/variables.html",[16,0.289,19,0.856,20,0.037,21,1.477,22,3.685,23,3.685,40,0.739,54,0.019,55,0.019,95,1.209,105,2.311,110,2.184,122,0.892,136,1.538,137,2.603,140,2.037,177,2.342,185,1.538,200,2.184,204,1.209,252,1.538,254,1.782,255,1.209,270,3.311,271,2.311,279,1.355,283,1.538,284,1.538,287,2.311,309,1.538,325,2.037,326,2.721,327,2.311,328,1.782,329,1.782,330,1.782,331,2.311,332,1.782,333,1.782,334,2.679,335,2.679,336,2.679,337,1.782,338,3.088,339,1.782,340,2.037,342,1.782,343,2.311,344,1.782,345,1.782,355,1.538,356,3.311,367,2.447,399,2.311,400,1.782,401,1.782,402,1.782,403,2.311,404,1.782,405,2.311,406,2.311,428,1.538,429,2.777,430,2.721,436,3.478,437,3.58,440,2.679,441,2.679,442,2.311,443,3.219,444,2.447,496,2.679,612,2.037,625,1.538,629,1.782,631,1.782,633,2.679,634,3.58,635,1.782,636,1.782,645,1.538,668,2.311,669,1.782,670,2.311,683,2.447,686,1.782,687,1.782,718,1.782,719,1.782,720,4.303,721,1.782,722,1.782,723,2.679,753,1.355,829,1.782,830,4.326,831,3.238,832,3.238,833,3.238,834,3.238,835,2.154,836,2.154,837,2.154,838,3.238,839,2.154,840,2.154,841,2.154,842,3.238,843,3.238,844,3.238,845,2.154,846,3.238]]],"invertedIndex":[["",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/ExampleComponent.html":{},"modules/ExampleModule.html":{},"injectables/ExampleService.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoginComponent.html":{},"classes/ModuleProvider.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"interfaces/WisdomInterface.html":{},"modules/WisdomModule.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":699,"title":{},"body":{"coverage.html":{}}}],["0.1.0",{"_index":736,"title":{},"body":{"dependencies.html":{}}}],["0.11.4",{"_index":743,"title":{},"body":{"dependencies.html":{}}}],["0.9.3",{"_index":733,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":715,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":704,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":716,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":717,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":700,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":714,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":701,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":748,"title":{},"body":{"index.html":{}}}],["1.0.1",{"_index":738,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":709,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":703,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":708,"title":{},"body":{"coverage.html":{}}}],["13.2.2",{"_index":728,"title":{},"body":{"dependencies.html":{}}}],["14.0.0",{"_index":731,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":747,"title":{},"body":{"index.html":{}}}],["2.3.1",{"_index":741,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":711,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":745,"title":{},"body":{"index.html":{}}}],["4/5",{"_index":706,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":248,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["401",{"_index":214,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["409",{"_index":681,"title":{},"body":{"injectables/UserService.html":{}}}],["5",{"_index":746,"title":{},"body":{"index.html":{}}}],["5/6",{"_index":713,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":702,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":710,"title":{},"body":{"coverage.html":{}}}],["7.5.4",{"_index":739,"title":{},"body":{"dependencies.html":{}}}],["80",{"_index":705,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":712,"title":{},"body":{"coverage.html":{}}}],["access",{"_index":136,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthStorageService.html":{},"miscellaneous/variables.html":{}}}],["access_token_key",{"_index":399,"title":{},"body":{"injectables/AuthStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["accessors",{"_index":363,"title":{},"body":{"injectables/AuthStorageService.html":{},"directives/BulmaIsToggleableDirective.html":{}}}],["accesstoken",{"_index":364,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["accesstoken(token",{"_index":415,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["action",{"_index":792,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["activatedroutesnapshot",{"_index":154,"title":{},"body":{"guards/AuthGuard.html":{}}}],["active",{"_index":487,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["actual_component",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoginComponent.html":{}}}],["adds",{"_index":551,"title":{},"body":{"components/IonIconComponent.html":{}}}],["aliases",{"_index":755,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":550,"title":{},"body":{"components/IonIconComponent.html":{}}}],["allowed",{"_index":160,"title":{},"body":{"guards/AuthGuard.html":{}}}],["already",{"_index":824,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["always",{"_index":332,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["angular/animations",{"_index":727,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":729,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interceptors/BaseUrlInterceptor.html":{},"injectables/UserService.html":{}}}],["angular/compiler",{"_index":657,"title":{},"body":{"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/core",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/ExampleComponent.html":{},"modules/ExampleModule.html":{},"injectables/ExampleService.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoginComponent.html":{},"injectables/UserService.html":{},"modules/WisdomModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":115,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/FrameComponent.html":{},"components/LoginComponent.html":{},"classes/ModuleProvider.html":{},"dependencies.html":{}}}],["api",{"_index":443,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{},"miscellaneous/variables.html":{}}}],["api.ts",{"_index":723,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apiurl",{"_index":844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoginComponent.html":{}}}],["app.component",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":15,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoginComponent.html":{},"coverage.html":{},"index.html":{}}}],["application/json",{"_index":672,"title":{},"body":{"injectables/UserService.html":{}}}],["application/x",{"_index":342,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["appmodule",{"_index":57,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{}}}],["approutingmodule",{"_index":65,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["auth",{"_index":177,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["auth.service",{"_index":179,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["auth/auth",{"_index":517,"title":{},"body":{"components/FrameComponent.html":{}}}],["auth/auth.guard",{"_index":117,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth/auth.interceptor",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/auth.service",{"_index":516,"title":{},"body":{"components/FrameComponent.html":{}}}],["auth/login/login.component",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["auth_api",{"_index":668,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth_url",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authentication",{"_index":264,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["authguard",{"_index":116,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["authinterceptor",{"_index":67,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"coverage.html":{},"index.html":{}}}],["authorization",{"_index":254,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"miscellaneous/variables.html":{}}}],["authorized",{"_index":810,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["authrequest",{"_index":273,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["authservice",{"_index":147,"title":{"injectables/AuthService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/FrameComponent.html":{},"components/LoginComponent.html":{},"coverage.html":{}}}],["authstorage",{"_index":152,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/FrameComponent.html":{},"components/LoginComponent.html":{}}}],["authstorageservice",{"_index":146,"title":{"injectables/AuthStorageService.html":{}},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthStorageService.html":{},"components/FrameComponent.html":{},"components/LoginComponent.html":{},"coverage.html":{}}}],["authstorageservice.getstorage(access_token_key",{"_index":417,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["authstorageservice.getstorage(expires_in_key",{"_index":420,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["authstorageservice.getstorage(refresh_token_key",{"_index":424,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["authstorageservice.getstorage(scopes_key",{"_index":427,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["authstorageservice.setstorage(`${unixtime",{"_index":419,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["authstorageservice.setstorage(scopes",{"_index":426,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["authstorageservice.setstorage(token",{"_index":416,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["available",{"_index":191,"title":{},"body":{"guards/AuthGuard.html":{},"modules.html":{}}}],["avoid",{"_index":223,"title":{},"body":{"guards/AuthGuard.html":{}}}],["bad",{"_index":812,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["base",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"interceptors/BaseUrlInterceptor.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["baseurl",{"_index":720,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["baseurlinterceptor",{"_index":68,"title":{"interceptors/BaseUrlInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/BaseUrlInterceptor.html":{},"coverage.html":{},"index.html":{}}}],["bearer",{"_index":263,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["beta.1",{"_index":737,"title":{},"body":{"dependencies.html":{}}}],["better",{"_index":641,"title":{},"body":{"classes/StaticLoader.html":{}}}],["body",{"_index":676,"title":{},"body":{"injectables/UserService.html":{}}}],["body.roles",{"_index":678,"title":{},"body":{"injectables/UserService.html":{}}}],["body.scopes",{"_index":677,"title":{},"body":{"injectables/UserService.html":{}}}],["boolean",{"_index":174,"title":{},"body":{"guards/AuthGuard.html":{},"directives/BulmaIsToggleableDirective.html":{}}}],["bootstrap",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["break",{"_index":604,"title":{},"body":{"components/LoginComponent.html":{}}}],["browse",{"_index":751,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"dependencies.html":{},"modules.html":{}}}],["browserify",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/BaseUrlInterceptor.html":{},"dependencies.html":{}}}],["browsermodule",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["bulma",{"_index":732,"title":{},"body":{"dependencies.html":{}}}],["bulma/bulma",{"_index":693,"title":{},"body":{"modules/WisdomModule.html":{}}}],["bulmaistoggleabledirective",{"_index":49,"title":{"directives/BulmaIsToggleableDirective.html":{}},"body":{"components/AppComponent.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoginComponent.html":{},"modules/WisdomModule.html":{},"coverage.html":{},"index.html":{}}}],["can't",{"_index":193,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canactivate",{"_index":123,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["canactivate(route",{"_index":153,"title":{},"body":{"guards/AuthGuard.html":{}}}],["case",{"_index":596,"title":{},"body":{"components/LoginComponent.html":{}}}],["catch(e",{"_index":521,"title":{},"body":{"components/FrameComponent.html":{}}}],["check",{"_index":199,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["checking",{"_index":131,"title":{},"body":{"guards/AuthGuard.html":{}}}],["checks",{"_index":164,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["children",{"_index":124,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["class",{"_index":31,"title":{"classes/ModuleProvider.html":{},"classes/StaticLoader.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/ExampleComponent.html":{},"modules/ExampleModule.html":{},"injectables/ExampleService.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoginComponent.html":{},"classes/ModuleProvider.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"modules/WisdomModule.html":{},"coverage.html":{}}}],["classes",{"_index":456,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{},"classes/ModuleProvider.html":{},"classes/StaticLoader.html":{},"index.html":{}}}],["classes.trim().split(/\\s",{"_index":483,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["clear",{"_index":359,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["clears",{"_index":226,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthStorageService.html":{}}}],["cli",{"_index":658,"title":{},"body":{"injectables/UserService.html":{}}}],["click",{"_index":461,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{},"directives/LangSelectorDirective.html":{}}}],["clicklangselect",{"_index":558,"title":{},"body":{"directives/LangSelectorDirective.html":{}}}],["closed",{"_index":411,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["cluster_appmodule",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_bootstrap",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_declarations",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_imports",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_providers",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_examplemodule",{"_index":501,"title":{},"body":{"modules/ExampleModule.html":{},"index.html":{}}}],["cluster_examplemodule_declarations",{"_index":502,"title":{},"body":{"modules/ExampleModule.html":{},"index.html":{}}}],["cluster_examplemodule_exports",{"_index":504,"title":{},"body":{"modules/ExampleModule.html":{},"index.html":{}}}],["cluster_examplemodule_imports",{"_index":503,"title":{},"body":{"modules/ExampleModule.html":{}}}],["cluster_wisdommodule",{"_index":689,"title":{},"body":{"modules/WisdomModule.html":{},"index.html":{}}}],["cluster_wisdommodule_declarations",{"_index":691,"title":{},"body":{"modules/WisdomModule.html":{},"index.html":{}}}],["cluster_wisdommodule_exports",{"_index":690,"title":{},"body":{"modules/WisdomModule.html":{},"index.html":{}}}],["code",{"_index":224,"title":{},"body":{"guards/AuthGuard.html":{}}}],["codes",{"_index":218,"title":{},"body":{"guards/AuthGuard.html":{}}}],["collectedlang",{"_index":621,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["come",{"_index":642,"title":{},"body":{"classes/StaticLoader.html":{}}}],["common",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"modules/ExampleModule.html":{}}}],["commonenvironment",{"_index":842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoginComponent.html":{},"classes/ModuleProvider.html":{},"coverage.html":{}}}],["component_template",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoginComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoginComponent.html":{},"index.html":{}}}],["console.error(e",{"_index":522,"title":{},"body":{"components/FrameComponent.html":{},"components/LoginComponent.html":{}}}],["console.error(error",{"_index":598,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log(\"successfully",{"_index":592,"title":{},"body":{"components/LoginComponent.html":{}}}],["const",{"_index":121,"title":{},"body":{"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":144,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/ExampleComponent.html":{},"injectables/ExampleService.html":{},"components/FrameComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoginComponent.html":{},"classes/ModuleProvider.html":{},"injectables/UserService.html":{}}}],["constructor(authservice",{"_index":513,"title":{},"body":{"components/FrameComponent.html":{},"components/LoginComponent.html":{}}}],["constructor(authstorage",{"_index":145,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{}}}],["constructor(container",{"_index":463,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["constructor(http",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":272,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"directives/BulmaIsToggleableDirective.html":{},"directives/LangSelectorDirective.html":{},"injectables/UserService.html":{}}}],["constructor(translateservice",{"_index":559,"title":{},"body":{"directives/LangSelectorDirective.html":{}}}],["container",{"_index":466,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["content",{"_index":331,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["context",{"_index":344,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["cooles",{"_index":534,"title":{},"body":{"components/FrameComponent.html":{}}}],["core",{"_index":25,"title":{},"body":{"components/AppComponent.html":{}}}],["core.frame.account",{"_index":536,"title":{},"body":{"components/FrameComponent.html":{}}}],["core.frame.administration",{"_index":538,"title":{},"body":{"components/FrameComponent.html":{}}}],["core.frame.logout",{"_index":537,"title":{},"body":{"components/FrameComponent.html":{}}}],["core.frame.permissions",{"_index":540,"title":{},"body":{"components/FrameComponent.html":{}}}],["core.frame.roles",{"_index":541,"title":{},"body":{"components/FrameComponent.html":{}}}],["core.frame.usermanagement",{"_index":539,"title":{},"body":{"components/FrameComponent.html":{}}}],["core.login.forgotpassword",{"_index":608,"title":{},"body":{"components/LoginComponent.html":{}}}],["core.login.login",{"_index":609,"title":{},"body":{"components/LoginComponent.html":{}}}],["core.login.password",{"_index":607,"title":{},"body":{"components/LoginComponent.html":{}}}],["core.login.username",{"_index":606,"title":{},"body":{"components/LoginComponent.html":{}}}],["coverage",{"_index":696,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["created",{"_index":821,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["createuser",{"_index":646,"title":{},"body":{"injectables/UserService.html":{}}}],["createuser(firstname",{"_index":649,"title":{},"body":{"injectables/UserService.html":{}}}],["current",{"_index":165,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"miscellaneous/typealiases.html":{}}}],["dark",{"_index":735,"title":{},"body":{"dependencies.html":{}}}],["dashboard",{"_index":530,"title":{},"body":{"components/FrameComponent.html":{}}}],["data",{"_index":238,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthStorageService.html":{},"miscellaneous/typealiases.html":{}}}],["date",{"_index":402,"title":{},"body":{"injectables/AuthStorageService.html":{},"miscellaneous/variables.html":{}}}],["de_de",{"_index":633,"title":{},"body":{"classes/StaticLoader.html":{},"miscellaneous/variables.html":{}}}],["de_delang",{"_index":629,"title":{},"body":{"classes/StaticLoader.html":{},"miscellaneous/variables.html":{}}}],["deciding",{"_index":159,"title":{},"body":{"guards/AuthGuard.html":{}}}],["declarations",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"modules/ExampleModule.html":{},"modules/WisdomModule.html":{}}}],["decorators",{"_index":469,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{},"directives/LangSelectorDirective.html":{},"components/LoginComponent.html":{}}}],["default",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["defaultlanguage",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["defaults",{"_index":441,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/ExampleComponent.html":{},"injectables/ExampleService.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoginComponent.html":{},"classes/ModuleProvider.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{}}}],["deleted",{"_index":786,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["deleteusersid200",{"_index":756,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["deleteusersid403",{"_index":758,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["deleteusersid404",{"_index":760,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["demo.uol.de",{"_index":841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dependencies",{"_index":59,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ExampleModule.html":{},"modules/WisdomModule.html":{},"dependencies.html":{},"index.html":{}}}],["depletes",{"_index":225,"title":{},"body":{"guards/AuthGuard.html":{}}}],["description",{"_index":130,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"components/IonIconComponent.html":{}}}],["determine",{"_index":440,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{},"miscellaneous/variables.html":{}}}],["deutsch",{"_index":526,"title":{},"body":{"components/FrameComponent.html":{}}}],["directive",{"_index":35,"title":{"directives/BulmaIsToggleableDirective.html":{},"directives/LangSelectorDirective.html":{}},"body":{"components/AppComponent.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoginComponent.html":{},"coverage.html":{}}}],["directives",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoginComponent.html":{},"index.html":{}}}],["display",{"_index":549,"title":{},"body":{"components/IonIconComponent.html":{}}}],["doc",{"_index":407,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["documentation",{"_index":697,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoginComponent.html":{}}}],["dynamic",{"_index":730,"title":{},"body":{"dependencies.html":{}}}],["ein",{"_index":528,"title":{},"body":{"components/FrameComponent.html":{}}}],["element",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoginComponent.html":{}}}],["elementclasses",{"_index":462,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["elementclasses(classes",{"_index":481,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["elementref",{"_index":579,"title":{},"body":{"components/LoginComponent.html":{}}}],["en_us",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"classes/StaticLoader.html":{},"miscellaneous/variables.html":{}}}],["en_uslang",{"_index":631,"title":{},"body":{"classes/StaticLoader.html":{},"miscellaneous/variables.html":{}}}],["english",{"_index":527,"title":{},"body":{"components/FrameComponent.html":{}}}],["entrycomponent",{"_index":686,"title":{},"body":{"interfaces/WisdomInterface.html":{},"miscellaneous/variables.html":{}}}],["environment",{"_index":436,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apiurl",{"_index":449,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{}}}],["environment.baseurl",{"_index":447,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{}}}],["environments/environment",{"_index":438,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{}}}],["error",{"_index":210,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["errresponse",{"_index":211,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["errresponse.error",{"_index":597,"title":{},"body":{"components/LoginComponent.html":{}}}],["errresponse.status",{"_index":213,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["example",{"_index":496,"title":{},"body":{"components/ExampleComponent.html":{},"miscellaneous/variables.html":{}}}],["example.component",{"_index":506,"title":{},"body":{"modules/ExampleModule.html":{}}}],["example.component.html",{"_index":492,"title":{},"body":{"components/ExampleComponent.html":{}}}],["example.example.key",{"_index":498,"title":{},"body":{"components/ExampleComponent.html":{}}}],["examplecomponent",{"_index":40,"title":{"components/ExampleComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ExampleComponent.html":{},"modules/ExampleModule.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoginComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["examplemodule",{"_index":500,"title":{"modules/ExampleModule.html":{}},"body":{"modules/ExampleModule.html":{},"index.html":{},"modules.html":{}}}],["exampleservice",{"_index":507,"title":{"injectables/ExampleService.html":{}},"body":{"injectables/ExampleService.html":{},"coverage.html":{}}}],["exist",{"_index":794,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["exists",{"_index":825,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["expiration",{"_index":401,"title":{},"body":{"injectables/AuthStorageService.html":{},"miscellaneous/variables.html":{}}}],["expires",{"_index":404,"title":{},"body":{"injectables/AuthStorageService.html":{},"miscellaneous/variables.html":{}}}],["expires_in_key",{"_index":403,"title":{},"body":{"injectables/AuthStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["expiresin",{"_index":365,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["expiresin(unixtime",{"_index":418,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["export",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/ExampleComponent.html":{},"modules/ExampleModule.html":{},"injectables/ExampleService.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoginComponent.html":{},"classes/ModuleProvider.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"interfaces/WisdomInterface.html":{},"modules/WisdomModule.html":{}}}],["exports",{"_index":126,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ExampleModule.html":{},"modules/WisdomModule.html":{}}}],["f",{"_index":578,"title":{},"body":{"components/LoginComponent.html":{}}}],["f.valid",{"_index":584,"title":{},"body":{"components/LoginComponent.html":{}}}],["f.value",{"_index":585,"title":{},"body":{"components/LoginComponent.html":{}}}],["false",{"_index":444,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/ExampleComponent.html":{},"modules/ExampleModule.html":{},"injectables/ExampleService.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoginComponent.html":{},"classes/ModuleProvider.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"interfaces/WisdomInterface.html":{},"modules/WisdomModule.html":{},"coverage.html":{}}}],["firstname",{"_index":653,"title":{},"body":{"injectables/UserService.html":{}}}],["fixme",{"_index":665,"title":{},"body":{"injectables/UserService.html":{}}}],["fo",{"_index":400,"title":{},"body":{"injectables/AuthStorageService.html":{},"miscellaneous/variables.html":{}}}],["form",{"_index":335,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["formsmodule",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["frame",{"_index":511,"title":{},"body":{"components/FrameComponent.html":{}}}],["frame'},{'name",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoginComponent.html":{}}}],["frame.component.html",{"_index":512,"title":{},"body":{"components/FrameComponent.html":{}}}],["frame/frame.component",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["framecomponent",{"_index":41,"title":{"components/FrameComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoginComponent.html":{},"coverage.html":{},"index.html":{}}}],["fromobject",{"_index":349,"title":{},"body":{"injectables/AuthService.html":{}}}],["frontend",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["function",{"_index":222,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthStorageService.html":{}}}],["further",{"_index":138,"title":{},"body":{"guards/AuthGuard.html":{}}}],["getaccesstoken",{"_index":381,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["getelementclasses",{"_index":472,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["getexpiresin",{"_index":385,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["getoptions",{"_index":670,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getrefreshtoken",{"_index":391,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["getscopes",{"_index":395,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["getstorage",{"_index":361,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["getstorage(key",{"_index":374,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["getter",{"_index":408,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["gettranslation",{"_index":626,"title":{},"body":{"classes/StaticLoader.html":{}}}],["gettranslation(lang",{"_index":627,"title":{},"body":{"classes/StaticLoader.html":{}}}],["getusers",{"_index":647,"title":{},"body":{"injectables/UserService.html":{}}}],["getusers200",{"_index":659,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["getusersid200",{"_index":763,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["getusersid404",{"_index":765,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["getusersme200",{"_index":767,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["given",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{}}}],["globalthis.localstorage.getitem(\"lang",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["globalthis.localstorage.setitem(\"lang",{"_index":567,"title":{},"body":{"directives/LangSelectorDirective.html":{}}}],["globalthis.sessionstorage.getitem(key",{"_index":414,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["globalthis.sessionstorage.removeitem(key",{"_index":412,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["globalthis.sessionstorage.setitem(key",{"_index":413,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["go",{"_index":207,"title":{},"body":{"guards/AuthGuard.html":{}}}],["gracefully",{"_index":219,"title":{},"body":{"guards/AuthGuard.html":{}}}],["grant_type",{"_index":350,"title":{},"body":{"injectables/AuthService.html":{}}}],["graph",{"_index":752,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":127,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"coverage.html":{},"index.html":{}}}],["guards",{"_index":128,"title":{},"body":{"guards/AuthGuard.html":{}}}],["handle",{"_index":216,"title":{},"body":{"guards/AuthGuard.html":{}}}],["handler",{"_index":266,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/BaseUrlInterceptor.html":{}}}],["handling",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{}}}],["header",{"_index":276,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["headers",{"_index":279,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["here",{"_index":497,"title":{},"body":{"components/ExampleComponent.html":{},"components/IonIconComponent.html":{}}}],["hier",{"_index":531,"title":{},"body":{"components/FrameComponent.html":{}}}],["hostbinding",{"_index":475,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["hostbinding(\"class",{"_index":479,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["hostlistener",{"_index":477,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{},"directives/LangSelectorDirective.html":{}}}],["hostlistener(\"click",{"_index":484,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{},"directives/LangSelectorDirective.html":{}}}],["hostlistener('click",{"_index":470,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{},"directives/LangSelectorDirective.html":{}}}],["hostlisteners",{"_index":460,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{},"directives/LangSelectorDirective.html":{}}}],["html",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoginComponent.html":{}}}],["http",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["http_interceptors",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["httpclientmodule",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["httpcontext",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpcontext().set(use_api_url",{"_index":345,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["httpcontexttoken",{"_index":437,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{},"miscellaneous/variables.html":{}}}],["httperrorresponse",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpevent",{"_index":268,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/BaseUrlInterceptor.html":{}}}],["httphandler",{"_index":260,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/BaseUrlInterceptor.html":{}}}],["httpheaders",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["httpinterceptor",{"_index":269,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/BaseUrlInterceptor.html":{}}}],["httpoptions",{"_index":340,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["httpparams",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpparams({fromobject",{"_index":352,"title":{},"body":{"injectables/AuthService.html":{}}}],["httprequest",{"_index":259,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/BaseUrlInterceptor.html":{}}}],["httpresponse",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["https://github.com/microsoft/tsdoc/issues/308",{"_index":410,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["https://wisdom",{"_index":840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i18n/lang",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["i18n/staticloader",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["icon",{"_index":554,"title":{},"body":{"components/IonIconComponent.html":{}}}],["icon'},{'name",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoginComponent.html":{}}}],["icon.component",{"_index":695,"title":{},"body":{"modules/WisdomModule.html":{}}}],["icon.component.ts",{"_index":544,"title":{},"body":{"components/IonIconComponent.html":{},"coverage.html":{}}}],["icon.component.ts:14",{"_index":555,"title":{},"body":{"components/IonIconComponent.html":{}}}],["icon/ion",{"_index":543,"title":{},"body":{"components/IonIconComponent.html":{},"modules/WisdomModule.html":{},"coverage.html":{}}}],["icons",{"_index":545,"title":{},"body":{"components/IonIconComponent.html":{}}}],["identifier",{"_index":698,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":184,"title":{},"body":{"guards/AuthGuard.html":{},"classes/StaticLoader.html":{}}}],["implements",{"_index":181,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/BaseUrlInterceptor.html":{},"components/ExampleComponent.html":{},"components/LoginComponent.html":{},"classes/StaticLoader.html":{}}}],["import",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/ExampleComponent.html":{},"modules/ExampleModule.html":{},"injectables/ExampleService.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoginComponent.html":{},"classes/ModuleProvider.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"modules/WisdomModule.html":{}}}],["imports",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ExampleModule.html":{},"modules/WisdomModule.html":{}}}],["incorrect",{"_index":666,"title":{},"body":{"injectables/UserService.html":{}}}],["index",{"_index":16,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoginComponent.html":{},"classes/ModuleProvider.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"interfaces/WisdomInterface.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/ExampleComponent.html":{},"modules/ExampleModule.html":{},"injectables/ExampleService.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoginComponent.html":{},"classes/ModuleProvider.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"interfaces/WisdomInterface.html":{},"modules/WisdomModule.html":{}}}],["information",{"_index":798,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["inject",{"_index":253,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/IonIconComponent.html":{}}}],["injectable",{"_index":175,"title":{"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"injectables/ExampleService.html":{},"injectables/UserService.html":{}},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"injectables/ExampleService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"injectables/ExampleService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["injected",{"_index":265,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["injects",{"_index":262,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["input",{"_index":476,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{}}}],["input(\"class",{"_index":478,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["input(\"selectlang",{"_index":564,"title":{},"body":{"directives/LangSelectorDirective.html":{}}}],["inputs",{"_index":459,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{}}}],["instead",{"_index":337,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["insufficient",{"_index":789,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["interaction",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["intercept",{"_index":256,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/BaseUrlInterceptor.html":{}}}],["intercept(request",{"_index":258,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/BaseUrlInterceptor.html":{}}}],["interceptor",{"_index":250,"title":{"interceptors/AuthInterceptor.html":{},"interceptors/BaseUrlInterceptor.html":{}},"body":{"interceptors/AuthInterceptor.html":{},"coverage.html":{}}}],["interceptors",{"_index":251,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/BaseUrlInterceptor.html":{}}}],["interface",{"_index":682,"title":{"interfaces/WisdomInterface.html":{}},"body":{"interfaces/WisdomInterface.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":684,"title":{},"body":{"interfaces/WisdomInterface.html":{}}}],["internal",{"_index":376,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["invalid",{"_index":212,"title":{},"body":{"guards/AuthGuard.html":{}}}],["ion",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoginComponent.html":{},"modules/WisdomModule.html":{}}}],["ioniconcomponent",{"_index":43,"title":{"components/IonIconComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoginComponent.html":{},"modules/WisdomModule.html":{},"coverage.html":{},"index.html":{}}}],["ionicons",{"_index":546,"title":{},"body":{"components/IonIconComponent.html":{}}}],["isactive",{"_index":457,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["join",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/BaseUrlInterceptor.html":{},"directives/BulmaIsToggleableDirective.html":{},"injectables/UserService.html":{}}}],["join(auth_api",{"_index":680,"title":{},"body":{"injectables/UserService.html":{}}}],["join(auth_url",{"_index":347,"title":{},"body":{"injectables/AuthService.html":{}}}],["js",{"_index":553,"title":{},"body":{"components/IonIconComponent.html":{}}}],["json",{"_index":338,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["key",{"_index":270,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthStorageService.html":{},"miscellaneous/variables.html":{}}}],["kombination",{"_index":600,"title":{},"body":{"components/LoginComponent.html":{}}}],["korrekt",{"_index":602,"title":{},"body":{"components/LoginComponent.html":{}}}],["lang",{"_index":525,"title":{},"body":{"components/FrameComponent.html":{},"directives/LangSelectorDirective.html":{},"classes/ModuleProvider.html":{},"classes/StaticLoader.html":{}}}],["langs",{"_index":612,"title":{},"body":{"classes/ModuleProvider.html":{},"classes/StaticLoader.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["langs(lang",{"_index":614,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["langs/de_de",{"_index":630,"title":{},"body":{"classes/StaticLoader.html":{}}}],["langs/en_us",{"_index":632,"title":{},"body":{"classes/StaticLoader.html":{}}}],["langselectordirective",{"_index":51,"title":{"directives/LangSelectorDirective.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoginComponent.html":{},"coverage.html":{},"index.html":{}}}],["lastname",{"_index":650,"title":{},"body":{"injectables/UserService.html":{}}}],["legend",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoginComponent.html":{}}}],["link",{"_index":439,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{},"components/FrameComponent.html":{}}}],["literal",{"_index":787,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["loader",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"classes/StaticLoader.html":{}}}],["localhost:8090/auth",{"_index":669,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["logged",{"_index":194,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["login",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoginComponent.html":{}}}],["login(username",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.component.html",{"_index":569,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":46,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoginComponent.html":{},"coverage.html":{},"index.html":{}}}],["loginhasissue",{"_index":570,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginurltree",{"_index":189,"title":{},"body":{"guards/AuthGuard.html":{}}}],["logout",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{},"components/FrameComponent.html":{}}}],["logout(token",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{}}}],["logs",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{}}}],["lot",{"_index":637,"title":{},"body":{"classes/StaticLoader.html":{}}}],["made",{"_index":813,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["matching",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/ExampleComponent.html":{},"modules/ExampleModule.html":{},"injectables/ExampleService.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoginComponent.html":{},"classes/ModuleProvider.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"interfaces/WisdomInterface.html":{},"modules/WisdomModule.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["men",{"_index":529,"title":{},"body":{"components/FrameComponent.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoginComponent.html":{}}}],["method",{"_index":158,"title":{},"body":{"guards/AuthGuard.html":{}}}],["methods",{"_index":143,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoginComponent.html":{},"classes/ModuleProvider.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{}}}],["miscellaneous",{"_index":753,"title":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":56,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ExampleModule.html":{},"modules/WisdomModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"classes/ModuleProvider.html":{},"classes/StaticLoader.html":{}}}],["module.wisdominterface.entrycomponent",{"_index":620,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["module.wisdominterface.path",{"_index":619,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["module.wisdominterface.translations[lang",{"_index":623,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["modulelang",{"_index":622,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["moduleprovider",{"_index":118,"title":{"classes/ModuleProvider.html":{}},"body":{"modules/AppRoutingModule.html":{},"classes/ModuleProvider.html":{},"classes/StaticLoader.html":{},"coverage.html":{}}}],["moduleprovider.langs(\"de_de",{"_index":635,"title":{},"body":{"classes/StaticLoader.html":{},"miscellaneous/variables.html":{}}}],["moduleprovider.langs(\"en_us",{"_index":636,"title":{},"body":{"classes/StaticLoader.html":{},"miscellaneous/variables.html":{}}}],["moduleprovider.routes",{"_index":120,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["modules",{"_index":58,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ExampleModule.html":{},"classes/ModuleProvider.html":{},"classes/StaticLoader.html":{},"modules/WisdomModule.html":{},"index.html":{},"modules.html":{}}}],["moved",{"_index":667,"title":{},"body":{"injectables/UserService.html":{}}}],["multi",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["name",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoginComponent.html":{},"classes/ModuleProvider.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{}}}],["nan",{"_index":422,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["navigate",{"_index":161,"title":{},"body":{"guards/AuthGuard.html":{}}}],["needs",{"_index":134,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/UserService.html":{}}}],["new",{"_index":200,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interceptors/BaseUrlInterceptor.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":203,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/BaseUrlInterceptor.html":{},"components/LoginComponent.html":{}}}],["next.handle",{"_index":450,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{}}}],["next.handle(authrequest",{"_index":281,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["ngform",{"_index":576,"title":{},"body":{"components/LoginComponent.html":{}}}],["ngmodule",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ExampleModule.html":{},"modules/WisdomModule.html":{}}}],["ngoninit",{"_index":493,"title":{},"body":{"components/ExampleComponent.html":{},"components/LoginComponent.html":{}}}],["ngx",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"modules/ExampleModule.html":{},"directives/LangSelectorDirective.html":{},"classes/StaticLoader.html":{},"dependencies.html":{}}}],["nicht",{"_index":601,"title":{},"body":{"components/LoginComponent.html":{}}}],["non",{"_index":217,"title":{},"body":{"guards/AuthGuard.html":{}}}],["null",{"_index":378,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["number",{"_index":388,"title":{},"body":{"injectables/AuthStorageService.html":{},"injectables/UserService.html":{}}}],["oauth",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{}}}],["oauth/check_token",{"_index":351,"title":{},"body":{"injectables/AuthService.html":{}}}],["oauth/revoke",{"_index":354,"title":{},"body":{"injectables/AuthService.html":{}}}],["oauth/token",{"_index":348,"title":{},"body":{"injectables/AuthService.html":{}}}],["object",{"_index":846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.assign",{"_index":634,"title":{},"body":{"classes/StaticLoader.html":{},"miscellaneous/variables.html":{}}}],["object.assign(collectedlang",{"_index":624,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["object.values(modules",{"_index":617,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["observable",{"_index":172,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interceptors/BaseUrlInterceptor.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{}}}],["observable(subscriber",{"_index":201,"title":{},"body":{"guards/AuthGuard.html":{}}}],["of(langs[lang",{"_index":643,"title":{},"body":{"classes/StaticLoader.html":{}}}],["old",{"_index":141,"title":{},"body":{"guards/AuthGuard.html":{}}}],["omit",{"_index":799,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["one",{"_index":142,"title":{},"body":{"guards/AuthGuard.html":{}}}],["oninit",{"_index":491,"title":{},"body":{"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/LoginComponent.html":{}}}],["onsubmit",{"_index":572,"title":{},"body":{"components/LoginComponent.html":{}}}],["onsubmit(f",{"_index":575,"title":{},"body":{"components/LoginComponent.html":{}}}],["operate",{"_index":267,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["optional",{"_index":151,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/FrameComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoginComponent.html":{},"classes/ModuleProvider.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{}}}],["options",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["oss",{"_index":524,"title":{},"body":{"components/FrameComponent.html":{},"components/LoginComponent.html":{}}}],["out",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"modules/ExampleModule.html":{},"modules/WisdomModule.html":{},"index.html":{}}}],["overview",{"_index":744,"title":{"index.html":{}},"body":{"index.html":{}}}],["package",{"_index":726,"title":{"dependencies.html":{}},"body":{}}],["packen",{"_index":532,"title":{},"body":{"components/FrameComponent.html":{}}}],["page",{"_index":170,"title":{},"body":{"guards/AuthGuard.html":{}}}],["param",{"_index":183,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interceptors/BaseUrlInterceptor.html":{}}}],["parameters",{"_index":150,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/FrameComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoginComponent.html":{},"classes/ModuleProvider.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{}}}],["parameters[1",{"_index":671,"title":{},"body":{"injectables/UserService.html":{}}}],["parameters[2",{"_index":341,"title":{},"body":{"injectables/AuthService.html":{}}}],["parseint(expiresin",{"_index":421,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["partial",{"_index":828,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["password",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["password).subscribe",{"_index":587,"title":{},"body":{"components/LoginComponent.html":{}}}],["passwordinput",{"_index":571,"title":{},"body":{"components/LoginComponent.html":{}}}],["patchusers204",{"_index":769,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["patchusers403",{"_index":771,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["patchusers404",{"_index":773,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["patchusersme200",{"_index":775,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["path",{"_index":122,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interceptors/BaseUrlInterceptor.html":{},"classes/ModuleProvider.html":{},"interfaces/WisdomInterface.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["per",{"_index":185,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["possible",{"_index":168,"title":{},"body":{"guards/AuthGuard.html":{}}}],["post",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["postoauthtoken200",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/typealiases.html":{}}}],["postoauthtoken400",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"miscellaneous/typealiases.html":{}}}],["postoauthtoken401",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"miscellaneous/typealiases.html":{}}}],["postrevoke200",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/typealiases.html":{}}}],["postrevoke403",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/typealiases.html":{}}}],["prefers",{"_index":734,"title":{},"body":{"dependencies.html":{}}}],["prepend",{"_index":431,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{}}}],["prepends",{"_index":435,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{}}}],["prependurl",{"_index":445,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{}}}],["present",{"_index":233,"title":{},"body":{"guards/AuthGuard.html":{}}}],["private",{"_index":182,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthStorageService.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/FrameComponent.html":{},"components/LoginComponent.html":{},"classes/ModuleProvider.html":{},"injectables/UserService.html":{}}}],["privileges",{"_index":790,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["production",{"_index":843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["properties",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/LoginComponent.html":{},"interfaces/WisdomInterface.html":{}}}],["provide",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":180,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"injectables/ExampleService.html":{},"injectables/UserService.html":{}}}],["provider",{"_index":119,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/StaticLoader.html":{}}}],["provider.ts",{"_index":611,"title":{},"body":{"classes/ModuleProvider.html":{},"coverage.html":{}}}],["provider.ts:20",{"_index":615,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["provider.ts:5",{"_index":613,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["provider.ts:9",{"_index":616,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["providers",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["putusers201",{"_index":661,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["putusers409",{"_index":663,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["ready",{"_index":206,"title":{},"body":{"guards/AuthGuard.html":{},"classes/StaticLoader.html":{}}}],["received",{"_index":358,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["record",{"_index":688,"title":{},"body":{"interfaces/WisdomInterface.html":{}}}],["reference",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["refresh",{"_index":140,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"miscellaneous/variables.html":{}}}],["refresh(token",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{}}}],["refresh_token",{"_index":353,"title":{},"body":{"injectables/AuthService.html":{}}}],["refresh_token_key",{"_index":405,"title":{},"body":{"injectables/AuthStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["refresherrresponse",{"_index":245,"title":{},"body":{"guards/AuthGuard.html":{}}}],["refresherrresponse.status",{"_index":247,"title":{},"body":{"guards/AuthGuard.html":{}}}],["refreshes",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{}}}],["refreshing",{"_index":167,"title":{},"body":{"guards/AuthGuard.html":{}}}],["refreshresponse",{"_index":236,"title":{},"body":{"guards/AuthGuard.html":{}}}],["refreshresponse.access_token",{"_index":239,"title":{},"body":{"guards/AuthGuard.html":{}}}],["refreshresponse.expires_in",{"_index":244,"title":{},"body":{"guards/AuthGuard.html":{}}}],["refreshresponse.refresh_token",{"_index":240,"title":{},"body":{"guards/AuthGuard.html":{}}}],["refreshresponse.scope",{"_index":242,"title":{},"body":{"guards/AuthGuard.html":{}}}],["refreshtoken",{"_index":366,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["refreshtoken(token",{"_index":423,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["rein",{"_index":535,"title":{},"body":{"components/FrameComponent.html":{}}}],["removing",{"_index":278,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["replaced",{"_index":640,"title":{},"body":{"classes/StaticLoader.html":{}}}],["replaceurl",{"_index":520,"title":{},"body":{"components/FrameComponent.html":{},"components/LoginComponent.html":{}}}],["reply",{"_index":198,"title":{},"body":{"guards/AuthGuard.html":{}}}],["representation",{"_index":827,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["request",{"_index":255,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interceptors/BaseUrlInterceptor.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["request.clone",{"_index":274,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["request.clone({url",{"_index":451,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{}}}],["request.context.get(use_api_url",{"_index":448,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{}}}],["request.context.get(use_base_url",{"_index":446,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{}}}],["request.headers.set(token_header_key",{"_index":280,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["request.url",{"_index":452,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{}}}],["requested",{"_index":162,"title":{},"body":{"guards/AuthGuard.html":{}}}],["requests",{"_index":432,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{}}}],["reset",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"modules/ExampleModule.html":{},"modules/WisdomModule.html":{},"index.html":{}}}],["response",{"_index":204,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["response.access_token",{"_index":588,"title":{},"body":{"components/LoginComponent.html":{}}}],["response.expires_in",{"_index":591,"title":{},"body":{"components/LoginComponent.html":{}}}],["response.refresh_token",{"_index":589,"title":{},"body":{"components/LoginComponent.html":{}}}],["response.scope",{"_index":590,"title":{},"body":{"components/LoginComponent.html":{}}}],["response_types/login/postoauthtoken200",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{}}}],["response_types/login/postoauthtoken400",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["response_types/login/postoauthtoken401",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["response_types/login/postrevoke200",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{}}}],["response_types/login/postrevoke403",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{}}}],["response_types/users/getusers200",{"_index":660,"title":{},"body":{"injectables/UserService.html":{}}}],["response_types/users/putusers201",{"_index":662,"title":{},"body":{"injectables/UserService.html":{}}}],["response_types/users/putusers409",{"_index":664,"title":{},"body":{"injectables/UserService.html":{}}}],["responsetype",{"_index":343,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/ExampleComponent.html":{},"modules/ExampleModule.html":{},"injectables/ExampleService.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoginComponent.html":{},"classes/ModuleProvider.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"interfaces/WisdomInterface.html":{},"modules/WisdomModule.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":188,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"directives/BulmaIsToggleableDirective.html":{},"directives/LangSelectorDirective.html":{},"classes/ModuleProvider.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":171,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoginComponent.html":{},"classes/ModuleProvider.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{}}}],["returntologin",{"_index":229,"title":{},"body":{"guards/AuthGuard.html":{}}}],["revokes",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{}}}],["roles",{"_index":651,"title":{},"body":{"injectables/UserService.html":{}}}],["root",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"injectables/ExampleService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoginComponent.html":{}}}],["route",{"_index":163,"title":{},"body":{"guards/AuthGuard.html":{}}}],["route.url[0]?.path",{"_index":187,"title":{},"body":{"guards/AuthGuard.html":{}}}],["router",{"_index":148,"title":{},"body":{"guards/AuthGuard.html":{},"components/FrameComponent.html":{},"components/LoginComponent.html":{}}}],["routermodule",{"_index":113,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":125,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":156,"title":{},"body":{"guards/AuthGuard.html":{}}}],["routes",{"_index":114,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"classes/ModuleProvider.html":{},"index.html":{},"routes.html":{}}}],["routes.push",{"_index":618,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["routing.module",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":112,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":791,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["rxjs",{"_index":176,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interceptors/BaseUrlInterceptor.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["same",{"_index":823,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["scope",{"_index":819,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["scopes",{"_index":367,"title":{},"body":{"injectables/AuthStorageService.html":{},"injectables/UserService.html":{},"interfaces/WisdomInterface.html":{},"miscellaneous/variables.html":{}}}],["scopes(scopes",{"_index":425,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["scopes_key",{"_index":406,"title":{},"body":{"injectables/AuthStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["se",{"_index":186,"title":{},"body":{"guards/AuthGuard.html":{}}}],["selectlang",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoginComponent.html":{}}}],["selector",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoginComponent.html":{}}}],["selector.directive",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["selector.directive.ts",{"_index":557,"title":{},"body":{"directives/LangSelectorDirective.html":{},"coverage.html":{}}}],["selector.directive.ts:12",{"_index":562,"title":{},"body":{"directives/LangSelectorDirective.html":{}}}],["selector.directive.ts:15",{"_index":563,"title":{},"body":{"directives/LangSelectorDirective.html":{}}}],["selector.directive.ts:7",{"_index":561,"title":{},"body":{"directives/LangSelectorDirective.html":{}}}],["send",{"_index":246,"title":{},"body":{"guards/AuthGuard.html":{}}}],["sends",{"_index":228,"title":{},"body":{"guards/AuthGuard.html":{}}}],["server",{"_index":197,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthStorageService.html":{}}}],["service",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"miscellaneous/variables.html":{}}}],["session",{"_index":370,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["set",{"_index":169,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthStorageService.html":{},"directives/BulmaIsToggleableDirective.html":{}}}],["setaccesstoken(token",{"_index":383,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["setelementclasses(classes",{"_index":473,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["setexpiresin(unixtime",{"_index":387,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["setrefreshtoken(token",{"_index":393,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["setscopes(scopes",{"_index":397,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["setstorage",{"_index":362,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["setstorage(data",{"_index":377,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["setter",{"_index":409,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["signed",{"_index":133,"title":{},"body":{"guards/AuthGuard.html":{}}}],["small",{"_index":221,"title":{},"body":{"guards/AuthGuard.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/ExampleComponent.html":{},"modules/ExampleModule.html":{},"injectables/ExampleService.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoginComponent.html":{},"classes/ModuleProvider.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"interfaces/WisdomInterface.html":{},"modules/WisdomModule.html":{}}}],["split(\"is",{"_index":489,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["standard",{"_index":817,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["state",{"_index":155,"title":{},"body":{"guards/AuthGuard.html":{}}}],["statements",{"_index":639,"title":{},"body":{"classes/StaticLoader.html":{},"coverage.html":{}}}],["static",{"_index":360,"title":{},"body":{"injectables/AuthStorageService.html":{},"classes/ModuleProvider.html":{},"injectables/UserService.html":{}}}],["staticloader",{"_index":100,"title":{"classes/StaticLoader.html":{}},"body":{"modules/AppModule.html":{},"classes/StaticLoader.html":{},"coverage.html":{}}}],["status",{"_index":249,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/UserService.html":{}}}],["still",{"_index":166,"title":{},"body":{"guards/AuthGuard.html":{}}}],["storage",{"_index":227,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthStorageService.html":{}}}],["storage.service",{"_index":178,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/FrameComponent.html":{},"components/LoginComponent.html":{}}}],["storage.service.ts",{"_index":356,"title":{},"body":{"injectables/AuthStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["storage.service.ts:16",{"_index":368,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["storage.service.ts:23",{"_index":369,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["storage.service.ts:35",{"_index":380,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["storage.service.ts:40",{"_index":375,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["storage.service.ts:44",{"_index":384,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["storage.service.ts:47",{"_index":382,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["storage.service.ts:51",{"_index":389,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["storage.service.ts:54",{"_index":386,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["storage.service.ts:60",{"_index":394,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["storage.service.ts:63",{"_index":392,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["storage.service.ts:67",{"_index":398,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["storage.service.ts:70",{"_index":396,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["stored",{"_index":372,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["storing",{"_index":357,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["string",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoginComponent.html":{},"classes/ModuleProvider.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"interfaces/WisdomInterface.html":{},"miscellaneous/variables.html":{}}}],["subscriber.complete",{"_index":209,"title":{},"body":{"guards/AuthGuard.html":{}}}],["subscriber.next(false",{"_index":220,"title":{},"body":{"guards/AuthGuard.html":{}}}],["subscriber.next(loginurltree",{"_index":231,"title":{},"body":{"guards/AuthGuard.html":{}}}],["subscriber.next(true",{"_index":208,"title":{},"body":{"guards/AuthGuard.html":{}}}],["successfully",{"_index":803,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["support",{"_index":749,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":750,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":595,"title":{},"body":{"components/LoginComponent.html":{}}}],["system",{"_index":795,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["table",{"_index":725,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":724,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoginComponent.html":{}}}],["templateurl",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/LoginComponent.html":{}}}],["therefore",{"_index":807,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["this.authservice.login(username",{"_index":586,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.logout(this.authstorage.accesstoken!).subscribe",{"_index":518,"title":{},"body":{"components/FrameComponent.html":{}}}],["this.authservice.refresh(this.authstorage.refreshtoken).subscribe",{"_index":235,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.authservice.validate(token!).subscribe",{"_index":202,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.authstorage.accesstoken",{"_index":195,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/LoginComponent.html":{}}}],["this.authstorage.clear",{"_index":230,"title":{},"body":{"guards/AuthGuard.html":{},"components/FrameComponent.html":{}}}],["this.authstorage.expiresin",{"_index":243,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["this.authstorage.refreshtoken",{"_index":232,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["this.authstorage.scopes",{"_index":241,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["this.classes",{"_index":482,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["this.classes.join",{"_index":480,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["this.classes.push(\"is",{"_index":486,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["this.elementclasses",{"_index":488,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["this.http.get(join(auth_api",{"_index":673,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.post",{"_index":346,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.put",{"_index":679,"title":{},"body":{"injectables/UserService.html":{}}}],["this.isactive",{"_index":485,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["this.lang",{"_index":565,"title":{},"body":{"directives/LangSelectorDirective.html":{}}}],["this.loginhasissue",{"_index":599,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.passwordinput?.nativeelement.select",{"_index":603,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate",{"_index":593,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate([\"login",{"_index":519,"title":{},"body":{"components/FrameComponent.html":{}}}],["this.router.parseurl(\"/login",{"_index":190,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.translateservice.use(this.lang",{"_index":566,"title":{},"body":{"directives/LangSelectorDirective.html":{}}}],["though",{"_index":339,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["throw",{"_index":605,"title":{},"body":{"components/LoginComponent.html":{}}}],["title",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["todo",{"_index":215,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthStorageService.html":{},"classes/StaticLoader.html":{}}}],["toggle",{"_index":458,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["toggleable",{"_index":455,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["toggleable'},{'name",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoginComponent.html":{}}}],["toggleable.directive",{"_index":694,"title":{},"body":{"modules/WisdomModule.html":{}}}],["toggleable.directive.ts",{"_index":454,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{},"coverage.html":{}}}],["toggleable.directive.ts:14",{"_index":471,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["toggleable.directive.ts:15",{"_index":465,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["toggleable.directive.ts:21",{"_index":467,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["toggleable.directive.ts:24",{"_index":474,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["toggleable.directive.ts:29",{"_index":468,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["token",{"_index":137,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"miscellaneous/variables.html":{}}}],["token_header_key",{"_index":271,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["translate",{"_index":499,"title":{},"body":{"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/LoginComponent.html":{}}}],["translate/core",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"modules/ExampleModule.html":{},"directives/LangSelectorDirective.html":{},"classes/StaticLoader.html":{},"dependencies.html":{}}}],["translateloader",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"classes/StaticLoader.html":{}}}],["translatemodule",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"modules/ExampleModule.html":{}}}],["translatemodule.forroot",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["translateservice",{"_index":560,"title":{},"body":{"directives/LangSelectorDirective.html":{}}}],["translations",{"_index":687,"title":{},"body":{"interfaces/WisdomInterface.html":{},"miscellaneous/variables.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoginComponent.html":{}}}],["tries",{"_index":139,"title":{},"body":{"guards/AuthGuard.html":{}}}],["true",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interceptors/BaseUrlInterceptor.html":{},"components/FrameComponent.html":{},"miscellaneous/variables.html":{}}}],["true}).catch(e",{"_index":594,"title":{},"body":{"components/LoginComponent.html":{}}}],["try",{"_index":234,"title":{},"body":{"guards/AuthGuard.html":{}}}],["ts",{"_index":638,"title":{},"body":{"classes/StaticLoader.html":{}}}],["tslib",{"_index":740,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoginComponent.html":{},"classes/ModuleProvider.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"interfaces/WisdomInterface.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":754,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["unauthorized",{"_index":815,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["undefined",{"_index":379,"title":{},"body":{"injectables/AuthStorageService.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{}}}],["unixtime",{"_index":390,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["update",{"_index":237,"title":{},"body":{"guards/AuthGuard.html":{},"miscellaneous/typealiases.html":{}}}],["updated",{"_index":804,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["updates",{"_index":275,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["url",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/BaseUrlInterceptor.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["url.interceptor",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{}}}],["url.interceptor.ts",{"_index":429,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["url.interceptor.ts:30",{"_index":433,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{}}}],["url.interceptor.ts:39",{"_index":434,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{}}}],["urlencoded",{"_index":336,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["urltree",{"_index":173,"title":{},"body":{"guards/AuthGuard.html":{}}}],["use",{"_index":192,"title":{},"body":{"guards/AuthGuard.html":{},"components/IonIconComponent.html":{}}}],["use_api_url",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/BaseUrlInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["use_base_url",{"_index":442,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["useclass",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":430,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{},"components/IonIconComponent.html":{},"classes/StaticLoader.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":132,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"miscellaneous/typealiases.html":{}}}],["username",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["users",{"_index":674,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["userservice",{"_index":644,"title":{"injectables/UserService.html":{}},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["userservice.httpoptions",{"_index":675,"title":{},"body":{"injectables/UserService.html":{}}}],["uses",{"_index":547,"title":{},"body":{"components/IonIconComponent.html":{}}}],["valid",{"_index":135,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["validate",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{}}}],["validate(token",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{}}}],["value",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":371,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["var",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoginComponent.html":{}}}],["variable",{"_index":707,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":829,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["via",{"_index":552,"title":{},"body":{"components/IonIconComponent.html":{}}}],["viewchild",{"_index":582,"title":{},"body":{"components/LoginComponent.html":{}}}],["viewchild(\"passwordinput",{"_index":583,"title":{},"body":{"components/LoginComponent.html":{}}}],["viewchild('passwordinput",{"_index":580,"title":{},"body":{"components/LoginComponent.html":{}}}],["viewcontainerref",{"_index":464,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["void",{"_index":373,"title":{},"body":{"injectables/AuthStorageService.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoginComponent.html":{}}}],["wait",{"_index":196,"title":{},"body":{"guards/AuthGuard.html":{}}}],["webcomponents",{"_index":548,"title":{},"body":{"components/IonIconComponent.html":{}}}],["window.location.origin",{"_index":845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wir",{"_index":533,"title":{},"body":{"components/FrameComponent.html":{}}}],["wisdom",{"_index":523,"title":{},"body":{"components/FrameComponent.html":{},"components/LoginComponent.html":{}}}],["wisdom_modules/.../auth",{"_index":830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wisdom_modules/.../auth.interceptor.ts",{"_index":837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wisdom_modules/.../auth.service.ts",{"_index":832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wisdom_modules/.../base",{"_index":838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wisdom_modules/.../deleteusersid200.ts",{"_index":757,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../deleteusersid403.ts",{"_index":759,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../deleteusersid404.ts",{"_index":761,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../environment.common.ts",{"_index":835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wisdom_modules/.../environment.prod.ts",{"_index":833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wisdom_modules/.../environment.ts",{"_index":834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wisdom_modules/.../getusers200.ts",{"_index":762,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../getusersid200.ts",{"_index":764,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../getusersid404.ts",{"_index":766,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../getusersme200.ts",{"_index":768,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../patchusers204.ts",{"_index":770,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../patchusers403.ts",{"_index":772,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../patchusers404.ts",{"_index":774,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../patchusersme200.ts",{"_index":776,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../postoauthtoken200.ts",{"_index":777,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../postoauthtoken400.ts",{"_index":778,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../postoauthtoken401.ts",{"_index":779,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../postrevoke200.ts",{"_index":780,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../postrevoke403.ts",{"_index":781,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../public",{"_index":839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wisdom_modules/.../putusers201.ts",{"_index":782,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../putusers409.ts",{"_index":783,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../staticloader.ts",{"_index":836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wisdom_modules/.../user.service.ts",{"_index":831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wisdom_modules/.../user.ts",{"_index":784,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/common/src/lib/bulma/bulma",{"_index":453,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{},"coverage.html":{}}}],["wisdom_modules/common/src/lib/ion",{"_index":542,"title":{},"body":{"components/IonIconComponent.html":{},"coverage.html":{}}}],["wisdom_modules/common/src/lib/wisdom.module.ts",{"_index":692,"title":{},"body":{"modules/WisdomModule.html":{}}}],["wisdom_modules/common/src/wisdominterface.ts",{"_index":685,"title":{},"body":{"interfaces/WisdomInterface.html":{},"coverage.html":{}}}],["wisdom_modules/core/src/app/app",{"_index":111,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["wisdom_modules/core/src/app/app.component.ts",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["wisdom_modules/core/src/app/app.component.ts:8",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["wisdom_modules/core/src/app/app.module.ts",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["wisdom_modules/core/src/app/auth/auth",{"_index":355,"title":{},"body":{"injectables/AuthStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["wisdom_modules/core/src/app/auth/auth.guard.ts",{"_index":129,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["wisdom_modules/core/src/app/auth/auth.guard.ts:23",{"_index":149,"title":{},"body":{"guards/AuthGuard.html":{}}}],["wisdom_modules/core/src/app/auth/auth.guard.ts:41",{"_index":157,"title":{},"body":{"guards/AuthGuard.html":{}}}],["wisdom_modules/core/src/app/auth/auth.interceptor.ts",{"_index":252,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["wisdom_modules/core/src/app/auth/auth.interceptor.ts:17",{"_index":257,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["wisdom_modules/core/src/app/auth/auth.interceptor.ts:26",{"_index":261,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["wisdom_modules/core/src/app/auth/auth.service.ts",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["wisdom_modules/core/src/app/auth/auth.service.ts:43",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{}}}],["wisdom_modules/core/src/app/auth/auth.service.ts:52",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{}}}],["wisdom_modules/core/src/app/auth/auth.service.ts:70",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{}}}],["wisdom_modules/core/src/app/auth/auth.service.ts:82",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{}}}],["wisdom_modules/core/src/app/auth/auth.service.ts:99",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{}}}],["wisdom_modules/core/src/app/auth/login/login.component.ts",{"_index":568,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["wisdom_modules/core/src/app/auth/login/login.component.ts:17",{"_index":581,"title":{},"body":{"components/LoginComponent.html":{}}}],["wisdom_modules/core/src/app/auth/login/login.component.ts:19",{"_index":573,"title":{},"body":{"components/LoginComponent.html":{}}}],["wisdom_modules/core/src/app/auth/login/login.component.ts:27",{"_index":574,"title":{},"body":{"components/LoginComponent.html":{}}}],["wisdom_modules/core/src/app/auth/login/login.component.ts:29",{"_index":577,"title":{},"body":{"components/LoginComponent.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/login/postoauthtoken200.ts",{"_index":809,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/login/postoauthtoken400.ts",{"_index":811,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/login/postoauthtoken401.ts",{"_index":814,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/login/postrevoke200.ts",{"_index":816,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/login/postrevoke403.ts",{"_index":818,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/users/deleteusersid200.ts",{"_index":785,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/users/deleteusersid403.ts",{"_index":788,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/users/deleteusersid404.ts",{"_index":793,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/users/getusers200.ts",{"_index":796,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/users/getusersid200.ts",{"_index":797,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/users/getusersid404.ts",{"_index":800,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/users/getusersme200.ts",{"_index":801,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/users/patchusers204.ts",{"_index":802,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/users/patchusers403.ts",{"_index":805,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/users/patchusers404.ts",{"_index":806,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/users/patchusersme200.ts",{"_index":808,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/users/putusers201.ts",{"_index":820,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/users/putusers409.ts",{"_index":822,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/types/user.ts",{"_index":826,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/user.service.ts",{"_index":645,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["wisdom_modules/core/src/app/auth/user.service.ts:21",{"_index":648,"title":{},"body":{"injectables/UserService.html":{}}}],["wisdom_modules/core/src/app/auth/user.service.ts:25",{"_index":656,"title":{},"body":{"injectables/UserService.html":{}}}],["wisdom_modules/core/src/app/auth/user.service.ts:34",{"_index":655,"title":{},"body":{"injectables/UserService.html":{}}}],["wisdom_modules/core/src/app/auth/user.service.ts:39",{"_index":652,"title":{},"body":{"injectables/UserService.html":{}}}],["wisdom_modules/core/src/app/base",{"_index":428,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["wisdom_modules/core/src/app/frame/frame.component.ts",{"_index":510,"title":{},"body":{"components/FrameComponent.html":{},"coverage.html":{}}}],["wisdom_modules/core/src/app/frame/frame.component.ts:11",{"_index":514,"title":{},"body":{"components/FrameComponent.html":{}}}],["wisdom_modules/core/src/app/frame/frame.component.ts:19",{"_index":515,"title":{},"body":{"components/FrameComponent.html":{}}}],["wisdom_modules/core/src/app/i18n/lang",{"_index":556,"title":{},"body":{"directives/LangSelectorDirective.html":{},"coverage.html":{}}}],["wisdom_modules/core/src/app/i18n/staticloader.ts",{"_index":625,"title":{},"body":{"classes/StaticLoader.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["wisdom_modules/core/src/app/i18n/staticloader.ts:22",{"_index":628,"title":{},"body":{"classes/StaticLoader.html":{}}}],["wisdom_modules/core/src/app/module",{"_index":610,"title":{},"body":{"classes/ModuleProvider.html":{},"coverage.html":{}}}],["wisdom_modules/core/src/environments/environment.common.ts",{"_index":718,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["wisdom_modules/core/src/environments/environment.prod.ts",{"_index":719,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["wisdom_modules/core/src/environments/environment.ts",{"_index":721,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["wisdom_modules/example/src/lib/example.component.ts",{"_index":490,"title":{},"body":{"components/ExampleComponent.html":{},"coverage.html":{}}}],["wisdom_modules/example/src/lib/example.component.ts:10",{"_index":495,"title":{},"body":{"components/ExampleComponent.html":{}}}],["wisdom_modules/example/src/lib/example.component.ts:6",{"_index":494,"title":{},"body":{"components/ExampleComponent.html":{}}}],["wisdom_modules/example/src/lib/example.module.ts",{"_index":505,"title":{},"body":{"modules/ExampleModule.html":{}}}],["wisdom_modules/example/src/lib/example.service.ts",{"_index":508,"title":{},"body":{"injectables/ExampleService.html":{},"coverage.html":{}}}],["wisdom_modules/example/src/lib/example.service.ts:6",{"_index":509,"title":{},"body":{"injectables/ExampleService.html":{}}}],["wisdom_modules/example/src/public",{"_index":722,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["wisdominterface",{"_index":683,"title":{"interfaces/WisdomInterface.html":{}},"body":{"interfaces/WisdomInterface.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["wisdommodule",{"_index":66,"title":{"modules/WisdomModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ExampleModule.html":{},"modules/WisdomModule.html":{},"index.html":{},"modules.html":{}}}],["without",{"_index":277,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["www",{"_index":334,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["x",{"_index":333,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["yes",{"_index":654,"title":{},"body":{"injectables/UserService.html":{}}}],["you're",{"_index":205,"title":{},"body":{"guards/AuthGuard.html":{}}}],["zone.js",{"_index":742,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"modules/ExampleModule.html":{},"modules/WisdomModule.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    wisdom_modules/core/src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"frontend-core\"\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/core/src/app/app.component.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component} from \"@angular/core\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\"\n})\nexport class AppComponent {\n  title = \"frontend-core\";\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ExampleComponent', 'selector': ''},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IonIconComponent', 'selector': 'ion-icon'},{'name': 'LoginComponent', 'selector': 'app-login'}];\n    var DIRECTIVES = [{'name': 'BulmaIsToggleableDirective', 'selector': '.is-toggleable'},{'name': 'LangSelectorDirective', 'selector': '[selectLang]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nFrameComponent\n\nFrameComponent\n\nAppModule -->\n\nFrameComponent->AppModule\n\n\n\n\n\nLangSelectorDirective\n\nLangSelectorDirective\n\nAppModule -->\n\nLangSelectorDirective->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nWisdomModule\n\nWisdomModule\n\nAppModule -->\n\nWisdomModule->AppModule\n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nAppModule -->\n\nAuthInterceptor->AppModule\n\n\n\n\n\nBaseUrlInterceptor\n\nBaseUrlInterceptor\n\nAppModule -->\n\nBaseUrlInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            wisdom_modules/core/src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            FrameComponent\n                        \n                        \n                            LangSelectorDirective\n                        \n                        \n                            LoginComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AuthInterceptor\n                        \n                        \n                            BaseUrlInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            WisdomModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {HttpClientModule, HTTP_INTERCEPTORS} from \"@angular/common/http\";\nimport {NgModule} from \"@angular/core\";\nimport {FormsModule} from \"@angular/forms\";\nimport {BrowserModule} from \"@angular/platform-browser\";\nimport {TranslateLoader, TranslateModule} from \"@ngx-translate/core\";\nimport {WisdomModule} from \"common\";\n\nimport {AppRoutingModule} from \"./app-routing.module\";\nimport {AppComponent} from \"./app.component\";\nimport {LoginComponent} from \"./auth/login/login.component\";\nimport {AuthInterceptor} from \"./auth/auth.interceptor\";\nimport {BaseUrlInterceptor} from \"./base-url.interceptor\";\nimport {FrameComponent} from \"./frame/frame.component\";\nimport {LangSelectorDirective} from \"./i18n/lang-selector.directive\";\nimport {StaticLoader} from \"./i18n/StaticLoader\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    FrameComponent,\n    LangSelectorDirective\n  ],\n  imports: [\n    WisdomModule,\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    TranslateModule.forRoot({\n      defaultLanguage: globalThis.localStorage.getItem(\"lang\") || \"en_US\",\n      loader: {\n        provide: TranslateLoader,\n        useClass: StaticLoader\n      }\n    })\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: BaseUrlInterceptor,\n      multi: true\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true\n    }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            wisdom_modules/core/src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from \"@angular/core\";\nimport {RouterModule, Routes} from \"@angular/router\";\n\nimport {LoginComponent} from \"./auth/login/login.component\";\nimport {AuthGuard} from \"./auth/auth.guard\";\nimport {FrameComponent} from \"./frame/frame.component\";\nimport {ModuleProvider} from \"./module-provider\";\n\nModuleProvider.routes();\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: FrameComponent,\n    canActivate: [AuthGuard],\n    children: \"ModuleProvider.routes()\"\n  },\n  {path: \"login\", component: LoginComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                wisdom_modules/core/src/app/auth/auth.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard checking if the user is signed in, it needs to have a valid access\ntoken to browser further.\nAlso tries to refresh the token if the old one is not valid.\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authStorage: AuthStorageService, authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/core/src/app/auth/auth.guard.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authStorage\n                                                  \n                                                        \n                                                                        AuthStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/auth/auth.guard.ts:41\n                \n            \n\n\n            \n                \n                    Method deciding if a user is allowed to navigate to the requested route.\nThis one checks if the current token is still valid.\nIf the token is not valid it tries to refresh the token.\nIf no refreshing is the possible the route will be set to the login page.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | UrlTree | boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {Injectable} from \"@angular/core\";\nimport {\n  CanActivate,\n  Router,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree\n} from \"@angular/router\";\nimport {Observable} from \"rxjs\";\n\nimport {AuthStorageService} from \"./auth-storage.service\";\nimport {AuthService} from \"./auth.service\";\n\n/**\n * Guard checking if the user is signed in, it needs to have a valid access\n * token to browser further.\n *\n * Also tries to refresh the token if the old one is not valid.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(\n    private authStorage: AuthStorageService,\n    private authService: AuthService,\n    private router: Router\n  ) {}\n\n  /**\n   * Method deciding if a user is allowed to navigate to the requested route.\n   *\n   * This one checks if the current token is still valid.\n   * If the token is not valid it tries to refresh the token.\n   * If no refreshing is the possible the route will be set to the login page.\n   *\n   * @param route\n   * @param state\n   */\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable | UrlTree | boolean {\n    // ignore login path per se\n    if (route.url[0]?.path === \"login\") return true;\n    let loginUrlTree = this.router.parseUrl(\"/login\");\n\n    // if no token is available the use can't be logged in\n    let token = this.authStorage.accessToken;\n    if (!token) return loginUrlTree;\n\n    // wait for the server to reply with a token check\n    return new Observable(subscriber => {\n      this.authService.validate(token!).subscribe({\n        next: response => {\n          // token is valid, you're ready to go\n          subscriber.next(true);\n          subscriber.complete();\n        },\n\n        error: errResponse => {\n          // token is invalid\n          if (errResponse.status !== 401) {\n            // TODO: handle non-401 codes gracefully\n            subscriber.next(false);\n            subscriber.complete();\n            return;\n          }\n\n          /**\n           * Small function to avoid code depletes.\n           * Clears the auth storage and sends the user to the login page.\n           */\n          let returnToLogin = () => {\n            this.authStorage.clear();\n            subscriber.next(loginUrlTree);\n            subscriber.complete();\n          };\n\n          if (this.authStorage.refreshToken) {\n            // if a refresh token is present, try to refresh\n            this.authService.refresh(this.authStorage.refreshToken).subscribe({\n              next: refreshResponse => {\n                // refresh token was valid, update with new data\n                this.authStorage.accessToken = refreshResponse.access_token;\n                this.authStorage.refreshToken = refreshResponse.refresh_token;\n                this.authStorage.scopes = refreshResponse.scope;\n                this.authStorage.expiresIn = refreshResponse.expires_in;\n                subscriber.next(true);\n                subscriber.complete();\n                return;\n              },\n\n              error: refreshErrResponse => {\n                // token is no valid, send the user to the login page\n                if (refreshErrResponse.status === 400) return returnToLogin();\n                // TODO: handle non-400 status codes gracefully\n              }\n            });\n            return;\n          }\n\n          return returnToLogin();\n        }\n      });\n    });\n  }\n\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AuthInterceptor.html":{"url":"interceptors/AuthInterceptor.html","title":"interceptor - AuthInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  AuthInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/core/src/app/auth/auth.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                Interceptor to inject the authorization token into every request.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authStorage: AuthStorageService)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/core/src/app/auth/auth.interceptor.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authStorage\n                                                  \n                                                        \n                                                                        AuthStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/auth/auth.interceptor.ts:26\n                \n            \n\n\n            \n                \n                    Injects the token as Bearer authentication into a HttpRequest\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The request the token should be injected in\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The next handler to operate on the request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest\n} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\nimport {Observable} from \"rxjs\";\n\nimport {AuthStorageService} from \"./auth-storage.service\";\n\n/** Key for the token. */\nconst TOKEN_HEADER_KEY = \"Authorization\";\n\n/** Interceptor to inject the authorization token into every request. */\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  constructor(private authStorage: AuthStorageService) {}\n\n  /**\n   * Injects the token as Bearer authentication into a HttpRequest\n   * @param request The request the token should be injected in\n   * @param next The next handler to operate on the request\n   */\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    let authRequest = request;\n    const token = this.authStorage.accessToken;\n    if (token) {\n      authRequest = request.clone({\n        // this updates the header without removing every other header\n        headers: request.headers.set(TOKEN_HEADER_KEY, \"Bearer \" + token)\n      });\n    }\n    return next.handle(authRequest);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/core/src/app/auth/auth.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service handling the OAuth interaction.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                refresh\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/core/src/app/auth/auth.service.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/auth/auth.service.ts:52\n                \n            \n\n\n            \n                \n                    Logs the user in.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Username of the user\n\n                                    \n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Password of the user\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout(token: string)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/auth/auth.service.ts:99\n                \n            \n\n\n            \n                \n                    Revokes the token.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Token of the user\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refresh\n                        \n                    \n                \n            \n            \n                \nrefresh(token: string)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/auth/auth.service.ts:82\n                \n            \n\n\n            \n                \n                    Refreshes the current token.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Refresh token\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(token: string)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/auth/auth.service.ts:70\n                \n            \n\n\n            \n                \n                    Checks if the given token is valid.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Token to check\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpClient,\n  HttpContext,\n  HttpHeaders,\n  HttpParams,\n  HttpErrorResponse,\n  HttpResponse\n} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\nimport {join} from \"path-browserify\";\nimport {Observable} from \"rxjs\";\n\nimport PostOAuthToken200 from \"./response_types/login/PostOAuthToken200\";\nimport PostOAuthToken400 from \"./response_types/login/PostOAuthToken400\";\nimport PostOAuthToken401 from \"./response_types/login/PostOAuthToken401\";\nimport PostRevoke200 from \"./response_types/login/PostRevoke200\";\nimport PostRevoke403 from \"./response_types/login/PostRevoke403\";\nimport {USE_API_URL} from \"../base-url.interceptor\";\n\n/** Url for the interaction. */\nconst AUTH_URL = \"auth\";\n\n/**\n * Options for the post request in the service.\n * As per reference the content type is always \"x-www-form-urlencoded\" instead\n * of \"json\".\n * The response is a json though.\n */\nconst httpOptions: Parameters[2] = {\n  headers: new HttpHeaders({\n    \"Content-Type\": \"application/x-www-form-urlencoded\"\n  }),\n  responseType: \"json\",\n  context: new HttpContext().set(USE_API_URL, true)\n}\n\n/**\n * Service handling the OAuth interaction.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private http: HttpClient) {}\n\n  /**\n   * Logs the user in.\n   * @param username Username of the user\n   * @param password Password of the user\n   */\n  login(username: string, password: string) {\n    return this.http.post(\n      join(AUTH_URL, \"oauth/token\"),\n      new HttpParams({\n        fromObject: {\n          grant_type: \"password\",\n          username,\n          password\n        }\n      }),\n      httpOptions\n    ) as Observable;\n  }\n\n  /**\n   * Checks if the given token is valid.\n   * @param token Token to check\n   */\n  validate(token: string) {\n    return this.http.post(\n      join(AUTH_URL, \"oauth/check_token\"),\n      new HttpParams({fromObject: {token}}),\n      httpOptions\n    );\n  }\n\n  /**\n   * Refreshes the current token.\n   * @param token Refresh token\n   */\n  refresh(token: string) {\n    return this.http.post(\n      join(AUTH_URL, \"oauth/token\"),\n      new HttpParams({\n        fromObject: {\n          grant_type: \"refresh_token\",\n          refresh_token: token\n        }\n      }),\n      httpOptions\n    ) as Observable;\n  }\n\n  /**\n   * Revokes the token.\n   * @param token Token of the user\n   */\n  logout(token: string) {\n    return this.http.post(\n      join(AUTH_URL, \"oauth/revoke\"),\n      new HttpParams({fromObject: {\n        token\n      }}),\n      httpOptions\n    ) as Observable;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthStorageService.html":{"url":"injectables/AuthStorageService.html","title":"injectable - AuthStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/core/src/app/auth/auth-storage.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Class for storing the data received from the auth server.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                    Private\n                                    Static\n                                getStorage\n                            \n                            \n                                    Private\n                                    Static\n                                setStorage\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    accessToken\n                                \n                                \n                                    expiresIn\n                                \n                                \n                                    refreshToken\n                                \n                                \n                                    scopes\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/core/src/app/auth/auth-storage.service.ts:16\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/auth/auth-storage.service.ts:23\n                \n            \n\n\n            \n                \n                    Clears the session storage from the values stored by this service.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        getStorage\n                        \n                    \n                \n            \n            \n                \n                    \n                    getStorage(key: string)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/auth/auth-storage.service.ts:40\n                \n            \n\n\n            \n                \n                    Internal function to get session storage values.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        setStorage\n                        \n                    \n                \n            \n            \n                \n                    \n                    setStorage(data: string | null | undefined, key: string)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/auth/auth-storage.service.ts:35\n                \n            \n\n\n            \n                \n                    Internal function to set session storage values.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            string | null | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        accessToken\n                    \n                \n\n                \n                    \n                        getaccessToken()\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/auth/auth-storage.service.ts:47\n                                \n                            \n\n                \n                    \n                        setaccessToken(token: string | null | undefined)\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/auth/auth-storage.service.ts:44\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            token\n                                                    \n                                                            \n                                                                        string | null | undefined\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        expiresIn\n                    \n                \n\n                \n                    \n                        getexpiresIn()\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/auth/auth-storage.service.ts:54\n                                \n                            \n\n                \n                    \n                        setexpiresIn(unixTime: number | string | null | undefined)\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/auth/auth-storage.service.ts:51\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            unixTime\n                                                    \n                                                            \n                                                                        number | string | null | undefined\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        refreshToken\n                    \n                \n\n                \n                    \n                        getrefreshToken()\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/auth/auth-storage.service.ts:63\n                                \n                            \n\n                \n                    \n                        setrefreshToken(token: string | null | undefined)\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/auth/auth-storage.service.ts:60\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            token\n                                                    \n                                                            \n                                                                        string | null | undefined\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        scopes\n                    \n                \n\n                \n                    \n                        getscopes()\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/auth/auth-storage.service.ts:70\n                                \n                            \n\n                \n                    \n                        setscopes(scopes: string | null | undefined)\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/auth/auth-storage.service.ts:67\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            scopes\n                                                    \n                                                            \n                                                                        string | null | undefined\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\n\n/** Key for the access token. */\nconst ACCESS_TOKEN_KEY = \"auth-token\";\n/** Key fo the expiration date. */\nconst EXPIRES_IN_KEY = \"auth-expires-in\";\n/** Key for the refresh token. */\nconst REFRESH_TOKEN_KEY = \"auth-refresh-token\";\n/** Key for the scopes. */\nconst SCOPES_KEY = \"auth-scopes\";\n\n/** Class for storing the data received from the auth server. */\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AuthStorageService {\n\n  // TODO: doc the getter and setter when https://github.com/microsoft/tsdoc/issues/308 is closed\n\n  constructor() { }\n\n  /** Clears the session storage from the values stored by this service. */\n  clear(): void {\n    for (let key of [\n      ACCESS_TOKEN_KEY,\n      REFRESH_TOKEN_KEY,\n      EXPIRES_IN_KEY,\n      SCOPES_KEY\n    ]) {\n      globalThis.sessionStorage.removeItem(key);\n    }\n  }\n\n  /** Internal function to set session storage values. */\n  private static setStorage(data: string | null | undefined, key: string) {\n    if (data) globalThis.sessionStorage.setItem(key, data);\n    else globalThis.sessionStorage.removeItem(key);\n  }\n  /** Internal function to get session storage values. */\n  private static getStorage(key: string) {\n    return globalThis.sessionStorage.getItem(key);\n  }\n\n  set accessToken(token: string | null | undefined) {\n    AuthStorageService.setStorage(token, ACCESS_TOKEN_KEY);\n  }\n  get accessToken() {\n    return AuthStorageService.getStorage(ACCESS_TOKEN_KEY);\n  }\n\n  set expiresIn(unixTime: number | string | null | undefined) {\n    AuthStorageService.setStorage(`${unixTime}`, EXPIRES_IN_KEY);\n  }\n  get expiresIn(): number {\n    let expiresIn = AuthStorageService.getStorage(EXPIRES_IN_KEY);\n    if (expiresIn) return parseInt(expiresIn);\n    return NaN;\n  }\n\n  set refreshToken(token: string | null | undefined) {\n    AuthStorageService.setStorage(token, REFRESH_TOKEN_KEY);\n  }\n  get refreshToken() {\n    return AuthStorageService.getStorage(REFRESH_TOKEN_KEY);\n  }\n\n  set scopes(scopes: string | null | undefined) {\n    AuthStorageService.setStorage(scopes, SCOPES_KEY);\n  }\n  get scopes() {\n    return AuthStorageService.getStorage(SCOPES_KEY);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/BaseUrlInterceptor.html":{"url":"interceptors/BaseUrlInterceptor.html","title":"interceptor - BaseUrlInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  BaseUrlInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/core/src/app/base-url.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                Class used to prepend the base url to requests.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/core/src/app/base-url.interceptor.ts:30\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/base-url.interceptor.ts:39\n                \n            \n\n\n            \n                \n                    Prepends the base url from the environment to request url\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Request to prepend the url\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The next handler\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n  HttpContextToken\n} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\nimport {join} from \"path-browserify\";\nimport {Observable} from \"rxjs\";\n\nimport {environment} from \"../environments/environment\";\n\n/**\n * {@link HttpContextToken} used to determine if the base url should be used.\n *\n * Defaults to `true`.\n */\nexport const USE_BASE_URL = new HttpContextToken(() => true);\n\n/**\n * {@link HttpContextToken} used to determine if the api url should be used.\n *\n * Defaults to `false`.\n */\nexport const USE_API_URL = new HttpContextToken(() => false);\n\n/** Class used to prepend the base url to requests. */\n@Injectable()\nexport class BaseUrlInterceptor implements HttpInterceptor {\n\n  constructor() {}\n\n  /**\n   * Prepends the base url from the environment to request url\n   * @param request Request to prepend the url\n   * @param next The next handler\n   */\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    let prependUrl = \"\";\n    if (request.context.get(USE_BASE_URL)) prependUrl = environment.baseUrl;\n    if (request.context.get(USE_API_URL)) prependUrl = environment.apiUrl;\n    return next.handle(\n      // prepend the api url with the base url from the environment\n      request.clone({url: prependUrl +  request.url})\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/BulmaIsToggleableDirective.html":{"url":"directives/BulmaIsToggleableDirective.html","title":"directive - BulmaIsToggleableDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  BulmaIsToggleableDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/common/src/lib/bulma/bulma-is-toggleable.directive.ts\n        \n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        .is-toggleable\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                classes\n                            \n                            \n                                    Private\n                                isActive\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    elementClasses\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(container: ViewContainerRef)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/common/src/lib/bulma/bulma-is-toggleable.directive.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                  \n                                                        \n                                                                        ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        class\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/bulma/bulma-is-toggleable.directive.ts:21\n                            \n                        \n            \n        \n\n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            click\n                        \n                        \n                    \n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/common/src/lib/bulma/bulma-is-toggleable.directive.ts:29\n                \n            \n\n\n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toggle\n                        \n                    \n                \n            \n            \n                \ntoggle()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('click')\n                \n            \n\n            \n                \n                    Defined in wisdom_modules/common/src/lib/bulma/bulma-is-toggleable.directive.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        classes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/bulma/bulma-is-toggleable.directive.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/bulma/bulma-is-toggleable.directive.ts:14\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        elementClasses\n                    \n                \n\n                \n                    \n                        getelementClasses()\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/common/src/lib/bulma/bulma-is-toggleable.directive.ts:21\n                                \n                            \n\n                \n                    \n                        setelementClasses(classes: string)\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/common/src/lib/bulma/bulma-is-toggleable.directive.ts:24\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            classes\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import {\n  HostBinding,\n  Directive,\n  Input,\n  HostListener,\n  ViewContainerRef\n} from \"@angular/core\";\n\n@Directive({\n  selector: '.is-toggleable'\n})\nexport class BulmaIsToggleableDirective {\n\n  private isActive: boolean = false;\n  private classes: string[] = [];\n\n  constructor(private container: ViewContainerRef) {}\n\n  @Input(\"class\")\n  @HostBinding(\"class\")\n  get elementClasses(): string {\n    return this.classes.join(\" \");\n  }\n  set elementClasses(classes: string) {\n    this.classes = classes.trim().split(/\\s+/);\n  }\n\n  @HostListener(\"click\")\n  toggle() {\n    this.isActive = !this.isActive;\n    if (this.isActive) this.classes.push(\"is-active\")\n    else {\n      this.elementClasses = this.elementClasses\n        .split(\"is-active\")\n        .join(\"\");\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ExampleComponent.html":{"url":"components/ExampleComponent.html","title":"component - ExampleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ExampleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    wisdom_modules/example/src/lib/example.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                templateUrl\n                example.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/example/src/lib/example.component.ts:6\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/example/src/lib/example.component.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from \"@angular/core\";\n\n@Component({\n  templateUrl: \"example.component.html\"\n})\nexport class ExampleComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n  \n    Example here\n  \n  \n    \n      \n    \n  \n  \n    \n      {{\"example.example.key\" | translate}}\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Example here                                {{\"example.example.key\" | translate}}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ExampleComponent', 'selector': ''},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IonIconComponent', 'selector': 'ion-icon'},{'name': 'LoginComponent', 'selector': 'app-login'}];\n    var DIRECTIVES = [{'name': 'BulmaIsToggleableDirective', 'selector': '.is-toggleable'},{'name': 'LangSelectorDirective', 'selector': '[selectLang]'}];\n    var ACTUAL_COMPONENT = {'name': 'ExampleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ExampleModule.html":{"url":"modules/ExampleModule.html","title":"module - ExampleModule","body":"\n                   \n\n\n\n\n    Modules\n    ExampleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ExampleModule\n\n\n\ncluster_ExampleModule_declarations\n\n\n\ncluster_ExampleModule_imports\n\n\n\ncluster_ExampleModule_exports\n\n\n\n\nExampleComponent\n\nExampleComponent\n\n\n\nExampleModule\n\nExampleModule\n\nExampleModule -->\n\nExampleComponent->ExampleModule\n\n\n\n\n\nExampleComponent \n\nExampleComponent \n\nExampleComponent  -->\n\nExampleModule->ExampleComponent \n\n\n\n\n\nWisdomModule\n\nWisdomModule\n\nExampleModule -->\n\nWisdomModule->ExampleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            wisdom_modules/example/src/lib/example.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ExampleComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            WisdomModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ExampleComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from \"@angular/core\";\nimport {TranslateModule} from \"@ngx-translate/core\";\nimport {WisdomModule} from \"common\";\n\nimport {ExampleComponent} from \"./example.component\";\n\n@NgModule({\n  declarations: [\n    ExampleComponent\n  ],\n  imports: [\n    WisdomModule,\n    TranslateModule\n  ],\n  exports: [\n    ExampleComponent\n  ]\n})\nexport class ExampleModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExampleService.html":{"url":"injectables/ExampleService.html","title":"injectable - ExampleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ExampleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/example/src/lib/example.service.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/example/src/lib/example.service.ts:6\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExampleService {\n\n  constructor() { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FrameComponent.html":{"url":"components/FrameComponent.html","title":"component - FrameComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FrameComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    wisdom_modules/core/src/app/frame/frame.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-frame\n            \n\n\n\n\n            \n                templateUrl\n                ./frame.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, authStorage: AuthStorageService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/core/src/app/frame/frame.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authStorage\n                                                  \n                                                        \n                                                                        AuthStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/frame/frame.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from \"@angular/core\";\nimport {Router} from \"@angular/router\";\n\nimport {AuthService} from \"../auth/auth.service\";\nimport {AuthStorageService} from \"../auth/auth-storage.service\";\n\n@Component({\n  selector: 'app-frame',\n  templateUrl: './frame.component.html',\n})\nexport class FrameComponent {\n\n  constructor(\n    private authService: AuthService,\n    private authStorage: AuthStorageService,\n    private router: Router\n  ) { }\n\n  logout() {\n    this.authService.logout(this.authStorage.accessToken!).subscribe(() => {\n      this.authStorage.clear();\n      this.router.navigate([\"login\"], {replaceUrl: true})\n        .catch(e => console.error(e));\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n        \n        \n          WISdoM-OSS\n        \n      \n    \n  \n  \n    \n      \n        \n          \n            \n          \n        \n      \n    \n    \n      \n        \n          \n            \n          \n          \n            {{\"lang\" | translate}}\n          \n        \n        \n          \n            \n              \n                \n                  \n                \n                \n                  Deutsch\n                \n              \n            \n          \n          \n            \n              \n                \n                  \n                \n                \n                  English\n                \n              \n            \n          \n        \n      \n      \n        \n          \n            \n              \n            \n          \n        \n      \n    \n  \n\n\n  \n    ein Menü\n    \n      Dashboard\n      ein Link\n    \n  \n  \n    \n      \n    \n    \n      Hier packen wir was cooles rein\n    \n  \n  \n    {{\"core.frame.account\" | translate}}\n    \n      \n        \n          \n            \n              \n            \n            \n              {{\"core.frame.logout\" | translate}}\n            \n          \n        \n      \n    \n    {{\"core.frame.administration\" | translate}}\n    \n      \n        \n          \n            \n              \n            \n            \n              {{\"core.frame.userManagement\" | translate}}\n            \n          \n        \n      \n      \n        \n          \n            \n              \n            \n            \n              {{\"core.frame.permissions\" | translate}}\n            \n          \n        \n      \n      \n        \n          \n            \n              \n            \n            \n              {{\"core.frame.roles\" | translate}}\n            \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        WISdoM-OSS                                                                                                                                                                  {{\"lang\" | translate}}                                                                                                                                                  Deutsch                                                                                                                                                                            English                                                                                                                                                                    ein Menü          Dashboard      ein Link                                Hier packen wir was cooles rein            {{\"core.frame.account\" | translate}}                                                                                            {{\"core.frame.logout\" | translate}}                                            {{\"core.frame.administration\" | translate}}                                                                                            {{\"core.frame.userManagement\" | translate}}                                                                                                                            {{\"core.frame.permissions\" | translate}}                                                                                                                            {{\"core.frame.roles\" | translate}}                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ExampleComponent', 'selector': ''},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IonIconComponent', 'selector': 'ion-icon'},{'name': 'LoginComponent', 'selector': 'app-login'}];\n    var DIRECTIVES = [{'name': 'BulmaIsToggleableDirective', 'selector': '.is-toggleable'},{'name': 'LangSelectorDirective', 'selector': '[selectLang]'}];\n    var ACTUAL_COMPONENT = {'name': 'FrameComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IonIconComponent.html":{"url":"components/IonIconComponent.html","title":"component - IonIconComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IonIconComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    wisdom_modules/common/src/lib/ion-icon/ion-icon.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component is used to inject the icons from IonIcons.\nIonIcons uses WebComponents to display the icons.\nTo allow to use them here, this component adds the icons via js.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ion-icon\n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/ion-icon/ion-icon.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import {Component, Input} from \"@angular/core\";\n\n/**\n * This component is used to inject the icons from IonIcons.\n * IonIcons uses WebComponents to display the icons.\n * To allow to use them here, this component adds the icons via js.\n */\n@Component({\n  selector: \"ion-icon\",\n  template: \"\"\n})\nexport class IonIconComponent {\n\n  @Input() name: string | undefined;\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ExampleComponent', 'selector': ''},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IonIconComponent', 'selector': 'ion-icon'},{'name': 'LoginComponent', 'selector': 'app-login'}];\n    var DIRECTIVES = [{'name': 'BulmaIsToggleableDirective', 'selector': '.is-toggleable'},{'name': 'LangSelectorDirective', 'selector': '[selectLang]'}];\n    var ACTUAL_COMPONENT = {'name': 'IonIconComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/LangSelectorDirective.html":{"url":"directives/LangSelectorDirective.html","title":"directive - LangSelectorDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  LangSelectorDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/core/src/app/i18n/lang-selector.directive.ts\n        \n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selectLang]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clickLangSelect\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectLang\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/core/src/app/i18n/lang-selector.directive.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        selectLang\n                    \n                \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/core/src/app/i18n/lang-selector.directive.ts:12\n                            \n                        \n            \n        \n\n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            click\n                        \n                        \n                    \n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/i18n/lang-selector.directive.ts:15\n                \n            \n\n\n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clickLangSelect\n                        \n                    \n                \n            \n            \n                \nclickLangSelect()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('click')\n                \n            \n\n            \n                \n                    Defined in wisdom_modules/core/src/app/i18n/lang-selector.directive.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import {Directive, Input, HostListener} from \"@angular/core\";\nimport {TranslateService} from \"@ngx-translate/core\";\n\n@Directive({\n  selector: '[selectLang]'\n})\nexport class LangSelectorDirective {\n\n  constructor(private translateService: TranslateService) {}\n\n  @Input(\"selectLang\")\n  lang: string | undefined;\n\n  @HostListener(\"click\")\n  clickLangSelect() {\n    if (!this.lang) return;\n    this.translateService.use(this.lang);\n    globalThis.localStorage.setItem(\"lang\", this.lang);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    wisdom_modules/core/src/app/auth/login/login.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loginHasIssue\n                            \n                            \n                                passwordInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, authStorage: AuthStorageService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/core/src/app/auth/login/login.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authStorage\n                                                  \n                                                        \n                                                                        AuthStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/auth/login/login.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit(f: NgForm)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/auth/login/login.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    f\n                                    \n                                                NgForm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loginHasIssue\n                        \n                    \n                \n            \n                \n                    \n                        Type :      | string\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/core/src/app/auth/login/login.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('passwordInput')\n                        \n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/core/src/app/auth/login/login.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {ViewChild, Component, OnInit, ElementRef} from \"@angular/core\";\nimport {NgForm} from \"@angular/forms\";\nimport {Router} from \"@angular/router\";\n\nimport {AuthService} from \"../auth.service\";\nimport {AuthStorageService} from \"../auth-storage.service\";\nimport PostOAuthToken400 from \"../response_types/login/PostOAuthToken400\";\nimport PostOAuthToken401 from \"../response_types/login/PostOAuthToken401\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html'\n})\nexport class LoginComponent implements OnInit {\n\n  @ViewChild(\"passwordInput\")\n  passwordInput!: ElementRef;\n\n  loginHasIssue: false | string = false;\n\n  constructor(\n    private authService: AuthService,\n    private authStorage: AuthStorageService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {}\n\n  onSubmit(f: NgForm): void {\n    const valid = f.valid;\n    const {username, password} = f.value;\n    this.authService.login(username, password).subscribe({\n      next: response => {\n        this.authStorage.accessToken = response.access_token;\n        this.authStorage.refreshToken = response.refresh_token;\n        this.authStorage.scopes = response.scope;\n        this.authStorage.expiresIn = response.expires_in;\n        console.log(\"successfully logged in\");\n        this.router.navigate([\"\"], {replaceUrl: true}).catch(e => console.error(e));\n      },\n      error: errResponse => {\n        let error;\n        switch (errResponse.status) {\n          case 400:\n            error = errResponse.error as PostOAuthToken400;\n            console.error(error);\n            this.loginHasIssue = \"Kombination is nicht korrekt.\";\n            this.passwordInput?.nativeElement.select();\n            break;\n          case 401:\n            error = errResponse.error as PostOAuthToken401;\n            console.error(error);\n            throw errResponse;\n          default:\n            throw errResponse;\n        }\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n        \n          \n            WISdoM OSS\n            \n              \n                {{\"core.login.username\" | translate}}\n                \n                  \n                  \n                    \n                  \n                  \n                    \n                  \n                \n              \n              \n                {{\"core.login.password\" | translate}}\n                \n                  \n                  \n                    \n                  \n                  \n                    \n                  \n                \n              \n              \n                {{\"core.login.forgotPassword\" | translate}}\n              \n              \n                {{loginHasIssue}}\n              \n              \n                \n                  \n                    {{\"core.login.login\" | translate}}\n                  \n                \n              \n            \n          \n        \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                  WISdoM OSS                                          {{\"core.login.username\" | translate}}                                                                                                                                                                                                              {{\"core.login.password\" | translate}}                                                                                                                                                                                                              {{\"core.login.forgotPassword\" | translate}}                                            {{loginHasIssue}}                                                                                  {{\"core.login.login\" | translate}}                                                                                                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ExampleComponent', 'selector': ''},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IonIconComponent', 'selector': 'ion-icon'},{'name': 'LoginComponent', 'selector': 'app-login'}];\n    var DIRECTIVES = [{'name': 'BulmaIsToggleableDirective', 'selector': '.is-toggleable'},{'name': 'LangSelectorDirective', 'selector': '[selectLang]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ModuleProvider.html":{"url":"classes/ModuleProvider.html","title":"class - ModuleProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ModuleProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/core/src/app/module-provider.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                langs\n                            \n                            \n                                    Static\n                                routes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Private\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/core/src/app/module-provider.ts:5\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        langs\n                        \n                    \n                \n            \n            \n                \n                    \n                    langs(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/module-provider.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        routes\n                        \n                    \n                \n            \n            \n                \n                    \n                    routes()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/module-provider.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Routes\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Routes} from \"@angular/router\";\n\nimport * as modules from \"../../../../modules\";\n\nexport class ModuleProvider {\n\n  private constructor() {}\n\n  static routes(): Routes {\n    let routes: Routes = [];\n    for (let module of Object.values(modules)) {\n      routes.push({\n        path: module.wisdomInterface.path,\n        component: module.wisdomInterface.entryComponent,\n      });\n    }\n    return routes;\n  }\n\n  static langs(lang: string) {\n    let collectedLang = {};\n    for (let module of Object.values(modules)) {\n      let moduleLang = module.wisdomInterface.translations[lang];\n      if (moduleLang) {\n        Object.assign(collectedLang, moduleLang);\n      }\n    }\n    return collectedLang;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StaticLoader.html":{"url":"classes/StaticLoader.html","title":"class - StaticLoader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StaticLoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/core/src/app/i18n/StaticLoader.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        TranslateLoader\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTranslation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getTranslation\n                        \n                    \n                \n            \n            \n                \ngetTranslation(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/i18n/StaticLoader.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {TranslateLoader} from \"@ngx-translate/core\";\nimport {of, Observable} from \"rxjs\";\n\nimport de_DELang from \"./langs/de_DE\";\nimport en_USLang from \"./langs/en_US\";\nimport {ModuleProvider} from \"../module-provider\";\n\nlet langs = {\n  de_DE: Object.assign({}, de_DELang, ModuleProvider.langs(\"de_DE\")),\n  en_US: Object.assign({}, en_USLang, ModuleProvider.langs(\"en_US\"))\n}\n\n/*\nI used a lot of ts ignore statements.\nThis will be replaced with a better loader.\n*/\n\n// TODO: do a better loader than this, but this will come,\n//  when modules are ready\n\nexport class StaticLoader implements TranslateLoader {\n  getTranslation(lang: string): Observable {\n    // @ts-ignore\n    return of(langs[lang]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/core/src/app/auth/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createUser\n                            \n                            \n                                getUsers\n                            \n                            \n                                    Private\n                                    Static\n                                httpOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/core/src/app/auth/user.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createUser\n                        \n                    \n                \n            \n            \n                \ncreateUser(firstName: string, lastName: string, username: string, password: string, scopes?: string, roles?: number[])\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/auth/user.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    firstName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lastName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scopes\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    roles\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsers\n                        \n                    \n                \n            \n            \n                \ngetUsers()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/auth/user.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        httpOptions\n                        \n                    \n                \n            \n            \n                \n                    \n                    httpOptions()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/auth/user.service.ts:25\n                \n            \n\n\n        \n    \n\n\n    \n\n\n    \n        import {HttpClient, HttpHeaders, HttpResponse} from \"@angular/common/http\";\nimport {join} from \"@angular/compiler-cli\";\nimport {Injectable} from \"@angular/core\";\nimport {Observable} from \"rxjs\";\n\nimport GetUsers200 from \"./response_types/users/GetUsers200\";\nimport PutUsers201 from \"./response_types/users/PutUsers201\";\nimport PutUsers409 from \"./response_types/users/PutUsers409\";\n\n// FIXME: this url is incorrect and the base needs to be moved\n/** Url for the interaction. */\nconst AUTH_API = \"localhost:8090/auth/\";\n\nconst getOptions: Parameters[1] = {\n  responseType: \"json\"\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http: HttpClient) {}\n\n  private static httpOptions(): Parameters[1] {\n    return {\n      responseType: \"json\",\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\"\n      }),\n    }\n  }\n\n  getUsers() {\n    return this.http.get(join(AUTH_API, \"users\"), UserService.httpOptions()) as\n      Observable>;\n  }\n\n  createUser(\n    firstName: string,\n    lastName: string,\n    username: string,\n    password: string,\n    scopes?: string,\n    roles?: number[]\n  ) {\n    const body: any = {\n      firstName, lastName, username, password\n    };\n    if (scopes) body.scopes = scopes;\n    if (roles) body.roles = roles;\n\n    return this.http.put(\n      join(AUTH_API, \"users\"),\n      body,\n      UserService.httpOptions()\n    ) as Observable |\n      {status: 409} & HttpResponse\n    >;\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WisdomInterface.html":{"url":"interfaces/WisdomInterface.html","title":"interface - WisdomInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  WisdomInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/common/src/WisdomInterface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            entryComponent\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                                \n                                        \n                                            scopes\n                                        \n                                \n                                \n                                        \n                                            translations\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        entryComponent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        entryComponent:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scopes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scopes:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        translations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        translations:     Record>>>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record>>>\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface WisdomInterface {\n  path: string;\n  scopes: string[];\n  entryComponent: any;\n  translations: Record>>>\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WisdomModule.html":{"url":"modules/WisdomModule.html","title":"module - WisdomModule","body":"\n                   \n\n\n\n\n    Modules\n    WisdomModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_WisdomModule\n\n\n\ncluster_WisdomModule_exports\n\n\n\ncluster_WisdomModule_declarations\n\n\n\n\nBulmaIsToggleableDirective\n\nBulmaIsToggleableDirective\n\n\n\nWisdomModule\n\nWisdomModule\n\nWisdomModule -->\n\nBulmaIsToggleableDirective->WisdomModule\n\n\n\n\n\nIonIconComponent\n\nIonIconComponent\n\nWisdomModule -->\n\nIonIconComponent->WisdomModule\n\n\n\n\n\nBulmaIsToggleableDirective \n\nBulmaIsToggleableDirective \n\nBulmaIsToggleableDirective  -->\n\nWisdomModule->BulmaIsToggleableDirective \n\n\n\n\n\nIonIconComponent \n\nIonIconComponent \n\nIonIconComponent  -->\n\nWisdomModule->IonIconComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            wisdom_modules/common/src/lib/wisdom.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BulmaIsToggleableDirective\n                        \n                        \n                            IonIconComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BulmaIsToggleableDirective\n                        \n                        \n                            IonIconComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from \"@angular/core\";\n\nimport {\n  BulmaIsToggleableDirective\n} from \"./bulma/bulma-is-toggleable.directive\";\nimport {IonIconComponent} from \"./ion-icon/ion-icon.component\";\n\n@NgModule({\n  declarations: [IonIconComponent, BulmaIsToggleableDirective],\n  imports: [],\n  exports: [IonIconComponent, BulmaIsToggleableDirective]\n})\nexport class WisdomModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                wisdom_modules/common/src/WisdomInterface.ts\n            \n            interface\n            WisdomInterface\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/bulma/bulma-is-toggleable.directive.ts\n            \n            directive\n            BulmaIsToggleableDirective\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/ion-icon/ion-icon.component.ts\n            \n            component\n            IonIconComponent\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/auth/auth-storage.service.ts\n            \n            injectable\n            AuthStorageService\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/auth/auth-storage.service.ts\n            \n            variable\n            ACCESS_TOKEN_KEY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/auth/auth-storage.service.ts\n            \n            variable\n            EXPIRES_IN_KEY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/auth/auth-storage.service.ts\n            \n            variable\n            REFRESH_TOKEN_KEY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/auth/auth-storage.service.ts\n            \n            variable\n            SCOPES_KEY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/auth/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/auth/auth.interceptor.ts\n            \n            interceptor\n            AuthInterceptor\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/auth/auth.interceptor.ts\n            \n            variable\n            TOKEN_HEADER_KEY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/auth/auth.service.ts\n            \n            variable\n            AUTH_URL\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/auth/auth.service.ts\n            \n            variable\n            httpOptions\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/auth/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/auth/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/auth/user.service.ts\n            \n            variable\n            AUTH_API\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/auth/user.service.ts\n            \n            variable\n            getOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/base-url.interceptor.ts\n            \n            interceptor\n            BaseUrlInterceptor\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/base-url.interceptor.ts\n            \n            variable\n            USE_API_URL\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/base-url.interceptor.ts\n            \n            variable\n            USE_BASE_URL\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/frame/frame.component.ts\n            \n            component\n            FrameComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/i18n/StaticLoader.ts\n            \n            class\n            StaticLoader\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/i18n/StaticLoader.ts\n            \n            variable\n            langs\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/i18n/lang-selector.directive.ts\n            \n            directive\n            LangSelectorDirective\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/module-provider.ts\n            \n            class\n            ModuleProvider\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/environments/environment.common.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/environments/environment.prod.ts\n            \n            variable\n            baseUrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/environments/environment.ts\n            \n            variable\n            baseUrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                wisdom_modules/example/src/lib/example.component.ts\n            \n            component\n            ExampleComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                wisdom_modules/example/src/lib/example.service.ts\n            \n            injectable\n            ExampleService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                wisdom_modules/example/src/public-api.ts\n            \n            variable\n            wisdomInterface\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~13.2.2\n        \n            @angular/common : ~13.2.2\n        \n            @angular/compiler : ~13.2.2\n        \n            @angular/core : ~13.2.2\n        \n            @angular/forms : ~13.2.2\n        \n            @angular/platform-browser : ~13.2.2\n        \n            @angular/platform-browser-dynamic : ~13.2.2\n        \n            @angular/router : ~13.2.2\n        \n            @ngx-translate/core : ^14.0.0\n        \n            bulma : ^0.9.3\n        \n            bulma-prefers-dark : ^0.1.0-beta.1\n        \n            path-browserify : ^1.0.1\n        \n            rxjs : ~7.5.4\n        \n            tslib : ^2.3.1\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_ExampleModule\n\n\n\ncluster_ExampleModule_declarations\n\n\n\ncluster_ExampleModule_exports\n\n\n\ncluster_WisdomModule\n\n\n\ncluster_WisdomModule_declarations\n\n\n\ncluster_WisdomModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nFrameComponent\n\nFrameComponent\n\nAppModule -->\n\nFrameComponent->AppModule\n\n\n\n\n\nLangSelectorDirective\n\nLangSelectorDirective\n\nAppModule -->\n\nLangSelectorDirective->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nWisdomModule\n\nWisdomModule\n\nAppModule -->\n\nWisdomModule->AppModule\n\n\n\n\n\nExampleModule\n\nExampleModule\n\nExampleModule -->\n\nWisdomModule->ExampleModule\n\n\n\n\n\nBulmaIsToggleableDirective \n\nBulmaIsToggleableDirective \n\nBulmaIsToggleableDirective  -->\n\nWisdomModule->BulmaIsToggleableDirective \n\n\n\n\n\nIonIconComponent \n\nIonIconComponent \n\nIonIconComponent  -->\n\nWisdomModule->IonIconComponent \n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nAppModule -->\n\nAuthInterceptor->AppModule\n\n\n\n\n\nBaseUrlInterceptor\n\nBaseUrlInterceptor\n\nAppModule -->\n\nBaseUrlInterceptor->AppModule\n\n\n\n\n\nExampleComponent\n\nExampleComponent\n\nExampleModule -->\n\nExampleComponent->ExampleModule\n\n\n\n\n\nExampleComponent \n\nExampleComponent \n\nExampleComponent  -->\n\nExampleModule->ExampleComponent \n\n\n\n\n\nBulmaIsToggleableDirective\n\nBulmaIsToggleableDirective\n\nWisdomModule -->\n\nBulmaIsToggleableDirective->WisdomModule\n\n\n\n\n\nIonIconComponent\n\nIonIconComponent\n\nWisdomModule -->\n\nIonIconComponent->WisdomModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        2 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ExampleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WisdomModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DeleteUsersId200   (wisdom_modules/.../DeleteUsersId200.ts)\n                        \n                        \n                            DeleteUsersId403   (wisdom_modules/.../DeleteUsersId403.ts)\n                        \n                        \n                            DeleteUsersId404   (wisdom_modules/.../DeleteUsersId404.ts)\n                        \n                        \n                            GetUsers200   (wisdom_modules/.../GetUsers200.ts)\n                        \n                        \n                            GetUsersId200   (wisdom_modules/.../GetUsersId200.ts)\n                        \n                        \n                            GetUsersId404   (wisdom_modules/.../GetUsersId404.ts)\n                        \n                        \n                            GetUsersMe200   (wisdom_modules/.../GetUsersMe200.ts)\n                        \n                        \n                            PatchUsers204   (wisdom_modules/.../PatchUsers204.ts)\n                        \n                        \n                            PatchUsers403   (wisdom_modules/.../PatchUsers403.ts)\n                        \n                        \n                            PatchUsers404   (wisdom_modules/.../PatchUsers404.ts)\n                        \n                        \n                            PatchUsersMe200   (wisdom_modules/.../PatchUsersMe200.ts)\n                        \n                        \n                            PostOAuthToken200   (wisdom_modules/.../PostOAuthToken200.ts)\n                        \n                        \n                            PostOAuthToken400   (wisdom_modules/.../PostOAuthToken400.ts)\n                        \n                        \n                            PostOAuthToken401   (wisdom_modules/.../PostOAuthToken401.ts)\n                        \n                        \n                            PostRevoke200   (wisdom_modules/.../PostRevoke200.ts)\n                        \n                        \n                            PostRevoke403   (wisdom_modules/.../PostRevoke403.ts)\n                        \n                        \n                            PutUsers201   (wisdom_modules/.../PutUsers201.ts)\n                        \n                        \n                            PutUsers409   (wisdom_modules/.../PutUsers409.ts)\n                        \n                        \n                            User   (wisdom_modules/.../User.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    wisdom_modules/core/src/app/auth/response_types/users/DeleteUsersId200.ts\n    \n    \n        \n            \n                \n                    \n                    DeleteUsersId200\n                \n            \n            \n                \n                    The user was deleted\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/users/DeleteUsersId403.ts\n    \n    \n        \n            \n                \n                    \n                    DeleteUsersId403\n                \n            \n            \n                \n                    Insufficient privileges to run this action\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/users/DeleteUsersId404.ts\n    \n    \n        \n            \n                \n                    \n                    DeleteUsersId404\n                \n            \n            \n                \n                    The user does not exist in the system\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/users/GetUsers200.ts\n    \n    \n        \n            \n                \n                    \n                    GetUsers200\n                \n            \n            \n                \n                            User[]\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/users/GetUsersId200.ts\n    \n    \n        \n            \n                \n                    \n                    GetUsersId200\n                \n            \n            \n                \n                    \nInformation about the User\n\n\n                \n            \n            \n                \n                            Omit\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/users/GetUsersId404.ts\n    \n    \n        \n            \n                \n                    \n                    GetUsersId404\n                \n            \n            \n                \n                    The user does not exist in the system\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/users/GetUsersMe200.ts\n    \n    \n        \n            \n                \n                    \n                    GetUsersMe200\n                \n            \n            \n                \n                    Information\n\n                \n            \n            \n                \n                            Omit\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/users/PatchUsers204.ts\n    \n    \n        \n            \n                \n                    \n                    PatchUsers204\n                \n            \n            \n                \n                    Successfully updated the user\n\n                \n            \n            \n                \n                            Omit\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/users/PatchUsers403.ts\n    \n    \n        \n            \n                \n                    \n                    PatchUsers403\n                \n            \n            \n                \n                    Insufficient privileges to update the users\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/users/PatchUsers404.ts\n    \n    \n        \n            \n                \n                    \n                    PatchUsers404\n                \n            \n            \n                \n                    The user does not exist and therefore cannot be updated\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/users/PatchUsersMe200.ts\n    \n    \n        \n            \n                \n                    \n                    PatchUsersMe200\n                \n            \n            \n                \n                    Successfully updated the user\n\n                \n            \n            \n                \n                            Omit\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/login/PostOAuthToken200.ts\n    \n    \n        \n            \n                \n                    \n                    PostOAuthToken200\n                \n            \n            \n                \n                    The user was authorized successfully\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/login/PostOAuthToken400.ts\n    \n    \n        \n            \n                \n                    \n                    PostOAuthToken400\n                \n            \n            \n                \n                    Bad request made\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/login/PostOAuthToken401.ts\n    \n    \n        \n            \n                \n                    \n                    PostOAuthToken401\n                \n            \n            \n                \n                    Unauthorized\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/login/PostRevoke200.ts\n    \n    \n        \n            \n                \n                    \n                    PostRevoke200\n                \n            \n            \n                \n                    Standard response\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/login/PostRevoke403.ts\n    \n    \n        \n            \n                \n                    \n                    PostRevoke403\n                \n            \n            \n                \n                    The scope of the current user is insufficient\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/users/PutUsers201.ts\n    \n    \n        \n            \n                \n                    \n                    PutUsers201\n                \n            \n            \n                \n                    The user was created successfully\n\n                \n            \n            \n                \n                            User\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/users/PutUsers409.ts\n    \n    \n        \n            \n                \n                    \n                    PutUsers409\n                \n            \n            \n                \n                    A user with the same data already exists\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/types/User.ts\n    \n    \n        \n            \n                \n                    \n                    User\n                \n            \n            \n                \n                    Representation of a user.\n\n                \n            \n            \n                \n                        Partial\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ACCESS_TOKEN_KEY   (wisdom_modules/.../auth-storage.service.ts)\n                        \n                        \n                            AUTH_API   (wisdom_modules/.../user.service.ts)\n                        \n                        \n                            AUTH_URL   (wisdom_modules/.../auth.service.ts)\n                        \n                        \n                            baseUrl   (wisdom_modules/.../environment.prod.ts)\n                        \n                        \n                            baseUrl   (wisdom_modules/.../environment.ts)\n                        \n                        \n                            environment   (wisdom_modules/.../environment.common.ts)\n                        \n                        \n                            environment   (wisdom_modules/.../environment.prod.ts)\n                        \n                        \n                            environment   (wisdom_modules/.../environment.ts)\n                        \n                        \n                            EXPIRES_IN_KEY   (wisdom_modules/.../auth-storage.service.ts)\n                        \n                        \n                            getOptions   (wisdom_modules/.../user.service.ts)\n                        \n                        \n                            httpOptions   (wisdom_modules/.../auth.service.ts)\n                        \n                        \n                            langs   (wisdom_modules/.../StaticLoader.ts)\n                        \n                        \n                            REFRESH_TOKEN_KEY   (wisdom_modules/.../auth-storage.service.ts)\n                        \n                        \n                            SCOPES_KEY   (wisdom_modules/.../auth-storage.service.ts)\n                        \n                        \n                            TOKEN_HEADER_KEY   (wisdom_modules/.../auth.interceptor.ts)\n                        \n                        \n                            USE_API_URL   (wisdom_modules/.../base-url.interceptor.ts)\n                        \n                        \n                            USE_BASE_URL   (wisdom_modules/.../base-url.interceptor.ts)\n                        \n                        \n                            wisdomInterface   (wisdom_modules/.../public-api.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    wisdom_modules/core/src/app/auth/auth-storage.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ACCESS_TOKEN_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"auth-token\"\n                    \n                \n\n            \n                \n                    Key for the access token.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        EXPIRES_IN_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"auth-expires-in\"\n                    \n                \n\n            \n                \n                    Key fo the expiration date.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        REFRESH_TOKEN_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"auth-refresh-token\"\n                    \n                \n\n            \n                \n                    Key for the refresh token.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SCOPES_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"auth-scopes\"\n                    \n                \n\n            \n                \n                    Key for the scopes.\n\n                \n            \n\n        \n    \n\n    wisdom_modules/core/src/app/auth/user.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AUTH_API\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"localhost:8090/auth/\"\n                    \n                \n\n            \n                \n                    Url for the interaction.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : {\n  responseType: \"json\"\n}\n                    \n                \n\n\n        \n    \n\n    wisdom_modules/core/src/app/auth/auth.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AUTH_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"auth\"\n                    \n                \n\n            \n                \n                    Url for the interaction.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        httpOptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : {\n  headers: new HttpHeaders({\n    \"Content-Type\": \"application/x-www-form-urlencoded\"\n  }),\n  responseType: \"json\",\n  context: new HttpContext().set(USE_API_URL, true)\n}\n                    \n                \n\n            \n                \n                    Options for the post request in the service.\nAs per reference the content type is always \"x-www-form-urlencoded\" instead\nof \"json\".\nThe response is a json though.\n\n                \n            \n\n        \n    \n\n    wisdom_modules/core/src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"https://wisdom-demo.uol.de/\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.assign({}, commonEnvironment, {\n  production: true,\n  baseUrl,\n  apiUrl: baseUrl + \"api/\"\n})\n                    \n                \n\n\n        \n    \n\n    wisdom_modules/core/src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : window.location.origin + \"/\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.assign({}, commonEnvironment, {\n  production: false,\n  baseUrl,\n  apiUrl: baseUrl + \"api/\"\n})\n                    \n                \n\n\n        \n    \n\n    wisdom_modules/core/src/environments/environment.common.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\n}\n                    \n                \n\n\n        \n    \n\n    wisdom_modules/core/src/app/i18n/StaticLoader.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        langs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  de_DE: Object.assign({}, de_DELang, ModuleProvider.langs(\"de_DE\")),\n  en_US: Object.assign({}, en_USLang, ModuleProvider.langs(\"en_US\"))\n}\n                    \n                \n\n\n        \n    \n\n    wisdom_modules/core/src/app/auth/auth.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TOKEN_HEADER_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Authorization\"\n                    \n                \n\n            \n                \n                    Key for the token.\n\n                \n            \n\n        \n    \n\n    wisdom_modules/core/src/app/base-url.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        USE_API_URL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new HttpContextToken(() => false)\n                    \n                \n\n            \n                \n                    HttpContextToken used to determine if the api url should be used.\nDefaults to false.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        USE_BASE_URL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new HttpContextToken(() => true)\n                    \n                \n\n            \n                \n                    HttpContextToken used to determine if the base url should be used.\nDefaults to true.\n\n                \n            \n\n        \n    \n\n    wisdom_modules/example/src/public-api.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        wisdomInterface\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WisdomInterface\n\n                    \n                \n                \n                    \n                        Default value : {\n  path: \"example\",\n  scopes: [\"example\"],\n  entryComponent: ExampleComponent,\n  translations: {\n    de_DE,\n    en_US\n  }\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
