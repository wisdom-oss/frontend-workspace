var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.662,1,1.3]],["body/components/AppComponent.html",[0,1.199,1,2.262,2,2.139,3,0.181,4,0.181,5,1.682,6,1.682,7,1.682,8,0.163,9,3.717,10,0.433,11,2.78,12,3.519,13,4.933,14,4.435,15,4.435,16,1.97,17,2.863,18,1.426,19,2.908,20,1.554,21,2.55,22,5.689,23,0.279,24,1.182,25,7.078,26,0.774,27,3.953,28,0.847,29,4.287,30,4.063,31,4.435,32,1.961,33,5.689,34,2.957,35,3.001,36,5.689,37,6.386,38,5.537,39,0.667,40,0.015,41,1.748,42,0.321,43,0.61,44,1.127,45,3.519,46,4.435,47,4.287,48,4.933,49,0.318,50,0.3,51,3.717,52,3.717,53,3.717,54,3.717,55,2.116,56,0.181,57,0.219,58,1.485,59,4.287,60,4.287,61,4.287,62,1.682,63,2.232,64,1.892,65,1.37,66,2.668,67,1.682,68,0.495,69,1.682,70,1.426,71,1.682,72,1.426,73,1.682,74,1.37,75,2.668,76,1.426,77,1.682,78,1.426,79,1.682,80,1.37,81,1.37,82,1.682,83,1.317,84,1.547,85,1.682,86,1.426,87,1.682,88,1.37,89,1.682,90,1.317,91,1.682,92,1.37,93,1.171,94,1.485,95,2.232,96,1.37,97,1.426,98,1.682,99,0.789,100,1.426,101,1.682,102,1.682,103,1.37,104,1.266,105,1.547,106,1.612,107,1.485,108,1.37,109,1.682,110,1.37,111,1.612,112,1.682,113,0.011,114,0.011]],["title/modules/AppModule.html",[115,1.674,116,2.792]],["body/modules/AppModule.html",[1,2.558,3,0.163,4,0.163,8,0.146,11,1.392,40,0.015,49,0.374,50,0.27,56,0.163,57,0.198,78,2.346,81,2.254,86,2.346,88,2.254,100,2.346,110,2.254,113,0.01,114,0.01,116,5.839,117,1.814,118,2.908,119,3.347,120,3.347,121,3.347,122,3.347,123,3.347,124,4.67,125,3.871,126,4.67,127,4.67,128,4.67,129,4.363,130,4.67,131,4.67,132,3.081,133,2.006,134,2.118,135,3.86,136,3.508,137,5.3,138,3.278,139,5.3,140,5.3,141,7.226,142,1.284,143,3.278,144,5.3,145,3.009,146,5.3,147,3.347,148,2.757,149,4.596,150,2.555,151,1.906,152,1.906,153,1.234,154,3.86,155,3.86,156,3.347,157,3.86,158,2.555,159,5.3,160,3.86,161,3.347,162,3.86,163,2.757,164,3.86,165,3.86,166,3.86,167,3.785,168,3.86,169,2.616,170,3.86,171,3.86,172,3.86,173,3.347,174,3.86,175,3.86,176,3.86,177,3.86,178,3.009,179,5.633,180,7.226,181,7.055,182,2.254]],["title/modules/AppRoutingModule.html",[115,1.674,124,2.588]],["body/modules/AppRoutingModule.html",[0,1.139,3,0.236,4,0.236,8,0.212,34,3.75,40,0.015,49,0.368,50,0.39,56,0.236,57,0.286,81,2.148,88,2.148,113,0.013,114,0.013,115,2.389,117,2.622,124,4.45,138,3.451,143,4.158,156,4.838,161,4.838,183,5.58,184,5.58,185,5.24,186,4.462,187,1.524,188,4.45,189,4.838,190,3.693,191,4.838,192,4.776,193,4.838,194,2.013,195,4.45,196,4.349,197,5.58,198,3.451,199,4.349,200,5.58,201,3.984]],["title/guards/AuthGuard.html",[188,2.588,202,2.145]],["body/guards/AuthGuard.html",[3,0.142,4,0.142,8,0.128,10,0.486,16,1.166,20,0.92,23,0.219,26,0.655,28,0.717,34,1.75,39,0.524,40,0.016,42,0.361,49,0.303,50,0.236,56,0.142,57,0.172,68,0.337,99,0.62,113,0.009,114,0.009,148,3.44,182,1.076,187,0.92,188,3.188,195,4.298,198,4.398,202,2.643,203,2.229,204,2.92,205,4.817,206,3.706,207,4.817,208,3.755,209,5.309,210,2.8,211,5.163,212,3.755,213,6.137,214,4.966,215,4.817,216,3.19,217,1.225,218,2.92,219,3.567,220,4.398,221,3.009,222,3.368,223,0.717,224,0.655,225,4.016,226,3.722,227,2.8,228,3.755,229,1.001,230,1.973,231,2.264,232,3.367,233,2.115,234,2.84,235,3.755,236,2.92,237,3.796,238,4.784,239,4.784,240,3.368,241,4.177,242,4.817,243,4.817,244,4.817,245,3.755,246,3.755,247,2.8,248,4.177,249,4.817,250,2.643,251,1.738,252,4.383,253,1.597,254,3.722,255,2.264,256,0.54,257,2.625,258,0.728,259,2.405,260,2.92,261,0.957,262,1.46,263,1.315,264,2.083,265,2.625,266,3.368,267,3.368,268,1.106,269,4.817,270,3.368,271,3.368,272,3.368,273,2.92,274,3.368,275,2.405,276,1.75,277,3.368,278,2.92,279,3.755,280,2.625,281,2.92,282,1.663,283,1.218,284,3.368,285,3.368,286,2.503,287,2.229,288,3.368,289,3.368,290,2.92,291,4.817,292,5.624,293,2.378,294,2.92,295,3.368,296,1.51,297,3.368,298,1.957,299,3.368,300,2.92,301,3.368,302,6.137,303,2.92,304,3.368,305,4.177,306,2.92,307,3.368,308,3.368,309,3.368,310,2.083,311,3.368,312,3.368,313,2.92,314,3.368,315,2.92,316,3.368,317,3.368,318,3.368,319,3.368,320,4.177,321,1.957,322,2.229,323,3.368,324,2.92,325,2.92,326,3.368]],["title/interceptors/AuthInterceptor.html",[126,2.588,327,1.674]],["body/interceptors/AuthInterceptor.html",[3,0.191,4,0.191,8,0.172,10,0.662,16,1.568,23,0.295,26,0.802,28,0.878,39,0.704,40,0.015,42,0.441,49,0.324,50,0.317,56,0.191,57,0.232,68,0.412,113,0.011,114,0.011,126,3.903,142,1.506,194,2.127,211,5.15,217,1.309,218,3.926,219,4.038,223,0.878,224,0.802,225,4.684,226,3.903,227,3.427,228,4.597,232,2.484,253,1.863,256,0.661,258,0.979,259,3.233,262,1.475,268,0.704,279,3.529,286,3.839,321,2.631,322,2.997,327,2.526,328,2.8,329,3.529,330,5.416,331,5.687,332,3.488,333,4.056,334,4.528,335,2.8,336,4.568,337,4.297,338,4.528,339,5.897,340,6.558,341,5.897,342,3.903,343,3.903,344,5.897,345,2.8,346,3.647,347,3.529,348,1.506,349,3.529,350,1.703,351,5.897,352,4.528,353,3.529,354,5.897,355,3.926,356,4.528,357,1.855,358,4.528,359,4.528,360,3.233,361,3.926]],["title/injectables/AuthService.html",[220,2.418,256,0.438]],["body/injectables/AuthService.html",[3,0.15,4,0.15,8,0.135,10,0.694,20,0.972,23,0.232,26,0.681,28,0.987,34,1.849,39,0.979,40,0.015,42,0.529,43,1.103,49,0.33,50,0.249,56,0.15,57,0.182,68,0.464,113,0.009,114,0.009,142,1.183,153,1.137,182,1.137,194,1.807,198,3.097,206,3.958,209,3.576,211,5.252,214,4.492,217,1.157,220,3.097,223,0.987,224,0.902,229,1.204,232,3.18,233,1.883,246,3.904,247,2.911,253,2.007,256,0.561,258,0.769,261,1.01,262,1.546,265,2.773,268,0.979,282,2.472,283,1.738,287,2.355,332,1.595,350,1.338,357,1.457,362,1.338,363,2.773,364,4.342,365,5.008,366,4.518,367,4.342,368,5.008,369,1.952,370,2.82,371,3.558,372,2.179,373,3.904,374,2.911,375,5.008,376,5.623,377,3.558,378,5.008,379,5.168,380,5.008,381,3.558,382,5.008,383,5.008,384,3.558,385,5.008,386,5.008,387,3.558,388,2.748,389,2.245,390,2.145,391,4.518,392,2.541,393,1.524,394,2.541,395,2.355,396,3.085,397,3.085,398,3.558,399,3.085,400,3.558,401,1.338,402,2.773,403,2.773,404,3.085,405,1.952,406,2.145,407,2.773,408,3.085,409,4.342,410,2.911,411,4.342,412,3.085,413,2.482,414,3.085,415,4.734,416,3.558,417,3.085,418,1.524,419,1.396,420,1.672,421,3.085,422,1.965,423,3.085,424,6.29,425,6.29,426,5.008,427,5.008,428,5.008,429,3.558,430,5.008,431,5.008,432,3.558]],["title/injectables/AuthStorageService.html",[219,2.272,256,0.438]],["body/injectables/AuthStorageService.html",[3,0.122,4,0.122,8,0.109,10,0.615,20,0.788,23,0.188,26,0.585,28,1.071,31,3.352,39,1.156,40,0.016,41,2.035,42,0.479,43,1.111,44,1.89,49,0.135,50,0.202,56,0.122,57,0.263,68,0.447,99,1.123,113,0.008,114,0.008,194,2.056,210,3.544,211,5.144,214,4.567,219,2.499,223,0.952,224,0.87,226,4.233,229,0.893,232,3.509,233,1.617,251,2.627,256,0.482,261,0.819,262,1.282,263,1.495,268,0.995,296,2.556,300,3.729,321,1.676,348,2.315,362,1.084,433,5.677,434,2.059,435,3.729,436,2.359,437,4.071,438,4.567,439,3.729,440,3.729,441,2.359,442,5.143,443,6.098,444,5.143,445,5.305,446,2.5,447,5.545,448,3.509,449,2.846,450,3.729,451,2.883,452,3.773,453,4.3,454,4.353,455,3.697,456,2.883,457,2.883,458,2.5,459,2.883,460,2.883,461,7.191,462,2.883,463,2.883,464,5.288,465,4.985,466,1.81,467,2.883,468,2.883,469,4.3,470,5.143,471,4.3,472,2.883,473,2.883,474,2.883,475,2.5,476,2.883,477,2.883,478,2.883,479,2.883,480,4.009,481,2.5,482,4.009,483,2.5,484,4.009,485,4.009,486,2.883,487,2.883,488,2.5,489,2.883,490,2.883,491,3.729,492,2.5,493,2.5,494,2.883,495,4.3,496,2.883,497,2.883,498,2.883,499,2.883,500,3.352,501,2.883,502,2.883,503,2.883,504,2.883,505,2.883,506,2.883,507,2.883,508,2.883]],["title/interceptors/BaseUrlInterceptor.html",[127,2.588,327,1.674]],["body/interceptors/BaseUrlInterceptor.html",[3,0.207,4,0.207,8,0.185,10,0.625,16,1.692,23,0.318,26,0.842,28,0.727,39,0.76,40,0.015,42,0.366,49,0.344,50,0.342,56,0.207,57,0.348,68,0.342,113,0.012,114,0.012,127,4.099,142,1.625,153,1.561,158,4.883,223,0.727,224,0.665,230,2.537,253,1.931,256,0.694,258,1.056,262,1.392,268,0.76,286,3.917,328,3.021,332,3.432,333,4.205,335,3.021,336,4.421,337,4.421,343,4.099,345,3.021,346,3.83,374,3.599,393,2.092,401,2.963,509,5.369,510,3.808,511,7.377,512,4.885,513,6.193,514,5.573,515,4.236,516,3.808,517,4.885,518,7.149,519,4.885,520,4.885,521,4.885,522,4.885,523,4.885,524,2.539,525,4.885,526,4.885]],["title/components/BimComponent.html",[0,0.662,70,1.3]],["body/components/BimComponent.html",[0,0.686,1,0.66,2,1.208,3,0.084,4,0.084,5,1.261,6,0.778,7,0.778,8,0.177,11,1.976,16,1.113,18,0.66,19,2.622,23,0.129,24,0.668,26,0.437,28,1.183,32,0.609,39,0.5,40,0.015,41,1.244,42,0.593,43,0.458,44,0.521,49,0.189,50,0.139,56,0.084,57,0.102,62,0.778,63,1.261,64,1.069,65,0.634,66,1.827,67,0.778,68,0.383,69,0.778,70,1.549,71,0.778,72,0.66,73,0.778,74,0.634,75,1.827,76,0.66,77,0.778,78,0.66,79,0.778,80,0.634,81,0.634,82,0.778,83,0.609,84,0.716,85,0.778,86,0.66,87,0.778,88,0.634,89,0.778,90,0.609,91,0.778,92,0.634,93,0.542,94,0.687,95,1.261,96,0.634,97,0.66,98,0.778,99,0.365,100,0.66,101,0.778,102,0.778,103,0.634,104,0.586,105,0.716,106,0.746,107,0.687,108,0.634,109,0.778,110,0.634,111,0.746,112,0.778,113,0.006,114,0.006,217,0.396,223,0.295,224,0.27,229,0.668,263,1.281,268,0.309,276,1.031,283,1.989,293,2,321,1.153,350,0.746,466,0.878,527,1.72,528,2.681,529,3.214,530,4.051,531,4.051,532,5.117,533,5.477,534,4.657,535,3.326,536,2.127,537,3.214,538,4.051,539,2.786,540,2.893,541,4.051,542,4.051,543,4.051,544,4.051,545,4.051,546,4.051,547,4.051,548,4.051,549,4.051,550,4.051,551,4.051,552,4.051,553,4.051,554,4.051,555,4.051,556,4.051,557,4.051,558,4.051,559,4.051,560,4.051,561,4.051,562,4.051,563,4.051,564,4.051,565,4.051,566,4.051,567,4.051,568,4.051,569,4.051,570,4.051,571,4.051,572,4.051,573,4.051,574,4.051,575,4.051,576,4.051,577,4.051,578,4.051,579,4.051,580,4.051,581,1.153,582,3.326,583,3.214,584,3.214,585,1.984,586,1.984,587,6.347,588,1.984,589,1.984,590,1.984,591,1.984,592,1.984,593,1.984,594,1.984,595,1.984,596,1.984,597,1.984,598,1.984,599,1.984,600,1.984,601,1.984,602,1.984,603,1.984,604,1.984,605,1.984,606,1.984,607,1.984,608,1.984,609,1.984,610,1.984,611,1.984,612,1.984,613,1.984,614,1.984,615,1.984,616,1.984,617,1.984,618,1.984,619,1.984,620,1.984,621,1.984,622,1.984,623,1.984,624,1.984,625,1.984,626,1.984,627,1.984,628,1.984,629,1.984,630,1.984,631,1.984,632,3.654,633,1.868,634,1.984,635,1.984,636,1.984,637,1.984,638,1.984,639,1.153,640,6.126,641,1.313,642,1.984,643,1.984,644,1.984,645,1.984,646,1.72,647,1.984,648,1.984,649,1.984,650,1.984,651,1.984,652,1.984,653,1.546,654,1.984,655,1.984,656,1.984,657,1.984,658,1.984,659,1.984,660,1.984,661,1.984,662,1.984,663,1.984,664,1.227,665,1.546,666,1.984,667,1.984,668,3.214,669,1.984,670,3.214,671,1.984,672,1.984,673,1.984,674,1.984,675,1.984,676,1.984,677,1.546,678,1.72,679,1.313,680,1.984,681,1.984,682,3.214,683,1.984,684,1.984,685,1.546,686,1.984,687,1.984,688,6.116,689,1.984,690,1.984,691,1.984,692,1.984,693,1.984,694,1.984,695,1.984,696,1.984,697,1.984,698,1.984,699,1.984,700,1.984,701,1.984,702,1.984,703,1.984,704,1.984,705,1.984,706,1.984,707,1.984,708,1.984,709,1.984,710,1.984,711,1.984,712,1.984,713,1.984,714,1.984,715,1.984,716,1.984,717,1.984,718,1.984,719,1.984,720,1.984,721,1.984,722,1.984,723,1.984,724,1.984,725,1.984,726,1.984,727,1.984,728,1.984,729,1.984,730,1.984,731,1.984,732,1.984,733,1.984,734,1.984,735,1.984,736,1.984,737,1.984,738,1.984,739,1.984,740,1.984,741,1.984,742,1.984,743,1.984,744,1.984,745,1.984,746,1.984,747,1.984,748,1.984,749,1.984,750,1.984,751,1.984,752,1.984,753,1.984,754,1.984,755,1.984,756,1.984,757,1.984,758,1.984,759,1.984,760,1.984,761,1.984,762,1.984,763,1.984,764,1.984,765,1.984,766,1.984,767,1.984,768,1.984,769,1.984,770,1.984]],["title/injectables/BimService.html",[256,0.438,582,2.792]],["body/injectables/BimService.html",[3,0.228,4,0.228,8,0.205,20,1.476,23,0.352,26,0.897,28,0.982,39,0.841,40,0.015,42,0.494,43,1.013,49,0.346,50,0.378,56,0.228,57,0.277,68,0.461,113,0.012,114,0.012,142,1.797,169,2.667,217,1.079,223,0.982,224,0.897,256,0.739,258,1.168,261,1.535,268,0.841,283,1.366,350,2.032,362,2.032,369,2.964,370,3.321,372,2.676,389,2.956,418,2.314,419,2.586,582,4.708,678,4.685,771,4.685,772,6.593,773,5.403,774,6.593,775,5.403,776,5.403,777,4.077,778,3.859,779,2.314,780,3.576,781,5.403,782,5.403,783,5.403]],["title/interfaces/Breadcrumb.html",[784,1.027,785,2.588]],["body/interfaces/Breadcrumb.html",[3,0.177,4,0.177,8,0.159,10,0.422,20,1.142,23,0.457,24,1.163,40,0.015,42,0.504,43,1.122,44,1.657,49,0.295,50,0.293,55,3.701,56,0.237,57,0.214,58,2.714,64,1.861,68,0.471,83,1.719,113,0.01,114,0.01,187,1.142,216,2.174,221,2.759,223,0.833,224,1.02,229,0.869,230,1.713,237,2.586,251,2.429,253,1.791,254,2.768,256,0.627,258,0.904,261,1.188,262,1.258,263,0.978,268,0.651,276,2.908,283,1.414,466,1.142,784,1.657,785,5.078,786,1.966,787,3.26,788,6.651,789,4.468,790,3.695,791,4.165,792,4.852,793,4.165,794,3.901,795,3.996,796,3.253,797,3.461,798,4.175,799,4.504,800,3.26,801,3.461,802,2.295,803,2.768,804,4.916,805,3.626,806,3.626,807,3.626,808,1.641,809,3.626,810,3.626,811,2.431,812,3.626,813,3.626,814,4.362,815,3.626]],["title/components/BreadcrumbsComponent.html",[0,0.662,72,1.3]],["body/components/BreadcrumbsComponent.html",[0,1.225,1,1.114,2,1.804,3,0.142,4,0.142,5,1.314,6,1.314,7,1.314,8,0.127,10,0.484,11,2.432,16,1.661,17,2.513,18,1.114,19,2.834,21,2.15,23,0.218,24,0.997,26,0.653,27,3.558,28,1.057,30,3.426,32,1.474,39,0.872,40,0.015,41,1.88,42,0.42,44,1.261,49,0.262,50,0.234,56,0.142,57,0.171,58,1.661,62,1.314,63,1.882,64,1.595,65,1.07,66,2.401,67,1.314,68,0.472,69,1.314,70,1.114,71,1.314,72,2.036,73,1.314,74,1.07,75,2.401,76,1.114,77,1.314,78,1.114,79,1.314,80,1.07,81,1.07,82,1.314,83,1.029,84,1.208,85,1.314,86,1.114,87,1.314,88,1.07,89,1.314,90,1.029,91,1.314,92,1.07,93,0.915,94,1.159,95,1.882,96,1.07,97,1.114,98,1.314,99,0.616,100,1.114,101,1.314,102,1.314,103,1.07,104,0.989,105,2.337,106,1.259,107,1.159,108,1.07,109,1.314,110,1.07,111,1.259,112,1.314,113,0.009,114,0.009,182,1.533,216,3.181,217,1.119,223,0.499,224,0.456,229,1.502,247,2.788,251,2.208,252,3.426,255,2.877,258,0.724,262,0.753,263,1.311,268,0.872,282,2.368,286,1.74,310,2.967,350,1.259,422,2.542,455,3.022,581,1.946,785,4.785,790,2.632,791,3.786,801,4.392,802,3.699,804,5.788,808,2.401,814,3.739,816,2.903,817,4.797,818,4.797,819,4.159,820,4.159,821,4.797,822,3.175,823,4.797,824,5.605,825,4.797,826,6.942,827,6.121,828,6.121,829,4.797,830,3.349,831,4.159,832,3.739,833,4.797,834,4.159,835,3.349,836,4.797,837,4.797,838,4.797,839,4.797,840,4.797,841,3.349,842,3.739,843,4.159,844,3.349,845,2.788,846,3.349,847,3.349,848,3.349,849,3.349,850,4.797,851,3.349,852,3.349,853,3.349,854,2.632]],["title/injectables/BreadcrumbsService.html",[256,0.438,802,2.145]],["body/injectables/BreadcrumbsService.html",[3,0.172,4,0.172,8,0.155,10,0.555,20,1.114,23,0.485,24,1.143,26,0.748,28,0.992,32,1.69,39,0.856,40,0.015,41,1.252,42,0.466,43,0.991,44,1.926,49,0.291,50,0.285,55,3.073,56,0.233,57,0.209,58,2.581,64,1.356,68,0.435,83,1.252,113,0.01,114,0.01,187,1.114,216,2.859,221,2.254,223,0.819,224,0.847,229,1.143,230,2.254,237,2.521,251,2.644,253,1.977,254,2.698,256,0.617,258,0.881,261,1.158,262,1.237,263,1.456,268,0.634,276,2.119,283,1.685,362,1.533,466,1.701,784,1.445,785,5.222,787,3.178,788,6.463,789,3.402,790,2.237,791,3.402,792,3.535,793,3.402,794,3.85,795,2.911,796,2.369,797,2.521,798,4.607,799,5.121,800,4.288,801,4.304,802,3.018,803,3.641,804,5.714,805,3.535,806,4.77,807,4.77,808,2.158,809,4.77,810,3.535,811,2.369,812,3.535,813,3.535,814,5.59,815,3.535,855,4.077,856,4.077,857,4.077,858,4.077]],["title/directives/BulmaIsToggleableDirective.html",[65,1.249,108,1.249]],["body/directives/BulmaIsToggleableDirective.html",[3,0.173,4,0.173,8,0.156,10,0.414,18,1.363,19,1.992,23,0.267,24,1.147,26,0.751,28,1.093,32,1.696,39,0.971,40,0.015,41,1.696,42,0.5,43,1.063,44,1.451,49,0.191,50,0.287,56,0.173,57,0.382,65,2.295,68,0.287,107,1.42,108,1.765,113,0.01,114,0.01,223,0.61,224,0.558,251,2.252,255,2.595,263,1.68,268,0.638,296,2.799,373,4.304,395,2.714,422,2.166,441,3.029,536,3.655,540,3.943,633,2.383,639,2.383,859,6.472,860,3.555,861,5.522,862,6.681,863,4.304,864,4.788,865,7.767,866,6.557,867,5.895,868,5.506,869,6.244,870,4.788,871,6.244,872,5.522,873,7.896,874,5.522,875,6.244,876,6.244,877,3.555,878,4.1,879,4.1,880,2.726,881,4.1,882,4.1,883,4.1,884,4.1,885,3.555,886,4.1,887,4.1,888,4.1,889,4.1,890,4.1,891,4.1,892,3.555,893,6.244,894,4.1,895,5.522,896,4.1]],["title/interceptors/CacheInterceptor.html",[128,2.588,327,1.674]],["body/interceptors/CacheInterceptor.html",[3,0.17,4,0.17,8,0.153,10,0.55,16,1.392,23,0.262,24,1.132,26,0.741,28,0.92,32,1.674,39,0.625,40,0.015,42,0.463,44,1.432,49,0.309,50,0.281,56,0.17,57,0.206,58,1.392,68,0.281,93,2.115,113,0.01,114,0.01,128,3.607,142,1.337,153,1.285,223,0.599,224,0.547,233,2.492,250,2.99,251,1.966,253,1.756,256,0.611,258,0.869,262,1.225,263,1.67,268,0.962,283,1.675,286,3.712,322,3.607,327,2.838,328,2.486,332,3.274,333,4.284,335,2.486,336,4.099,337,4.099,343,3.607,345,2.486,346,3.37,347,3.134,348,1.337,357,2.926,360,2.871,372,2.049,374,3.167,390,1.722,392,4.733,419,2.138,422,1.577,436,2.99,897,3.486,898,4.415,899,3.892,900,5.449,901,3.892,902,7.304,903,4.733,904,7.142,905,6.182,906,6.182,907,4.02,908,5.36,909,5.449,910,5.449,911,4.819,912,6.182,913,5.449,914,4.02,915,6.627,916,5.449,917,4.02,918,5.449,919,4.248,920,4.248,921,4.02,922,4.02,923,4.02,924,4.02,925,4.02,926,3.134,927,4.02,928,4.02,929,5.449,930,7.142,931,4.02,932,3.486,933,4.02,934,4.02,935,3.134,936,4.02,937,4.02,938,4.02,939,4.02]],["title/components/ConsumerDetailComponent.html",[0,0.662,74,1.249]],["body/components/ConsumerDetailComponent.html",[0,0.887,1,0.988,2,1.654,3,0.126,4,0.126,5,1.166,6,1.166,7,1.166,8,0.113,11,2.333,16,1.523,17,2.347,18,0.988,19,2.792,21,1.971,23,0.194,24,0.914,26,0.598,27,3.363,28,1.091,32,1.897,39,0.814,40,0.015,41,1.897,42,0.534,43,0.921,44,1.623,49,0.321,50,0.208,55,1.467,56,0.126,57,0.152,58,1.029,62,1.166,63,1.725,64,1.463,65,0.95,66,2.27,67,1.166,68,0.527,69,1.166,70,0.988,71,1.166,72,0.988,73,1.166,74,1.849,75,2.537,76,2.054,77,1.166,78,0.988,79,1.166,80,0.95,81,0.95,82,1.166,83,0.913,84,1.072,85,1.166,86,0.988,87,1.166,88,0.95,89,1.166,90,2.055,91,1.166,92,0.95,93,1.201,94,1.029,95,1.725,96,0.95,97,0.988,98,1.166,99,1.065,100,0.988,101,1.166,102,1.166,103,0.95,104,0.878,105,1.072,106,1.969,107,1.029,108,0.95,109,1.166,110,0.95,111,1.118,112,1.166,113,0.008,114,0.008,153,0.95,187,0.812,217,0.878,223,0.655,224,0.88,234,1.725,258,0.642,263,1.565,283,1.112,466,1.201,500,3.428,528,3.465,535,4.132,633,1.727,641,1.967,790,1.63,798,3.465,801,3.238,802,3.174,940,2.905,941,2.954,942,5.772,943,5.772,944,5.772,945,2.317,946,3.813,947,6.466,948,3.21,949,5.235,950,4.088,951,3.999,952,5.355,953,4.398,954,2.577,955,3.83,956,5.235,957,4.132,958,5.235,959,4.132,960,4.398,961,4.398,962,4.51,963,2.972,964,2.972,965,2.972,966,2.972,967,4.398,968,2.972,969,4.081,970,2.577,971,2.577,972,2.317,973,2.972,974,2.577,975,2.972,976,2.972,977,2.972,978,2.577,979,2.972,980,3.428,981,2.317,982,2.317,983,4.398,984,2.972,985,2.972,986,3.813,987,2.972,988,2.972,989,2.972,990,2.972,991,2.972,992,2.972,993,2.972,994,2.577,995,2.972,996,2.577,997,2.972,998,2.972,999,2.972,1000,2.317,1001,1.467,1002,2.972,1003,2.577,1004,2.972,1005,2.972,1006,2.972,1007,2.317,1008,2.972,1009,2.972,1010,2.972,1011,2.972,1012,2.972,1013,2.972]],["title/injectables/ConsumersService.html",[256,0.438,957,2.792]],["body/injectables/ConsumersService.html",[3,0.202,4,0.202,8,0.181,14,3.721,20,1.304,23,0.311,24,0.992,26,0.83,28,0.908,39,0.743,40,0.015,42,0.561,43,0.869,49,0.342,50,0.334,56,0.258,57,0.244,68,0.512,113,0.011,114,0.011,142,1.587,153,1.525,182,1.95,187,1.304,194,1.722,217,1.218,221,3.12,223,0.908,224,0.83,253,2.013,256,0.684,258,1.032,261,1.356,263,1.427,268,0.743,283,1.542,357,1.955,362,1.795,369,2.619,370,3.177,372,2.294,389,2.735,390,2.613,393,2.044,401,1.795,406,2.044,413,2.044,418,2.044,419,1.873,420,2.243,466,1.837,779,2.044,793,2.952,940,2.638,941,2.638,948,2.481,950,3.159,957,4.357,962,3.721,1001,2.356,1014,3.409,1015,6.102,1016,4.773,1017,6.102,1018,5.243,1019,4.773,1020,2.243,1021,4.139,1022,4.773,1023,3.721,1024,5.29,1025,4.139,1026,6.102,1027,4.773,1028,6.102,1029,4.773,1030,2.774,1031,2.356,1032,2.481]],["title/interfaces/Error.html",[293,1.93,784,1.027]],["body/interfaces/Error.html",[3,0.212,4,0.212,8,0.191,10,0.695,12,3.105,23,0.327,24,1.309,40,0.015,42,0.568,43,1.151,56,0.212,68,0.505,113,0.012,114,0.012,224,1.077,227,2.918,293,4.012,298,4.411,372,2.715,452,5.024,466,1.881,664,3.105,784,1.319,786,2.36,808,1.97,1033,4.353,1034,3.914,1035,5.02,1036,5.628,1037,5.628,1038,5.628,1039,5.628]],["title/components/ErrorComponent.html",[0,0.662,78,1.3]],["body/components/ErrorComponent.html",[0,1.156,1,1.051,2,1.73,3,0.195,4,0.134,5,1.239,6,1.239,7,1.239,8,0.12,10,0.601,11,2.522,12,2.845,17,1.416,18,1.051,19,2.814,21,2.062,23,0.206,24,0.956,26,0.626,28,1.061,32,1.413,39,0.716,40,0.015,41,0.97,42,0.534,43,1.056,44,0.83,49,0.253,50,0.221,56,0.134,57,0.162,62,1.239,63,1.805,64,1.53,65,1.01,66,2.337,67,1.239,68,0.519,69,1.239,70,1.051,71,1.239,72,1.051,73,1.239,74,1.01,75,2.337,76,1.051,77,1.239,78,1.981,79,1.239,80,1.01,81,1.01,82,1.239,83,0.97,84,1.14,85,1.239,86,1.051,87,1.239,88,1.01,89,1.239,90,0.97,91,1.239,92,1.01,93,0.863,94,1.094,95,1.805,96,1.01,97,1.051,98,1.239,99,0.582,100,1.051,101,1.239,102,1.239,103,1.01,104,0.933,105,1.14,106,1.188,107,1.094,108,1.01,109,1.239,110,1.01,111,1.188,112,1.239,113,0.009,114,0.009,182,1.01,216,2.39,217,1.19,223,0.47,224,0.998,229,1.452,255,2.162,262,1.034,263,1.076,268,1.061,290,3.988,293,3.818,296,2.062,298,3.841,325,3.988,372,2.485,422,2.128,441,2.524,452,4.374,466,1.257,664,2.845,800,3.586,808,1.805,845,2.673,863,3.586,1036,4.936,1037,4.936,1038,4.936,1039,4.936,1040,2.739,1041,3.586,1042,4.6,1043,3.988,1044,4.6,1045,6.332,1046,5.424,1047,5.958,1048,5.424,1049,3.159,1050,5.556,1051,3.944,1052,3.159,1053,3.586,1054,4.6,1055,4.644,1056,3.285,1057,3.159,1058,4.6,1059,3.159,1060,3.159,1061,3.159,1062,3.159,1063,3.159,1064,3.159,1065,3.586,1066,3.159,1067,3.159,1068,3.586,1069,3.988,1070,1.954,1071,2.739,1072,4.6,1073,3.159,1074,2.739,1075,3.988,1076,3.159,1077,3.159,1078,3.159,1079,3.159,1080,3.159,1081,5.424,1082,4.6,1083,3.159,1084,4.6,1085,4.6,1086,6.332,1087,3.159,1088,3.159,1089,3.159,1090,3.159,1091,3.159,1092,3.586]],["title/interceptors/ErrorInterceptor.html",[129,2.418,327,1.674]],["body/interceptors/ErrorInterceptor.html",[3,0.183,4,0.183,8,0.164,10,0.647,16,1.498,23,0.282,26,0.779,28,0.852,39,0.673,40,0.015,42,0.428,49,0.332,50,0.303,56,0.183,57,0.221,58,1.982,64,1.903,68,0.4,113,0.011,114,0.011,129,3.539,142,1.439,153,1.382,216,2.974,217,1.28,223,0.852,224,0.779,229,1.475,251,2.064,253,1.822,256,0.642,257,4.461,258,0.935,262,1.442,268,0.998,282,2.825,283,1.093,286,3.791,293,3.505,327,3.124,328,2.675,332,3.335,333,4.39,335,2.675,336,4.221,337,4.221,345,2.675,346,3.539,350,1.627,372,2.567,394,3.089,419,2.245,581,2.514,796,3.326,903,4.087,911,4.461,926,3.372,1036,3.372,1037,3.372,1038,3.372,1039,3.372,1043,4.962,1051,5,1056,5.209,1071,3.75,1093,3.75,1094,5.723,1095,4.962,1096,5.723,1097,4.325,1098,5.918,1099,4.325,1100,5.723,1101,4.962,1102,4.325,1103,4.325,1104,4.325,1105,4.325,1106,4.325,1107,4.325,1108,4.325,1109,4.325,1110,4.325,1111,4.325,1112,4.325,1113,4.325,1114,4.325,1115,4.325,1116,4.325,1117,4.325,1118,4.325]],["title/injectables/ErrorService.html",[256,0.438,1051,2.588]],["body/injectables/ErrorService.html",[3,0.19,4,0.19,8,0.171,10,0.66,20,1.229,23,0.293,24,1.22,26,0.799,28,0.974,32,1.382,39,0.7,40,0.015,41,1.382,42,0.44,44,1.182,49,0.305,50,0.315,56,0.19,57,0.23,58,2.4,68,0.411,113,0.011,114,0.011,129,4.287,133,3.052,187,1.229,217,1.305,221,3.155,223,0.874,224,0.799,229,1.44,230,2.406,251,2.119,256,0.658,257,4.578,261,1.278,262,1.321,283,1.485,293,3.943,306,5.093,343,3.888,350,1.692,360,5.501,362,1.692,422,2.304,587,5.097,640,3.508,845,3.414,880,2.899,935,3.508,955,2.978,1051,3.888,1056,4.95,1098,6.01,1119,3.901,1120,5.873,1121,7.191,1122,3.901,1123,5.873,1124,5.873,1125,6.931,1126,4.194,1127,5.873,1128,5.093,1129,5.873,1130,5.873,1131,4.5,1132,5.093,1133,5.873,1134,4.5,1135,4.5,1136,4.5]],["title/components/ExampleComponent.html",[0,0.662,80,1.249]],["body/components/ExampleComponent.html",[0,1.254,1,1.641,2,2.344,3,0.209,4,0.209,5,1.936,6,1.936,7,1.936,8,0.187,10,0.498,11,2.726,17,2.212,18,1.641,19,2.934,21,2.794,40,0.015,49,0.23,50,0.345,56,0.209,57,0.253,62,1.936,63,2.445,64,2.073,65,1.577,66,2.815,67,1.936,68,0.518,69,1.936,70,1.641,71,1.936,72,1.641,73,1.936,74,1.577,75,2.815,76,1.641,77,1.936,78,1.641,79,1.936,80,2.293,81,1.577,82,1.936,83,1.516,84,1.78,85,1.936,86,1.641,87,1.936,88,1.577,89,1.936,90,1.516,91,1.936,92,1.577,93,1.348,94,1.709,95,2.445,96,1.577,97,1.641,98,1.936,99,0.909,100,1.641,101,1.936,102,1.936,103,1.577,104,1.458,105,1.78,106,1.856,107,1.709,108,1.577,109,1.936,110,1.577,111,1.856,112,1.936,113,0.012,114,0.012,1137,4.279,1138,4.451,1139,3.729,1140,6.232,1141,4.125]],["title/modules/ExampleModule.html",[115,1.674,1142,2.792]],["body/modules/ExampleModule.html",[3,0.227,4,0.227,8,0.204,10,0.542,40,0.015,49,0.354,50,0.376,56,0.227,57,0.275,80,2.579,113,0.012,114,0.012,115,2.814,117,2.525,118,3.605,125,4.234,132,3.819,133,2.792,134,2.948,136,4.349,138,4.064,143,4.064,150,4.349,151,2.652,152,2.652,153,1.717,201,4.692,1070,3.323,1138,4.692,1139,3.415,1142,5.676,1143,4.659,1144,4.659,1145,5.373,1146,4.659,1147,5.373,1148,5.373,1149,4.692]],["title/injectables/ExampleService.html",[256,0.438,1150,3.048]],["body/injectables/ExampleService.html",[3,0.255,4,0.255,8,0.229,10,0.609,20,1.648,40,0.015,49,0.282,50,0.422,56,0.255,57,0.309,113,0.013,114,0.013,229,1.463,256,0.789,261,1.713,362,2.268,1139,3.659,1150,5.488,1151,5.229,1152,6.104,1153,5.488]],["title/interfaces/ForecastEntry.html",[784,1.027,1154,2.418]],["body/interfaces/ForecastEntry.html",[3,0.174,4,0.174,8,0.156,20,1.126,23,0.269,24,1.152,26,0.561,40,0.016,42,0.469,43,1.024,49,0.326,50,0.288,56,0.295,57,0.211,68,0.288,76,1.371,99,1.02,104,1.637,113,0.012,114,0.01,142,1.371,153,1.318,182,1.318,187,1.126,194,1.487,210,2.396,217,0.823,221,2.565,229,0.857,231,1.938,233,2.084,234,1.617,250,2.262,253,1.778,256,0.621,258,0.891,261,1.171,263,1.296,268,0.641,283,1.401,348,2.082,357,1.689,370,2.485,372,1.55,389,2.485,390,2.374,393,1.766,401,1.55,405,3.674,406,1.766,410,2.396,413,1.766,418,1.766,419,1.617,420,1.938,436,2.262,466,2.008,524,2.143,779,1.766,784,1.759,786,1.938,808,1.617,940,1.617,941,2.627,1020,1.938,1030,2.396,1031,2.035,1032,2.143,1154,4.141,1155,2.035,1156,2.396,1157,4.762,1158,3.947,1159,2.55,1160,2.729,1161,2.944,1162,3.669,1163,4.145,1164,4.145,1165,4.145,1166,2.55,1167,2.944,1168,2.55,1169,2.729,1170,2.944,1171,2.729,1172,4.472,1173,2.944,1174,4.989,1175,3.873,1176,2.944,1177,2.944,1178,2.944,1179,2.944,1180,2.944,1181,2.944,1182,3.958,1183,2.944,1184,2.729,1185,2.729,1186,2.944,1187,2.55,1188,2.729,1189,2.944,1190,2.944,1191,2.944,1192,2.55,1193,2.944,1194,2.944,1195,2.944,1196,2.944,1197,2.944,1198,2.944,1199,2.944,1200,2.944,1201,2.944,1202,2.944]],["title/interfaces/ForecastResponse.html",[784,1.027,1166,2.418]],["body/interfaces/ForecastResponse.html",[3,0.17,4,0.17,8,0.153,10,0.407,20,1.101,23,0.263,24,1.134,26,0.548,40,0.016,42,0.547,43,1.018,49,0.324,50,0.282,56,0.293,57,0.206,68,0.282,76,1.341,99,1.14,104,1.612,113,0.012,114,0.01,142,1.341,153,1.288,182,1.288,187,1.101,194,1.454,210,2.343,217,0.805,221,2.536,229,0.838,231,1.895,233,2.328,234,1.582,250,2.212,253,1.758,256,0.612,258,0.871,261,1.145,263,1.277,268,0.627,283,1.38,348,2.059,357,1.652,370,2.447,372,1.516,389,2.447,390,2.338,393,1.726,401,1.516,405,2.212,406,1.726,410,3.173,413,1.726,418,1.726,419,1.582,420,1.895,436,2.995,466,1.997,524,2.095,779,1.726,784,1.822,786,1.895,808,1.582,940,1.582,941,2.603,1020,1.895,1030,2.343,1031,1.99,1032,2.095,1154,3.829,1155,1.99,1156,2.343,1157,4.098,1158,2.995,1159,2.493,1160,2.668,1161,2.879,1162,3.614,1163,4.098,1164,4.098,1165,4.098,1166,3.376,1167,3.899,1168,3.376,1169,3.614,1170,3.899,1171,3.614,1172,5.104,1173,2.879,1174,4.951,1175,3.829,1176,4.738,1177,2.879,1178,2.879,1179,2.879,1180,2.879,1181,2.879,1182,3.899,1183,2.879,1184,2.668,1185,2.668,1186,2.879,1187,2.493,1188,2.668,1189,2.879,1190,2.879,1191,2.879,1192,2.493,1193,2.879,1194,2.879,1195,2.879,1196,2.879,1197,2.879,1198,2.879,1199,2.879,1200,2.879,1201,2.879,1202,2.879,1203,4.738]],["title/interfaces/ForecastUsage.html",[784,1.027,1187,2.418]],["body/interfaces/ForecastUsage.html",[3,0.171,4,0.171,8,0.153,20,1.104,23,0.263,24,1.137,26,0.55,40,0.016,42,0.52,43,1.059,49,0.324,50,0.283,56,0.293,57,0.207,68,0.283,76,1.344,99,1.007,104,1.615,113,0.012,114,0.01,142,1.344,153,1.292,182,1.292,187,1.104,194,1.458,210,2.35,217,0.807,221,2.54,229,0.84,231,1.9,233,2.057,234,1.586,250,2.218,253,1.761,256,0.613,258,0.874,261,1.148,263,1.279,268,0.629,283,1.383,348,2.062,357,1.656,370,2.452,372,1.52,389,2.452,390,2.342,393,1.731,401,1.52,405,2.218,406,1.731,410,2.35,413,1.731,418,1.731,419,1.586,420,1.9,436,2.218,466,2.131,524,2.101,779,1.731,784,1.745,786,1.9,808,1.586,940,1.586,941,2.606,1020,1.9,1030,2.35,1031,1.996,1032,2.101,1154,3.834,1155,1.996,1156,2.35,1157,4.103,1158,3.001,1159,2.5,1160,2.676,1161,2.887,1162,3.621,1163,4.103,1164,4.103,1165,4.103,1166,2.5,1167,2.887,1168,2.5,1169,2.676,1170,2.887,1171,2.676,1172,4.427,1173,2.887,1174,4.956,1175,3.834,1176,2.887,1177,2.887,1178,2.887,1179,2.887,1180,2.887,1181,2.887,1182,4.956,1183,2.887,1184,2.676,1185,2.676,1186,2.887,1187,3.383,1188,4.397,1189,4.743,1190,4.743,1191,2.887,1192,2.5,1193,2.887,1194,2.887,1195,2.887,1196,2.887,1197,2.887,1198,2.887,1199,2.887,1200,2.887,1201,2.887,1202,2.887]],["title/components/FrameComponent.html",[0,0.662,81,1.249]],["body/components/FrameComponent.html",[0,1.078,1,1.062,2,1.743,3,0.135,4,0.135,5,1.253,6,1.253,7,1.253,8,0.121,10,0.468,11,2.529,17,1.432,18,1.062,19,2.818,21,2.078,23,0.208,26,0.631,28,0.988,39,0.849,40,0.015,41,1.677,42,0.409,45,2.867,46,3.614,49,0.297,50,0.223,56,0.135,57,0.163,62,1.253,63,1.819,64,1.542,65,1.021,66,2.349,67,1.253,68,0.49,69,1.253,70,1.062,71,1.253,72,1.062,73,1.253,74,1.021,75,2.349,76,1.062,77,1.253,78,1.062,79,1.253,80,1.021,81,1.914,82,1.253,83,0.981,84,1.152,85,1.253,86,1.062,87,1.253,88,1.021,89,1.253,90,0.981,91,1.253,92,1.021,93,0.873,94,1.106,95,1.819,96,1.021,97,1.062,98,1.253,99,0.588,100,1.062,101,1.253,102,1.253,103,1.021,104,0.943,105,1.152,106,1.201,107,1.106,108,1.021,109,1.253,110,1.021,111,1.201,112,1.253,113,0.009,114,0.009,134,2.544,182,1.021,187,0.873,198,3.704,206,3.983,212,2.49,217,1.196,219,3.481,220,4.233,221,2.974,223,0.813,224,0.743,225,4.277,226,3.964,229,0.963,231,2.179,232,2.544,233,1.743,234,1.819,251,2.393,252,4.277,255,3.118,259,3.311,262,1.347,263,1.4,268,0.721,303,2.769,321,1.856,367,5.752,422,1.819,441,2.544,685,2.49,808,1.819,854,4.15,1204,2.769,1205,4.636,1206,4.636,1207,4.636,1208,4.636,1209,5.989,1210,4.636,1211,4.733,1212,4.733,1213,2.769,1214,5.989,1215,4.277,1216,3.194,1217,2.41,1218,4.636,1219,4.733,1220,3.194,1221,4.636,1222,4.636,1223,2.769,1224,3.194,1225,5.465,1226,3.481,1227,5.795,1228,2.769,1229,3.194,1230,2.769,1231,3.194,1232,3.964,1233,2.769,1234,3.194,1235,3.194,1236,3.194,1237,2.49,1238,3.194,1239,3.194,1240,4.636,1241,2.769,1242,4.636,1243,2.769,1244,3.194,1245,3.194,1246,2.769,1247,3.194,1248,3.311,1249,4.636,1250,4.636,1251,4.636,1252,4.636,1253,4.636,1254,4.636,1255,4.636,1256,4.636]],["title/components/IonIconComponent.html",[0,0.662,83,1.201]],["body/components/IonIconComponent.html",[0,1.202,1,1.199,2,1.901,3,0.153,4,0.153,5,1.415,6,1.415,7,1.415,8,0.137,10,0.51,11,2.492,15,5.384,18,1.199,19,2.858,23,0.235,28,0.869,39,0.561,40,0.015,41,1.108,42,0.437,43,0.901,48,5.062,49,0.168,50,0.252,55,3.573,56,0.153,57,0.185,58,1.249,62,1.415,63,1.983,64,2.359,65,1.152,66,2.482,67,1.415,68,0.552,69,1.415,70,1.199,71,1.415,72,1.199,73,1.415,74,1.152,75,2.482,76,1.199,77,1.415,78,1.199,79,1.415,80,1.152,81,1.152,82,1.415,83,1.944,84,2.492,85,1.415,86,1.199,87,1.415,88,1.152,89,1.415,90,1.108,91,1.415,92,1.152,93,0.985,94,1.249,95,1.983,96,1.152,97,1.199,98,1.415,99,0.664,100,1.199,101,1.415,102,1.415,103,1.152,104,1.065,105,1.301,106,1.356,107,1.249,108,1.152,109,1.415,110,1.152,111,1.356,112,1.415,113,0.009,114,0.009,217,1.166,223,0.753,224,0.688,230,2.73,235,4.551,251,1.301,262,0.811,276,2.628,330,3.941,350,1.356,405,2.774,441,2.774,455,3.124,488,5.062,536,3.347,632,4.519,639,2.938,653,4.551,808,1.983,843,5.989,901,3.611,981,5.734,1053,3.941,1141,3.347,1171,3.347,1257,5.487,1258,4.933,1259,3.127,1260,6.328,1261,3.611,1262,5.056,1263,5.056,1264,5.056,1265,3.606,1266,3.606,1267,5.838,1268,5.056,1269,5.838,1270,5.062,1271,5.838,1272,5.838,1273,5.384,1274,5.838,1275,5.838,1276,5.062,1277,5.838,1278,5.062,1279,4.551,1280,5.838,1281,5.838,1282,3.606,1283,3.606,1284,3.606]],["title/directives/LangSelectorDirective.html",[65,1.249,110,1.249]],["body/directives/LangSelectorDirective.html",[3,0.197,4,0.197,8,0.177,10,0.605,18,1.547,19,2.165,23,0.303,26,0.816,28,1.045,39,0.723,40,0.015,41,1.429,42,0.449,43,0.854,49,0.28,50,0.325,56,0.197,57,0.238,64,2.209,65,2.419,68,0.325,107,1.61,110,1.918,111,2.64,113,0.011,114,0.011,151,2.296,152,2.296,217,1.326,223,0.692,224,0.633,229,1.573,247,3.488,251,2.165,262,1.046,268,0.723,276,3.119,310,3.711,348,2.416,350,1.749,353,5.179,388,3.645,455,2.962,536,3.972,540,4.285,633,2.703,639,2.703,791,3.711,797,4.682,842,5.179,864,5.76,870,5.203,877,4.033,880,2.962,885,4.033,892,4.033,1248,5.013,1285,6.3,1286,4.033,1287,5.535,1288,7.019,1289,4.651,1290,4.651,1291,4.651,1292,5.189,1293,6.001,1294,4.651,1295,6.001,1296,4.651,1297,4.651]],["title/interfaces/LayerData.html",[784,1.027,1298,2.272]],["body/interfaces/LayerData.html",[3,0.209,4,0.209,8,0.188,10,0.499,18,1.644,23,0.322,24,1.296,32,1.518,35,2.323,40,0.015,42,0.554,43,0.973,49,0.291,56,0.289,68,0.436,99,1.322,113,0.012,114,0.012,227,3.626,233,2.346,298,2.873,348,2.075,436,3.423,466,2.121,784,1.639,786,2.323,803,4.13,948,3.242,1001,3.375,1298,3.973,1299,3.854,1300,3.854,1301,5.928,1302,3.626,1303,4.13,1304,5.399,1305,4.802,1306,5.41,1307,5.41,1308,4.44,1309,3.53,1310,5.41,1311,4.286,1312,4.9,1313,4.286,1314,4.286,1315,4.286,1316,3.53,1317,4.286]],["title/components/LoaderComponent.html",[0,0.662,86,1.3]],["body/components/LoaderComponent.html",[0,1.088,1,1.089,2,1.775,3,0.138,4,0.138,5,1.284,6,1.284,7,1.284,8,0.124,10,0.476,11,2.546,12,3.746,16,1.634,17,2.481,18,1.089,19,2.826,21,2.116,23,0.307,24,0.981,26,0.642,27,3.521,28,0.902,30,3.37,32,1.45,39,0.509,40,0.015,41,1.45,42,0.353,43,0.672,44,1.454,49,0.22,50,0.229,56,0.138,57,0.168,62,1.284,63,1.851,64,1.569,65,1.046,66,2.376,67,1.284,68,0.468,69,1.284,70,1.089,71,1.284,72,1.089,73,1.284,74,1.046,75,2.376,76,1.089,77,1.284,78,1.089,79,1.284,80,1.046,81,1.046,82,1.284,83,1.005,84,1.181,85,1.284,86,2.014,87,1.284,88,1.046,89,1.284,90,1.005,91,1.284,92,1.046,93,0.894,94,1.133,95,1.851,96,1.046,97,1.089,98,1.284,99,0.603,100,1.089,101,1.284,102,1.284,103,1.046,104,0.967,105,1.181,106,1.231,107,1.133,108,1.046,109,1.284,110,1.046,111,1.231,112,1.284,113,0.009,114,0.009,134,2.589,169,3.17,217,1.105,223,0.487,224,0.445,229,1.433,262,0.736,280,3.679,310,2.919,322,3.124,350,1.231,422,1.851,448,1.796,528,2.166,581,1.902,664,3.971,665,2.551,790,2.589,808,2.519,811,3.732,820,2.838,845,2.743,854,2.589,867,3.679,1041,3.679,1126,3.37,1128,4.092,1318,2.838,1319,2.838,1320,5.04,1321,6.057,1322,4.719,1323,4.092,1324,6.329,1325,4.719,1326,5.252,1327,4.092,1328,5.534,1329,4.719,1330,4.799,1331,5.534,1332,3.746,1333,3.273,1334,4.092,1335,4.719,1336,3.273,1337,3.273,1338,3.273,1339,2.551,1340,3.273,1341,3.273,1342,3.273,1343,3.273,1344,2.838,1345,2.838,1346,3.273,1347,5.568,1348,4.314,1349,6.422,1350,6.057,1351,6.057,1352,4.719,1353,5.534,1354,5.534,1355,3.273,1356,6.69,1357,3.273,1358,4.719,1359,3.273,1360,3.273,1361,3.273,1362,3.273,1363,3.273,1364,4.719,1365,3.679,1366,4.719,1367,6.057,1368,4.719,1369,4.719,1370,4.719,1371,3.273,1372,4.092,1373,3.273,1374,3.273,1375,3.273,1376,3.273,1377,3.273,1378,5.534,1379,3.273,1380,3.273,1381,2.838,1382,3.273]],["title/guards/LoaderGuard.html",[192,2.588,202,2.145]],["body/guards/LoaderGuard.html",[3,0.208,4,0.208,8,0.187,10,0.628,16,1.706,20,1.346,23,0.321,26,0.847,28,1.016,40,0.015,42,0.369,49,0.335,50,0.345,56,0.208,57,0.252,68,0.345,113,0.012,114,0.012,133,3.235,169,3.073,182,2.292,186,4.435,187,1.346,192,4.121,195,5,202,3.416,203,3.261,217,1.363,223,0.734,224,0.67,229,1.537,237,3.047,239,3.841,253,1.399,254,3.261,256,0.698,258,1.065,261,1.399,262,1.108,268,0.968,350,1.853,581,2.863,1332,4.435,1339,3.841,1383,4.272,1384,6.226,1385,7.76,1386,6.226,1387,7.553,1388,4.927,1389,6.549,1390,6.549,1391,4.927,1392,5.398,1393,4.927,1394,6.226,1395,6.226]],["title/interceptors/LoaderInterceptor.html",[130,2.588,327,1.674]],["body/interceptors/LoaderInterceptor.html",[3,0.182,4,0.182,8,0.164,10,0.646,16,1.493,23,0.281,26,0.777,28,0.85,39,0.996,40,0.015,42,0.428,43,0.614,44,1.133,49,0.331,50,0.302,56,0.182,57,0.221,58,2.218,68,0.4,113,0.011,114,0.011,130,3.781,142,1.434,153,1.378,169,2.82,217,1.279,223,0.85,224,0.777,229,1.587,251,2.459,253,2.07,256,0.64,258,0.932,262,1.44,268,1.061,282,3.366,283,1.09,286,3.788,327,2.92,328,2.667,332,3.267,333,3.532,335,3.532,336,4.216,337,4.216,345,2.667,346,3.532,347,3.362,350,1.622,419,2.859,581,2.507,777,2.667,779,3.037,832,4.452,845,3.32,920,4.452,926,4.452,935,4.452,1320,4.079,1332,4.507,1339,3.362,1389,6.319,1390,4.953,1396,3.739,1397,5.712,1398,4.953,1399,4.313,1400,4.313,1401,5.712,1402,4.313,1403,5.712,1404,4.313,1405,4.313,1406,4.313,1407,4.313,1408,4.313,1409,4.313,1410,4.313,1411,4.313,1412,3.362,1413,5.712]],["title/injectables/LoaderService.html",[256,0.438,1332,2.418]],["body/injectables/LoaderService.html",[0,1.22,3,0.149,4,0.149,8,0.134,10,0.502,11,2.26,20,0.964,23,0.23,24,1.034,26,0.677,28,1.072,32,1.925,39,0.975,40,0.015,41,1.529,42,0.432,43,0.941,44,1.647,49,0.232,50,0.247,56,0.149,57,0.181,58,2.288,68,0.247,93,1.712,113,0.009,114,0.009,169,3.553,202,2.731,223,0.525,224,0.785,229,1.302,230,2.039,253,2.079,256,0.558,258,0.763,261,1.002,262,1.119,263,1.771,264,3.079,268,0.774,280,3.88,283,1.733,327,2.132,332,2.232,353,4.885,362,1.326,364,4.316,374,4.183,437,3.555,441,2.731,449,3.295,452,3.295,679,3.295,777,4.359,790,2.731,799,5.227,808,2.91,845,3.642,880,3.553,1237,3.88,1320,5.033,1324,4.316,1326,5.946,1330,5.002,1332,3.079,1334,4.316,1414,3.059,1415,4.978,1416,4.978,1417,4.978,1418,5.769,1419,5.769,1420,5.769,1421,5.769,1422,4.978,1423,6.266,1424,4.978,1425,6.858,1426,3.527,1427,4.978,1428,5.769,1429,2.335,1430,4.316,1431,3.527,1432,3.527,1433,3.88,1434,3.527,1435,6.266,1436,6.266,1437,3.527,1438,4.978,1439,3.527,1440,3.527,1441,3.527,1442,3.527,1443,3.527,1444,3.527,1445,3.527,1446,3.527,1447,3.527,1448,4.978,1449,3.527,1450,3.527,1451,4.978,1452,3.527,1453,4.978,1454,3.527,1455,3.527]],["title/components/LoginComponent.html",[0,0.662,88,1.249]],["body/components/LoginComponent.html",[0,1.065,1,1.033,2,1.708,3,0.131,4,0.131,5,1.218,6,1.218,7,1.218,8,0.118,10,0.542,11,2.509,12,2.809,17,1.392,18,1.033,19,2.808,21,2.036,23,0.202,24,0.944,26,0.618,28,0.88,32,1.395,39,0.483,40,0.015,41,1.395,42,0.442,43,0.647,44,0.816,45,2.809,46,3.541,49,0.317,50,0.217,56,0.131,57,0.159,62,1.218,63,2.318,64,1.965,65,0.992,66,2.318,67,1.218,68,0.475,69,1.218,70,1.033,71,1.218,72,1.033,73,1.218,74,0.992,75,2.318,76,1.033,77,1.218,78,1.033,79,1.218,80,0.992,81,0.992,82,1.218,83,0.954,84,1.12,85,1.218,86,1.033,87,1.218,88,1.888,89,1.218,90,0.954,91,1.218,92,0.992,93,0.848,94,1.075,95,1.782,96,0.992,97,1.033,98,1.218,99,0.572,100,1.033,101,1.218,102,1.218,103,0.992,104,0.917,105,1.12,106,1.168,107,1.075,108,0.992,109,1.218,110,0.992,111,1.168,112,1.218,113,0.008,114,0.008,145,2.421,187,0.848,194,1.638,198,4.656,206,3.604,209,2.218,217,1.18,219,3.435,220,4.196,221,2.955,223,0.676,224,0.618,225,4.22,227,2.64,228,3.541,229,1.228,231,2.135,232,2.947,233,1.708,234,2.662,247,2.64,252,4.22,259,2.218,260,2.692,262,1.414,263,1.382,273,2.692,278,2.692,279,2.421,286,1.614,287,2.055,293,3.434,294,4.657,296,2.036,305,2.692,313,2.692,315,2.692,320,2.692,361,2.692,376,4.187,379,2.421,410,2.64,422,2.107,448,2.492,632,3.835,633,1.805,639,2.64,641,2.055,685,2.421,842,4.607,854,3.817,880,2.242,955,3.912,1074,2.692,1075,3.938,1213,2.692,1246,2.692,1456,2.692,1457,4.542,1458,6.288,1459,5.371,1460,4.542,1461,4.542,1462,4.542,1463,4.542,1464,5.91,1465,3.105,1466,3.938,1467,4.542,1468,4.542,1469,4.542,1470,3.938,1471,3.938,1472,4.542,1473,4.542,1474,3.105,1475,3.105,1476,3.938,1477,3.105,1478,3.938,1479,3.105,1480,3.105,1481,3.105,1482,3.105,1483,3.105,1484,3.105,1485,3.105,1486,3.105,1487,3.105,1488,3.105,1489,3.105,1490,3.105,1491,3.541,1492,3.105,1493,3.105,1494,3.105,1495,3.105,1496,3.105,1497,4.542,1498,4.542,1499,3.105,1500,3.105,1501,3.105,1502,3.105,1503,3.105,1504,3.105,1505,4.542,1506,4.542,1507,4.542,1508,4.542,1509,4.542]],["title/components/MapComponent.html",[0,0.662,90,1.201]],["body/components/MapComponent.html",[0,0.686,1,0.436,2,0.854,3,0.055,4,0.055,5,0.891,6,0.514,7,0.514,8,0.05,10,0.229,11,1.599,16,0.786,17,1.346,18,0.436,19,2.397,23,0.148,24,0.744,26,0.309,27,2.081,28,1.065,30,1.622,31,1.77,32,1.83,34,0.682,35,1.411,39,0.629,40,0.016,41,1.545,42,0.536,43,0.867,44,1.657,49,0.256,50,0.092,56,0.055,57,0.067,58,2.247,62,0.514,63,1.865,64,1.191,65,0.419,66,1.404,67,0.514,68,0.441,69,0.514,70,0.436,71,0.514,72,0.436,73,0.514,74,0.419,75,1.404,76,0.436,77,0.514,78,0.436,79,0.514,80,0.419,81,0.419,82,0.514,83,0.403,84,0.473,85,0.514,86,0.436,87,0.514,88,0.419,89,0.514,90,1.1,91,0.514,92,0.419,93,2.044,94,0.454,95,0.891,96,0.419,97,0.436,98,0.514,99,1.161,100,0.436,101,0.514,102,0.514,103,0.419,104,0.387,105,0.473,106,0.493,107,0.454,108,0.419,109,0.514,110,0.419,111,0.493,112,0.514,113,0.004,114,0.004,132,3.538,133,0.682,151,0.647,152,0.647,182,1.416,194,0.819,208,2.341,216,1.561,217,0.715,223,0.447,224,0.717,229,1.137,230,2.541,231,1.067,233,0.854,251,1.46,253,1.259,255,1.682,258,0.284,262,0.511,263,1.717,264,1.404,268,0.204,276,0.682,283,1.383,296,1.018,298,2.081,310,3.497,321,2.352,342,1.503,348,2.024,355,3.104,374,0.762,388,2.22,395,0.868,401,1.346,407,1.77,413,0.972,422,0.514,437,0.937,441,1.246,448,2.89,454,2.923,466,0.82,528,1.988,535,2.556,536,1.503,539,3.104,581,0.762,587,2.341,632,2.144,633,0.762,639,3.973,640,2.791,641,0.868,653,1.022,664,0.811,679,1.503,778,1.622,791,3.111,794,1.857,796,1.32,797,2.214,798,3.743,799,3.761,808,2.433,811,0.762,832,1.022,854,1.964,880,2.871,899,1.622,901,1.622,908,1.137,948,1.18,951,2.941,972,1.022,982,1.022,1001,0.647,1053,2.341,1065,1.022,1126,1.622,1132,1.969,1139,1.18,1141,2.37,1158,3.269,1175,0.811,1188,1.503,1217,3.373,1273,2.341,1279,3.154,1292,3.165,1298,2.923,1302,4.268,1303,3.743,1305,3.685,1309,0.937,1312,2.37,1318,1.137,1323,2.604,1327,1.969,1348,1.77,1365,1.77,1372,4.746,1381,3.104,1433,2.791,1510,1.022,1511,1.969,1512,2.271,1513,3.003,1514,5.552,1515,4.903,1516,3.003,1517,3.003,1518,4.408,1519,3.003,1520,3.003,1521,3.58,1522,4.047,1523,3.58,1524,4.567,1525,2.271,1526,3.003,1527,3.003,1528,3.003,1529,5.762,1530,2.271,1531,2.271,1532,2.37,1533,1.311,1534,3.836,1535,1.311,1536,1.311,1537,2.271,1538,3.003,1539,3.104,1540,2.341,1541,3.003,1542,3.003,1543,2.144,1544,2.341,1545,2.604,1546,3.003,1547,3.003,1548,3.58,1549,2.604,1550,3.003,1551,3.003,1552,3.003,1553,1.311,1554,2.271,1555,2.271,1556,1.311,1557,2.271,1558,2.271,1559,2.271,1560,2.271,1561,1.311,1562,3.104,1563,1.311,1564,3.58,1565,2.271,1566,1.311,1567,2.271,1568,1.311,1569,3.58,1570,1.311,1571,1.311,1572,1.311,1573,2.271,1574,1.311,1575,2.271,1576,2.271,1577,2.271,1578,1.311,1579,4.361,1580,2.271,1581,2.271,1582,2.271,1583,3.58,1584,1.311,1585,1.311,1586,1.311,1587,2.271,1588,4.903,1589,1.311,1590,2.271,1591,1.969,1592,1.311,1593,1.311,1594,2.271,1595,1.311,1596,3.003,1597,1.311,1598,1.311,1599,1.311,1600,3.58,1601,2.271,1602,2.271,1603,1.311,1604,2.271,1605,3.58,1606,1.311,1607,1.311,1608,1.311,1609,1.311,1610,1.311,1611,1.311,1612,1.311,1613,2.271,1614,1.311,1615,1.311,1616,1.311,1617,1.311,1618,1.311,1619,2.271,1620,2.271,1621,1.311,1622,1.311,1623,1.022,1624,1.311,1625,1.311,1626,1.311,1627,1.311,1628,1.311,1629,1.311,1630,1.137,1631,1.137,1632,1.137,1633,1.137,1634,1.137,1635,1.969,1636,1.137,1637,1.311,1638,1.311,1639,1.311,1640,1.311,1641,1.311,1642,1.311,1643,1.311,1644,1.311,1645,1.311,1646,1.311,1647,1.311,1648,1.311,1649,1.311,1650,1.311,1651,1.311,1652,1.311,1653,1.311,1654,1.311,1655,1.311,1656,1.311,1657,1.311,1658,2.271,1659,1.311,1660,2.271,1661,1.311,1662,2.271,1663,2.271,1664,1.311,1665,2.271,1666,1.311,1667,1.311,1668,1.311,1669,2.271,1670,1.311,1671,1.311,1672,1.311,1673,1.311,1674,1.022,1675,1.311,1676,1.311,1677,1.311,1678,1.311,1679,1.311,1680,1.311,1681,1.311,1682,1.311,1683,1.311,1684,1.311,1685,1.311,1686,1.311,1687,1.311,1688,1.311,1689,3.003,1690,2.271,1691,3.003,1692,1.311,1693,3.003,1694,1.311,1695,1.311,1696,1.311,1697,2.271,1698,1.311,1699,1.311,1700,1.311,1701,2.271,1702,1.311,1703,1.311,1704,1.311,1705,1.311,1706,1.969,1707,1.311,1708,2.271,1709,2.271,1710,1.311,1711,1.311,1712,3.003,1713,1.311,1714,1.311,1715,1.311,1716,3.58,1717,1.311,1718,1.311,1719,1.311,1720,1.311,1721,1.311,1722,1.311,1723,1.311,1724,1.311,1725,0.868,1726,1.137,1727,1.137,1728,2.271,1729,1.311,1730,2.271,1731,1.311,1732,1.311,1733,1.311,1734,2.271,1735,1.311,1736,1.311,1737,1.311,1738,1.311,1739,2.271,1740,1.311,1741,1.311,1742,1.311,1743,1.311,1744,1.311,1745,2.271,1746,1.311,1747,1.311,1748,1.311,1749,1.311,1750,1.022,1751,1.311,1752,3.003,1753,1.311,1754,1.311,1755,1.311,1756,1.311,1757,1.311,1758,1.311,1759,1.311,1760,3.58,1761,1.311,1762,1.311,1763,1.311,1764,1.311,1765,1.311,1766,1.311,1767,1.311,1768,1.311,1769,1.311,1770,2.271,1771,2.271,1772,1.311,1773,1.311,1774,1.311,1775,1.311,1776,1.311,1777,1.311,1778,1.311,1779,1.311,1780,2.271,1781,1.311,1782,1.311,1783,1.311,1784,1.311,1785,1.311]],["title/interfaces/MapDB.html",[784,1.027,1786,2.792]],["body/interfaces/MapDB.html",[3,0.122,4,0.122,8,0.11,10,0.291,20,0.788,23,0.188,24,0.894,35,1.356,40,0.016,42,0.496,43,0.869,44,1.681,49,0.325,50,0.202,56,0.122,57,0.148,58,1.782,68,0.202,93,1.811,99,1.341,113,0.008,114,0.008,142,0.96,169,1.425,182,1.823,194,1.856,217,0.576,229,0.894,230,2.337,231,1.356,233,1.085,245,2.25,255,1.356,256,0.482,258,0.624,261,0.82,262,1.282,263,0.675,264,2.661,268,0.887,282,1.425,283,1.301,332,2.557,348,2.204,350,1.085,357,1.182,370,1.929,372,2.145,388,2.823,389,1.929,390,1.843,391,3.355,393,1.236,401,1.618,406,1.236,413,1.236,418,1.236,419,1.132,420,1.356,422,1.132,449,1.91,454,2.501,455,2.124,466,1.176,524,2.964,677,2.25,679,4.038,777,1.785,778,2.061,779,1.236,780,2.848,784,0.758,786,1.356,789,3.957,793,3.527,794,3.527,811,2.991,822,1.91,898,2.061,1001,1.425,1020,1.356,1031,1.425,1032,1.5,1092,2.25,1168,2.661,1203,4.073,1217,3.738,1261,3.073,1298,3.718,1302,3.315,1303,3.406,1304,3.675,1305,4.553,1308,4.099,1312,3.775,1316,2.061,1532,1.91,1534,4.595,1543,2.061,1544,2.25,1674,2.25,1725,1.91,1750,2.25,1786,3.073,1787,2.061,1788,4.011,1789,5.678,1790,3.731,1791,4.462,1792,5.547,1793,4.945,1794,3.731,1795,4.011,1796,3.731,1797,4.945,1798,4.462,1799,4.462,1800,4.756,1801,3.731,1802,3.731,1803,2.503,1804,4.011,1805,2.25,1806,2.061,1807,1.91,1808,3.073,1809,2.503,1810,4.462,1811,3.731,1812,2.503,1813,2.503,1814,3.731,1815,3.731,1816,2.503,1817,2.503,1818,3.731,1819,2.503,1820,2.503,1821,2.503,1822,2.503,1823,2.503,1824,2.25,1825,4.945,1826,2.503,1827,2.503,1828,3.731,1829,4.462,1830,2.503,1831,4.462,1832,3.731,1833,2.503,1834,3.731,1835,2.503,1836,3.355,1837,3.731,1838,3.731,1839,2.503,1840,2.503,1841,2.503,1842,2.503,1843,3.731,1844,2.503,1845,2.503,1846,2.503,1847,2.503,1848,2.503,1849,2.503,1850,2.503,1851,2.503,1852,3.731,1853,2.503,1854,2.503,1855,2.503,1856,2.503,1857,2.503,1858,2.503,1859,2.503,1860,2.503,1861,2.503,1862,2.503,1863,3.731,1864,2.503,1865,2.503,1866,2.503,1867,2.503,1868,2.503,1869,2.503,1870,2.503]],["title/components/MapSelectViewComponent.html",[0,0.662,92,1.249]],["body/components/MapSelectViewComponent.html",[0,1.088,1,1.241,2,1.947,3,0.158,4,0.158,5,1.464,6,1.464,7,1.464,8,0.142,11,2.518,16,1.793,17,2.665,18,1.241,19,2.868,21,2.321,23,0.243,24,1.076,26,0.704,27,3.733,28,1.04,32,1.59,39,0.805,40,0.015,41,1.826,42,0.505,43,0.847,44,1.36,49,0.278,50,0.261,55,1.842,56,0.158,57,0.191,58,1.292,62,1.464,63,2.031,64,1.722,65,1.192,66,2.519,67,1.464,68,0.501,69,1.464,70,1.241,71,1.464,72,1.241,73,1.464,74,1.192,75,2.739,76,1.241,77,1.464,78,1.241,79,1.464,80,1.192,81,1.192,82,1.464,83,1.146,84,1.346,85,1.464,86,1.241,87,1.464,88,1.192,89,1.464,90,1.146,91,1.464,92,2.052,93,1.907,94,2.745,95,2.031,96,1.192,97,1.241,98,1.464,99,0.687,100,1.241,101,1.464,102,1.464,103,1.192,104,1.992,105,1.346,106,1.403,107,1.292,108,1.192,109,1.464,110,1.192,111,1.403,112,1.464,113,0.012,114,0.01,153,1.192,187,1.019,217,1.034,223,0.771,224,0.874,234,2.333,263,1.211,422,2.031,790,2.047,801,3.202,802,3.523,940,2.809,941,2.975,955,4.251,1159,2.308,1203,3.697,1217,3.338,1534,4.428,1539,4.489,1871,6.208,1872,5.581,1873,3.235,1874,5.177,1875,5.177,1876,5.946,1877,5.946,1878,3.731,1879,5.177,1880,3.731,1881,3.731,1882,3.731,1883,3.731,1884,3.731,1885,3.731,1886,3.731,1887,3.235,1888,3.235,1889,3.731,1890,3.731,1891,3.731,1892,3.731,1893,3.731,1894,3.731,1895,5.177,1896,5.177]],["title/injectables/MapService.html",[256,0.438,1532,2.588]],["body/injectables/MapService.html",[3,0.116,4,0.116,8,0.104,10,0.503,20,0.749,23,0.179,24,0.86,26,0.563,28,0.743,32,0.842,35,1.289,39,0.427,40,0.016,42,0.374,43,0.928,44,1.568,49,0.321,50,0.192,56,0.116,57,0.14,58,1.728,68,0.349,93,1.875,99,1.387,113,0.008,114,0.008,142,0.912,169,1.354,182,1.907,194,1.8,217,0.996,223,0.617,224,0.563,229,1.155,230,1.696,231,1.946,233,1.031,245,2.137,255,2.345,256,0.464,258,0.593,261,0.779,262,1.25,263,1.167,264,3.086,268,0.865,282,1.354,283,1.261,332,2.813,348,1.985,350,1.031,357,1.123,362,1.031,369,1.504,370,2.492,372,2.244,388,2.737,389,1.856,390,1.773,391,3.228,393,1.174,401,1.557,406,1.174,413,1.174,418,1.174,419,1.076,420,1.289,422,1.625,449,2.741,454,3.647,455,2.744,466,1.131,524,3.261,677,3.889,679,3.95,777,2.561,778,1.958,779,1.174,780,2.741,784,0.72,789,3.086,793,3.438,794,2.561,811,2.407,822,2.741,898,2.957,1001,1.354,1020,1.289,1031,1.354,1032,1.425,1092,2.137,1168,3.438,1217,3.744,1261,1.958,1298,3.469,1302,2.9,1303,4.154,1304,3.563,1305,4.396,1308,3.691,1312,3.303,1316,1.958,1429,1.815,1532,2.741,1534,4.626,1543,1.958,1544,3.228,1674,3.228,1725,1.815,1750,2.137,1786,1.958,1787,1.958,1788,3.228,1789,5.454,1790,2.377,1791,3.59,1792,3.59,1793,4.82,1794,2.377,1795,3.889,1796,2.377,1797,3.59,1798,4.326,1799,4.326,1800,4.652,1801,2.377,1802,2.377,1803,2.377,1804,4.652,1805,2.137,1806,1.958,1807,1.815,1808,2.957,1809,2.377,1810,5.441,1811,4.82,1812,3.59,1813,3.59,1814,4.82,1815,3.59,1816,2.377,1817,2.377,1818,3.59,1819,2.377,1820,2.377,1821,2.377,1822,2.377,1823,3.59,1824,3.228,1825,5.441,1826,4.326,1827,2.377,1828,3.59,1829,4.326,1830,2.377,1831,4.326,1832,3.59,1833,2.377,1834,3.59,1835,2.377,1836,3.228,1837,3.59,1838,3.59,1839,2.377,1840,2.377,1841,2.377,1842,2.377,1843,3.59,1844,2.377,1845,2.377,1846,2.377,1847,2.377,1848,2.377,1849,2.377,1850,2.377,1851,2.377,1852,3.59,1853,2.377,1854,2.377,1855,2.377,1856,2.377,1857,2.377,1858,2.377,1859,2.377,1860,2.377,1861,2.377,1862,2.377,1863,3.59,1864,2.377,1865,2.377,1866,2.377,1867,2.377,1868,2.377,1869,2.377,1870,2.377,1897,4.141,1898,2.742,1899,2.742]],["title/interfaces/Marker.html",[784,1.027,951,2.418]],["body/interfaces/Marker.html",[3,0.204,4,0.204,8,0.183,10,0.487,23,0.314,24,1.277,32,1.888,35,2.889,40,0.015,41,1.483,42,0.533,49,0.287,55,3.709,56,0.204,58,1.672,90,1.888,113,0.011,114,0.011,216,3.194,224,1.051,230,2.518,251,2.217,296,2.755,343,4.069,360,4.39,406,3.148,466,2.053,540,4.39,688,3.764,784,1.777,786,2.269,791,3.801,948,3.905,951,4.921,1007,6.13,1034,4.791,1302,3.93,1309,3.448,1518,4.791,1900,4.187,1901,6.147,1902,6.172,1903,6.762,1904,6.762,1905,6.147,1906,5.33]],["title/classes/ModuleProvider.html",[57,0.2,190,2.588]],["body/classes/ModuleProvider.html",[3,0.188,4,0.188,8,0.168,10,0.587,23,0.289,26,0.792,28,0.967,39,0.905,40,0.015,42,0.332,43,0.925,45,4.543,49,0.322,56,0.188,57,0.383,68,0.31,99,1.269,113,0.011,114,0.011,115,2.493,117,3.57,179,4.537,186,4.862,187,1.212,188,2.937,189,3.848,190,3.853,192,3.853,193,3.848,217,1.297,223,0.661,224,0.604,262,0.998,263,1.519,268,0.905,275,4.157,321,2.579,348,2.293,388,3.193,438,5.246,868,3.169,1068,4.537,1141,2.937,1169,3.853,1237,3.459,1248,4.157,1287,4.924,1907,5.978,1908,3.848,1909,5.82,1910,5.82,1911,5.82,1912,5.82,1913,4.157,1914,4.438,1915,5.82,1916,5.82,1917,5.82,1918,5.82,1919,4.438,1920,4.924,1921,4.438,1922,5.047,1923,5.82,1924,4.438,1925,4.438,1926,5.82,1927,4.438,1928,4.438,1929,4.438,1930,5.82,1931,6.495,1932,4.438,1933,4.438]],["title/components/PumpModelComponent.html",[0,0.662,96,1.249]],["body/components/PumpModelComponent.html",[0,1.251,1,1.63,2,2.334,3,0.207,4,0.207,5,1.923,6,1.923,7,1.923,8,0.186,10,0.495,11,2.721,17,2.197,18,1.63,19,2.932,21,2.782,40,0.015,49,0.229,50,0.343,56,0.207,57,0.251,62,1.923,63,2.435,64,2.064,65,1.566,66,2.808,67,1.923,68,0.517,69,1.923,70,1.63,71,1.923,72,1.63,73,1.923,74,1.566,75,2.808,76,1.63,77,1.923,78,1.63,79,1.923,80,1.566,81,1.566,82,1.923,83,1.506,84,1.768,85,1.923,86,1.63,87,1.923,88,1.566,89,1.923,90,1.506,91,1.923,92,1.566,93,1.339,94,1.697,95,2.435,96,2.287,97,1.63,98,1.923,99,0.902,100,1.63,101,1.923,102,1.923,103,1.566,104,1.448,105,1.768,106,1.843,107,1.697,108,1.566,109,1.923,110,1.566,111,1.843,112,1.923,113,0.012,114,0.012,1138,4.432,1139,3.72,1141,4.108,1934,3.245,1935,3.501,1936,4.25,1937,4.838,1938,6.206]],["title/modules/PumpModelModule.html",[115,1.674,1939,2.792]],["body/modules/PumpModelModule.html",[3,0.226,4,0.226,8,0.203,10,0.539,40,0.015,49,0.354,50,0.374,56,0.226,57,0.274,96,2.577,113,0.012,114,0.012,115,2.804,117,2.511,118,3.593,125,4.228,132,3.806,133,2.777,134,2.932,136,4.334,138,4.05,143,4.05,150,4.334,151,2.638,152,2.638,153,1.708,201,4.676,1070,3.305,1138,4.676,1139,3.403,1149,4.676,1934,3.537,1935,3.816,1937,4.165,1939,5.671,1940,4.633,1941,4.633,1942,4.633,1943,5.344,1944,5.344,1945,5.344]],["title/injectables/PumpModelService.html",[256,0.438,1946,3.048]],["body/injectables/PumpModelService.html",[3,0.254,4,0.254,8,0.228,10,0.606,20,1.641,40,0.015,49,0.28,50,0.42,56,0.254,57,0.307,113,0.013,114,0.013,229,1.459,256,0.787,261,1.706,362,2.259,1139,3.65,1152,6.09,1153,5.475,1934,3.976,1935,4.289,1946,5.475,1947,5.208]],["title/guards/QueryParameterGuard.html",[202,2.145,1948,2.792]],["body/guards/QueryParameterGuard.html",[3,0.263,4,0.172,8,0.154,10,0.627,16,1.408,20,1.111,23,0.265,26,0.747,28,0.817,39,0.632,40,0.015,42,0.411,43,0.99,49,0.29,50,0.284,56,0.172,57,0.208,58,2.408,68,0.384,99,1.011,113,0.01,114,0.01,182,1.299,187,1.111,195,4.602,199,4.28,202,3.012,203,2.691,217,1.241,221,3.154,223,0.991,224,0.906,227,3.869,230,2.727,234,2.962,236,3.525,237,4.117,238,5.585,239,5.19,247,3.191,251,1.981,253,1.975,254,4.602,255,2.58,256,0.615,258,0.879,261,1.155,262,1.497,268,0.854,282,3.677,350,1.529,422,1.595,455,2.007,777,4.117,789,3.396,794,3.396,795,3.921,796,3.191,845,3.191,880,2.71,1069,4.761,1122,3.525,1217,2.853,1276,4.761,1392,4.761,1412,3.169,1491,5.19,1948,4.754,1949,5.391,1950,3.525,1951,5.491,1952,5.491,1953,7.449,1954,5.491,1955,5.491,1956,4.065,1957,5.491,1958,4.761,1959,4.065,1960,5.773,1961,5.491,1962,4.761,1963,4.065,1964,4.065,1965,4.065,1966,4.065,1967,4.065]],["title/interceptors/SanitizeUrlInterceptor.html",[131,2.588,327,1.674]],["body/interceptors/SanitizeUrlInterceptor.html",[3,0.195,4,0.195,8,0.175,10,0.602,16,1.595,23,0.3,26,0.811,28,0.686,34,3.099,39,0.717,40,0.015,42,0.345,49,0.309,50,0.322,56,0.195,57,0.236,68,0.322,113,0.011,114,0.011,131,3.947,142,1.532,173,5.171,223,0.686,224,0.627,246,4.649,253,1.878,256,0.669,258,0.996,262,1.341,268,0.717,282,2.944,286,3.857,327,3.178,328,2.849,332,3.468,333,3.688,335,3.688,336,4.325,337,4.325,342,3.947,345,2.849,346,3.688,401,2.243,510,3.591,789,2.849,831,6.064,880,2.944,903,4.259,919,4.649,932,3.994,1095,5.171,1101,5.171,1270,5.171,1968,5.171,1969,6.994,1970,5.964,1971,5.964,1972,6.994,1973,6.994,1974,5.964,1975,5.964,1976,4.607,1977,5.964,1978,5.964,1979,5.171,1980,4.607,1981,4.607,1982,4.607,1983,4.607,1984,4.607,1985,6.613,1986,4.607,1987,4.607,1988,4.607]],["title/injectables/SettingsStorageService.html",[256,0.438,1215,2.792]],["body/injectables/SettingsStorageService.html",[3,0.124,4,0.124,8,0.111,10,0.619,20,0.799,23,0.19,26,0.591,28,1.018,39,1.106,40,0.016,41,1.975,42,0.481,43,1.083,44,1.508,49,0.137,50,0.205,56,0.124,57,0.15,68,0.45,99,1.422,113,0.008,114,0.008,182,0.934,194,1.567,206,3.527,223,0.957,224,0.874,226,5.187,229,0.903,251,2.565,255,3.63,256,0.487,261,0.83,262,1.538,263,1.708,268,0.954,296,3.065,348,2.544,362,1.1,434,2.088,435,3.768,437,4.099,438,5.216,439,3.768,440,3.768,441,2.384,446,2.535,447,6.165,448,3.752,449,3.8,450,3.768,452,4.526,454,4.613,455,3.286,458,2.535,475,2.535,491,2.535,492,2.535,493,2.535,1211,4.496,1212,4.496,1215,3.103,1219,3.768,1223,2.535,1225,5.693,1226,3.736,1227,5.894,1228,2.535,1230,2.535,1232,4.255,1233,2.535,1241,2.535,1243,2.535,1344,5.929,1412,2.279,1836,5.33,1989,5.446,1990,4.345,1991,4.345,1992,4.345,1993,5.74,1994,2.924,1995,4.345,1996,2.924,1997,4.345,1998,2.924,1999,2.924,2000,2.924,2001,2.279,2002,2.279,2003,4.345,2004,2.924,2005,2.924,2006,2.924,2007,2.924,2008,2.924]],["title/interfaces/ShapeData.html",[784,1.027,1308,2.418]],["body/interfaces/ShapeData.html",[3,0.206,4,0.206,8,0.185,10,0.491,18,2.055,23,0.317,24,1.284,32,1.496,35,2.288,40,0.015,42,0.573,43,1.113,49,0.289,56,0.287,68,0.527,99,1.138,113,0.012,114,0.012,227,2.83,233,1.831,298,3.591,348,2.504,436,2.671,466,2.115,784,1.624,786,2.288,803,3.223,948,2.53,1001,3.776,1298,3.591,1299,3.796,1300,3.796,1301,5.886,1302,2.83,1303,3.223,1304,4.413,1305,4.198,1306,4.222,1307,4.222,1308,4.198,1309,3.477,1310,6.191,1311,5.358,1312,5.212,1313,5.358,1314,5.358,1315,5.358,1316,5.099,1317,5.358]],["title/components/SideBarComponent.html",[0,0.662,100,1.3]],["body/components/SideBarComponent.html",[0,1.221,1,1.508,2,2.22,3,0.192,4,0.192,5,1.779,6,1.779,7,1.779,8,0.172,10,0.458,11,2.752,18,1.508,19,2.923,21,2.646,23,0.295,24,1.227,28,0.675,32,1.393,40,0.015,44,1.192,49,0.276,50,0.317,56,0.192,57,0.232,62,1.779,63,2.316,64,1.963,65,1.449,66,2.727,67,1.779,68,0.504,69,1.779,70,1.508,71,1.779,72,1.508,73,1.779,74,1.449,75,2.727,76,1.508,77,1.779,78,1.508,79,1.779,80,1.449,81,1.449,82,1.779,83,1.393,84,1.636,85,1.779,86,1.508,87,1.779,88,1.449,89,1.779,90,1.393,91,1.779,92,1.449,93,1.239,94,1.57,95,2.316,96,1.449,97,1.508,98,1.779,99,0.835,100,2.312,101,2.828,102,1.779,103,1.449,104,1.339,105,1.636,106,1.705,107,1.57,108,1.449,109,1.779,110,1.449,111,1.705,112,1.779,113,0.011,114,0.011,163,4.216,854,4.054,1226,4.556,1232,3.907,1398,5.119,1511,5.119,2009,4.602,2010,3.932,2011,5.903,2012,4.535,2013,5.119,2014,5.903,2015,6.952]],["title/classes/StaticLoader.html",[57,0.2,167,2.792]],["body/classes/StaticLoader.html",[3,0.203,4,0.203,8,0.182,10,0.617,16,2.117,23,0.312,26,0.832,28,0.713,39,0.745,40,0.015,42,0.358,43,0.959,44,1.607,49,0.356,56,0.203,57,0.245,68,0.335,113,0.011,114,0.011,115,2.051,149,5.841,151,2.364,152,2.364,153,1.53,167,4.366,169,3.325,178,3.733,190,3.17,191,4.152,216,3.178,223,0.713,224,0.651,253,1.913,258,1.035,262,1.077,264,2.962,268,0.745,275,4.366,348,2.438,448,2.627,868,3.42,1185,4.047,1226,2.783,1248,4.81,1287,5.068,1706,4.152,1913,4.366,1920,5.355,2016,4.766,2017,3.733,2018,6.114,2019,6.114,2020,6.114,2021,4.789,2022,6.114,2023,5.841,2024,5.302,2025,5.841,2026,5.302,2027,4.789,2028,4.789,2029,4.789,2030,4.152,2031,3.733,2032,5.841,2033,4.766,2034,4.152,2035,4.152,2036,4.789,2037,6.114,2038,4.789,2039,4.789,2040,4.789,2041,4.789]],["title/injectables/UserService.html",[256,0.438,2042,3.048]],["body/injectables/UserService.html",[3,0.143,4,0.143,8,0.129,10,0.569,20,0.925,23,0.221,24,1.005,26,0.658,28,0.916,39,0.752,40,0.015,42,0.422,43,1.106,49,0.325,50,0.237,56,0.143,57,0.173,68,0.43,113,0.009,114,0.009,142,1.127,158,2.242,194,2.035,198,3.806,206,4.242,208,2.641,217,1.126,223,0.72,224,0.658,229,1.279,231,2.892,232,2.654,233,2.314,235,3.771,253,1.848,256,0.542,258,0.732,261,0.962,262,1.566,263,1.439,268,0.878,276,3.198,283,1.645,296,2.168,324,2.937,350,1.274,357,1.388,362,1.274,366,2.641,369,1.859,370,2.759,372,2.62,374,3.279,376,5.43,379,5.651,390,2.072,395,2.242,401,1.819,403,4.398,406,1.451,413,2.072,415,4.394,418,2.072,438,4.029,445,5.087,466,1.541,796,1.969,803,3.202,880,2.785,901,3.454,903,3.454,920,3.771,1031,1.672,1279,3.771,1429,3.202,2042,3.771,2043,2.641,2044,4.837,2045,5.642,2046,6.154,2047,3.388,2048,3.388,2049,6.508,2050,6.768,2051,3.388,2052,6.154,2053,7.518,2054,4.837,2055,4.837,2056,4.194,2057,4.837,2058,6.154,2059,4.194,2060,6.154,2061,6.154,2062,6.768,2063,4.837,2064,4.837,2065,4.194,2066,4.837,2067,4.837,2068,3.388,2069,4.837,2070,4.837,2071,3.388,2072,4.837,2073,4.194,2074,2.937,2075,3.388,2076,2.937,2077,3.388,2078,2.937,2079,3.388,2080,2.937,2081,3.388,2082,4.837,2083,3.388,2084,3.388,2085,2.641,2086,2.937,2087,2.641,2088,4.837,2089,2.937,2090,2.937,2091,3.388,2092,3.388,2093,4.194,2094,4.837,2095,4.194,2096,3.388,2097,3.388,2098,3.388,2099,3.388,2100,3.388]],["title/components/WaterRightDetailComponent.html",[0,0.662,103,1.249]],["body/components/WaterRightDetailComponent.html",[0,0.68,1,0.65,2,1.195,3,0.083,4,0.083,5,0.767,6,0.767,7,0.767,8,0.074,11,1.963,16,1.1,17,1.798,18,0.65,19,2.615,21,1.424,23,0.127,24,0.66,26,0.432,27,2.684,28,0.889,32,1.232,35,0.919,39,0.624,40,0.015,41,1.419,42,0.38,43,0.452,44,1.054,49,0.279,50,0.137,55,0.965,56,0.083,57,0.1,58,0.677,62,0.767,63,1.246,64,1.056,65,0.625,66,1.812,67,0.767,68,0.401,69,0.767,70,0.65,71,0.767,72,0.65,73,0.767,74,0.625,75,2.135,76,0.65,77,0.767,78,0.65,79,0.767,80,0.625,81,0.625,82,0.767,83,0.601,84,0.706,85,0.767,86,0.65,87,0.767,88,0.625,89,0.767,90,1.419,91,0.767,92,0.625,93,1.566,94,0.677,95,1.246,96,0.625,97,0.65,98,0.767,99,0.935,100,0.65,101,0.767,102,0.767,103,1.476,104,2.387,105,2.726,106,1.508,107,0.677,108,0.625,109,0.767,110,0.625,111,0.735,112,0.767,113,0.006,114,0.006,151,0.965,152,0.965,153,0.625,187,0.534,209,2.269,217,0.634,223,0.473,224,0.432,229,0.833,234,1.246,258,0.423,263,1.08,268,0.624,283,0.803,405,1.743,455,1.98,466,0.868,500,4.242,528,2.655,535,3.298,633,1.137,641,1.295,688,1.525,790,1.073,797,2.856,798,2.655,801,2.481,802,2.534,854,4.419,940,2.422,941,3.18,942,4.813,945,1.525,946,2.754,948,1.651,950,3.602,951,2.856,954,1.696,955,3.057,970,1.696,971,1.696,972,1.525,974,1.696,978,1.696,981,1.525,982,1.525,986,1.696,1000,3.6,1003,1.696,1007,1.525,1050,1.525,1518,3.959,1623,2.476,1888,1.696,1902,1.696,1906,2.754,2095,2.754,2101,4.813,2102,4.813,2103,4.618,2104,3.177,2105,3.298,2106,1.956,2107,1.956,2108,3.177,2109,1.956,2110,3.177,2111,3.127,2112,1.956,2113,1.956,2114,1.525,2115,1.956,2116,2.476,2117,1.956,2118,1.956,2119,1.696,2120,1.956,2121,1.956,2122,1.956,2123,1.956,2124,1.956,2125,3.177,2126,1.956,2127,1.956,2128,1.956,2129,1.956,2130,1.956,2131,1.956,2132,1.956,2133,1.956,2134,1.956,2135,1.956,2136,1.956,2137,1.956,2138,1.956,2139,1.956,2140,1.956,2141,1.956,2142,1.956,2143,8.055,2144,1.956,2145,1.956,2146,3.478,2147,1.956,2148,1.956,2149,1.956,2150,1.956,2151,6.346,2152,3.177,2153,3.177,2154,3.177,2155,5.441,2156,3.177,2157,3.177,2158,3.177,2159,3.177,2160,3.177,2161,3.177,2162,3.177,2163,3.177,2164,3.177,2165,3.177,2166,4.618,2167,3.177,2168,3.177,2169,3.177,2170,3.177,2171,3.177,2172,3.177,2173,3.177,2174,3.177,2175,3.177,2176,3.177,2177,3.177,2178,3.177,2179,3.177,2180,4.618,2181,4.618,2182,3.177,2183,3.177,2184,3.177,2185,6.346,2186,3.177,2187,3.177,2188,3.177,2189,3.177,2190,3.177,2191,3.177,2192,3.177,2193,3.177,2194,3.177,2195,3.177,2196,3.177,2197,3.177,2198,3.177,2199,3.177,2200,3.177,2201,3.177,2202,3.177,2203,3.177,2204,3.177,2205,3.177,2206,3.177,2207,3.177,2208,3.177,2209,3.177,2210,3.177,2211,3.177,2212,3.177,2213,3.177,2214,3.177,2215,3.177,2216,3.177,2217,3.177,2218,3.177,2219,3.177,2220,3.177,2221,3.177,2222,3.177,2223,3.177,2224,3.177,2225,3.177,2226,3.177,2227,3.177,2228,3.177,2229,3.177,2230,3.177,2231,3.177,2232,3.177,2233,3.177]],["title/injectables/WaterRightsService.html",[256,0.438,2105,2.792]],["body/injectables/WaterRightsService.html",[3,0.17,4,0.17,8,0.153,14,3.138,20,1.1,23,0.262,26,0.742,28,0.921,39,0.849,40,0.015,42,0.564,43,0.573,49,0.324,50,0.282,56,0.262,57,0.206,68,0.464,93,1.1,104,1.189,113,0.01,114,0.01,142,1.339,153,1.286,182,2.119,187,1.1,194,1.452,217,1.089,221,2.993,223,0.921,224,0.842,253,1.968,255,2.563,256,0.611,258,0.87,261,1.143,263,1.275,268,1.032,283,1.847,357,2.234,362,1.514,369,2.209,370,2.973,372,2.051,389,2.773,390,2.649,393,1.724,401,2.051,406,2.336,413,2.336,418,2.336,419,2.14,420,2.563,466,1.996,779,1.724,793,2.49,811,3.854,867,3.138,940,2.601,941,2.601,948,2.092,950,2.665,1001,1.987,1018,5.402,1020,1.892,1023,3.138,1024,4.729,1025,3.491,1030,3.17,1031,2.693,1032,2.835,1155,3.273,2033,3.138,2105,3.895,2111,4.252,2119,4.729,2146,3.491,2234,2.875,2235,5.454,2236,5.454,2237,4.026,2238,5.454,2239,4.026,2240,5.454,2241,4.026,2242,3.491,2243,3.491,2244,4.026,2245,5.75,2246,3.491,2247,5.454,2248,4.026,2249,5.454,2250,4.026,2251,3.491,2252,5.364,2253,4.026,2254,5.454,2255,4.026,2256,4.026,2257,4.026,2258,4.026,2259,4.026,2260,4.026,2261,4.026,2262,4.026,2263,4.026,2264,4.026,2265,4.026,2266,4.026,2267,4.026,2268,4.026,2269,4.026,2270,4.026,2271,4.026,2272,4.026,2273,4.026,2274,4.026]],["title/modules/WaterUsageForecastsModule.html",[115,1.674,2275,2.792]],["body/modules/WaterUsageForecastsModule.html",[3,0.209,4,0.209,8,0.187,40,0.015,49,0.369,50,0.345,56,0.209,57,0.253,74,2.415,92,2.415,94,2.158,97,2.513,99,1.147,103,2.415,105,2.248,113,0.012,114,0.012,117,2.319,118,3.419,125,4.146,132,3.622,133,2.565,134,2.708,136,4.125,138,3.854,143,3.854,150,4.125,151,2.436,152,2.436,153,1.577,185,4.858,187,1.348,940,1.936,941,2.445,943,3.847,944,3.847,1070,3.052,1149,4.451,1872,3.847,2101,3.847,2102,3.847,2275,5.745,2276,4.279,2277,4.935,2278,4.279,2279,4.935,2280,4.935,2281,6.232,2282,4.279,2283,4.279,2284,6.232,2285,6.232,2286,4.935,2287,6.232,2288,4.935,2289,4.279]],["title/injectables/WaterUsageForecastsService.html",[256,0.438,1192,2.418]],["body/injectables/WaterUsageForecastsService.html",[3,0.161,4,0.161,8,0.144,10,0.383,20,1.038,23,0.247,26,0.817,28,0.781,39,0.591,40,0.016,42,0.449,43,1.072,49,0.317,50,0.266,56,0.287,57,0.194,68,0.42,76,1.264,99,1.105,104,1.548,113,0.011,114,0.01,142,1.264,153,1.214,182,1.214,187,1.038,194,1.371,210,2.208,217,1.047,221,2.948,223,0.781,224,0.713,229,1.089,231,2.464,233,2.257,234,1.491,250,2.085,253,1.838,256,0.588,258,0.821,261,1.079,263,1.226,268,0.591,283,1.325,348,2.152,357,1.557,362,1.429,369,2.085,370,2.901,372,1.972,389,2.35,390,2.245,393,1.627,401,1.429,405,2.085,406,1.627,410,2.208,413,1.627,418,1.627,419,1.491,420,1.786,436,2.085,466,1.966,524,1.975,779,1.627,784,1.701,808,2.057,940,2.355,941,2.876,1020,1.786,1030,2.208,1031,1.876,1032,1.975,1154,3.713,1155,2.963,1156,2.208,1157,3.973,1158,2.876,1159,2.35,1160,2.515,1161,2.713,1162,4.284,1163,3.973,1164,3.973,1165,3.973,1166,2.35,1167,2.713,1168,2.35,1169,2.515,1170,2.713,1171,2.515,1172,4.287,1173,2.713,1174,5.138,1175,3.713,1176,2.713,1177,2.713,1178,2.713,1179,2.713,1180,2.713,1181,2.713,1182,3.744,1183,2.713,1184,2.515,1185,2.515,1186,2.713,1187,2.35,1188,2.515,1189,2.713,1190,2.713,1191,3.744,1192,3.242,1193,4.287,1194,4.287,1195,4.287,1196,4.287,1197,4.287,1198,4.287,1199,2.713,1200,2.713,1201,2.713,1202,2.713,1429,2.515,2290,3.799,2291,3.799,2292,3.799]],["title/injectables/WaterUsageHistoryService.html",[256,0.438,959,2.792]],["body/injectables/WaterUsageHistoryService.html",[3,0.201,4,0.201,8,0.181,20,1.3,23,0.31,26,0.828,28,0.907,39,0.74,40,0.015,42,0.53,43,0.956,49,0.342,50,0.333,56,0.257,57,0.244,68,0.426,93,1.3,99,0.876,104,1.405,113,0.011,114,0.011,142,1.582,153,1.52,182,1.946,187,1.3,194,1.716,217,1.216,221,3.117,223,0.907,224,0.828,253,1.907,256,0.683,258,1.028,261,1.351,263,1.424,268,0.74,283,1.697,357,1.949,362,1.789,369,2.61,370,3.174,372,2.29,389,2.729,390,2.608,393,2.037,401,1.789,406,2.037,413,2.037,418,2.037,419,1.866,420,2.236,465,3.709,466,1.663,779,2.037,940,2.634,941,3.078,950,4.03,952,5.279,959,4.348,969,3.709,996,5.823,1020,2.236,1023,3.709,1030,2.765,1031,2.349,1032,2.472,1055,3.709,1155,3.315,2251,4.125,2293,3.397,2294,6.089,2295,4.757,2296,6.089,2297,4.757,2298,4.757,2299,4.757,2300,4.757,2301,4.757]],["title/interfaces/WisdomInterface.html",[784,1.027,2302,2.792]],["body/interfaces/WisdomInterface.html",[0,1.277,3,0.206,4,0.206,8,0.185,10,0.492,13,5.364,23,0.318,24,1.285,40,0.015,42,0.509,43,0.967,45,4.418,49,0.228,56,0.206,68,0.433,113,0.012,114,0.012,115,3.06,117,3.358,179,4.822,187,1.332,203,4.729,234,3.09,342,4.095,445,5.38,784,1.937,786,2.292,1153,4.822,1158,3.727,1217,3.713,1261,4.418,1292,4.418,1347,5.364,1430,5.364,1540,4.822,1549,5.364,1920,5.38,2031,4.822,2302,5.102,2303,4.229,2304,6.186,2305,5.569,2306,6.186,2307,6.186,2308,6.186,2309,6.186,2310,6.186,2311,5.364]],["title/modules/WisdomModule.html",[115,1.674,125,2.145]],["body/modules/WisdomModule.html",[3,0.203,4,0.203,8,0.182,40,0.015,49,0.364,50,0.336,56,0.203,57,0.246,70,2.644,72,2.644,83,2.442,84,1.733,90,2.442,108,2.541,113,0.011,114,0.011,117,2.258,118,3.362,125,4.46,132,3.561,133,2.497,134,2.636,136,4.056,138,2.971,143,3.789,150,4.056,151,2.372,152,2.372,185,4.776,187,1.313,201,4.376,1070,2.971,1149,4.376,1258,3.745,2312,4.166,2313,4.166,2314,4.166,2315,4.805,2316,4.805,2317,4.805,2318,4.805,2319,4.805,2320,4.805,2321,4.805]],["title/coverage.html",[2322,4.636]],["body/coverage.html",[0,1.245,1,0.825,8,0.094,9,2.15,40,0.015,42,0.186,57,0.196,65,1.225,70,0.825,72,0.825,74,0.792,78,0.825,80,0.792,81,0.792,83,0.762,86,0.825,88,0.792,90,0.762,92,0.792,94,1.328,96,0.792,97,0.825,99,0.706,100,0.825,103,0.792,105,1.383,108,0.792,110,0.792,113,0.007,114,0.007,126,1.641,127,1.641,128,1.641,129,1.534,130,1.641,131,1.641,158,1.641,163,1.771,167,1.771,188,1.641,190,1.641,192,1.641,202,2.573,204,2.15,219,1.441,220,1.534,234,0.973,256,0.817,283,0.627,293,1.893,296,2.82,327,2.583,329,2.989,349,1.933,363,3.655,392,1.771,393,1.062,394,1.771,402,1.933,415,1.771,433,4.447,434,4.64,480,1.933,482,1.933,484,1.933,485,1.933,509,2.15,510,2.989,514,3.655,516,1.933,524,1.289,527,2.15,582,1.771,771,2.15,779,1.062,780,3.776,784,1.79,785,1.641,787,2.989,802,1.361,816,2.15,859,2.15,860,2.15,897,2.15,899,1.771,940,2.944,941,3.036,942,2.989,943,1.933,944,1.933,945,2.989,951,1.534,957,1.771,959,1.771,980,1.933,1014,2.739,1020,2.681,1033,2.15,1040,2.15,1051,1.641,1093,2.15,1119,2.15,1137,2.15,1150,1.933,1151,2.15,1154,1.534,1155,3.292,1156,3.316,1166,1.534,1187,1.534,1192,1.534,1204,2.15,1215,1.771,1226,1.441,1257,2.15,1258,1.933,1259,2.15,1285,2.15,1286,2.15,1298,1.441,1299,2.989,1300,2.989,1308,1.534,1319,2.15,1332,1.534,1348,5.728,1365,6.4,1383,2.15,1396,2.15,1414,2.15,1456,2.15,1510,1.933,1532,1.641,1786,1.771,1787,4.074,1806,1.771,1808,1.771,1871,2.15,1872,1.933,1873,3.325,1900,2.15,1907,2.15,1908,2.15,1913,2.739,1934,3.104,1935,2.739,1936,2.15,1946,1.933,1947,2.15,1948,1.771,1949,2.15,1950,2.15,1968,2.15,1989,3.655,2001,1.933,2002,1.933,2009,1.933,2010,2.15,2016,2.989,2017,3.655,2042,1.933,2043,3.655,2085,1.933,2087,1.933,2101,1.933,2102,1.933,2105,1.771,2114,1.933,2116,1.933,2234,2.739,2289,2.15,2293,2.739,2302,3.768,2303,2.15,2322,2.15,2323,2.48,2324,2.15,2325,2.48,2326,3.325,2327,7.951,2328,8.006,2329,6.29,2330,2.48,2331,5.276,2332,3.835,2333,6.669,2334,4.689,2335,6.813,2336,4.947,2337,3.325,2338,2.15,2339,2.15,2340,2.15,2341,2.15,2342,2.48,2343,2.989,2344,2.15,2345,2.15,2346,4.947,2347,2.15,2348,2.15,2349,2.15,2350,2.15,2351,5.276,2352,2.48,2353,2.15,2354,3.325,2355,3.325,2356,3.325,2357,2.15,2358,4.066,2359,2.15,2360,3.325,2361,3.325,2362,6.032,2363,2.15,2364,2.48,2365,2.48,2366,2.48,2367,2.48,2368,2.48,2369,2.48,2370,2.48,2371,2.48,2372,2.48,2373,2.48,2374,2.48,2375,2.15,2376,2.48,2377,2.48]],["title/dependencies.html",[118,2.581,2378,2.826]],["body/dependencies.html",[34,2.808,35,2.539,38,4.685,40,0.015,50,0.378,52,4.685,53,4.685,54,4.685,113,0.012,114,0.012,118,2.964,145,4.212,147,5.717,148,4.708,151,2.667,152,2.667,187,1.476,258,1.168,396,4.685,646,4.685,863,5.139,1001,2.667,1070,3.342,1631,4.685,1804,4.212,2074,4.685,2282,4.685,2283,4.685,2379,5.403,2380,7.897,2381,5.403,2382,5.403,2383,6.593,2384,5.403,2385,5.403,2386,5.403,2387,5.403,2388,4.685,2389,5.403,2390,5.403,2391,5.403,2392,5.403,2393,5.403,2394,5.403,2395,5.403,2396,5.403,2397,5.403,2398,5.403,2399,5.403,2400,5.403,2401,5.403,2402,5.403,2403,5.403]],["title/miscellaneous/enumerations.html",[2404,1.788,2405,4.08]],["body/miscellaneous/enumerations.html",[23,0.375,26,0.783,40,0.015,44,2.082,93,1.572,113,0.013,114,0.013,238,5.339,250,3.158,808,2.258,940,2.258,941,2.869,1155,2.842,1156,3.981,1157,3.81,1160,3.81,1162,4.534,1163,4.534,1164,4.534,1165,4.534,1175,4.236,1534,4.236,1623,5.339,2343,4.487,2404,3.158,2405,4.991,2406,4.487,2407,4.991,2408,5.756,2409,6.849]],["title/miscellaneous/functions.html",[2404,1.788,2410,4.08]],["body/miscellaneous/functions.html",[0,0.719,10,0.747,23,0.276,35,1.994,39,1.152,40,0.015,42,0.543,43,1.071,68,0.518,93,1.735,99,0.781,113,0.011,114,0.011,223,1.103,224,1.007,229,1.32,230,1.738,234,2.492,237,3.495,241,3.679,268,0.66,281,3.679,296,2.848,298,3.284,348,2.253,388,2.328,401,1.596,448,3.1,455,2.789,466,2.023,795,4.035,797,3.495,819,3.679,834,3.679,854,3.87,948,2.205,1001,2.095,1068,4.405,1126,3.03,1139,2.205,1158,3.1,1184,2.809,1278,3.679,1429,2.809,1433,3.308,1534,4.579,1562,5.509,1726,3.679,1727,5.874,1807,2.809,1960,3.679,1962,4.9,2073,3.679,2089,3.679,2090,3.679,2114,4.405,2252,3.679,2305,4.405,2343,3.308,2344,4.9,2345,4.9,2346,3.679,2347,4.9,2348,4.9,2349,4.9,2350,4.9,2404,2.328,2407,4.9,2410,3.679,2411,7.054,2412,4.243,2413,4.243,2414,4.243,2415,4.243,2416,5.651,2417,4.243,2418,4.243,2419,4.243,2420,4.243,2421,4.243,2422,4.243,2423,4.243,2424,4.243,2425,4.243,2426,4.243,2427,4.243,2428,4.243,2429,4.243,2430,4.243,2431,4.243,2432,4.243,2433,4.243,2434,4.243,2435,5.651,2436,6.353,2437,4.243,2438,4.243,2439,4.243,2440,4.243,2441,4.243,2442,4.243,2443,3.679,2444,4.243,2445,4.243,2446,6.353,2447,3.679,2448,4.243,2449,4.243,2450,4.243,2451,7.054,2452,4.243,2453,4.243,2454,4.243,2455,4.243]],["title/index.html",[23,0.255,2456,3.39]],["body/index.html",[1,2.435,2,1.527,40,0.015,70,2.435,72,2.435,74,1.985,78,2.066,80,2.34,81,1.985,83,2.249,86,2.066,88,1.985,90,2.249,92,1.985,96,2.34,97,2.066,100,2.066,103,1.985,107,1.406,108,2.34,110,1.985,113,0.01,114,0.01,116,5.846,117,1.908,118,3.009,119,3.52,120,3.52,121,3.52,122,3.52,123,3.52,124,4.112,125,4.411,126,4.112,127,4.112,128,4.112,129,3.842,130,4.112,131,4.112,132,3.188,133,2.11,134,2.227,186,2.511,203,2.687,362,1.527,786,1.908,868,2.899,1000,3.165,1142,5.229,1143,3.52,1144,3.52,1146,3.52,1725,3.631,1939,5.229,1940,3.52,1941,3.52,1942,3.52,2275,5.538,2276,3.52,2278,3.52,2312,3.52,2313,3.52,2314,3.52,2456,3.52,2457,4.06,2458,4.06,2459,4.06,2460,5.485]],["title/modules.html",[117,2.513]],["body/modules.html",[40,0.013,113,0.013,114,0.013,116,4.298,117,2.829,124,3.984,125,3.302,148,5.586,275,4.298,1142,4.298,1939,4.298,2275,4.298,2461,7.822,2462,7.822,2463,7.92,2464,6.019]],["title/properties.html",[24,0.978,2378,2.826]],["body/properties.html",[10,0.635,15,4.905,24,1.307,40,0.015,113,0.013,114,0.013,1807,4.165,2013,5.456,2388,5.456,2465,6.292]],["title/routes.html",[186,3.307]],["body/routes.html",[40,0.014,113,0.014,114,0.014,186,3.96]],["title/miscellaneous/typealiases.html",[2404,1.788,2466,4.705]],["body/miscellaneous/typealiases.html",[23,0.248,34,2.73,40,0.013,42,0.595,43,0.968,55,2.593,68,0.453,99,0.967,113,0.01,114,0.01,163,2.72,196,2.97,206,4.31,247,2.214,250,2.882,287,2.522,310,2.356,332,1.708,348,1.267,397,4.554,399,4.554,454,2.214,639,2.214,822,2.522,940,2.358,941,2.667,962,4.094,969,4.094,994,3.303,1014,2.72,1018,4.094,1155,2.593,1158,2.09,1203,5.584,1217,1.98,1226,2.214,1232,4.856,1292,2.72,1302,3.494,1476,4.554,1478,4.554,1510,2.97,1515,4.554,1540,2.97,1545,3.303,1588,4.554,1632,3.303,1633,3.303,1634,3.303,1635,3.303,1636,3.303,1795,2.97,1958,3.303,2009,2.97,2056,3.303,2059,3.303,2065,3.303,2076,4.554,2078,4.554,2080,4.554,2093,3.303,2111,4.094,2234,4.627,2243,4.554,2245,4.554,2246,5.618,2293,3.751,2324,3.303,2404,2.09,2406,5.051,2467,3.809,2468,3.303,2469,5.252,2470,3.809,2471,5.252,2472,3.809,2473,5.252,2474,3.809,2475,3.809,2476,5.252,2477,3.809,2478,5.252,2479,3.809,2480,5.252,2481,3.809,2482,5.252,2483,6.797,2484,7.2,2485,7.336,2486,5.252,2487,3.809,2488,5.252,2489,3.809,2490,5.252,2491,3.809,2492,5.252,2493,3.809,2494,3.809,2495,3.809,2496,3.809,2497,3.809,2498,5.252,2499,3.809,2500,3.809,2501,3.809,2502,4.554,2503,6.797,2504,6.011,2505,5.252,2506,5.252,2507,6.011,2508,3.809,2509,3.809,2510,3.809,2511,3.809,2512,6.011,2513,5.252,2514,3.303,2515,3.809,2516,3.809,2517,6.011,2518,5.252,2519,3.809,2520,3.809,2521,5.252,2522,3.809,2523,3.809,2524,3.809,2525,3.303,2526,5.252,2527,3.809,2528,3.809,2529,3.809,2530,3.303,2531,3.809,2532,3.809,2533,3.809,2534,6.479,2535,6.011,2536,3.809,2537,3.809,2538,3.809,2539,3.809,2540,3.809,2541,3.809,2542,3.809,2543,3.809,2544,3.809,2545,3.809,2546,3.809,2547,3.809,2548,3.809,2549,3.809,2550,3.809,2551,3.809,2552,3.809,2553,3.809,2554,3.809]],["title/miscellaneous/variables.html",[2404,1.788,2555,4.08]],["body/miscellaneous/variables.html",[0,0.929,12,1.229,23,0.129,32,2.392,34,3.315,35,1.906,40,0.015,41,0.611,42,0.569,43,1,44,2.046,45,2.509,51,1.724,55,2.529,68,0.139,74,0.635,80,0.635,84,0.717,90,0.611,92,0.635,93,1.108,94,1.115,96,0.635,97,0.661,99,0.593,103,0.635,104,2.026,106,0.748,113,0.008,114,0.006,115,2.194,158,3.086,169,1.589,178,3.993,182,1.921,195,1.316,196,2.509,199,3.162,206,1.766,210,1.871,211,3.39,212,1.55,214,2.299,229,0.413,230,2.544,232,2.81,234,2.264,248,1.724,265,1.55,268,0.501,276,1.673,282,0.981,283,1.519,287,1.316,293,2.302,296,1.443,322,1.316,329,1.55,330,3.635,331,1.724,332,1.443,342,2.131,348,1.999,349,2.509,357,1.319,363,1.55,366,2.509,373,1.55,374,2.357,388,1.091,389,0.891,390,0.851,392,2.299,393,1.379,394,2.299,395,1.316,401,2.171,402,2.509,403,4.274,404,1.724,405,1.091,406,2.194,407,1.55,408,1.724,409,2.791,410,1.871,411,2.791,412,1.724,413,1.997,414,1.724,415,2.299,417,1.724,418,1.379,419,0.78,420,0.934,421,1.724,422,2.264,423,1.724,433,1.55,434,4.292,445,3.658,448,1.091,454,2.357,464,1.724,465,1.55,466,0.543,480,2.509,481,1.724,482,2.509,483,1.724,484,2.509,485,2.509,514,4.841,515,5.531,516,2.509,524,3,664,3.168,665,1.55,779,1.379,780,3.39,784,1.066,796,1.155,822,1.316,866,1.724,880,0.981,898,1.42,899,3.915,911,2.509,919,1.55,940,2.264,941,2.921,980,2.509,1014,1.42,1020,2.998,1021,1.724,1034,1.55,1041,1.55,1050,1.55,1055,1.55,1056,1.42,1065,1.55,1139,2.849,1155,2.002,1156,1.871,1159,3.57,1217,1.033,1225,3.635,1226,3.186,1227,2.509,1232,2.685,1273,1.55,1287,1.42,1305,1.229,1320,1.42,1345,1.724,1466,1.724,1470,1.724,1471,1.724,1491,1.55,1514,3.517,1524,2.791,1529,1.724,1543,1.42,1579,4.441,1591,1.724,1630,1.724,1725,1.316,1787,1.42,1788,1.55,1789,3.162,1800,2.509,1805,1.55,1806,2.299,1807,1.316,1808,2.299,1824,1.55,1887,1.724,1913,3.33,1920,2.897,1922,1.724,1934,1.316,1937,3.162,1948,1.42,1979,1.724,1989,1.55,2001,2.509,2002,2.509,2016,1.55,2017,3.635,2023,1.724,2024,1.724,2025,1.724,2026,1.724,2030,1.724,2031,1.55,2032,4.441,2033,3.635,2034,1.724,2035,1.724,2043,1.55,2085,2.509,2086,1.724,2087,2.509,2116,2.509,2234,2.299,2242,1.724,2293,2.299,2302,4.435,2305,3.162,2311,1.724,2326,3.517,2336,4.441,2337,4.043,2338,2.791,2339,2.791,2340,1.724,2341,2.791,2353,1.724,2354,1.724,2355,5.212,2356,1.724,2357,1.724,2358,4.754,2359,1.724,2360,1.724,2361,3.517,2363,1.724,2375,1.724,2404,2.225,2406,3.162,2443,1.724,2447,1.724,2468,1.724,2502,2.791,2514,1.724,2525,1.724,2530,1.724,2555,1.724,2556,4.663,2557,4.056,2558,3.219,2559,3.219,2560,3.219,2561,3.219,2562,3.219,2563,1.988,2564,1.988,2565,3.219,2566,1.988,2567,1.988,2568,1.988,2569,5.122,2570,4.056,2571,3.219,2572,3.219,2573,3.219,2574,3.219,2575,4.056,2576,4.056,2577,1.988,2578,1.988,2579,1.988,2580,1.988,2581,3.219,2582,1.988,2583,3.219,2584,4.663,2585,1.988,2586,3.219,2587,3.219,2588,1.988,2589,1.988,2590,1.988,2591,1.988,2592,1.988,2593,1.988,2594,1.988,2595,1.988,2596,3.219,2597,1.988,2598,3.219,2599,1.988,2600,1.988,2601,4.056,2602,1.988,2603,3.219,2604,1.988,2605,1.988,2606,1.988,2607,1.988,2608,1.988,2609,1.988,2610,1.988,2611,1.988,2612,1.988,2613,1.988,2614,1.988,2615,1.988,2616,1.988,2617,1.988,2618,3.219,2619,3.219,2620,1.988,2621,1.988,2622,1.988,2623,1.988,2624,4.056,2625,1.988,2626,1.988,2627,1.988,2628,1.988,2629,1.988,2630,1.988,2631,1.988,2632,5.122,2633,1.988,2634,1.988,2635,1.988,2636,1.988,2637,1.988,2638,1.988,2639,4.056]]],"invertedIndex":[["",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"components/BimComponent.html":{},"injectables/BimService.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/ExampleComponent.html":{},"modules/ExampleModule.html":{},"injectables/ExampleService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"interfaces/LayerData.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"interfaces/Marker.html":{},"classes/ModuleProvider.html":{},"components/PumpModelComponent.html":{},"modules/PumpModelModule.html":{},"injectables/PumpModelService.html":{},"guards/QueryParameterGuard.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"interfaces/ShapeData.html":{},"components/SideBarComponent.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"interfaces/WisdomInterface.html":{},"modules/WisdomModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":1348,"title":{},"body":{"components/LoaderComponent.html":{},"components/MapComponent.html":{},"coverage.html":{}}}],["0.1.0",{"_index":2388,"title":{},"body":{"dependencies.html":{},"properties.html":{}}}],["0.11.8",{"_index":2403,"title":{},"body":{"dependencies.html":{}}}],["0.3s",{"_index":1361,"title":{},"body":{"components/LoaderComponent.html":{}}}],["0.5.0",{"_index":2393,"title":{},"body":{"dependencies.html":{}}}],["0.6s",{"_index":1363,"title":{},"body":{"components/LoaderComponent.html":{}}}],["0.7s",{"_index":1360,"title":{},"body":{"components/LoaderComponent.html":{}}}],["0.8",{"_index":1368,"title":{},"body":{"components/LoaderComponent.html":{}}}],["0.8s",{"_index":1373,"title":{},"body":{"components/LoaderComponent.html":{}}}],["0.9.4",{"_index":2385,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2362,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2370,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2331,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2364,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2369,"title":{},"body":{"coverage.html":{}}}],["0/52",{"_index":2330,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2372,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2371,"title":{},"body":{"coverage.html":{}}}],["0s",{"_index":1358,"title":{},"body":{"components/LoaderComponent.html":{}}}],["1",{"_index":811,"title":{},"body":{"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"components/LoaderComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/WaterRightsService.html":{}}}],["1.0.1",{"_index":2398,"title":{},"body":{"dependencies.html":{}}}],["1.11.5",{"_index":2392,"title":{},"body":{"dependencies.html":{}}}],["1.4s",{"_index":1357,"title":{},"body":{"components/LoaderComponent.html":{}}}],["1.5.3",{"_index":2396,"title":{},"body":{"dependencies.html":{}}}],["1.8.0",{"_index":2395,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":2328,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":2366,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1000,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/WaterRightDetailComponent.html":{},"index.html":{}}}],["100",{"_index":1365,"title":{},"body":{"components/LoaderComponent.html":{},"components/MapComponent.html":{},"coverage.html":{}}}],["10px",{"_index":1370,"title":{},"body":{"components/LoaderComponent.html":{}}}],["12",{"_index":2149,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["14.0.0",{"_index":2382,"title":{},"body":{"dependencies.html":{}}}],["14.2.4",{"_index":2380,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":2459,"title":{},"body":{"index.html":{}}}],["15px",{"_index":1366,"title":{},"body":{"components/LoaderComponent.html":{}}}],["16",{"_index":2458,"title":{},"body":{"index.html":{}}}],["16/9",{"_index":584,"title":{},"body":{"components/BimComponent.html":{}}}],["1:25000",{"_index":2224,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["1].recordedat.toisostring().substring(0",{"_index":999,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["1f5aec",{"_index":1565,"title":{},"body":{"components/MapComponent.html":{}}}],["1s",{"_index":1351,"title":{},"body":{"components/LoaderComponent.html":{}}}],["2",{"_index":1725,"title":{},"body":{"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["2.0.1",{"_index":2383,"title":{},"body":{"dependencies.html":{}}}],["2.4.0",{"_index":2401,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":2351,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":2368,"title":{},"body":{"coverage.html":{}}}],["2000",{"_index":1375,"title":{},"body":{"components/LoaderComponent.html":{}}}],["2022",{"_index":1722,"title":{},"body":{"components/MapComponent.html":{}}}],["21/21",{"_index":2374,"title":{},"body":{"coverage.html":{}}}],["29/29",{"_index":2342,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":2460,"title":{},"body":{"index.html":{}}}],["3.8.2",{"_index":2390,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":2335,"title":{},"body":{"coverage.html":{}}}],["31",{"_index":2150,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["33",{"_index":2365,"title":{},"body":{"coverage.html":{}}}],["35",{"_index":2584,"title":{},"body":{"miscellaneous/variables.html":{}}}],["39;01&#39",{"_index":1619,"title":{},"body":{"components/MapComponent.html":{}}}],["39;034030000000&#39",{"_index":1620,"title":{},"body":{"components/MapComponent.html":{}}}],["39;all",{"_index":1612,"title":{},"body":{"components/MapComponent.html":{}}}],["39;only",{"_index":1616,"title":{},"body":{"components/MapComponent.html":{}}}],["39;show",{"_index":1622,"title":{},"body":{"components/MapComponent.html":{}}}],["4",{"_index":1078,"title":{},"body":{"components/ErrorComponent.html":{}}}],["4.0.1",{"_index":2397,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":2329,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":320,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["401",{"_index":361,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/LoginComponent.html":{}}}],["409",{"_index":2100,"title":{},"body":{"injectables/UserService.html":{}}}],["5",{"_index":1076,"title":{},"body":{"components/ErrorComponent.html":{}}}],["5/5",{"_index":2333,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1369,"title":{},"body":{"components/LoaderComponent.html":{}}}],["500px",{"_index":1583,"title":{},"body":{"components/MapComponent.html":{}}}],["53.1434501",{"_index":1576,"title":{},"body":{"components/MapComponent.html":{}}}],["56px",{"_index":1377,"title":{},"body":{"components/LoaderComponent.html":{}}}],["6",{"_index":2457,"title":{},"body":{"index.html":{}}}],["6/6",{"_index":2334,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":2367,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1605,"title":{},"body":{"components/MapComponent.html":{}}}],["7.1.0",{"_index":2394,"title":{},"body":{"dependencies.html":{}}}],["7.5.7",{"_index":2399,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":2332,"title":{},"body":{"coverage.html":{}}}],["8.2145521",{"_index":1577,"title":{},"body":{"components/MapComponent.html":{}}}],["9/9",{"_index":2352,"title":{},"body":{"coverage.html":{}}}],["9999",{"_index":2148,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["_displaytexts",{"_index":1418,"title":{},"body":{"injectables/LoaderService.html":{}}}],["_loading",{"_index":1419,"title":{},"body":{"injectables/LoaderService.html":{}}}],["a0a0a0",{"_index":2612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["abc123",{"_index":2433,"title":{},"body":{"miscellaneous/functions.html":{}}}],["access",{"_index":210,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthStorageService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/variables.html":{}}}],["access_token_key",{"_index":480,"title":{},"body":{"injectables/AuthStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["accessors",{"_index":441,"title":{},"body":{"injectables/AuthStorageService.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/ErrorComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"injectables/LoaderService.html":{},"components/MapComponent.html":{},"injectables/SettingsStorageService.html":{}}}],["accesstoken",{"_index":442,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["accesstoken(token",{"_index":494,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["according",{"_index":663,"title":{},"body":{"components/BimComponent.html":{}}}],["account",{"_index":2053,"title":{},"body":{"injectables/UserService.html":{}}}],["accounts",{"_index":2069,"title":{},"body":{"injectables/UserService.html":{}}}],["accumulated",{"_index":1167,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["accumulations",{"_index":1172,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["action",{"_index":2515,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["activated",{"_index":1960,"title":{},"body":{"guards/QueryParameterGuard.html":{},"miscellaneous/functions.html":{}}}],["activatedroute",{"_index":955,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"injectables/ErrorService.html":{},"components/LoginComponent.html":{},"components/MapSelectViewComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["activatedroutesnapshot",{"_index":237,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"guards/LoaderGuard.html":{},"guards/QueryParameterGuard.html":{},"miscellaneous/functions.html":{}}}],["active",{"_index":867,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{},"components/LoaderComponent.html":{},"injectables/WaterRightsService.html":{}}}],["actual_component",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/BimComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/PumpModelComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["add",{"_index":1237,"title":{},"body":{"components/FrameComponent.html":{},"injectables/LoaderService.html":{},"classes/ModuleProvider.html":{}}}],["addloader",{"_index":1422,"title":{},"body":{"injectables/LoaderService.html":{}}}],["addloader(toresolve",{"_index":1424,"title":{},"body":{"injectables/LoaderService.html":{}}}],["adds",{"_index":1263,"title":{},"body":{"components/IonIconComponent.html":{}}}],["administration",{"_index":2409,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["afterviewinit",{"_index":528,"title":{},"body":{"components/BimComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/LoaderComponent.html":{},"components/MapComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["alias",{"_index":1632,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/typealiases.html":{}}}],["aliases",{"_index":2467,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":2598,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alive",{"_index":826,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["allow",{"_index":1053,"title":{},"body":{"components/ErrorComponent.html":{},"components/IonIconComponent.html":{},"components/MapComponent.html":{}}}],["allowed",{"_index":243,"title":{},"body":{"guards/AuthGuard.html":{}}}],["allows",{"_index":832,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"interceptors/LoaderInterceptor.html":{},"components/MapComponent.html":{}}}],["already",{"_index":1795,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{},"miscellaneous/typealiases.html":{}}}],["always",{"_index":407,"title":{},"body":{"injectables/AuthService.html":{},"components/MapComponent.html":{},"miscellaneous/variables.html":{}}}],["amount",{"_index":1975,"title":{},"body":{"interceptors/SanitizeUrlInterceptor.html":{}}}],["amounts",{"_index":1183,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["angular",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/IonIconComponent.html":{},"properties.html":{}}}],["angular/animations",{"_index":2379,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1070,"title":{},"body":{"components/ErrorComponent.html":{},"modules/ExampleModule.html":{},"modules/PumpModelModule.html":{},"modules/WaterUsageForecastsModule.html":{},"modules/WisdomModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interceptors/BaseUrlInterceptor.html":{},"injectables/BimService.html":{},"interceptors/CacheInterceptor.html":{},"injectables/ConsumersService.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"interceptors/LoaderInterceptor.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/UserService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["angular/compiler",{"_index":2074,"title":{},"body":{"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/core",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"components/BimComponent.html":{},"injectables/BimService.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/ExampleComponent.html":{},"modules/ExampleModule.html":{},"injectables/ExampleService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"components/PumpModelComponent.html":{},"modules/PumpModelModule.html":{},"injectables/PumpModelService.html":{},"guards/QueryParameterGuard.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"components/SideBarComponent.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"modules/WisdomModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":187,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"injectables/ErrorService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"guards/LoaderGuard.html":{},"components/LoginComponent.html":{},"components/MapSelectViewComponent.html":{},"classes/ModuleProvider.html":{},"guards/QueryParameterGuard.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"interfaces/WisdomInterface.html":{},"modules/WisdomModule.html":{},"dependencies.html":{}}}],["animation",{"_index":1324,"title":{},"body":{"components/LoaderComponent.html":{},"injectables/LoaderService.html":{}}}],["annotation",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["annotationplugin",{"_index":37,"title":{},"body":{"components/AppComponent.html":{}}}],["another",{"_index":913,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["any).options.padding",{"_index":1686,"title":{},"body":{"components/MapComponent.html":{}}}],["api",{"_index":524,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/WaterUsageForecastsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["api.ts",{"_index":2358,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["api_url",{"_index":1020,"title":{},"body":{"injectables/ConsumersService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apiurl",{"_index":2574,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BimComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/PumpModelComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["app.component",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":22,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BimComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/PumpModelComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"coverage.html":{},"index.html":{}}}],["append",{"_index":910,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["application",{"_index":1206,"title":{},"body":{"components/FrameComponent.html":{}}}],["application/json",{"_index":1031,"title":{},"body":{"injectables/ConsumersService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/UserService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["application/x",{"_index":417,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["appmodule",{"_index":116,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{}}}],["approutingmodule",{"_index":124,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["area",{"_index":2185,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["arg0",{"_index":2588,"title":{},"body":{"miscellaneous/variables.html":{}}}],["args",{"_index":683,"title":{},"body":{"components/BimComponent.html":{}}}],["array",{"_index":794,"title":{},"body":{"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"guards/QueryParameterGuard.html":{}}}],["array.from(this.selectedshapes[layerkey",{"_index":1784,"title":{},"body":{"components/MapComponent.html":{}}}],["arrays",{"_index":2529,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["aspect",{"_index":537,"title":{},"body":{"components/BimComponent.html":{}}}],["aspectratio",{"_index":652,"title":{},"body":{"components/BimComponent.html":{}}}],["assets/leaflet/images",{"_index":60,"title":{},"body":{"components/AppComponent.html":{}}}],["associated",{"_index":2062,"title":{},"body":{"injectables/UserService.html":{}}}],["association",{"_index":2211,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["async",{"_index":677,"title":{},"body":{"components/BimComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["asynchronously",{"_index":1823,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["attention",{"_index":1546,"title":{},"body":{"components/MapComponent.html":{}}}],["attribute",{"_index":1276,"title":{},"body":{"components/IonIconComponent.html":{},"guards/QueryParameterGuard.html":{}}}],["attribution",{"_index":1718,"title":{},"body":{"components/MapComponent.html":{}}}],["auth",{"_index":232,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"components/FrameComponent.html":{},"components/LoginComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["auth.service",{"_index":260,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["auth/auth",{"_index":1236,"title":{},"body":{"components/FrameComponent.html":{}}}],["auth/auth.guard",{"_index":189,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/ModuleProvider.html":{}}}],["auth/auth.interceptor",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/auth.service",{"_index":1235,"title":{},"body":{"components/FrameComponent.html":{}}}],["auth/login/login.component",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["auth_api",{"_index":2085,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth_url",{"_index":402,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authentication",{"_index":341,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["authguard",{"_index":188,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"classes/ModuleProvider.html":{},"coverage.html":{}}}],["authinterceptor",{"_index":126,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"coverage.html":{},"index.html":{}}}],["authority",{"_index":2155,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["authorization",{"_index":331,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"miscellaneous/variables.html":{}}}],["authorized",{"_index":2540,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["authrequest",{"_index":351,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["authservice",{"_index":220,"title":{"injectables/AuthService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/FrameComponent.html":{},"components/LoginComponent.html":{},"coverage.html":{}}}],["authstorage",{"_index":225,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/FrameComponent.html":{},"components/LoginComponent.html":{}}}],["authstorageservice",{"_index":219,"title":{"injectables/AuthStorageService.html":{}},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthStorageService.html":{},"components/FrameComponent.html":{},"components/LoginComponent.html":{},"coverage.html":{}}}],["authstorageservice.getstorage(access_token_key",{"_index":496,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["authstorageservice.getstorage(expires_in_key",{"_index":501,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["authstorageservice.getstorage(refresh_token_key",{"_index":504,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["authstorageservice.getstorage(scopes_key",{"_index":508,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["authstorageservice.setstorage(`${unixtime",{"_index":498,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["authstorageservice.setstorage(scopes",{"_index":506,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["authstorageservice.setstorage(token",{"_index":495,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["automatically",{"_index":2309,"title":{},"body":{"interfaces/WisdomInterface.html":{}}}],["available",{"_index":275,"title":{},"body":{"guards/AuthGuard.html":{},"classes/ModuleProvider.html":{},"classes/StaticLoader.html":{},"modules.html":{}}}],["avoid",{"_index":297,"title":{},"body":{"guards/AuthGuard.html":{}}}],["await",{"_index":679,"title":{},"body":{"components/BimComponent.html":{},"injectables/LoaderService.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["awaited",{"_index":1427,"title":{},"body":{"injectables/LoaderService.html":{}}}],["awaits",{"_index":1436,"title":{},"body":{"injectables/LoaderService.html":{}}}],["back",{"_index":1092,"title":{},"body":{"components/ErrorComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["backgroundcolor",{"_index":992,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["bad",{"_index":2542,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["bar",{"_index":1232,"title":{},"body":{"components/FrameComponent.html":{},"injectables/SettingsStorageService.html":{},"components/SideBarComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["bar'},{'name",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/BimComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/PumpModelComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["bar.component",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["bar.component.html",{"_index":2011,"title":{},"body":{"components/SideBarComponent.html":{}}}],["bar.component.ts",{"_index":2010,"title":{},"body":{"components/SideBarComponent.html":{},"coverage.html":{}}}],["bar.component.ts:13",{"_index":2012,"title":{},"body":{"components/SideBarComponent.html":{}}}],["bar/side",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"components/SideBarComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["base",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"interceptors/BaseUrlInterceptor.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["baseurl",{"_index":2355,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["baseurlinterceptor",{"_index":127,"title":{"interceptors/BaseUrlInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/BaseUrlInterceptor.html":{},"coverage.html":{},"index.html":{}}}],["bearer",{"_index":340,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["before",{"_index":1978,"title":{},"body":{"interceptors/SanitizeUrlInterceptor.html":{}}}],["behavior",{"_index":2133,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["behaviorsubject",{"_index":798,"title":{},"body":{"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"components/ConsumerDetailComponent.html":{},"components/MapComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["behaviorsubject([[nan",{"_index":2110,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["behaviorsubject([nan",{"_index":967,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["behaviour",{"_index":900,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["beta.1",{"_index":2389,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":1415,"title":{},"body":{"injectables/LoaderService.html":{}}}],["beware",{"_index":2441,"title":{},"body":{"miscellaneous/functions.html":{}}}],["bim",{"_index":529,"title":{},"body":{"components/BimComponent.html":{}}}],["bim'},{'name",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/BimComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/PumpModelComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["bim.service",{"_index":647,"title":{},"body":{"components/BimComponent.html":{}}}],["bim/bim.component",{"_index":2321,"title":{},"body":{"modules/WisdomModule.html":{}}}],["bimcomponent",{"_index":70,"title":{"components/BimComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BimComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/PumpModelComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"modules/WisdomModule.html":{},"coverage.html":{},"index.html":{}}}],["bimservice",{"_index":582,"title":{"injectables/BimService.html":{}},"body":{"components/BimComponent.html":{},"injectables/BimService.html":{},"coverage.html":{}}}],["bkg",{"_index":1721,"title":{},"body":{"components/MapComponent.html":{}}}],["blob",{"_index":678,"title":{},"body":{"components/BimComponent.html":{},"injectables/BimService.html":{}}}],["blue",{"_index":993,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["body",{"_index":2095,"title":{},"body":{"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{}}}],["body.roles",{"_index":2097,"title":{},"body":{"injectables/UserService.html":{}}}],["body.scopes",{"_index":2096,"title":{},"body":{"injectables/UserService.html":{}}}],["boolean",{"_index":255,"title":{},"body":{"guards/AuthGuard.html":{},"components/BreadcrumbsComponent.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/ErrorComponent.html":{},"components/FrameComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"guards/QueryParameterGuard.html":{},"injectables/SettingsStorageService.html":{},"injectables/WaterRightsService.html":{}}}],["bootstrap",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["both",{"_index":2615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bounce",{"_index":1350,"title":{},"body":{"components/LoaderComponent.html":{}}}],["bounds",{"_index":2103,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["bounds[0].push(coordinates[0",{"_index":2128,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["bounds[1].push(coordinates[1",{"_index":2129,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["box",{"_index":1304,"title":{},"body":{"interfaces/LayerData.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"interfaces/ShapeData.html":{}}}],["breadcrumb",{"_index":785,"title":{"interfaces/Breadcrumb.html":{}},"body":{"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"coverage.html":{}}}],["breadcrumbs",{"_index":801,"title":{},"body":{"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"components/ConsumerDetailComponent.html":{},"components/MapSelectViewComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["breadcrumbs'},{'name",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/BimComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/PumpModelComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["breadcrumbs.component.html",{"_index":825,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["breadcrumbs.service",{"_index":847,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["breadcrumbs/breadcrumbs.component",{"_index":2316,"title":{},"body":{"modules/WisdomModule.html":{}}}],["breadcrumbscomponent",{"_index":72,"title":{"components/BreadcrumbsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BimComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/PumpModelComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"modules/WisdomModule.html":{},"coverage.html":{},"index.html":{}}}],["breadcrumbsservice",{"_index":802,"title":{"injectables/BreadcrumbsService.html":{}},"body":{"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"components/ConsumerDetailComponent.html":{},"components/MapSelectViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"coverage.html":{}}}],["breadcrumb}s",{"_index":805,"title":{},"body":{"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{}}}],["break",{"_index":1504,"title":{},"body":{"components/LoginComponent.html":{}}}],["bring",{"_index":1222,"title":{},"body":{"components/FrameComponent.html":{}}}],["browse",{"_index":2463,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"dependencies.html":{},"modules.html":{}}}],["browserify",{"_index":396,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["browsermodule",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["bulma",{"_index":863,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{},"components/ErrorComponent.html":{},"dependencies.html":{}}}],["bulma/bulma",{"_index":2317,"title":{},"body":{"modules/WisdomModule.html":{}}}],["bulmaistoggleabledirective",{"_index":108,"title":{"directives/BulmaIsToggleableDirective.html":{}},"body":{"components/AppComponent.html":{},"components/BimComponent.html":{},"components/BreadcrumbsComponent.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/PumpModelComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"modules/WisdomModule.html":{},"coverage.html":{},"index.html":{}}}],["businesses",{"_index":1195,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["button",{"_index":2603,"title":{},"body":{"miscellaneous/variables.html":{}}}],["button.style.backgroundimage",{"_index":2604,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cache",{"_index":898,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"miscellaneous/variables.html":{}}}],["cache.interceptor",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["cache.ts",{"_index":2338,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["cached",{"_index":1793,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["cachedkeys",{"_index":1845,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["cachedquery",{"_index":1832,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["cachedquery.box",{"_index":1844,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["cachedquery.shapes",{"_index":1839,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["cacheinterceptor",{"_index":128,"title":{"interceptors/CacheInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/CacheInterceptor.html":{},"coverage.html":{},"index.html":{}}}],["caching",{"_index":909,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["calc(100vh",{"_index":1376,"title":{},"body":{"components/LoaderComponent.html":{}}}],["calculate",{"_index":1170,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["calculation",{"_index":1160,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/enumerations.html":{}}}],["calendar",{"_index":1887,"title":{},"body":{"components/MapSelectViewComponent.html":{},"miscellaneous/variables.html":{}}}],["call",{"_index":1466,"title":{},"body":{"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["callback",{"_index":2587,"title":{},"body":{"miscellaneous/variables.html":{}}}],["called",{"_index":1384,"title":{},"body":{"guards/LoaderGuard.html":{}}}],["can't",{"_index":277,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canactivate",{"_index":195,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"guards/LoaderGuard.html":{},"guards/QueryParameterGuard.html":{},"miscellaneous/variables.html":{}}}],["canactivate(route",{"_index":236,"title":{},"body":{"guards/AuthGuard.html":{},"guards/QueryParameterGuard.html":{}}}],["canactivatechild",{"_index":1387,"title":{},"body":{"guards/LoaderGuard.html":{}}}],["canvas",{"_index":662,"title":{},"body":{"components/BimComponent.html":{}}}],["canvaselement",{"_index":657,"title":{},"body":{"components/BimComponent.html":{}}}],["canvaselement.height",{"_index":670,"title":{},"body":{"components/BimComponent.html":{}}}],["canvaselement.width",{"_index":668,"title":{},"body":{"components/BimComponent.html":{}}}],["canvasref",{"_index":530,"title":{},"body":{"components/BimComponent.html":{}}}],["capture",{"_index":1094,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["captured",{"_index":2579,"title":{},"body":{"miscellaneous/variables.html":{}}}],["case",{"_index":1075,"title":{},"body":{"components/ErrorComponent.html":{},"components/LoginComponent.html":{}}}],["catch(e",{"_index":1247,"title":{},"body":{"components/FrameComponent.html":{}}}],["catcherror",{"_index":1102,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["catcherror(requesterror",{"_index":1105,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["causing",{"_index":2439,"title":{},"body":{"miscellaneous/functions.html":{}}}],["center",{"_index":1514,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/variables.html":{}}}],["centercontent",{"_index":2596,"title":{},"body":{"miscellaneous/variables.html":{}}}],["certain",{"_index":1069,"title":{},"body":{"components/ErrorComponent.html":{},"guards/QueryParameterGuard.html":{}}}],["change",{"_index":1390,"title":{},"body":{"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{}}}],["chart",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["chart.js",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["chart.js/auto",{"_index":976,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["chart.register(annotationplugin",{"_index":61,"title":{},"body":{"components/AppComponent.html":{}}}],["chartdata",{"_index":947,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["chartjs",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["charts",{"_index":2283,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{},"dependencies.html":{}}}],["check",{"_index":282,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/BreadcrumbsComponent.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/LoaderInterceptor.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"guards/QueryParameterGuard.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"miscellaneous/variables.html":{}}}],["checking",{"_index":205,"title":{},"body":{"guards/AuthGuard.html":{}}}],["checks",{"_index":246,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interceptors/SanitizeUrlInterceptor.html":{}}}],["child",{"_index":1394,"title":{},"body":{"guards/LoaderGuard.html":{}}}],["child(1",{"_index":1355,"title":{},"body":{"components/LoaderComponent.html":{}}}],["child(2",{"_index":1359,"title":{},"body":{"components/LoaderComponent.html":{}}}],["child(3",{"_index":1362,"title":{},"body":{"components/LoaderComponent.html":{}}}],["children",{"_index":196,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["class",{"_index":57,"title":{"classes/ModuleProvider.html":{},"classes/StaticLoader.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"components/BimComponent.html":{},"injectables/BimService.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/ExampleComponent.html":{},"modules/ExampleModule.html":{},"injectables/ExampleService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"classes/ModuleProvider.html":{},"components/PumpModelComponent.html":{},"modules/PumpModelModule.html":{},"injectables/PumpModelService.html":{},"guards/QueryParameterGuard.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"components/SideBarComponent.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"modules/WisdomModule.html":{},"coverage.html":{}}}],["classes",{"_index":868,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{},"classes/ModuleProvider.html":{},"classes/StaticLoader.html":{},"index.html":{}}}],["classes.trim().split(/\\s",{"_index":891,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["cleaned",{"_index":2259,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["clear",{"_index":437,"title":{},"body":{"injectables/AuthStorageService.html":{},"injectables/LoaderService.html":{},"components/MapComponent.html":{},"injectables/SettingsStorageService.html":{}}}],["clearloading",{"_index":1423,"title":{},"body":{"injectables/LoaderService.html":{}}}],["clears",{"_index":300,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthStorageService.html":{}}}],["cli",{"_index":2075,"title":{},"body":{"injectables/UserService.html":{}}}],["click",{"_index":540,"title":{},"body":{"components/BimComponent.html":{},"directives/BulmaIsToggleableDirective.html":{},"directives/LangSelectorDirective.html":{},"interfaces/Marker.html":{}}}],["clickable",{"_index":823,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["clicked",{"_index":876,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["clicking",{"_index":864,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{},"directives/LangSelectorDirective.html":{}}}],["clicklangselect",{"_index":1288,"title":{},"body":{"directives/LangSelectorDirective.html":{}}}],["client",{"_index":1168,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["closed",{"_index":490,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["cluster_appmodule",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_bootstrap",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_declarations",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_imports",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_providers",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_examplemodule",{"_index":1143,"title":{},"body":{"modules/ExampleModule.html":{},"index.html":{}}}],["cluster_examplemodule_declarations",{"_index":1144,"title":{},"body":{"modules/ExampleModule.html":{},"index.html":{}}}],["cluster_examplemodule_exports",{"_index":1146,"title":{},"body":{"modules/ExampleModule.html":{},"index.html":{}}}],["cluster_examplemodule_imports",{"_index":1145,"title":{},"body":{"modules/ExampleModule.html":{}}}],["cluster_pumpmodelmodule",{"_index":1940,"title":{},"body":{"modules/PumpModelModule.html":{},"index.html":{}}}],["cluster_pumpmodelmodule_declarations",{"_index":1941,"title":{},"body":{"modules/PumpModelModule.html":{},"index.html":{}}}],["cluster_pumpmodelmodule_exports",{"_index":1942,"title":{},"body":{"modules/PumpModelModule.html":{},"index.html":{}}}],["cluster_pumpmodelmodule_imports",{"_index":1943,"title":{},"body":{"modules/PumpModelModule.html":{}}}],["cluster_waterusageforecastsmodule",{"_index":2276,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{},"index.html":{}}}],["cluster_waterusageforecastsmodule_declarations",{"_index":2278,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{},"index.html":{}}}],["cluster_waterusageforecastsmodule_imports",{"_index":2277,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{}}}],["cluster_wisdommodule",{"_index":2312,"title":{},"body":{"modules/WisdomModule.html":{},"index.html":{}}}],["cluster_wisdommodule_declarations",{"_index":2314,"title":{},"body":{"modules/WisdomModule.html":{},"index.html":{}}}],["cluster_wisdommodule_exports",{"_index":2313,"title":{},"body":{"modules/WisdomModule.html":{},"index.html":{}}}],["code",{"_index":298,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"interfaces/LayerData.html":{},"components/MapComponent.html":{},"interfaces/ShapeData.html":{},"miscellaneous/functions.html":{}}}],["codes",{"_index":325,"title":{},"body":{"guards/AuthGuard.html":{},"components/ErrorComponent.html":{}}}],["codetype",{"_index":1072,"title":{},"body":{"components/ErrorComponent.html":{}}}],["collect",{"_index":1120,"title":{},"body":{"injectables/ErrorService.html":{}}}],["collected",{"_index":817,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["collectedlang",{"_index":1930,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["collecting",{"_index":800,"title":{},"body":{"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"components/ErrorComponent.html":{}}}],["color",{"_index":1727,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/functions.html":{}}}],["column",{"_index":1382,"title":{},"body":{"components/LoaderComponent.html":{}}}],["common",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"interceptors/BaseUrlInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interceptors/ErrorInterceptor.html":{},"modules/ExampleModule.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"interceptors/LoaderInterceptor.html":{},"components/MapSelectViewComponent.html":{},"modules/PumpModelModule.html":{},"classes/StaticLoader.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["common.bim.loading",{"_index":782,"title":{},"body":{"injectables/BimService.html":{}}}],["commonenvironment",{"_index":2572,"title":{},"body":{"miscellaneous/variables.html":{}}}],["commonmodule",{"_index":1149,"title":{},"body":{"modules/ExampleModule.html":{},"modules/PumpModelModule.html":{},"modules/WaterUsageForecastsModule.html":{},"modules/WisdomModule.html":{}}}],["communicated",{"_index":1417,"title":{},"body":{"injectables/LoaderService.html":{}}}],["communication",{"_index":1334,"title":{},"body":{"components/LoaderComponent.html":{},"injectables/LoaderService.html":{}}}],["complaining",{"_index":1272,"title":{},"body":{"components/IonIconComponent.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/BimComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/PumpModelComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BimComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/PumpModelComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"interfaces/WisdomInterface.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["component_template",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/BimComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/PumpModelComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/BimComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/PumpModelComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"index.html":{}}}],["concept",{"_index":2621,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config",{"_index":1635,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/typealiases.html":{}}}],["considered",{"_index":821,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["consists",{"_index":2528,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["console.error(e",{"_index":685,"title":{},"body":{"components/BimComponent.html":{},"components/FrameComponent.html":{},"components/LoginComponent.html":{}}}],["console.error(error",{"_index":1498,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log(\"successfully",{"_index":1489,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log(requesterror",{"_index":1107,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["console.log(viewer.check",{"_index":654,"title":{},"body":{"components/BimComponent.html":{}}}],["const",{"_index":194,"title":{},"body":{"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"injectables/ConsumersService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/SettingsStorageService.html":{},"injectables/UserService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["constant",{"_index":2618,"title":{},"body":{"miscellaneous/variables.html":{}}}],["constructing",{"_index":1917,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["constructor",{"_index":217,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/BimComponent.html":{},"injectables/BimService.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"classes/ModuleProvider.html":{},"guards/QueryParameterGuard.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["constructor(authservice",{"_index":1213,"title":{},"body":{"components/FrameComponent.html":{},"components/LoginComponent.html":{}}}],["constructor(authstorage",{"_index":218,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{}}}],["constructor(breadcrumbs",{"_index":1878,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["constructor(elref",{"_index":1265,"title":{},"body":{"components/IonIconComponent.html":{}}}],["constructor(http",{"_index":369,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BimService.html":{},"injectables/ConsumersService.html":{},"injectables/MapService.html":{},"injectables/UserService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["constructor(location",{"_index":1049,"title":{},"body":{"components/ErrorComponent.html":{}}}],["constructor(private",{"_index":350,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/BimComponent.html":{},"injectables/BimService.html":{},"components/BreadcrumbsComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"guards/QueryParameterGuard.html":{},"injectables/UserService.html":{}}}],["constructor(route",{"_index":954,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["constructor(router",{"_index":1122,"title":{},"body":{"injectables/ErrorService.html":{},"guards/QueryParameterGuard.html":{}}}],["constructor(service",{"_index":581,"title":{},"body":{"components/BimComponent.html":{},"components/BreadcrumbsComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"components/MapComponent.html":{}}}],["constructor(translateservice",{"_index":1289,"title":{},"body":{"directives/LangSelectorDirective.html":{}}}],["consumer",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"components/BimComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/PumpModelComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["consumer/:consumer",{"_index":2631,"title":{},"body":{"miscellaneous/variables.html":{}}}],["consumerdetailcomponent",{"_index":74,"title":{"components/ConsumerDetailComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BimComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/PumpModelComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["consumergroup",{"_index":1174,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["consumericon",{"_index":980,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["consumerlocationsresponse",{"_index":962,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"miscellaneous/typealiases.html":{}}}],["consumers",{"_index":1021,"title":{},"body":{"injectables/ConsumersService.html":{},"miscellaneous/variables.html":{}}}],["consumersservice",{"_index":957,"title":{"injectables/ConsumersService.html":{}},"body":{"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"coverage.html":{}}}],["consumption",{"_index":1889,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["container",{"_index":664,"title":{},"body":{"components/BimComponent.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"components/LoaderComponent.html":{},"components/MapComponent.html":{},"miscellaneous/variables.html":{}}}],["container.addeventlistener(\"click",{"_index":2602,"title":{},"body":{"miscellaneous/variables.html":{}}}],["containerelement",{"_index":655,"title":{},"body":{"components/BimComponent.html":{}}}],["containerelement.style.height",{"_index":672,"title":{},"body":{"components/BimComponent.html":{}}}],["containerref",{"_index":531,"title":{},"body":{"components/BimComponent.html":{}}}],["containing",{"_index":227,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/Error.html":{},"interfaces/LayerData.html":{},"components/LoginComponent.html":{},"guards/QueryParameterGuard.html":{},"interfaces/ShapeData.html":{}}}],["content",{"_index":406,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ConsumersService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"interfaces/Marker.html":{},"injectables/UserService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"miscellaneous/variables.html":{}}}],["context",{"_index":419,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BimService.html":{},"interceptors/CacheInterceptor.html":{},"injectables/ConsumersService.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"interceptors/LoaderInterceptor.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"miscellaneous/variables.html":{}}}],["context.set(use_loader",{"_index":781,"title":{},"body":{"injectables/BimService.html":{}}}],["context/use",{"_index":780,"title":{},"body":{"injectables/BimService.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["contextmenu",{"_index":541,"title":{},"body":{"components/BimComponent.html":{}}}],["continue",{"_index":2125,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["control",{"_index":899,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"components/MapComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["coordinates",{"_index":948,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/LayerData.html":{},"components/MapComponent.html":{},"interfaces/Marker.html":{},"interfaces/ShapeData.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"miscellaneous/functions.html":{}}}],["coordinates[0",{"_index":1010,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["coordinates[1",{"_index":1011,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["core",{"_index":2639,"title":{},"body":{"miscellaneous/variables.html":{}}}],["core.frame.account",{"_index":1251,"title":{},"body":{"components/FrameComponent.html":{}}}],["core.frame.administration",{"_index":1253,"title":{},"body":{"components/FrameComponent.html":{}}}],["core.frame.logout",{"_index":1252,"title":{},"body":{"components/FrameComponent.html":{}}}],["core.frame.permissions",{"_index":1255,"title":{},"body":{"components/FrameComponent.html":{}}}],["core.frame.roles",{"_index":1256,"title":{},"body":{"components/FrameComponent.html":{}}}],["core.frame.usermanagement",{"_index":1254,"title":{},"body":{"components/FrameComponent.html":{}}}],["core.login.forgotpassword",{"_index":1508,"title":{},"body":{"components/LoginComponent.html":{}}}],["core.login.login",{"_index":1509,"title":{},"body":{"components/LoginComponent.html":{}}}],["core.login.password",{"_index":1507,"title":{},"body":{"components/LoginComponent.html":{}}}],["core.login.username",{"_index":1506,"title":{},"body":{"components/LoginComponent.html":{}}}],["corner",{"_index":1306,"title":{},"body":{"interfaces/LayerData.html":{},"interfaces/ShapeData.html":{}}}],["correct",{"_index":1270,"title":{},"body":{"components/IonIconComponent.html":{},"interceptors/SanitizeUrlInterceptor.html":{}}}],["coverage",{"_index":2322,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["covering",{"_index":1041,"title":{},"body":{"components/ErrorComponent.html":{},"components/LoaderComponent.html":{},"miscellaneous/variables.html":{}}}],["create",{"_index":2052,"title":{},"body":{"injectables/UserService.html":{}}}],["created",{"_index":2550,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["creates",{"_index":1124,"title":{},"body":{"injectables/ErrorService.html":{}}}],["createuser",{"_index":2045,"title":{},"body":{"injectables/UserService.html":{}}}],["createuser(firstname",{"_index":2048,"title":{},"body":{"injectables/UserService.html":{}}}],["creating",{"_index":1901,"title":{},"body":{"interfaces/Marker.html":{}}}],["creation",{"_index":2055,"title":{},"body":{"injectables/UserService.html":{}}}],["crs",{"_index":1022,"title":{},"body":{"injectables/ConsumersService.html":{}}}],["cservice",{"_index":956,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["current",{"_index":247,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/BreadcrumbsComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoginComponent.html":{},"guards/QueryParameterGuard.html":{},"miscellaneous/typealiases.html":{}}}],["currently",{"_index":880,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{},"injectables/ErrorService.html":{},"directives/LangSelectorDirective.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"guards/QueryParameterGuard.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["curtain",{"_index":2633,"title":{},"body":{"miscellaneous/variables.html":{}}}],["curtain.ts",{"_index":2339,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["custom",{"_index":1034,"title":{},"body":{"interfaces/Error.html":{},"interfaces/Marker.html":{},"miscellaneous/variables.html":{}}}],["d35a0c",{"_index":1560,"title":{},"body":{"components/MapComponent.html":{}}}],["danger",{"_index":1077,"title":{},"body":{"components/ErrorComponent.html":{}}}],["dark",{"_index":2387,"title":{},"body":{"dependencies.html":{}}}],["data",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthStorageService.html":{},"components/BimComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"interfaces/LayerData.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"classes/ModuleProvider.html":{},"components/PumpModelComponent.html":{},"guards/QueryParameterGuard.html":{},"injectables/SettingsStorageService.html":{},"interfaces/ShapeData.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["data.box[0",{"_index":1754,"title":{},"body":{"components/MapComponent.html":{}}}],["data.box[2",{"_index":1755,"title":{},"body":{"components/MapComponent.html":{}}}],["data.legaltitle",{"_index":2152,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["data.locations",{"_index":2123,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["data.map",{"_index":2299,"title":{},"body":{"injectables/WaterUsageHistoryService.html":{}}}],["data.map(({usage",{"_index":991,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["data.map(({year",{"_index":995,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["data.shapes",{"_index":1747,"title":{},"body":{"components/MapComponent.html":{}}}],["data.subject",{"_index":2153,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["data.ts",{"_index":1300,"title":{},"body":{"interfaces/LayerData.html":{},"interfaces/ShapeData.html":{},"coverage.html":{}}}],["data?.address",{"_index":2161,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["data?.annotation",{"_index":2233,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["data?.bailee",{"_index":2163,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["data?.dateofchange?.toisostring()?.slice(0",{"_index":2165,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["data?.externalid",{"_index":2170,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["data?.filereference",{"_index":2172,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["data?.grantingauthority",{"_index":2156,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["data?.id",{"_index":2167,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["data?.no",{"_index":2168,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["data?.registeringauthority",{"_index":2158,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["data?.waterauthority",{"_index":2159,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["data[data.length",{"_index":998,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["database",{"_index":2070,"title":{},"body":{"injectables/UserService.html":{}}}],["datasets",{"_index":990,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["date",{"_index":465,"title":{},"body":{"injectables/AuthStorageService.html":{},"injectables/WaterUsageHistoryService.html":{},"miscellaneous/variables.html":{}}}],["date(raw.dateofchange",{"_index":2270,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["date(raw.valid.from",{"_index":2273,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["date(raw.valid.until",{"_index":2274,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["date(recorded_at",{"_index":2301,"title":{},"body":{"injectables/WaterUsageHistoryService.html":{}}}],["dayjs",{"_index":2391,"title":{},"body":{"dependencies.html":{}}}],["db",{"_index":1789,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{},"miscellaneous/variables.html":{}}}],["db.createobjectstore(\"queries",{"_index":1821,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["db.createobjectstore(\"shapes",{"_index":1822,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["db.deleteobjectstore(\"queries",{"_index":1819,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["db.deleteobjectstore(\"shapes",{"_index":1820,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["db_name",{"_index":1806,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dblclick",{"_index":542,"title":{},"body":{"components/BimComponent.html":{}}}],["dbschema",{"_index":1791,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["de",{"_index":1720,"title":{},"body":{"components/MapComponent.html":{}}}],["de/by",{"_index":1724,"title":{},"body":{"components/MapComponent.html":{}}}],["de_de",{"_index":2032,"title":{},"body":{"classes/StaticLoader.html":{},"miscellaneous/variables.html":{}}}],["de_delang",{"_index":2023,"title":{},"body":{"classes/StaticLoader.html":{},"miscellaneous/variables.html":{}}}],["de_delangcommon",{"_index":2024,"title":{},"body":{"classes/StaticLoader.html":{},"miscellaneous/variables.html":{}}}],["deciding",{"_index":242,"title":{},"body":{"guards/AuthGuard.html":{}}}],["declarations",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"modules/ExampleModule.html":{},"modules/PumpModelModule.html":{},"modules/WaterUsageForecastsModule.html":{},"modules/WisdomModule.html":{}}}],["decorators",{"_index":633,"title":{},"body":{"components/BimComponent.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/ConsumerDetailComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["default",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/BimComponent.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"injectables/ErrorService.html":{},"interfaces/LayerData.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"interfaces/Marker.html":{},"interfaces/ShapeData.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"miscellaneous/variables.html":{}}}],["defaultlanguage",{"_index":176,"title":{},"body":{"modules/AppModule.html":{}}}],["defaults",{"_index":1579,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"components/BimComponent.html":{},"injectables/BimService.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"classes/ModuleProvider.html":{},"guards/QueryParameterGuard.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"components/SideBarComponent.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["delay",{"_index":1356,"title":{},"body":{"components/LoaderComponent.html":{}}}],["delete",{"_index":1086,"title":{},"body":{"components/ErrorComponent.html":{}}}],["deleted",{"_index":2510,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["deleteusersid200",{"_index":2469,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["deleteusersid403",{"_index":2471,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["deleteusersid404",{"_index":2473,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["dependencies",{"_index":118,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ExampleModule.html":{},"modules/PumpModelModule.html":{},"modules/WaterUsageForecastsModule.html":{},"modules/WisdomModule.html":{},"dependencies.html":{},"index.html":{}}}],["depletes",{"_index":299,"title":{},"body":{"guards/AuthGuard.html":{}}}],["describes",{"_index":2525,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["description",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/ExampleComponent.html":{},"modules/ExampleModule.html":{},"injectables/ExampleService.html":{},"interfaces/ForecastResponse.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"interfaces/LayerData.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"interfaces/Marker.html":{},"classes/ModuleProvider.html":{},"components/PumpModelComponent.html":{},"modules/PumpModelModule.html":{},"injectables/PumpModelService.html":{},"guards/QueryParameterGuard.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"interfaces/ShapeData.html":{},"components/SideBarComponent.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"injectables/WaterUsageForecastsService.html":{},"interfaces/WisdomInterface.html":{},"miscellaneous/functions.html":{},"properties.html":{}}}],["destroy",{"_index":836,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["detail",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/BimComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/PumpModelComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"miscellaneous/variables.html":{}}}],["detail'},{'name",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/BimComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/PumpModelComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["detail.component",{"_index":2285,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{}}}],["detail.component.html",{"_index":946,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["detail.component.ts",{"_index":945,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/WaterRightDetailComponent.html":{},"coverage.html":{}}}],["detail.component.ts:20",{"_index":2112,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["detail.component.ts:21",{"_index":2113,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["detail.component.ts:23",{"_index":974,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["detail.component.ts:24",{"_index":971,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["detail.component.ts:25",{"_index":970,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["detail.component.ts:26",{"_index":973,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["detail.component.ts:27",{"_index":968,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["detail.component.ts:29",{"_index":966,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["detail.component.ts:30",{"_index":975,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["detail.component.ts:32",{"_index":960,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["detail.component.ts:34",{"_index":2106,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["detail.component.ts:38",{"_index":2107,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["detail.component.ts:41",{"_index":965,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["detail.component.ts:58",{"_index":963,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["detail.component.ts:75",{"_index":964,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["detail.component.ts:76",{"_index":2109,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["detail/consumer",{"_index":944,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"coverage.html":{}}}],["detail/water",{"_index":2102,"title":{},"body":{"components/WaterRightDetailComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"coverage.html":{}}}],["details",{"_index":2257,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["detecting",{"_index":1397,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["determine",{"_index":2632,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deterministically",{"_index":2429,"title":{},"body":{"miscellaneous/functions.html":{}}}],["deutsch",{"_index":1249,"title":{},"body":{"components/FrameComponent.html":{}}}],["dev",{"_index":2575,"title":{},"body":{"miscellaneous/variables.html":{}}}],["digit",{"_index":2420,"title":{},"body":{"miscellaneous/functions.html":{}}}],["direct",{"_index":1392,"title":{},"body":{"guards/LoaderGuard.html":{},"guards/QueryParameterGuard.html":{}}}],["direction",{"_index":1733,"title":{},"body":{"components/MapComponent.html":{}}}],["directive",{"_index":65,"title":{"directives/BulmaIsToggleableDirective.html":{},"directives/LangSelectorDirective.html":{}},"body":{"components/AppComponent.html":{},"components/BimComponent.html":{},"components/BreadcrumbsComponent.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/PumpModelComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"coverage.html":{}}}],["directives",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"components/BimComponent.html":{},"components/BreadcrumbsComponent.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/PumpModelComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"index.html":{}}}],["directly",{"_index":1273,"title":{},"body":{"components/IonIconComponent.html":{},"components/MapComponent.html":{},"miscellaneous/variables.html":{}}}],["disable",{"_index":2635,"title":{},"body":{"miscellaneous/variables.html":{}}}],["discharge",{"_index":2183,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["display",{"_index":808,"title":{},"body":{"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/MapComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/enumerations.html":{}}}],["displayed",{"_index":791,"title":{},"body":{"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/LangSelectorDirective.html":{},"components/MapComponent.html":{},"interfaces/Marker.html":{}}}],["displaying",{"_index":1511,"title":{},"body":{"components/MapComponent.html":{},"components/SideBarComponent.html":{}}}],["displaylayer",{"_index":1693,"title":{},"body":{"components/MapComponent.html":{}}}],["displayname",{"_index":1188,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/MapComponent.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["displays",{"_index":1307,"title":{},"body":{"interfaces/LayerData.html":{},"interfaces/ShapeData.html":{}}}],["displaytext",{"_index":1425,"title":{},"body":{"injectables/LoaderService.html":{}}}],["displaytexts",{"_index":1330,"title":{},"body":{"components/LoaderComponent.html":{},"injectables/LoaderService.html":{}}}],["displaytextsubject",{"_index":1420,"title":{},"body":{"injectables/LoaderService.html":{}}}],["district",{"_index":1623,"title":{},"body":{"components/MapComponent.html":{},"components/WaterRightDetailComponent.html":{},"miscellaneous/enumerations.html":{}}}],["div",{"_index":665,"title":{},"body":{"components/BimComponent.html":{},"components/LoaderComponent.html":{},"miscellaneous/variables.html":{}}}],["divided",{"_index":507,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["dl",{"_index":1723,"title":{},"body":{"components/MapComponent.html":{}}}],["doc",{"_index":486,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["docs",{"_index":1548,"title":{},"body":{"components/MapComponent.html":{}}}],["document.getelementbyid(`${location?.id}`)?.scrollintoview",{"_index":2132,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["documentation",{"_index":2323,"title":{},"body":{"coverage.html":{}}}],["doesn't",{"_index":1169,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"classes/ModuleProvider.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/BimComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/PumpModelComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["dot",{"_index":2421,"title":{},"body":{"miscellaneous/functions.html":{}}}],["drag",{"_index":543,"title":{},"body":{"components/BimComponent.html":{}}}],["dragend",{"_index":544,"title":{},"body":{"components/BimComponent.html":{}}}],["dragenter",{"_index":545,"title":{},"body":{"components/BimComponent.html":{}}}],["dragleave",{"_index":546,"title":{},"body":{"components/BimComponent.html":{}}}],["dragover",{"_index":547,"title":{},"body":{"components/BimComponent.html":{}}}],["dragstart",{"_index":548,"title":{},"body":{"components/BimComponent.html":{}}}],["drop",{"_index":549,"title":{},"body":{"components/BimComponent.html":{}}}],["during",{"_index":2054,"title":{},"body":{"injectables/UserService.html":{}}}],["dynamic",{"_index":2381,"title":{},"body":{"dependencies.html":{}}}],["e.g",{"_index":2448,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ease",{"_index":1353,"title":{},"body":{"components/LoaderComponent.html":{}}}],["efforts",{"_index":1335,"title":{},"body":{"components/LoaderComponent.html":{}}}],["el",{"_index":2254,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["el.water_right",{"_index":2255,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["element",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/BimComponent.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/PumpModelComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["elementclasses",{"_index":871,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["elementclasses(classes",{"_index":889,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["elementref",{"_index":632,"title":{},"body":{"components/BimComponent.html":{},"components/IonIconComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{}}}],["elements",{"_index":1601,"title":{},"body":{"components/MapComponent.html":{}}}],["elref",{"_index":1267,"title":{},"body":{"components/IonIconComponent.html":{}}}],["emit",{"_index":1132,"title":{},"body":{"injectables/ErrorService.html":{},"components/MapComponent.html":{}}}],["emitselection",{"_index":1523,"title":{},"body":{"components/MapComponent.html":{}}}],["emitted",{"_index":1538,"title":{},"body":{"components/MapComponent.html":{}}}],["emitter",{"_index":1133,"title":{},"body":{"injectables/ErrorService.html":{}}}],["empty",{"_index":1543,"title":{},"body":{"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"miscellaneous/variables.html":{}}}],["en_us",{"_index":178,"title":{},"body":{"modules/AppModule.html":{},"classes/StaticLoader.html":{},"miscellaneous/variables.html":{}}}],["en_us\"].sidebar",{"_index":2038,"title":{},"body":{"classes/StaticLoader.html":{}}}],["en_us\"].sidebar[key",{"_index":2040,"title":{},"body":{"classes/StaticLoader.html":{}}}],["en_uslang",{"_index":2025,"title":{},"body":{"classes/StaticLoader.html":{},"miscellaneous/variables.html":{}}}],["en_uslangcommon",{"_index":2026,"title":{},"body":{"classes/StaticLoader.html":{},"miscellaneous/variables.html":{}}}],["end",{"_index":1184,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/functions.html":{}}}],["endyear",{"_index":1189,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["enforce",{"_index":1633,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/typealiases.html":{}}}],["english",{"_index":1250,"title":{},"body":{"components/FrameComponent.html":{}}}],["ensuring",{"_index":833,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["entire",{"_index":1042,"title":{},"body":{"components/ErrorComponent.html":{}}}],["entries",{"_index":1958,"title":{},"body":{"guards/QueryParameterGuard.html":{},"miscellaneous/typealiases.html":{}}}],["entries.ts",{"_index":2485,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["entries[0].contentrect.width",{"_index":669,"title":{},"body":{"components/BimComponent.html":{}}}],["entry",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"interfaces/WisdomInterface.html":{}}}],["entry[0",{"_index":2015,"title":{},"body":{"components/SideBarComponent.html":{}}}],["enum",{"_index":1161,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["enumerations",{"_index":2405,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":514,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apiurl",{"_index":522,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{}}}],["environment.baseurl",{"_index":520,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{}}}],["environments/environment",{"_index":517,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{}}}],["equation",{"_index":1179,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["err",{"_index":1410,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["error",{"_index":293,"title":{"interfaces/Error.html":{}},"body":{"guards/AuthGuard.html":{},"components/BimComponent.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/LoginComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["error'},{'name",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/BimComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/PumpModelComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["error(err",{"_index":1409,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["error(requesterror",{"_index":1118,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["error.component.html",{"_index":1044,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.service",{"_index":1071,"title":{},"body":{"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{}}}],["errorcode",{"_index":1045,"title":{},"body":{"components/ErrorComponent.html":{}}}],["errorcomponent",{"_index":78,"title":{"components/ErrorComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BimComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/PumpModelComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"coverage.html":{},"index.html":{}}}],["errordescription",{"_index":1036,"title":{},"body":{"interfaces/Error.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{}}}],["errorinterceptor",{"_index":129,"title":{"interceptors/ErrorInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"coverage.html":{},"index.html":{}}}],["errorname",{"_index":1037,"title":{},"body":{"interfaces/Error.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{}}}],["errorpresent",{"_index":1121,"title":{},"body":{"injectables/ErrorService.html":{}}}],["errors",{"_index":1056,"title":{},"body":{"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"miscellaneous/variables.html":{}}}],["errorservice",{"_index":1051,"title":{"injectables/ErrorService.html":{}},"body":{"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"coverage.html":{}}}],["errresponse",{"_index":294,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["errresponse.error",{"_index":1497,"title":{},"body":{"components/LoginComponent.html":{}}}],["errresponse.status",{"_index":1496,"title":{},"body":{"components/LoginComponent.html":{}}}],["etag",{"_index":902,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["etag](https://developer.mozilla.org/en",{"_index":921,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["etagmap",{"_index":905,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["etags",{"_index":916,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["event",{"_index":360,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"injectables/ErrorService.html":{},"interfaces/Marker.html":{}}}],["event.headers.get(\"etag",{"_index":936,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["event.headers.get(\"last",{"_index":938,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["eventemitter",{"_index":587,"title":{},"body":{"components/BimComponent.html":{},"injectables/ErrorService.html":{},"components/MapComponent.html":{}}}],["events",{"_index":1129,"title":{},"body":{"injectables/ErrorService.html":{}}}],["everything",{"_index":1544,"title":{},"body":{"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["evt",{"_index":688,"title":{},"body":{"components/BimComponent.html":{},"interfaces/Marker.html":{},"components/WaterRightDetailComponent.html":{}}}],["exactly",{"_index":1617,"title":{},"body":{"components/MapComponent.html":{}}}],["example",{"_index":1139,"title":{},"body":{"components/ExampleComponent.html":{},"modules/ExampleModule.html":{},"injectables/ExampleService.html":{},"components/MapComponent.html":{},"components/PumpModelComponent.html":{},"modules/PumpModelModule.html":{},"injectables/PumpModelService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["example.component",{"_index":1148,"title":{},"body":{"modules/ExampleModule.html":{}}}],["example.component.html",{"_index":1140,"title":{},"body":{"components/ExampleComponent.html":{}}}],["examplecomponent",{"_index":80,"title":{"components/ExampleComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BimComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"modules/ExampleModule.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/PumpModelComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["examplemodule",{"_index":1142,"title":{"modules/ExampleModule.html":{}},"body":{"modules/ExampleModule.html":{},"index.html":{},"modules.html":{}}}],["exampleservice",{"_index":1150,"title":{"injectables/ExampleService.html":{}},"body":{"injectables/ExampleService.html":{},"coverage.html":{}}}],["except",{"_index":1208,"title":{},"body":{"components/FrameComponent.html":{}}}],["executed",{"_index":875,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["exist",{"_index":2517,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["exists",{"_index":2552,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["expects",{"_index":1951,"title":{},"body":{"guards/QueryParameterGuard.html":{}}}],["expiration",{"_index":464,"title":{},"body":{"injectables/AuthStorageService.html":{},"miscellaneous/variables.html":{}}}],["expires",{"_index":483,"title":{},"body":{"injectables/AuthStorageService.html":{},"miscellaneous/variables.html":{}}}],["expires_in_key",{"_index":482,"title":{},"body":{"injectables/AuthStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["expiresin",{"_index":443,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["expiresin(unixtime",{"_index":497,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["explanation",{"_index":2627,"title":{},"body":{"miscellaneous/variables.html":{}}}],["export",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"components/BimComponent.html":{},"injectables/BimService.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/ExampleComponent.html":{},"modules/ExampleModule.html":{},"injectables/ExampleService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"interfaces/LayerData.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"interfaces/Marker.html":{},"classes/ModuleProvider.html":{},"components/PumpModelComponent.html":{},"modules/PumpModelModule.html":{},"injectables/PumpModelService.html":{},"guards/QueryParameterGuard.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"interfaces/ShapeData.html":{},"components/SideBarComponent.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"interfaces/WisdomInterface.html":{},"modules/WisdomModule.html":{}}}],["exported",{"_index":1153,"title":{},"body":{"injectables/ExampleService.html":{},"injectables/PumpModelService.html":{},"interfaces/WisdomInterface.html":{}}}],["exports",{"_index":201,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ExampleModule.html":{},"modules/PumpModelModule.html":{},"modules/WisdomModule.html":{}}}],["extends",{"_index":1790,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["extension",{"_index":2607,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f",{"_index":1472,"title":{},"body":{"components/LoginComponent.html":{}}}],["f.valid",{"_index":1481,"title":{},"body":{"components/LoginComponent.html":{}}}],["f.value",{"_index":1482,"title":{},"body":{"components/LoginComponent.html":{}}}],["fails",{"_index":1954,"title":{},"body":{"guards/QueryParameterGuard.html":{}}}],["false",{"_index":422,"title":{},"body":{"injectables/AuthService.html":{},"components/BreadcrumbsComponent.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ErrorComponent.html":{},"injectables/ErrorService.html":{},"components/FrameComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"guards/QueryParameterGuard.html":{},"miscellaneous/variables.html":{}}}],["farming_forestry_fishing_industry",{"_index":1197,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["feature",{"_index":1730,"title":{},"body":{"components/MapComponent.html":{}}}],["feature.properties.key",{"_index":1736,"title":{},"body":{"components/MapComponent.html":{}}}],["fetch",{"_index":1810,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["fetchconsumers",{"_index":1015,"title":{},"body":{"injectables/ConsumersService.html":{}}}],["fetchconsumers(params",{"_index":1017,"title":{},"body":{"injectables/ConsumersService.html":{}}}],["fetched",{"_index":1674,"title":{},"body":{"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["fetched[layerkey",{"_index":1676,"title":{},"body":{"components/MapComponent.html":{}}}],["fetchforecastdata",{"_index":1193,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["fetchforecastdata(key",{"_index":2291,"title":{},"body":{"injectables/WaterUsageForecastsService.html":{}}}],["fetchlayerdata",{"_index":1826,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["fetchlayerdata(resolution",{"_index":1898,"title":{},"body":{"injectables/MapService.html":{}}}],["fetchmodel",{"_index":772,"title":{},"body":{"injectables/BimService.html":{}}}],["fetchmodel(filelink",{"_index":774,"title":{},"body":{"injectables/BimService.html":{}}}],["fetchwaterrightdetails",{"_index":2235,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["fetchwaterrightdetails(no",{"_index":2238,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["fetchwaterrightlocations",{"_index":2236,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["fetchwaterrightlocations(params",{"_index":2240,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["fetchwaterusagehistory",{"_index":2294,"title":{},"body":{"injectables/WaterUsageHistoryService.html":{}}}],["fetchwaterusagehistory(id",{"_index":2296,"title":{},"body":{"injectables/WaterUsageHistoryService.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"components/BimComponent.html":{},"injectables/BimService.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/ExampleComponent.html":{},"modules/ExampleModule.html":{},"injectables/ExampleService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"interfaces/LayerData.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"interfaces/Marker.html":{},"classes/ModuleProvider.html":{},"components/PumpModelComponent.html":{},"modules/PumpModelModule.html":{},"injectables/PumpModelService.html":{},"guards/QueryParameterGuard.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"interfaces/ShapeData.html":{},"components/SideBarComponent.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"interfaces/WisdomInterface.html":{},"modules/WisdomModule.html":{},"coverage.html":{}}}],["filelink",{"_index":776,"title":{},"body":{"injectables/BimService.html":{}}}],["find",{"_index":1278,"title":{},"body":{"components/IonIconComponent.html":{},"miscellaneous/functions.html":{}}}],["first",{"_index":2059,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["firstname",{"_index":2058,"title":{},"body":{"injectables/UserService.html":{}}}],["firstvaluefrom",{"_index":778,"title":{},"body":{"injectables/BimService.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["firstvaluefrom(this.http.get(`${api_url",{"_index":1853,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["firstvaluefrom(this.http.get(filelink",{"_index":783,"title":{},"body":{"injectables/BimService.html":{}}}],["fix",{"_index":1969,"title":{},"body":{"interceptors/SanitizeUrlInterceptor.html":{}}}],["fixed",{"_index":1708,"title":{},"body":{"components/MapComponent.html":{}}}],["fixme",{"_index":2082,"title":{},"body":{"injectables/UserService.html":{}}}],["flat",{"_index":1966,"title":{},"body":{"guards/QueryParameterGuard.html":{}}}],["flex",{"_index":2597,"title":{},"body":{"miscellaneous/variables.html":{}}}],["float",{"_index":1180,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["fo",{"_index":481,"title":{},"body":{"injectables/AuthStorageService.html":{},"miscellaneous/variables.html":{}}}],["follow",{"_index":2532,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["following",{"_index":1540,"title":{},"body":{"components/MapComponent.html":{},"interfaces/WisdomInterface.html":{},"miscellaneous/typealiases.html":{}}}],["force",{"_index":1825,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["forecast",{"_index":1157,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/enumerations.html":{}}}],["forecastentry",{"_index":1154,"title":{"interfaces/ForecastEntry.html":{}},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{},"coverage.html":{}}}],["forecastmodel",{"_index":1194,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["forecastresponse",{"_index":1166,"title":{"interfaces/ForecastResponse.html":{}},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{},"coverage.html":{}}}],["forecastresponse[\"partials\"][0][\"consumergroup",{"_index":1177,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["forecastresponse[\"partials\"][0][\"referenceusages",{"_index":1186,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["forecasts",{"_index":1159,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/MapSelectViewComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/variables.html":{}}}],["forecasts.breadcrumbs.water",{"_index":1888,"title":{},"body":{"components/MapSelectViewComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["forecasts.display.loading",{"_index":1202,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["forecasts.label.name",{"_index":2626,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forecasts.map",{"_index":1895,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["forecasts.module.ts",{"_index":2280,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{}}}],["forecasts.service.ts",{"_index":1156,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["forecasts.service.ts:67",{"_index":2290,"title":{},"body":{"injectables/WaterUsageForecastsService.html":{}}}],["forecasts.service.ts:74",{"_index":2292,"title":{},"body":{"injectables/WaterUsageForecastsService.html":{}}}],["forecasts.water",{"_index":2143,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["forecasts/src/lib/map",{"_index":2360,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["forecasts/src/lib/routing.ts",{"_index":2363,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["forecasts/src/lib/services/consumers.service.ts",{"_index":1014,"title":{},"body":{"injectables/ConsumersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["forecasts/src/lib/services/consumers.service.ts:27",{"_index":1016,"title":{},"body":{"injectables/ConsumersService.html":{}}}],["forecasts/src/lib/services/consumers.service.ts:34",{"_index":1019,"title":{},"body":{"injectables/ConsumersService.html":{}}}],["forecasts/src/lib/services/water",{"_index":1155,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["forecasts/src/lib/views/detail",{"_index":942,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/WaterRightDetailComponent.html":{},"coverage.html":{}}}],["forecasts/src/lib/views/map",{"_index":1871,"title":{},"body":{"components/MapSelectViewComponent.html":{},"coverage.html":{}}}],["forecasts/src/lib/views/result",{"_index":2373,"title":{},"body":{"coverage.html":{}}}],["forecasts/src/lib/water",{"_index":2279,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{}}}],["forecasts/src/public",{"_index":2375,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["forecasttype",{"_index":1162,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/enumerations.html":{}}}],["forecastusage",{"_index":1187,"title":{"interfaces/ForecastUsage.html":{}},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{},"coverage.html":{}}}],["form",{"_index":410,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/LoginComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/variables.html":{}}}],["formsmodule",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["found",{"_index":2452,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fps",{"_index":550,"title":{},"body":{"components/BimComponent.html":{}}}],["fragment",{"_index":788,"title":{},"body":{"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{}}}],["fragments",{"_index":804,"title":{},"body":{"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{}}}],["frame",{"_index":1209,"title":{},"body":{"components/FrameComponent.html":{}}}],["frame'},{'name",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"components/BimComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/PumpModelComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["frame.component.html",{"_index":1210,"title":{},"body":{"components/FrameComponent.html":{}}}],["frame/error/error.component",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["frame/error/error.interceptor",{"_index":174,"title":{},"body":{"modules/AppModule.html":{}}}],["frame/frame.component",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["frame/loader/loader.component",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["frame/loader/loader.guard",{"_index":193,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/ModuleProvider.html":{}}}],["frame/loader/loader.interceptor",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["frame/side",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["framecomponent",{"_index":81,"title":{"components/FrameComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BimComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/PumpModelComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"coverage.html":{},"index.html":{}}}],["framing",{"_index":1205,"title":{},"body":{"components/FrameComponent.html":{}}}],["fromobject",{"_index":427,"title":{},"body":{"injectables/AuthService.html":{}}}],["frontend",{"_index":2465,"title":{},"body":{"properties.html":{}}}],["full",{"_index":2629,"title":{},"body":{"miscellaneous/variables.html":{}}}],["full_res",{"_index":1611,"title":{},"body":{"components/MapComponent.html":{}}}],["fully",{"_index":834,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"miscellaneous/functions.html":{}}}],["function",{"_index":296,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthStorageService.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/ErrorComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/Marker.html":{},"injectables/SettingsStorageService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["functions",{"_index":2410,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":212,"title":{},"body":{"guards/AuthGuard.html":{},"components/FrameComponent.html":{},"miscellaneous/variables.html":{}}}],["generate",{"_index":2073,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["generates",{"_index":2428,"title":{},"body":{"miscellaneous/functions.html":{}}}],["geo",{"_index":1303,"title":{},"body":{"interfaces/LayerData.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"interfaces/ShapeData.html":{}}}],["geobasis",{"_index":1719,"title":{},"body":{"components/MapComponent.html":{}}}],["geodata",{"_index":1805,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{},"miscellaneous/variables.html":{}}}],["geojson",{"_index":1001,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/LayerData.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"interfaces/ShapeData.html":{},"injectables/WaterRightsService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["geojson.coordinates[0",{"_index":1005,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["geojson.coordinates[1",{"_index":1004,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["geojsonlayer",{"_index":1716,"title":{},"body":{"components/MapComponent.html":{}}}],["geojsonlayer.adddata(object.assign(shape.geojson",{"_index":1748,"title":{},"body":{"components/MapComponent.html":{}}}],["geojsonlayer.addto(map",{"_index":1751,"title":{},"body":{"components/MapComponent.html":{}}}],["geojsonobject",{"_index":1310,"title":{},"body":{"interfaces/LayerData.html":{},"interfaces/ShapeData.html":{}}}],["getaccesstoken",{"_index":457,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["getboolstorage",{"_index":1990,"title":{},"body":{"injectables/SettingsStorageService.html":{}}}],["getboolstorage(key",{"_index":1992,"title":{},"body":{"injectables/SettingsStorageService.html":{}}}],["getdisplaytexts",{"_index":1440,"title":{},"body":{"injectables/LoaderService.html":{}}}],["getelementclasses",{"_index":881,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["getexpiresin",{"_index":462,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["gethidesidebar",{"_index":1223,"title":{},"body":{"components/FrameComponent.html":{},"injectables/SettingsStorageService.html":{}}}],["gethideuserbar",{"_index":1230,"title":{},"body":{"components/FrameComponent.html":{},"injectables/SettingsStorageService.html":{}}}],["getloading",{"_index":1442,"title":{},"body":{"injectables/LoaderService.html":{}}}],["getoptions",{"_index":2087,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getrefreshtoken",{"_index":472,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["getresolvedurl",{"_index":2347,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getresolvedurl(route",{"_index":2412,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getscopes",{"_index":476,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["getshowtype",{"_index":1066,"title":{},"body":{"components/ErrorComponent.html":{}}}],["getstorage",{"_index":439,"title":{},"body":{"injectables/AuthStorageService.html":{},"injectables/SettingsStorageService.html":{}}}],["getstorage(key",{"_index":450,"title":{},"body":{"injectables/AuthStorageService.html":{},"injectables/SettingsStorageService.html":{}}}],["getter",{"_index":487,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["gettranslation",{"_index":2019,"title":{},"body":{"classes/StaticLoader.html":{}}}],["gettranslation(lang",{"_index":2020,"title":{},"body":{"classes/StaticLoader.html":{}}}],["getusers",{"_index":2046,"title":{},"body":{"injectables/UserService.html":{}}}],["getusers200",{"_index":2076,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["getusersid200",{"_index":2476,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["getusersid404",{"_index":2478,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["getusersme200",{"_index":2480,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["give",{"_index":1545,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/typealiases.html":{}}}],["given",{"_index":388,"title":{},"body":{"injectables/AuthService.html":{},"directives/LangSelectorDirective.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"classes/ModuleProvider.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["globalthis.localstorage.getitem(\"lang",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["globalthis.localstorage.setitem(\"lang",{"_index":1297,"title":{},"body":{"directives/LangSelectorDirective.html":{}}}],["globalthis.sessionstorage.getitem(key",{"_index":493,"title":{},"body":{"injectables/AuthStorageService.html":{},"injectables/SettingsStorageService.html":{}}}],["globalthis.sessionstorage.removeitem(key",{"_index":491,"title":{},"body":{"injectables/AuthStorageService.html":{},"injectables/SettingsStorageService.html":{}}}],["globalthis.sessionstorage.setitem(key",{"_index":492,"title":{},"body":{"injectables/AuthStorageService.html":{},"injectables/SettingsStorageService.html":{}}}],["go",{"_index":290,"title":{},"body":{"guards/AuthGuard.html":{},"components/ErrorComponent.html":{}}}],["goback",{"_index":1047,"title":{},"body":{"components/ErrorComponent.html":{}}}],["gotpointercapture",{"_index":551,"title":{},"body":{"components/BimComponent.html":{}}}],["gracefully",{"_index":326,"title":{},"body":{"guards/AuthGuard.html":{}}}],["grant_type",{"_index":428,"title":{},"body":{"injectables/AuthService.html":{}}}],["graph",{"_index":2464,"title":{},"body":{"modules.html":{}}}],["grid",{"_index":1378,"title":{},"body":{"components/LoaderComponent.html":{}}}],["group",{"_index":1173,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["gt",{"_index":2425,"title":{},"body":{"miscellaneous/functions.html":{}}}],["gt;&lt;/map&gt",{"_index":1626,"title":{},"body":{"components/MapComponent.html":{}}}],["guard",{"_index":202,"title":{"guards/AuthGuard.html":{},"guards/LoaderGuard.html":{},"guards/QueryParameterGuard.html":{}},"body":{"guards/AuthGuard.html":{},"guards/LoaderGuard.html":{},"injectables/LoaderService.html":{},"guards/QueryParameterGuard.html":{},"coverage.html":{}}}],["guards",{"_index":203,"title":{},"body":{"guards/AuthGuard.html":{},"guards/LoaderGuard.html":{},"guards/QueryParameterGuard.html":{},"interfaces/WisdomInterface.html":{},"index.html":{}}}],["handle",{"_index":322,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"components/LoaderComponent.html":{},"miscellaneous/variables.html":{}}}],["handleconsumerdata",{"_index":953,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["handleconsumerdata(data",{"_index":961,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["handled",{"_index":1043,"title":{},"body":{"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{}}}],["handler",{"_index":343,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/BaseUrlInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"injectables/ErrorService.html":{},"interfaces/Marker.html":{}}}],["handling",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LoaderService.html":{}}}],["having",{"_index":1698,"title":{},"body":{"components/MapComponent.html":{}}}],["header",{"_index":354,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["headers",{"_index":357,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interceptors/CacheInterceptor.html":{},"injectables/ConsumersService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/UserService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"miscellaneous/variables.html":{}}}],["height",{"_index":1372,"title":{},"body":{"components/LoaderComponent.html":{},"components/MapComponent.html":{}}}],["height=&quot;70vh&quot",{"_index":1609,"title":{},"body":{"components/MapComponent.html":{}}}],["helper",{"_index":2072,"title":{},"body":{"injectables/UserService.html":{}}}],["here",{"_index":1141,"title":{},"body":{"components/ExampleComponent.html":{},"components/IonIconComponent.html":{},"components/MapComponent.html":{},"classes/ModuleProvider.html":{},"components/PumpModelComponent.html":{}}}],["hex",{"_index":1562,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/functions.html":{}}}],["hide",{"_index":1225,"title":{},"body":{"components/FrameComponent.html":{},"injectables/SettingsStorageService.html":{},"miscellaneous/variables.html":{}}}],["hide_sidebar_key",{"_index":2001,"title":{},"body":{"injectables/SettingsStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["hide_user_bar_key",{"_index":2002,"title":{},"body":{"injectables/SettingsStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["hidesidebar",{"_index":1211,"title":{},"body":{"components/FrameComponent.html":{},"injectables/SettingsStorageService.html":{}}}],["hidesidebar(setting",{"_index":1241,"title":{},"body":{"components/FrameComponent.html":{},"injectables/SettingsStorageService.html":{}}}],["hideuserbar",{"_index":1212,"title":{},"body":{"components/FrameComponent.html":{},"injectables/SettingsStorageService.html":{}}}],["hideuserbar(setting",{"_index":1243,"title":{},"body":{"components/FrameComponent.html":{},"injectables/SettingsStorageService.html":{}}}],["higher",{"_index":807,"title":{},"body":{"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{}}}],["history",{"_index":1055,"title":{},"body":{"components/ErrorComponent.html":{},"injectables/WaterUsageHistoryService.html":{},"miscellaneous/variables.html":{}}}],["history.service",{"_index":979,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["history.service.ts",{"_index":2293,"title":{},"body":{"injectables/WaterUsageHistoryService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["history.service.ts:18",{"_index":2295,"title":{},"body":{"injectables/WaterUsageHistoryService.html":{}}}],["history.service.ts:25",{"_index":2297,"title":{},"body":{"injectables/WaterUsageHistoryService.html":{}}}],["historydata",{"_index":949,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["historyresponse",{"_index":969,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"injectables/WaterUsageHistoryService.html":{},"miscellaneous/typealiases.html":{}}}],["holding",{"_index":915,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["holds",{"_index":1600,"title":{},"body":{"components/MapComponent.html":{}}}],["hookevents",{"_index":534,"title":{},"body":{"components/BimComponent.html":{}}}],["host",{"_index":873,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["hostbinding",{"_index":884,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["hostbinding(\"class",{"_index":887,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["hostlistener",{"_index":885,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{},"directives/LangSelectorDirective.html":{}}}],["hostlistener(\"click",{"_index":892,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{},"directives/LangSelectorDirective.html":{}}}],["hostlistener('click",{"_index":877,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{},"directives/LangSelectorDirective.html":{}}}],["hostlisteners",{"_index":870,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{},"directives/LangSelectorDirective.html":{}}}],["households_and_small_businesses",{"_index":1196,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["hovering",{"_index":1905,"title":{},"body":{"interfaces/Marker.html":{}}}],["hoverpick",{"_index":552,"title":{},"body":{"components/BimComponent.html":{}}}],["hservice",{"_index":958,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["html",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/BimComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/PumpModelComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["http",{"_index":372,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BimService.html":{},"interceptors/CacheInterceptor.html":{},"injectables/ConsumersService.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/UserService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["http_interceptors",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":370,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BimService.html":{},"injectables/ConsumersService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/UserService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["httpclientmodule",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["httpcode",{"_index":1038,"title":{},"body":{"interfaces/Error.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{}}}],["httpcontext",{"_index":389,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BimService.html":{},"injectables/ConsumersService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"miscellaneous/variables.html":{}}}],["httpcontexttoken",{"_index":515,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{},"miscellaneous/variables.html":{}}}],["httperror",{"_index":1039,"title":{},"body":{"interfaces/Error.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{}}}],["httperrorresponse",{"_index":1403,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["httpevent",{"_index":345,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/BaseUrlInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/LoaderInterceptor.html":{},"interceptors/SanitizeUrlInterceptor.html":{}}}],["httphandler",{"_index":337,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/BaseUrlInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/LoaderInterceptor.html":{},"interceptors/SanitizeUrlInterceptor.html":{}}}],["httpheaders",{"_index":390,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/CacheInterceptor.html":{},"injectables/ConsumersService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/UserService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"miscellaneous/variables.html":{}}}],["httpinterceptor",{"_index":346,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/BaseUrlInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/LoaderInterceptor.html":{},"interceptors/SanitizeUrlInterceptor.html":{}}}],["httpoptions",{"_index":415,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["httpparams",{"_index":391,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["httpparams({fromobject",{"_index":430,"title":{},"body":{"injectables/AuthService.html":{}}}],["httprequest",{"_index":336,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/BaseUrlInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/LoaderInterceptor.html":{},"interceptors/SanitizeUrlInterceptor.html":{}}}],["httpresponse",{"_index":920,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/UserService.html":{}}}],["httpresponsebase",{"_index":1402,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["https://bulma.io/documentation/components/menu",{"_index":1239,"title":{},"body":{"components/FrameComponent.html":{}}}],["https://github.com/microsoft/tsdoc/issues/308",{"_index":489,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["https://ionic.io/ionicons",{"_index":1281,"title":{},"body":{"components/IonIconComponent.html":{}}}],["https://tile.openstreetmap.org/{z}/{x}/{y}.png",{"_index":1602,"title":{},"body":{"components/MapComponent.html":{}}}],["https://unpkg.com/ionicons@5.5.2/dist/svg/business.svg",{"_index":2582,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://unpkg.com/ionicons@5.5.2/dist/svg/water.svg",{"_index":2585,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://wisdom04.vlba.uni",{"_index":1550,"title":{},"body":{"components/MapComponent.html":{}}}],["i18n/lang",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["i18n/static",{"_index":168,"title":{},"body":{"modules/AppModule.html":{}}}],["icon",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"components/ConsumerDetailComponent.html":{},"components/IonIconComponent.html":{},"components/MapSelectViewComponent.html":{},"interfaces/Marker.html":{},"components/WaterRightDetailComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["icon'},{'name",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/BimComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/PumpModelComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["icon.component",{"_index":2319,"title":{},"body":{"modules/WisdomModule.html":{}}}],["icon.component.ts",{"_index":1259,"title":{},"body":{"components/IonIconComponent.html":{},"coverage.html":{}}}],["icon.component.ts:12",{"_index":1266,"title":{},"body":{"components/IonIconComponent.html":{}}}],["icon.component.ts:31",{"_index":1268,"title":{},"body":{"components/IonIconComponent.html":{}}}],["icon.default.imagepath",{"_index":59,"title":{},"body":{"components/AppComponent.html":{}}}],["icon.setattribute(\"name",{"_index":2606,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon.setattribute(\"size",{"_index":2609,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon.style.color",{"_index":2611,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon.style.pointerevents",{"_index":2605,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon/ion",{"_index":1258,"title":{},"body":{"components/IonIconComponent.html":{},"modules/WisdomModule.html":{},"coverage.html":{}}}],["icons",{"_index":981,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/IonIconComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["icons.ts",{"_index":2361,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["iconsize",{"_index":2583,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iconurl",{"_index":2581,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":950,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["idb",{"_index":1804,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{},"dependencies.html":{}}}],["idb.get(\"queries",{"_index":1833,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["idb.transaction(\"shapes",{"_index":1835,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["idb.transaction([\"queries",{"_index":1860,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["identifier",{"_index":2324,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["identify",{"_index":1794,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["ignore",{"_index":264,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/LoaderService.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"classes/StaticLoader.html":{}}}],["image",{"_index":33,"title":{},"body":{"components/AppComponent.html":{}}}],["implementation",{"_index":2091,"title":{},"body":{"injectables/UserService.html":{}}}],["implementing",{"_index":2306,"title":{},"body":{"interfaces/WisdomInterface.html":{}}}],["implements",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/BaseUrlInterceptor.html":{},"components/BimComponent.html":{},"components/BreadcrumbsComponent.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"guards/QueryParameterGuard.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"classes/StaticLoader.html":{},"components/WaterRightDetailComponent.html":{}}}],["import",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"components/BimComponent.html":{},"injectables/BimService.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/ExampleComponent.html":{},"modules/ExampleModule.html":{},"injectables/ExampleService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"interfaces/LayerData.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"interfaces/Marker.html":{},"classes/ModuleProvider.html":{},"components/PumpModelComponent.html":{},"modules/PumpModelModule.html":{},"injectables/PumpModelService.html":{},"guards/QueryParameterGuard.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"interfaces/ShapeData.html":{},"components/SideBarComponent.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"interfaces/WisdomInterface.html":{},"modules/WisdomModule.html":{}}}],["imported",{"_index":1885,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["imports",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ExampleModule.html":{},"modules/PumpModelModule.html":{},"modules/WaterUsageForecastsModule.html":{},"modules/WisdomModule.html":{}}}],["include",{"_index":2308,"title":{},"body":{"interfaces/WisdomInterface.html":{}}}],["incorrect",{"_index":2083,"title":{},"body":{"injectables/UserService.html":{}}}],["index",{"_index":23,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"components/BimComponent.html":{},"injectables/BimService.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"interfaces/LayerData.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"interfaces/Marker.html":{},"classes/ModuleProvider.html":{},"guards/QueryParameterGuard.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"interfaces/ShapeData.html":{},"components/SideBarComponent.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"interfaces/WisdomInterface.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexed",{"_index":1800,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{},"miscellaneous/variables.html":{}}}],["indexeddb",{"_index":1811,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["infinite",{"_index":1352,"title":{},"body":{"components/LoaderComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"components/BimComponent.html":{},"injectables/BimService.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/ExampleComponent.html":{},"modules/ExampleModule.html":{},"injectables/ExampleService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"interfaces/LayerData.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"interfaces/Marker.html":{},"classes/ModuleProvider.html":{},"components/PumpModelComponent.html":{},"modules/PumpModelModule.html":{},"injectables/PumpModelService.html":{},"guards/QueryParameterGuard.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"interfaces/ShapeData.html":{},"components/SideBarComponent.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"interfaces/WisdomInterface.html":{},"modules/WisdomModule.html":{}}}],["information",{"_index":2521,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["infos",{"_index":1035,"title":{},"body":{"interfaces/Error.html":{}}}],["init",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/LoaderComponent.html":{},"components/MapComponent.html":{}}}],["initial",{"_index":2063,"title":{},"body":{"injectables/UserService.html":{}}}],["initialize",{"_index":2593,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject",{"_index":330,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/IonIconComponent.html":{},"miscellaneous/variables.html":{}}}],["injectable",{"_index":256,"title":{"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"injectables/BimService.html":{},"injectables/BreadcrumbsService.html":{},"injectables/ConsumersService.html":{},"injectables/ErrorService.html":{},"injectables/ExampleService.html":{},"injectables/LoaderService.html":{},"injectables/MapService.html":{},"injectables/PumpModelService.html":{},"injectables/SettingsStorageService.html":{},"injectables/UserService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"injectables/BimService.html":{},"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"interceptors/CacheInterceptor.html":{},"injectables/ConsumersService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"injectables/ExampleService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/PumpModelService.html":{},"guards/QueryParameterGuard.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"injectables/UserService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"coverage.html":{}}}],["injectables",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"injectables/BimService.html":{},"injectables/BreadcrumbsService.html":{},"injectables/ConsumersService.html":{},"injectables/ErrorService.html":{},"injectables/ExampleService.html":{},"injectables/LoaderService.html":{},"injectables/MapService.html":{},"injectables/PumpModelService.html":{},"injectables/SettingsStorageService.html":{},"injectables/UserService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"index.html":{}}}],["injected",{"_index":342,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/MapComponent.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"interfaces/WisdomInterface.html":{},"miscellaneous/variables.html":{}}}],["injects",{"_index":339,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["inner",{"_index":1575,"title":{},"body":{"components/MapComponent.html":{}}}],["input",{"_index":639,"title":{},"body":{"components/BimComponent.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"miscellaneous/typealiases.html":{}}}],["input(\"aspect",{"_index":651,"title":{},"body":{"components/BimComponent.html":{}}}],["input(\"center",{"_index":1641,"title":{},"body":{"components/MapComponent.html":{}}}],["input(\"class",{"_index":886,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["input(\"file",{"_index":650,"title":{},"body":{"components/BimComponent.html":{}}}],["input(\"height",{"_index":1637,"title":{},"body":{"components/MapComponent.html":{}}}],["input(\"layers",{"_index":1649,"title":{},"body":{"components/MapComponent.html":{}}}],["input(\"layerselectable",{"_index":1652,"title":{},"body":{"components/MapComponent.html":{}}}],["input(\"markers",{"_index":1654,"title":{},"body":{"components/MapComponent.html":{}}}],["input(\"scrollwheelzoom",{"_index":1645,"title":{},"body":{"components/MapComponent.html":{}}}],["input(\"selectedcolor",{"_index":1648,"title":{},"body":{"components/MapComponent.html":{}}}],["input(\"selectlang",{"_index":1294,"title":{},"body":{"directives/LangSelectorDirective.html":{}}}],["input(\"tileurl",{"_index":1639,"title":{},"body":{"components/MapComponent.html":{}}}],["input(\"unselectedcolor",{"_index":1647,"title":{},"body":{"components/MapComponent.html":{}}}],["input(\"zoom",{"_index":1643,"title":{},"body":{"components/MapComponent.html":{}}}],["inputcenter",{"_index":1642,"title":{},"body":{"components/MapComponent.html":{}}}],["inputheight",{"_index":1638,"title":{},"body":{"components/MapComponent.html":{}}}],["inputlayers",{"_index":1530,"title":{},"body":{"components/MapComponent.html":{}}}],["inputlayers(layerconfig",{"_index":1650,"title":{},"body":{"components/MapComponent.html":{}}}],["inputlayerselectable",{"_index":1653,"title":{},"body":{"components/MapComponent.html":{}}}],["inputmarkers",{"_index":1531,"title":{},"body":{"components/MapComponent.html":{}}}],["inputmarkers(markers",{"_index":1655,"title":{},"body":{"components/MapComponent.html":{}}}],["inputs",{"_index":536,"title":{},"body":{"components/BimComponent.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/MapComponent.html":{}}}],["inputscrollwheelzoom",{"_index":1646,"title":{},"body":{"components/MapComponent.html":{}}}],["inputtileurl",{"_index":1640,"title":{},"body":{"components/MapComponent.html":{}}}],["inputzoom",{"_index":1644,"title":{},"body":{"components/MapComponent.html":{}}}],["insert",{"_index":908,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"components/MapComponent.html":{}}}],["insertroute",{"_index":1924,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["insertroute.canactivate",{"_index":1926,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["insertroute.canactivate.push(authguard",{"_index":1928,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["instanceof",{"_index":935,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"injectables/ErrorService.html":{},"interceptors/LoaderInterceptor.html":{}}}],["instant",{"_index":2438,"title":{},"body":{"miscellaneous/functions.html":{}}}],["instead",{"_index":412,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["insufficient",{"_index":2512,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["interact",{"_index":231,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/UserService.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["interaction",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["intercept",{"_index":333,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/BaseUrlInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/LoaderInterceptor.html":{},"interceptors/SanitizeUrlInterceptor.html":{}}}],["intercept(request",{"_index":335,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/BaseUrlInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/LoaderInterceptor.html":{},"interceptors/SanitizeUrlInterceptor.html":{}}}],["intercepting",{"_index":1977,"title":{},"body":{"interceptors/SanitizeUrlInterceptor.html":{}}}],["interceptor",{"_index":327,"title":{"interceptors/AuthInterceptor.html":{},"interceptors/BaseUrlInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/LoaderInterceptor.html":{},"interceptors/SanitizeUrlInterceptor.html":{}},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"coverage.html":{}}}],["interceptors",{"_index":328,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/BaseUrlInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/LoaderInterceptor.html":{},"interceptors/SanitizeUrlInterceptor.html":{}}}],["interface",{"_index":784,"title":{"interfaces/Breadcrumb.html":{},"interfaces/Error.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"interfaces/LayerData.html":{},"interfaces/MapDB.html":{},"interfaces/Marker.html":{},"interfaces/ShapeData.html":{},"interfaces/WisdomInterface.html":{}},"body":{"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"interfaces/Error.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"interfaces/LayerData.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"interfaces/Marker.html":{},"interfaces/ShapeData.html":{},"injectables/WaterUsageForecastsService.html":{},"interfaces/WisdomInterface.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["interfaces",{"_index":786,"title":{},"body":{"interfaces/Breadcrumb.html":{},"interfaces/Error.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"interfaces/LayerData.html":{},"interfaces/MapDB.html":{},"interfaces/Marker.html":{},"interfaces/ShapeData.html":{},"interfaces/WisdomInterface.html":{},"index.html":{}}}],["internal",{"_index":452,"title":{},"body":{"injectables/AuthStorageService.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"injectables/LoaderService.html":{},"injectables/SettingsStorageService.html":{}}}],["internally",{"_index":1433,"title":{},"body":{"injectables/LoaderService.html":{},"components/MapComponent.html":{},"miscellaneous/functions.html":{}}}],["intersection",{"_index":1541,"title":{},"body":{"components/MapComponent.html":{}}}],["invert",{"_index":1630,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/variables.html":{}}}],["invertselection",{"_index":2586,"title":{},"body":{"miscellaneous/variables.html":{}}}],["invertselection(options",{"_index":2613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["invertselectioncontrol",{"_index":1691,"title":{},"body":{"components/MapComponent.html":{}}}],["invertselectioncontrol.addto(map",{"_index":1769,"title":{},"body":{"components/MapComponent.html":{}}}],["ion",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/BimComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/PumpModelComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"modules/WisdomModule.html":{},"miscellaneous/variables.html":{}}}],["ionic.io/ioniconshttps",{"_index":2531,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ioniconcomponent",{"_index":83,"title":{"components/IonIconComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BimComponent.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/PumpModelComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"modules/WisdomModule.html":{},"coverage.html":{},"index.html":{}}}],["ionicons",{"_index":1260,"title":{},"body":{"components/IonIconComponent.html":{}}}],["isactive",{"_index":869,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["isallset",{"_index":827,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["isloading",{"_index":1331,"title":{},"body":{"components/LoaderComponent.html":{}}}],["issue",{"_index":1473,"title":{},"body":{"components/LoginComponent.html":{}}}],["item",{"_index":1344,"title":{},"body":{"components/LoaderComponent.html":{},"injectables/SettingsStorageService.html":{}}}],["item:nth",{"_index":1354,"title":{},"body":{"components/LoaderComponent.html":{}}}],["items",{"_index":2599,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iterate",{"_index":2442,"title":{},"body":{"miscellaneous/functions.html":{}}}],["iterated",{"_index":1955,"title":{},"body":{"guards/QueryParameterGuard.html":{}}}],["itself",{"_index":1171,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/IonIconComponent.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["join",{"_index":395,"title":{},"body":{"injectables/AuthService.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/MapComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["join(auth_api",{"_index":2099,"title":{},"body":{"injectables/UserService.html":{}}}],["join(auth_url",{"_index":425,"title":{},"body":{"injectables/AuthService.html":{}}}],["js",{"_index":1264,"title":{},"body":{"components/IonIconComponent.html":{}}}],["json",{"_index":413,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ConsumersService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/UserService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"miscellaneous/variables.html":{}}}],["json.parse(cleaned",{"_index":2265,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["json.parse(json.stringify(raw",{"_index":2267,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["json.stringify(res",{"_index":2260,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["justify",{"_index":2600,"title":{},"body":{"miscellaneous/variables.html":{}}}],["k",{"_index":1851,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["k.split",{"_index":1673,"title":{},"body":{"components/MapComponent.html":{}}}],["k.substring(0",{"_index":1850,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["key",{"_index":348,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthStorageService.html":{},"interceptors/CacheInterceptor.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"directives/LangSelectorDirective.html":{},"interfaces/LayerData.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"classes/ModuleProvider.html":{},"injectables/SettingsStorageService.html":{},"interfaces/ShapeData.html":{},"classes/StaticLoader.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["key[0",{"_index":1796,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["keyframes",{"_index":1364,"title":{},"body":{"components/LoaderComponent.html":{}}}],["keys",{"_index":1217,"title":{},"body":{"components/FrameComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"guards/QueryParameterGuard.html":{},"interfaces/WisdomInterface.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["keys.length",{"_index":1847,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["keys.map(k",{"_index":1849,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["keys?.map(k",{"_index":1672,"title":{},"body":{"components/MapComponent.html":{}}}],["kombination",{"_index":1500,"title":{},"body":{"components/LoginComponent.html":{}}}],["korrekt",{"_index":1502,"title":{},"body":{"components/LoginComponent.html":{}}}],["l",{"_index":1309,"title":{},"body":{"interfaces/LayerData.html":{},"components/MapComponent.html":{},"interfaces/Marker.html":{},"interfaces/ShapeData.html":{}}}],["l.control.extend",{"_index":2591,"title":{},"body":{"miscellaneous/variables.html":{}}}],["l.control.layers",{"_index":1690,"title":{},"body":{"components/MapComponent.html":{}}}],["l.controloptions",{"_index":2590,"title":{},"body":{"miscellaneous/variables.html":{}}}],["l.divicon",{"_index":1904,"title":{},"body":{"interfaces/Marker.html":{}}}],["l.domutil.create",{"_index":2601,"title":{},"body":{"miscellaneous/variables.html":{}}}],["l.geojson(undefined",{"_index":1717,"title":{},"body":{"components/MapComponent.html":{}}}],["l.icon",{"_index":1903,"title":{},"body":{"interfaces/Marker.html":{}}}],["l.layer",{"_index":1596,"title":{},"body":{"components/MapComponent.html":{}}}],["l.map",{"_index":1591,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/variables.html":{}}}],["l.map(nativemapelement",{"_index":1680,"title":{},"body":{"components/MapComponent.html":{}}}],["l.marker(marker.coordinates",{"_index":1775,"title":{},"body":{"components/MapComponent.html":{}}}],["l.markerclustergroup",{"_index":1771,"title":{},"body":{"components/MapComponent.html":{}}}],["l.path",{"_index":1737,"title":{},"body":{"components/MapComponent.html":{}}}],["l.tilelayer(this.tileurl).addto(map",{"_index":1687,"title":{},"body":{"components/MapComponent.html":{}}}],["l.util.setoptions(this",{"_index":2594,"title":{},"body":{"miscellaneous/variables.html":{}}}],["label[0",{"_index":2014,"title":{},"body":{"components/SideBarComponent.html":{}}}],["labels",{"_index":994,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"miscellaneous/typealiases.html":{}}}],["lang",{"_index":1248,"title":{},"body":{"components/FrameComponent.html":{},"directives/LangSelectorDirective.html":{},"classes/ModuleProvider.html":{},"classes/StaticLoader.html":{}}}],["langs",{"_index":1913,"title":{},"body":{"classes/ModuleProvider.html":{},"classes/StaticLoader.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["langs(lang",{"_index":1918,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["langs/de_de",{"_index":2027,"title":{},"body":{"classes/StaticLoader.html":{}}}],["langs/en_us",{"_index":2028,"title":{},"body":{"classes/StaticLoader.html":{}}}],["langs[lang",{"_index":2037,"title":{},"body":{"classes/StaticLoader.html":{}}}],["langselectordirective",{"_index":110,"title":{"directives/LangSelectorDirective.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BimComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/PumpModelComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"coverage.html":{},"index.html":{}}}],["language",{"_index":1287,"title":{},"body":{"directives/LangSelectorDirective.html":{},"classes/ModuleProvider.html":{},"classes/StaticLoader.html":{},"miscellaneous/variables.html":{}}}],["languages",{"_index":2030,"title":{},"body":{"classes/StaticLoader.html":{},"miscellaneous/variables.html":{}}}],["large",{"_index":2610,"title":{},"body":{"miscellaneous/variables.html":{}}}],["last",{"_index":903,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/UserService.html":{}}}],["lastmodified",{"_index":930,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["lastmodifiedmap",{"_index":906,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["lastname",{"_index":2049,"title":{},"body":{"injectables/UserService.html":{}}}],["later",{"_index":1731,"title":{},"body":{"components/MapComponent.html":{}}}],["latitude",{"_index":1581,"title":{},"body":{"components/MapComponent.html":{}}}],["layer",{"_index":1302,"title":{},"body":{"interfaces/LayerData.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"interfaces/Marker.html":{},"interfaces/ShapeData.html":{},"miscellaneous/typealiases.html":{}}}],["layer.bindtooltip(feature.properties.name",{"_index":1732,"title":{},"body":{"components/MapComponent.html":{}}}],["layer.fire(\"click",{"_index":1768,"title":{},"body":{"components/MapComponent.html":{}}}],["layer.on(\"click",{"_index":1735,"title":{},"body":{"components/MapComponent.html":{}}}],["layera",{"_index":1704,"title":{},"body":{"components/MapComponent.html":{}}}],["layera.options.order",{"_index":1710,"title":{},"body":{"components/MapComponent.html":{}}}],["layerb",{"_index":1705,"title":{},"body":{"components/MapComponent.html":{}}}],["layerb.options.order",{"_index":1711,"title":{},"body":{"components/MapComponent.html":{}}}],["layerconfig",{"_index":1515,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/typealiases.html":{}}}],["layerdata",{"_index":1298,"title":{"interfaces/LayerData.html":{}},"body":{"interfaces/LayerData.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"interfaces/ShapeData.html":{},"coverage.html":{}}}],["layerdata.box",{"_index":1870,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["layerdata.shapes",{"_index":1864,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["layerdata[\"box",{"_index":1809,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["layerindex",{"_index":1701,"title":{},"body":{"components/MapComponent.html":{}}}],["layerkey",{"_index":1588,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/typealiases.html":{}}}],["layername",{"_index":1760,"title":{},"body":{"components/MapComponent.html":{}}}],["layernames",{"_index":1516,"title":{},"body":{"components/MapComponent.html":{}}}],["layers",{"_index":1524,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/variables.html":{}}}],["layers.push(layer",{"_index":1746,"title":{},"body":{"components/MapComponent.html":{}}}],["layers]=&quot",{"_index":1610,"title":{},"body":{"components/MapComponent.html":{}}}],["layerscontrol",{"_index":1689,"title":{},"body":{"components/MapComponent.html":{}}}],["layerscontrol.addbaselayer",{"_index":1758,"title":{},"body":{"components/MapComponent.html":{}}}],["layerscontrol.addbaselayer(geojsonlayer",{"_index":1762,"title":{},"body":{"components/MapComponent.html":{}}}],["layerscontrol.addto(map",{"_index":1765,"title":{},"body":{"components/MapComponent.html":{}}}],["layerscontrol.options.sortfunction",{"_index":1703,"title":{},"body":{"components/MapComponent.html":{}}}],["layerscontrol.options.sortlayers",{"_index":1702,"title":{},"body":{"components/MapComponent.html":{}}}],["layerscontrol.removelayer(geojsonlayer",{"_index":1757,"title":{},"body":{"components/MapComponent.html":{}}}],["layerselectable",{"_index":1525,"title":{},"body":{"components/MapComponent.html":{}}}],["lazily",{"_index":1813,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["leads",{"_index":2307,"title":{},"body":{"interfaces/WisdomInterface.html":{}}}],["leaflet",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"interfaces/LayerData.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"interfaces/Marker.html":{},"interfaces/ShapeData.html":{},"components/WaterRightDetailComponent.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["leaflet.markercluster",{"_index":1631,"title":{},"body":{"components/MapComponent.html":{},"dependencies.html":{}}}],["leafletmouseevent",{"_index":1906,"title":{},"body":{"interfaces/Marker.html":{},"components/WaterRightDetailComponent.html":{}}}],["left",{"_index":792,"title":{},"body":{"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{}}}],["legend",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/BimComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/PumpModelComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["length",{"_index":2451,"title":{},"body":{"miscellaneous/functions.html":{}}}],["level",{"_index":1569,"title":{},"body":{"components/MapComponent.html":{}}}],["lib",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/BimComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/PumpModelComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["linear",{"_index":1164,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/enumerations.html":{}}}],["link",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/IonIconComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"interfaces/Marker.html":{},"guards/QueryParameterGuard.html":{},"components/WaterRightDetailComponent.html":{}}}],["list",{"_index":803,"title":{},"body":{"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"interfaces/LayerData.html":{},"interfaces/ShapeData.html":{},"injectables/UserService.html":{}}}],["literal",{"_index":1203,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"miscellaneous/typealiases.html":{}}}],["live",{"_index":839,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["lmarker",{"_index":1774,"title":{},"body":{"components/MapComponent.html":{}}}],["lmarker.addto(markerlayer",{"_index":1782,"title":{},"body":{"components/MapComponent.html":{}}}],["lmarker.bindtooltip(marker.tooltip",{"_index":1779,"title":{},"body":{"components/MapComponent.html":{}}}],["lmarker.on(\"click",{"_index":1781,"title":{},"body":{"components/MapComponent.html":{}}}],["lmarker.seticon(marker.icon",{"_index":1777,"title":{},"body":{"components/MapComponent.html":{}}}],["load",{"_index":1398,"title":{},"body":{"interceptors/LoaderInterceptor.html":{},"components/SideBarComponent.html":{}}}],["loaded",{"_index":553,"title":{},"body":{"components/BimComponent.html":{}}}],["loader",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"injectables/BimService.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"classes/StaticLoader.html":{},"miscellaneous/variables.html":{}}}],["loader'},{'name",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/BimComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/PumpModelComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["loader.component.html",{"_index":1329,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader.component.scss",{"_index":1328,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader.service",{"_index":1339,"title":{},"body":{"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{}}}],["loader.ts",{"_index":2017,"title":{},"body":{"classes/StaticLoader.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loader.ts:36",{"_index":2021,"title":{},"body":{"classes/StaticLoader.html":{}}}],["loadercomponent",{"_index":86,"title":{"components/LoaderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BimComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/PumpModelComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"coverage.html":{},"index.html":{}}}],["loaderguard",{"_index":192,"title":{"guards/LoaderGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/LoaderGuard.html":{},"classes/ModuleProvider.html":{},"coverage.html":{}}}],["loaderinterceptor",{"_index":130,"title":{"interceptors/LoaderInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/LoaderInterceptor.html":{},"coverage.html":{},"index.html":{}}}],["loaderservice",{"_index":1332,"title":{"injectables/LoaderService.html":{}},"body":{"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"coverage.html":{}}}],["loading",{"_index":1320,"title":{},"body":{"components/LoaderComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"miscellaneous/variables.html":{}}}],["loadings",{"_index":1438,"title":{},"body":{"injectables/LoaderService.html":{}}}],["localhost:8090/auth",{"_index":2086,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["location",{"_index":1050,"title":{},"body":{"components/ErrorComponent.html":{},"components/WaterRightDetailComponent.html":{},"miscellaneous/variables.html":{}}}],["location.name",{"_index":2131,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location.real",{"_index":2126,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.basinno?.key",{"_index":2194,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.basinno?.name",{"_index":2195,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.county",{"_index":2197,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.eusurveyarea?.key",{"_index":2200,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.eusurveyarea?.name",{"_index":2201,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.field",{"_index":2203,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.floodarea",{"_index":2229,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.groundwatervolume",{"_index":2206,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.id",{"_index":2176,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.irrigationarea?.amount",{"_index":2186,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.irrigationarea?.unit",{"_index":2187,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.legalscope",{"_index":2175,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.localsubdistrict",{"_index":2209,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.location",{"_index":2124,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.maintenanceassociation?.key",{"_index":2212,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.maintenanceassociation?.name",{"_index":2213,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.municipalarea?.key",{"_index":2215,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.municipalarea?.name",{"_index":2216,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.name",{"_index":2174,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.no",{"_index":2178,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.plot",{"_index":2218,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.rainsupplement?.amount",{"_index":2190,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.rainsupplement?.duration",{"_index":2192,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.rainsupplement?.unit",{"_index":2191,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.rivershed",{"_index":2220,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.serialno",{"_index":2222,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.topmap1to25000?.key",{"_index":2225,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.topmap1to25000?.name",{"_index":2226,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.waterbody",{"_index":2227,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.waterprotectionarea",{"_index":2231,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["log",{"_index":1221,"title":{},"body":{"components/FrameComponent.html":{}}}],["logarithmic",{"_index":1163,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/enumerations.html":{}}}],["logged",{"_index":278,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["login",{"_index":198,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/FrameComponent.html":{},"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["login'},{'name",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/BimComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/PumpModelComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["login(username",{"_index":375,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.component.html",{"_index":1457,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":88,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BimComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/PumpModelComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"coverage.html":{},"index.html":{}}}],["loginhasissue",{"_index":1458,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginurltree",{"_index":269,"title":{},"body":{"guards/AuthGuard.html":{}}}],["loginurltree.queryparams",{"_index":272,"title":{},"body":{"guards/AuthGuard.html":{}}}],["logout",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{},"components/FrameComponent.html":{}}}],["logout(token",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{}}}],["logs",{"_index":378,"title":{},"body":{"injectables/AuthService.html":{}}}],["long",{"_index":840,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["longer",{"_index":2637,"title":{},"body":{"miscellaneous/variables.html":{}}}],["longitude",{"_index":1580,"title":{},"body":{"components/MapComponent.html":{}}}],["look",{"_index":1824,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{},"miscellaneous/variables.html":{}}}],["lostpointercapture",{"_index":554,"title":{},"body":{"components/BimComponent.html":{}}}],["lt;map",{"_index":1608,"title":{},"body":{"components/MapComponent.html":{}}}],["lx",{"_index":1629,"title":{},"body":{"components/MapComponent.html":{}}}],["lx.control.invertselection",{"_index":1767,"title":{},"body":{"components/MapComponent.html":{}}}],["made",{"_index":2543,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["main",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["make",{"_index":653,"title":{},"body":{"components/BimComponent.html":{},"components/IonIconComponent.html":{},"components/MapComponent.html":{}}}],["makes",{"_index":837,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["making",{"_index":373,"title":{},"body":{"injectables/AuthService.html":{},"directives/BulmaIsToggleableDirective.html":{},"miscellaneous/variables.html":{}}}],["management",{"_index":2044,"title":{},"body":{"injectables/UserService.html":{}}}],["many",{"_index":1972,"title":{},"body":{"interceptors/SanitizeUrlInterceptor.html":{}}}],["map",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/BimComponent.html":{},"components/BreadcrumbsComponent.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"components/PumpModelComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageHistoryService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["map'},{'name",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/BimComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/PumpModelComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["map(str",{"_index":1683,"title":{},"body":{"components/MapComponent.html":{}}}],["map.component.css",{"_index":1513,"title":{},"body":{"components/MapComponent.html":{}}}],["map.fitbounds",{"_index":1753,"title":{},"body":{"components/MapComponent.html":{}}}],["map.getrenderer(map",{"_index":1685,"title":{},"body":{"components/MapComponent.html":{}}}],["map.on(\"baselayerchange",{"_index":1763,"title":{},"body":{"components/MapComponent.html":{}}}],["map.removecontrol(invertselectioncontrol",{"_index":1766,"title":{},"body":{"components/MapComponent.html":{}}}],["map.removecontrol(layerscontrol",{"_index":1695,"title":{},"body":{"components/MapComponent.html":{}}}],["map.removelayer(this.selectedgeojsonlayer",{"_index":1713,"title":{},"body":{"components/MapComponent.html":{}}}],["map.service",{"_index":1628,"title":{},"body":{"components/MapComponent.html":{}}}],["map/map.component",{"_index":2320,"title":{},"body":{"modules/WisdomModule.html":{}}}],["mapcomponent",{"_index":90,"title":{"components/MapComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BimComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"interfaces/Marker.html":{},"components/PumpModelComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"modules/WisdomModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["mapcomponent.inputlayers",{"_index":1636,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/typealiases.html":{}}}],["mapdb",{"_index":1786,"title":{"interfaces/MapDB.html":{}},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{},"coverage.html":{}}}],["mapelement",{"_index":1517,"title":{},"body":{"components/MapComponent.html":{}}}],["mapped",{"_index":1590,"title":{},"body":{"components/MapComponent.html":{}}}],["maps",{"_index":1512,"title":{},"body":{"components/MapComponent.html":{}}}],["mapselection",{"_index":1877,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["mapselection(selection",{"_index":1880,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["mapselectviewcomponent",{"_index":92,"title":{"components/MapSelectViewComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BimComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/PumpModelComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["mapservice",{"_index":1532,"title":{"injectables/MapService.html":{}},"body":{"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"coverage.html":{}}}],["marker",{"_index":951,"title":{"interfaces/Marker.html":{}},"body":{"components/ConsumerDetailComponent.html":{},"components/MapComponent.html":{},"interfaces/Marker.html":{},"components/WaterRightDetailComponent.html":{},"coverage.html":{}}}],["marker.icon",{"_index":1776,"title":{},"body":{"components/MapComponent.html":{}}}],["marker.onclick",{"_index":1780,"title":{},"body":{"components/MapComponent.html":{}}}],["marker.tooltip",{"_index":1778,"title":{},"body":{"components/MapComponent.html":{}}}],["markerlayer",{"_index":1770,"title":{},"body":{"components/MapComponent.html":{}}}],["markerlayer.addto(map",{"_index":1783,"title":{},"body":{"components/MapComponent.html":{}}}],["markerlayer.removefrom(map",{"_index":1773,"title":{},"body":{"components/MapComponent.html":{}}}],["markers",{"_index":1518,"title":{},"body":{"components/MapComponent.html":{},"interfaces/Marker.html":{},"components/WaterRightDetailComponent.html":{}}}],["markers.push",{"_index":2130,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["marker}s",{"_index":1657,"title":{},"body":{"components/MapComponent.html":{}}}],["match",{"_index":912,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["matching",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"components/BimComponent.html":{},"injectables/BimService.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/ExampleComponent.html":{},"modules/ExampleModule.html":{},"injectables/ExampleService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"interfaces/LayerData.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"interfaces/Marker.html":{},"classes/ModuleProvider.html":{},"components/PumpModelComponent.html":{},"modules/PumpModelModule.html":{},"injectables/PumpModelService.html":{},"guards/QueryParameterGuard.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"interfaces/ShapeData.html":{},"components/SideBarComponent.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"interfaces/WisdomInterface.html":{},"modules/WisdomModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.max(...bounds[0",{"_index":2137,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["math.max(...bounds[1",{"_index":2138,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["math.min(...bounds[0",{"_index":2139,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["math.min(...bounds[1",{"_index":2140,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["meaning",{"_index":1634,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/typealiases.html":{}}}],["message",{"_index":1470,"title":{},"body":{"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/BimComponent.html":{},"components/BreadcrumbsComponent.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"interfaces/LayerData.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/PumpModelComponent.html":{},"interfaces/ShapeData.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["method",{"_index":241,"title":{},"body":{"guards/AuthGuard.html":{},"miscellaneous/functions.html":{}}}],["methods",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"components/BimComponent.html":{},"injectables/BimService.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"classes/ModuleProvider.html":{},"guards/QueryParameterGuard.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"miscellaneous/enumerations.html":{}}}],["minimalistic",{"_index":1138,"title":{},"body":{"components/ExampleComponent.html":{},"modules/ExampleModule.html":{},"components/PumpModelComponent.html":{},"modules/PumpModelModule.html":{}}}],["miscellaneous",{"_index":2404,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":1993,"title":{},"body":{"injectables/SettingsStorageService.html":{}}}],["mixed",{"_index":1621,"title":{},"body":{"components/MapComponent.html":{}}}],["mode",{"_index":2576,"title":{},"body":{"miscellaneous/variables.html":{}}}],["model",{"_index":1181,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["model.component",{"_index":1945,"title":{},"body":{"modules/PumpModelModule.html":{}}}],["model.component.html",{"_index":1938,"title":{},"body":{"components/PumpModelComponent.html":{}}}],["model.component.ts",{"_index":1936,"title":{},"body":{"components/PumpModelComponent.html":{},"coverage.html":{}}}],["model.module.ts",{"_index":1944,"title":{},"body":{"modules/PumpModelModule.html":{}}}],["model.service.ts",{"_index":1947,"title":{},"body":{"injectables/PumpModelService.html":{},"coverage.html":{}}}],["models",{"_index":2624,"title":{},"body":{"miscellaneous/variables.html":{}}}],["models/src/lib/pump",{"_index":1935,"title":{},"body":{"components/PumpModelComponent.html":{},"modules/PumpModelModule.html":{},"injectables/PumpModelService.html":{},"coverage.html":{}}}],["models/src/public",{"_index":2359,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["modernized",{"_index":2430,"title":{},"body":{"miscellaneous/functions.html":{}}}],["modified",{"_index":904,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["modified](https://developer.mozilla.org/en",{"_index":923,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["modifies",{"_index":1274,"title":{},"body":{"components/IonIconComponent.html":{}}}],["module",{"_index":115,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ExampleModule.html":{},"modules/PumpModelModule.html":{},"modules/WaterUsageForecastsModule.html":{},"modules/WisdomModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/ExampleModule.html":{},"classes/ModuleProvider.html":{},"modules/PumpModelModule.html":{},"classes/StaticLoader.html":{},"interfaces/WisdomInterface.html":{},"miscellaneous/variables.html":{}}}],["module.ts",{"_index":1912,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["module.wisdominterface.route",{"_index":1925,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["module.wisdominterface.translations[lang",{"_index":1932,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["modulelang",{"_index":1931,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["moduleprovider",{"_index":190,"title":{"classes/ModuleProvider.html":{}},"body":{"modules/AppRoutingModule.html":{},"classes/ModuleProvider.html":{},"classes/StaticLoader.html":{},"coverage.html":{}}}],["moduleprovider.langs(\"de_de",{"_index":2034,"title":{},"body":{"classes/StaticLoader.html":{},"miscellaneous/variables.html":{}}}],["moduleprovider.langs(\"en_us",{"_index":2035,"title":{},"body":{"classes/StaticLoader.html":{},"miscellaneous/variables.html":{}}}],["moduleprovider.routes",{"_index":197,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["modules",{"_index":117,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ExampleModule.html":{},"classes/ModuleProvider.html":{},"modules/PumpModelModule.html":{},"modules/WaterUsageForecastsModule.html":{},"interfaces/WisdomInterface.html":{},"modules/WisdomModule.html":{},"index.html":{},"modules.html":{}}}],["more",{"_index":1961,"title":{},"body":{"guards/QueryParameterGuard.html":{}}}],["mouse",{"_index":1558,"title":{},"body":{"components/MapComponent.html":{}}}],["mousedown",{"_index":555,"title":{},"body":{"components/BimComponent.html":{}}}],["mouseenter",{"_index":556,"title":{},"body":{"components/BimComponent.html":{}}}],["mouseevent",{"_index":2589,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mouseleave",{"_index":557,"title":{},"body":{"components/BimComponent.html":{}}}],["mousemove",{"_index":558,"title":{},"body":{"components/BimComponent.html":{}}}],["mouseout",{"_index":559,"title":{},"body":{"components/BimComponent.html":{}}}],["mouseover",{"_index":560,"title":{},"body":{"components/BimComponent.html":{}}}],["mouseup",{"_index":561,"title":{},"body":{"components/BimComponent.html":{}}}],["mousewheel",{"_index":562,"title":{},"body":{"components/BimComponent.html":{}}}],["moved",{"_index":2084,"title":{},"body":{"injectables/UserService.html":{}}}],["multi",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["municipal",{"_index":1175,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/MapComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/enumerations.html":{}}}],["name",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"components/BimComponent.html":{},"injectables/BimService.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/ExampleComponent.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"interfaces/LayerData.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"classes/ModuleProvider.html":{},"components/PumpModelComponent.html":{},"guards/QueryParameterGuard.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"interfaces/ShapeData.html":{},"components/SideBarComponent.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"interfaces/WisdomInterface.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["name(name",{"_index":1283,"title":{},"body":{"components/IonIconComponent.html":{}}}],["name(s",{"_index":2060,"title":{},"body":{"injectables/UserService.html":{}}}],["names",{"_index":1279,"title":{},"body":{"components/IonIconComponent.html":{},"components/MapComponent.html":{},"injectables/UserService.html":{}}}],["namespace",{"_index":2311,"title":{},"body":{"interfaces/WisdomInterface.html":{},"miscellaneous/variables.html":{}}}],["name}}{{id",{"_index":1013,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["nan",{"_index":500,"title":{},"body":{"injectables/AuthStorageService.html":{},"components/ConsumerDetailComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["native",{"_index":1275,"title":{},"body":{"components/IonIconComponent.html":{}}}],["nativemapelement",{"_index":1678,"title":{},"body":{"components/MapComponent.html":{}}}],["navigate",{"_index":244,"title":{},"body":{"guards/AuthGuard.html":{}}}],["navigation",{"_index":1385,"title":{},"body":{"guards/LoaderGuard.html":{}}}],["navigationend",{"_index":563,"title":{},"body":{"components/BimComponent.html":{}}}],["navigationstart",{"_index":1125,"title":{},"body":{"injectables/ErrorService.html":{}}}],["necessary",{"_index":235,"title":{},"body":{"guards/AuthGuard.html":{},"components/IonIconComponent.html":{},"injectables/UserService.html":{}}}],["need",{"_index":1916,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["needed",{"_index":843,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IonIconComponent.html":{}}}],["needs",{"_index":208,"title":{},"body":{"guards/AuthGuard.html":{},"components/MapComponent.html":{},"injectables/UserService.html":{}}}],["nested",{"_index":2526,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["nesting",{"_index":1238,"title":{},"body":{"components/FrameComponent.html":{}}}],["new",{"_index":283,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/BimComponent.html":{},"injectables/BimService.html":{},"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newurl",{"_index":1985,"title":{},"body":{"interceptors/SanitizeUrlInterceptor.html":{}}}],["next",{"_index":286,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/BaseUrlInterceptor.html":{},"components/BreadcrumbsComponent.html":{},"interceptors/CacheInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/LoaderInterceptor.html":{},"components/LoginComponent.html":{},"interceptors/SanitizeUrlInterceptor.html":{}}}],["next(value",{"_index":1407,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["next.handle",{"_index":523,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{}}}],["next.handle(authrequest).pipe(tap(event",{"_index":359,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["next.handle(request",{"_index":926,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/LoaderInterceptor.html":{}}}],["next.handle(request).pipe",{"_index":1104,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["next.handle(request.clone",{"_index":932,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"interceptors/SanitizeUrlInterceptor.html":{}}}],["ng2",{"_index":2282,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{},"dependencies.html":{}}}],["ngafterviewinit",{"_index":535,"title":{},"body":{"components/BimComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/MapComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["ngchartsmodule",{"_index":2281,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{}}}],["ngform",{"_index":1464,"title":{},"body":{"components/LoginComponent.html":{}}}],["ngmodule",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ExampleModule.html":{},"modules/PumpModelModule.html":{},"modules/WaterUsageForecastsModule.html":{},"modules/WisdomModule.html":{}}}],["ngondestroy",{"_index":828,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["ngoninit",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/LoaderComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["ngx",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"modules/ExampleModule.html":{},"directives/LangSelectorDirective.html":{},"components/MapComponent.html":{},"modules/PumpModelModule.html":{},"classes/StaticLoader.html":{},"components/WaterRightDetailComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"modules/WisdomModule.html":{},"dependencies.html":{}}}],["nicht",{"_index":1501,"title":{},"body":{"components/LoginComponent.html":{}}}],["node",{"_index":865,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["nomenclature",{"_index":1313,"title":{},"body":{"interfaces/LayerData.html":{},"interfaces/ShapeData.html":{}}}],["non",{"_index":323,"title":{},"body":{"guards/AuthGuard.html":{}}}],["none",{"_index":911,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"miscellaneous/variables.html":{}}}],["notifies",{"_index":1401,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["now",{"_index":2614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["null",{"_index":454,"title":{},"body":{"injectables/AuthStorageService.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/SettingsStorageService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["nullable",{"_index":2524,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["nullish",{"_index":461,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["nullstring",{"_index":2483,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["num",{"_index":2422,"title":{},"body":{"miscellaneous/functions.html":{}}}],["number",{"_index":466,"title":{},"body":{"injectables/AuthStorageService.html":{},"components/BimComponent.html":{},"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"interfaces/LayerData.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"interfaces/Marker.html":{},"interfaces/ShapeData.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["nutskey",{"_index":1316,"title":{},"body":{"interfaces/LayerData.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"interfaces/ShapeData.html":{}}}],["oauth",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{}}}],["oauth/check_token",{"_index":429,"title":{},"body":{"injectables/AuthService.html":{}}}],["oauth/revoke",{"_index":432,"title":{},"body":{"injectables/AuthService.html":{}}}],["oauth/token",{"_index":426,"title":{},"body":{"injectables/AuthService.html":{}}}],["oauth2.0",{"_index":2064,"title":{},"body":{"injectables/UserService.html":{}}}],["obj",{"_index":2435,"title":{},"body":{"miscellaneous/functions.html":{}}}],["object",{"_index":2305,"title":{},"body":{"interfaces/WisdomInterface.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["object.assign",{"_index":2033,"title":{},"body":{"classes/StaticLoader.html":{},"injectables/WaterRightsService.html":{},"miscellaneous/variables.html":{}}}],["object.assign(collectedlang",{"_index":1933,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["object.assign(this",{"_index":1083,"title":{},"body":{"components/ErrorComponent.html":{}}}],["object.entries(config",{"_index":1668,"title":{},"body":{"components/MapComponent.html":{}}}],["object.entries(layerdata",{"_index":1714,"title":{},"body":{"components/MapComponent.html":{}}}],["object.entries(requests",{"_index":1675,"title":{},"body":{"components/MapComponent.html":{}}}],["object.entries(sidebarlangs",{"_index":2036,"title":{},"body":{"classes/StaticLoader.html":{}}}],["object.entries(values",{"_index":2039,"title":{},"body":{"classes/StaticLoader.html":{}}}],["object.keys(layerdata).length",{"_index":1764,"title":{},"body":{"components/MapComponent.html":{}}}],["object.values(modules",{"_index":1923,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["observable",{"_index":253,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interceptors/BaseUrlInterceptor.html":{},"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"interceptors/CacheInterceptor.html":{},"injectables/ConsumersService.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/MapComponent.html":{},"guards/QueryParameterGuard.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["observable(subscriber",{"_index":284,"title":{},"body":{"guards/AuthGuard.html":{}}}],["observable.pipe(tap",{"_index":1406,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["observe",{"_index":814,"title":{},"body":{"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{}}}],["of(langs[lang",{"_index":2041,"title":{},"body":{"classes/StaticLoader.html":{}}}],["official",{"_index":1280,"title":{},"body":{"components/IonIconComponent.html":{}}}],["old",{"_index":215,"title":{},"body":{"guards/AuthGuard.html":{}}}],["oldenburg",{"_index":1582,"title":{},"body":{"components/MapComponent.html":{}}}],["oldenburg.de/repos/service",{"_index":1551,"title":{},"body":{"components/MapComponent.html":{}}}],["oldv",{"_index":1818,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["omit",{"_index":2246,"title":{},"body":{"injectables/WaterRightsService.html":{},"miscellaneous/typealiases.html":{}}}],["onadd",{"_index":2595,"title":{},"body":{"miscellaneous/variables.html":{}}}],["onclick",{"_index":1902,"title":{},"body":{"interfaces/Marker.html":{},"components/WaterRightDetailComponent.html":{}}}],["ondestroy",{"_index":824,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["one",{"_index":216,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/MapComponent.html":{},"interfaces/Marker.html":{},"classes/StaticLoader.html":{}}}],["oneachfeature",{"_index":1729,"title":{},"body":{"components/MapComponent.html":{}}}],["oninit",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/PumpModelComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["only_keys",{"_index":1615,"title":{},"body":{"components/MapComponent.html":{}}}],["onsubmit",{"_index":1460,"title":{},"body":{"components/LoginComponent.html":{}}}],["onsubmit(f",{"_index":1463,"title":{},"body":{"components/LoginComponent.html":{}}}],["onto",{"_index":1559,"title":{},"body":{"components/MapComponent.html":{}}}],["opacity",{"_index":1367,"title":{},"body":{"components/LoaderComponent.html":{}}}],["opendb",{"_index":1803,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["opendb(db_name",{"_index":1816,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["operate",{"_index":344,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["operations",{"_index":1838,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["operations.push(querystore.put",{"_index":1869,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["operations.push(shapestore.put(shape",{"_index":1865,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["operations.push(store.get(key).then(shape",{"_index":1840,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["operations.push(tx.done",{"_index":1842,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["option",{"_index":1557,"title":{},"body":{"components/MapComponent.html":{}}}],["optional",{"_index":224,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"components/BimComponent.html":{},"injectables/BimService.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"interfaces/Marker.html":{},"classes/ModuleProvider.html":{},"guards/QueryParameterGuard.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":403,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["order",{"_index":1126,"title":{},"body":{"injectables/ErrorService.html":{},"components/LoaderComponent.html":{},"components/MapComponent.html":{},"miscellaneous/functions.html":{}}}],["ordering",{"_index":1709,"title":{},"body":{"components/MapComponent.html":{}}}],["orders",{"_index":1707,"title":{},"body":{"components/MapComponent.html":{}}}],["original",{"_index":2577,"title":{},"body":{"miscellaneous/variables.html":{}}}],["osm",{"_index":1604,"title":{},"body":{"components/MapComponent.html":{}}}],["oss",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/FrameComponent.html":{},"components/LoginComponent.html":{}}}],["otherwise",{"_index":2453,"title":{},"body":{"miscellaneous/functions.html":{}}}],["out",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"modules/ExampleModule.html":{},"components/FrameComponent.html":{},"components/LoaderComponent.html":{},"modules/PumpModelModule.html":{},"modules/WaterUsageForecastsModule.html":{},"modules/WisdomModule.html":{},"index.html":{}}}],["output",{"_index":640,"title":{},"body":{"components/BimComponent.html":{},"injectables/ErrorService.html":{},"components/MapComponent.html":{}}}],["outputs",{"_index":539,"title":{},"body":{"components/BimComponent.html":{},"components/MapComponent.html":{}}}],["overflow",{"_index":1379,"title":{},"body":{"components/LoaderComponent.html":{}}}],["overview",{"_index":2456,"title":{"index.html":{}},"body":{"index.html":{}}}],["package",{"_index":2378,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":252,"title":{},"body":{"guards/AuthGuard.html":{},"components/BreadcrumbsComponent.html":{},"components/FrameComponent.html":{},"components/LoginComponent.html":{}}}],["pairs",{"_index":1587,"title":{},"body":{"components/MapComponent.html":{}}}],["param",{"_index":262,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"interceptors/CacheInterceptor.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"classes/ModuleProvider.html":{},"guards/QueryParameterGuard.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{}}}],["parameter.guard.ts",{"_index":1950,"title":{},"body":{"guards/QueryParameterGuard.html":{},"coverage.html":{}}}],["parameter.guard.ts:25",{"_index":1956,"title":{},"body":{"guards/QueryParameterGuard.html":{}}}],["parameter.guard.ts:41",{"_index":1959,"title":{},"body":{"guards/QueryParameterGuard.html":{}}}],["parameters",{"_index":223,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"components/BimComponent.html":{},"injectables/BimService.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"classes/ModuleProvider.html":{},"guards/QueryParameterGuard.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"miscellaneous/functions.html":{}}}],["parameters[1",{"_index":2088,"title":{},"body":{"injectables/UserService.html":{}}}],["parameters[2",{"_index":416,"title":{},"body":{"injectables/AuthService.html":{}}}],["params",{"_index":793,"title":{},"body":{"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"injectables/ConsumersService.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/WaterRightsService.html":{}}}],["params.appendall({key",{"_index":1848,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["params.id",{"_index":1026,"title":{},"body":{"injectables/ConsumersService.html":{}}}],["params.in",{"_index":1024,"title":{},"body":{"injectables/ConsumersService.html":{},"injectables/WaterRightsService.html":{}}}],["params.isactive",{"_index":2247,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["params.isreal",{"_index":2249,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["params.set(\"resolution",{"_index":1846,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["params.usageabove",{"_index":1028,"title":{},"body":{"injectables/ConsumersService.html":{}}}],["parse",{"_index":1957,"title":{},"body":{"guards/QueryParameterGuard.html":{}}}],["parsefloat(str",{"_index":1684,"title":{},"body":{"components/MapComponent.html":{}}}],["parseint(expiresin",{"_index":502,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["parseint(this.inputzoom",{"_index":1666,"title":{},"body":{"components/MapComponent.html":{}}}],["partial",{"_index":1018,"title":{},"body":{"injectables/ConsumersService.html":{},"injectables/WaterRightsService.html":{},"miscellaneous/typealiases.html":{}}}],["partials",{"_index":1176,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["pass",{"_index":1098,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{}}}],["passed",{"_index":796,"title":{},"body":{"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"interceptors/ErrorInterceptor.html":{},"components/MapComponent.html":{},"guards/QueryParameterGuard.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["password",{"_index":376,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["password).subscribe",{"_index":1484,"title":{},"body":{"components/LoginComponent.html":{}}}],["passwordinput",{"_index":1459,"title":{},"body":{"components/LoginComponent.html":{}}}],["patchusers204",{"_index":2486,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["patchusers403",{"_index":2488,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["patchusers404",{"_index":2490,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["patchusersme200",{"_index":2492,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["path",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/MapComponent.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["path.bringtoback",{"_index":1740,"title":{},"body":{"components/MapComponent.html":{}}}],["path.bringtofront",{"_index":1743,"title":{},"body":{"components/MapComponent.html":{}}}],["path.replace(/\\/+/g",{"_index":1984,"title":{},"body":{"interceptors/SanitizeUrlInterceptor.html":{}}}],["path.setstyle({color",{"_index":1739,"title":{},"body":{"components/MapComponent.html":{}}}],["pathmatch",{"_index":2628,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pathwithparams",{"_index":1981,"title":{},"body":{"interceptors/SanitizeUrlInterceptor.html":{}}}],["pathwithparams.split",{"_index":1983,"title":{},"body":{"interceptors/SanitizeUrlInterceptor.html":{}}}],["per",{"_index":265,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["person",{"_index":2061,"title":{},"body":{"injectables/UserService.html":{}}}],["pick",{"_index":564,"title":{},"body":{"components/BimComponent.html":{}}}],["pipe(map",{"_index":2251,"title":{},"body":{"injectables/WaterRightsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["pipe(map((raw",{"_index":2266,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["pipe(map((res",{"_index":2258,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["pipe(takewhile",{"_index":849,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["pipe(tap(event",{"_index":934,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["plugin",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["point",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"injectables/ConsumersService.html":{},"injectables/WaterRightsService.html":{}}}],["pointercancel",{"_index":565,"title":{},"body":{"components/BimComponent.html":{}}}],["pointerdown",{"_index":566,"title":{},"body":{"components/BimComponent.html":{}}}],["pointerenter",{"_index":567,"title":{},"body":{"components/BimComponent.html":{}}}],["pointerleave",{"_index":568,"title":{},"body":{"components/BimComponent.html":{}}}],["pointerlockchange",{"_index":569,"title":{},"body":{"components/BimComponent.html":{}}}],["pointerlockerror",{"_index":570,"title":{},"body":{"components/BimComponent.html":{}}}],["pointermove",{"_index":571,"title":{},"body":{"components/BimComponent.html":{}}}],["pointerout",{"_index":572,"title":{},"body":{"components/BimComponent.html":{}}}],["pointerover",{"_index":573,"title":{},"body":{"components/BimComponent.html":{}}}],["pointerup",{"_index":574,"title":{},"body":{"components/BimComponent.html":{}}}],["polynomial",{"_index":1165,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/enumerations.html":{}}}],["position",{"_index":1345,"title":{},"body":{"components/LoaderComponent.html":{},"miscellaneous/variables.html":{}}}],["possible",{"_index":250,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/CacheInterceptor.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["possibly",{"_index":1325,"title":{},"body":{"components/LoaderComponent.html":{}}}],["post",{"_index":404,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["postoauthtoken200",{"_index":397,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/typealiases.html":{}}}],["postoauthtoken400",{"_index":1476,"title":{},"body":{"components/LoginComponent.html":{},"miscellaneous/typealiases.html":{}}}],["postoauthtoken401",{"_index":1478,"title":{},"body":{"components/LoginComponent.html":{},"miscellaneous/typealiases.html":{}}}],["postrevoke200",{"_index":399,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/typealiases.html":{}}}],["postrevoke403",{"_index":2498,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["pre202207200746",{"_index":2384,"title":{},"body":{"dependencies.html":{}}}],["predefined",{"_index":2432,"title":{},"body":{"miscellaneous/functions.html":{}}}],["prefers",{"_index":2386,"title":{},"body":{"dependencies.html":{}}}],["prepare",{"_index":1827,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["prepend",{"_index":511,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{}}}],["prepends",{"_index":513,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{}}}],["prependurl",{"_index":518,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{}}}],["presence",{"_index":1127,"title":{},"body":{"injectables/ErrorService.html":{}}}],["present",{"_index":306,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ErrorService.html":{}}}],["presentation",{"_index":2418,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pretty",{"_index":2089,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["prettyprintnum",{"_index":2348,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["prettyprintnum(12345678",{"_index":2424,"title":{},"body":{"miscellaneous/functions.html":{}}}],["prettyprintnum(num",{"_index":2417,"title":{},"body":{"miscellaneous/functions.html":{}}}],["print",{"_index":2423,"title":{},"body":{"miscellaneous/functions.html":{}}}],["private",{"_index":263,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthStorageService.html":{},"components/BimComponent.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"components/ErrorComponent.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"classes/ModuleProvider.html":{},"injectables/SettingsStorageService.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["privileges",{"_index":2513,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["prod",{"_index":2616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":2573,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prognosis",{"_index":1890,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["promise",{"_index":777,"title":{},"body":{"injectables/BimService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"guards/QueryParameterGuard.html":{}}}],["promise(resolve",{"_index":1405,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["promise.all(operations",{"_index":1843,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["promise.allsettled(this.promises",{"_index":1450,"title":{},"body":{"injectables/LoaderService.html":{}}}],["promises",{"_index":1421,"title":{},"body":{"injectables/LoaderService.html":{}}}],["proof",{"_index":2620,"title":{},"body":{"miscellaneous/variables.html":{}}}],["properly",{"_index":1547,"title":{},"body":{"components/MapComponent.html":{}}}],["properties",{"_index":24,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"components/BimComponent.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"injectables/ErrorService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"interfaces/LayerData.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"interfaces/Marker.html":{},"interfaces/ShapeData.html":{},"components/SideBarComponent.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"interfaces/WisdomInterface.html":{},"properties.html":{}}}],["protection",{"_index":2230,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["protocol",{"_index":1980,"title":{},"body":{"interceptors/SanitizeUrlInterceptor.html":{}}}],["protocol}://${path",{"_index":1986,"title":{},"body":{"interceptors/SanitizeUrlInterceptor.html":{}}}],["provide",{"_index":179,"title":{},"body":{"modules/AppModule.html":{},"classes/ModuleProvider.html":{},"interfaces/WisdomInterface.html":{}}}],["providedin",{"_index":261,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"injectables/BimService.html":{},"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"injectables/ConsumersService.html":{},"injectables/ErrorService.html":{},"injectables/ExampleService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"guards/LoaderGuard.html":{},"injectables/LoaderService.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/PumpModelService.html":{},"guards/QueryParameterGuard.html":{},"injectables/SettingsStorageService.html":{},"injectables/UserService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["provider",{"_index":191,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/StaticLoader.html":{}}}],["provider.ts",{"_index":1908,"title":{},"body":{"classes/ModuleProvider.html":{},"coverage.html":{}}}],["provider.ts:13",{"_index":1914,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["provider.ts:24",{"_index":1921,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["provider.ts:40",{"_index":1919,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["providers",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["provides",{"_index":2031,"title":{},"body":{"classes/StaticLoader.html":{},"interfaces/WisdomInterface.html":{},"miscellaneous/variables.html":{}}}],["providing",{"_index":1191,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["proxy",{"_index":2580,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":1979,"title":{},"body":{"interceptors/SanitizeUrlInterceptor.html":{},"miscellaneous/variables.html":{}}}],["public_institutions",{"_index":1198,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["pump",{"_index":1937,"title":{},"body":{"components/PumpModelComponent.html":{},"modules/PumpModelModule.html":{},"miscellaneous/variables.html":{}}}],["pumpmodelcomponent",{"_index":96,"title":{"components/PumpModelComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BimComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/PumpModelComponent.html":{},"modules/PumpModelModule.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["pumpmodelmodule",{"_index":1939,"title":{"modules/PumpModelModule.html":{}},"body":{"modules/PumpModelModule.html":{},"index.html":{},"modules.html":{}}}],["pumpmodelservice",{"_index":1946,"title":{"injectables/PumpModelService.html":{}},"body":{"injectables/PumpModelService.html":{},"coverage.html":{}}}],["pure",{"_index":1915,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["putusers201",{"_index":2078,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["putusers409",{"_index":2080,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["puzzle",{"_index":2608,"title":{},"body":{"miscellaneous/variables.html":{}}}],["px",{"_index":673,"title":{},"body":{"components/BimComponent.html":{}}}],["queries",{"_index":1792,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["query",{"_index":789,"title":{},"body":{"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"guards/QueryParameterGuard.html":{},"interceptors/SanitizeUrlInterceptor.html":{}}}],["query.join",{"_index":1988,"title":{},"body":{"interceptors/SanitizeUrlInterceptor.html":{}}}],["query.length",{"_index":1987,"title":{},"body":{"interceptors/SanitizeUrlInterceptor.html":{}}}],["querykey",{"_index":1831,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["queryparameterguard",{"_index":1948,"title":{"guards/QueryParameterGuard.html":{}},"body":{"guards/QueryParameterGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["queryparams",{"_index":1491,"title":{},"body":{"components/LoginComponent.html":{},"guards/QueryParameterGuard.html":{},"miscellaneous/variables.html":{}}}],["querystore",{"_index":1867,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["quot",{"_index":1625,"title":{},"body":{"components/MapComponent.html":{}}}],["quot;12.345.678&quot",{"_index":2426,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rate.amount",{"_index":2180,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["rate.unit}}/{{rate.duration",{"_index":2181,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["ratio",{"_index":538,"title":{},"body":{"components/BimComponent.html":{}}}],["raw.dateofchange",{"_index":2268,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["raw.valid",{"_index":2271,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["rawlayerdata",{"_index":1852,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["rawlayerdata.shapes",{"_index":1854,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["rawlayerdata.shapes.map(rawshape",{"_index":1855,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["rawshape",{"_index":1858,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["rawshape.geojson",{"_index":1857,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["rawshape.nuts_key",{"_index":1856,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["readonly",{"_index":1814,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["reads",{"_index":1910,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["readwrite",{"_index":1861,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["ready",{"_index":289,"title":{},"body":{"guards/AuthGuard.html":{}}}],["real",{"_index":2244,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["received",{"_index":436,"title":{},"body":{"injectables/AuthStorageService.html":{},"interceptors/CacheInterceptor.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"interfaces/LayerData.html":{},"interfaces/ShapeData.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["reconstruct",{"_index":1802,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["record",{"_index":1158,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/MapComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"interfaces/WisdomInterface.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["recorded_at",{"_index":2300,"title":{},"body":{"injectables/WaterUsageHistoryService.html":{}}}],["recordedat",{"_index":952,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["recreated",{"_index":2414,"title":{},"body":{"miscellaneous/functions.html":{}}}],["redirect",{"_index":1953,"title":{},"body":{"guards/QueryParameterGuard.html":{}}}],["redirectto",{"_index":199,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/QueryParameterGuard.html":{},"miscellaneous/variables.html":{}}}],["reduces",{"_index":1974,"title":{},"body":{"interceptors/SanitizeUrlInterceptor.html":{}}}],["reexported",{"_index":1909,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["ref",{"_index":1594,"title":{},"body":{"components/MapComponent.html":{}}}],["reference",{"_index":405,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/IonIconComponent.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/variables.html":{}}}],["referenceusages",{"_index":1178,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["refresh",{"_index":214,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"miscellaneous/variables.html":{}}}],["refresh(token",{"_index":383,"title":{},"body":{"injectables/AuthService.html":{}}}],["refresh_token",{"_index":431,"title":{},"body":{"injectables/AuthService.html":{}}}],["refresh_token_key",{"_index":484,"title":{},"body":{"injectables/AuthStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["refresherrresponse",{"_index":317,"title":{},"body":{"guards/AuthGuard.html":{}}}],["refresherrresponse.status",{"_index":319,"title":{},"body":{"guards/AuthGuard.html":{}}}],["refreshes",{"_index":385,"title":{},"body":{"injectables/AuthService.html":{}}}],["refreshing",{"_index":249,"title":{},"body":{"guards/AuthGuard.html":{}}}],["refreshresponse",{"_index":309,"title":{},"body":{"guards/AuthGuard.html":{}}}],["refreshresponse.access_token",{"_index":311,"title":{},"body":{"guards/AuthGuard.html":{}}}],["refreshresponse.expires_in",{"_index":316,"title":{},"body":{"guards/AuthGuard.html":{}}}],["refreshresponse.refresh_token",{"_index":312,"title":{},"body":{"guards/AuthGuard.html":{}}}],["refreshresponse.scope",{"_index":314,"title":{},"body":{"guards/AuthGuard.html":{}}}],["refreshtoken",{"_index":444,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["refreshtoken(token",{"_index":503,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["registers",{"_index":36,"title":{},"body":{"components/AppComponent.html":{}}}],["relative",{"_index":1346,"title":{},"body":{"components/LoaderComponent.html":{}}}],["removes",{"_index":806,"title":{},"body":{"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{}}}],["removing",{"_index":356,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["render",{"_index":1269,"title":{},"body":{"components/IonIconComponent.html":{}}}],["renders",{"_index":1573,"title":{},"body":{"components/MapComponent.html":{}}}],["replace(/\"'([^'\"\\s:,]+)'\"/g",{"_index":2263,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["replace(/\"\\s*([^\"]+)\\s*\"/g",{"_index":2261,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["replace(/'\"([^'\"\\s:,]+)\"'/g",{"_index":2264,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["replace(/'\\s*([^']+)\\s*'/g",{"_index":2262,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["replaceurl",{"_index":1246,"title":{},"body":{"components/FrameComponent.html":{},"components/LoginComponent.html":{}}}],["reply",{"_index":281,"title":{},"body":{"guards/AuthGuard.html":{},"miscellaneous/functions.html":{}}}],["report",{"_index":1389,"title":{},"body":{"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{}}}],["reported",{"_index":1416,"title":{},"body":{"injectables/LoaderService.html":{}}}],["represent",{"_index":1301,"title":{},"body":{"interfaces/LayerData.html":{},"interfaces/ShapeData.html":{}}}],["representation",{"_index":2554,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["representing",{"_index":1317,"title":{},"body":{"interfaces/LayerData.html":{},"interfaces/ShapeData.html":{}}}],["represents",{"_index":1797,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["request",{"_index":332,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interceptors/BaseUrlInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["request.clone",{"_index":352,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["request.clone({url",{"_index":525,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{}}}],["request.context.get(use_api_url",{"_index":521,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{}}}],["request.context.get(use_base_url",{"_index":519,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{}}}],["request.context.get(use_cache",{"_index":925,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["request.context.get(use_error_curtain",{"_index":1103,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["request.context.get(use_loader",{"_index":1404,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["request.headers",{"_index":933,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["request.headers.set(\"if",{"_index":929,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["request.headers.set(token_header_key",{"_index":358,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["request.url",{"_index":526,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{}}}],["request.urlwithparams",{"_index":927,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["requested",{"_index":245,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["requesterror.error.error",{"_index":1113,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["requesterror.error.errordescription",{"_index":1116,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["requesterror.error.errorname",{"_index":1114,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["requesterror.error.httpcode",{"_index":1109,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["requesterror.error.httperror",{"_index":1111,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["requesterror.message",{"_index":1117,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["requesterror.name",{"_index":1115,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["requesterror.ok",{"_index":1106,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["requesterror.status",{"_index":1110,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["requesterror.statustext",{"_index":1112,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["requests",{"_index":374,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/BaseUrlInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"injectables/LoaderService.html":{},"components/MapComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["requests[layerkey",{"_index":1670,"title":{},"body":{"components/MapComponent.html":{}}}],["required",{"_index":2310,"title":{},"body":{"interfaces/WisdomInterface.html":{}}}],["res",{"_index":2252,"title":{},"body":{"injectables/WaterRightsService.html":{},"miscellaneous/functions.html":{}}}],["res.dateofchange",{"_index":2269,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["res.map",{"_index":2253,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["res.valid",{"_index":2272,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["reset",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorService.html":{},"modules/ExampleModule.html":{},"guards/LoaderGuard.html":{},"components/MapComponent.html":{},"modules/PumpModelModule.html":{},"modules/WaterUsageForecastsModule.html":{},"modules/WisdomModule.html":{},"index.html":{}}}],["resize",{"_index":661,"title":{},"body":{"components/BimComponent.html":{}}}],["resizeobserver",{"_index":532,"title":{},"body":{"components/BimComponent.html":{}}}],["resizeobserver(entries",{"_index":667,"title":{},"body":{"components/BimComponent.html":{}}}],["resolution",{"_index":1534,"title":{},"body":{"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["resolution&#39",{"_index":1613,"title":{},"body":{"components/MapComponent.html":{}}}],["resolution.district",{"_index":1624,"title":{},"body":{"components/MapComponent.html":{}}}],["resolution.municipal",{"_index":1614,"title":{},"body":{"components/MapComponent.html":{}}}],["resolution.tokeylength(resolution",{"_index":1830,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["resolutionnum",{"_index":1829,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["resolutions",{"_index":2408,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["resolve(err",{"_index":1411,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["resolve(value",{"_index":1408,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["resolved",{"_index":2413,"title":{},"body":{"miscellaneous/functions.html":{}}}],["resolving",{"_index":1542,"title":{},"body":{"components/MapComponent.html":{}}}],["respond",{"_index":1323,"title":{},"body":{"components/LoaderComponent.html":{},"components/MapComponent.html":{}}}],["response",{"_index":287,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["response.access_token",{"_index":1485,"title":{},"body":{"components/LoginComponent.html":{}}}],["response.expires_in",{"_index":1488,"title":{},"body":{"components/LoginComponent.html":{}}}],["response.refresh_token",{"_index":1486,"title":{},"body":{"components/LoginComponent.html":{}}}],["response.scope",{"_index":1487,"title":{},"body":{"components/LoginComponent.html":{}}}],["response_types/login/postoauthtoken200",{"_index":398,"title":{},"body":{"injectables/AuthService.html":{}}}],["response_types/login/postoauthtoken400",{"_index":1477,"title":{},"body":{"components/LoginComponent.html":{}}}],["response_types/login/postoauthtoken401",{"_index":1479,"title":{},"body":{"components/LoginComponent.html":{}}}],["response_types/login/postrevoke200",{"_index":400,"title":{},"body":{"injectables/AuthService.html":{}}}],["response_types/users/getusers200",{"_index":2077,"title":{},"body":{"injectables/UserService.html":{}}}],["response_types/users/putusers201",{"_index":2079,"title":{},"body":{"injectables/UserService.html":{}}}],["response_types/users/putusers409",{"_index":2081,"title":{},"body":{"injectables/UserService.html":{}}}],["responsetype",{"_index":418,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BimService.html":{},"injectables/ConsumersService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/UserService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"miscellaneous/variables.html":{}}}],["rest",{"_index":1798,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["rest/main/api/get",{"_index":1552,"title":{},"body":{"components/MapComponent.html":{}}}],["result",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/BimComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/PumpModelComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["resultdataviewcomponent",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/BimComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/PumpModelComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"components/BimComponent.html":{},"injectables/BimService.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/ExampleComponent.html":{},"modules/ExampleModule.html":{},"injectables/ExampleService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"interfaces/LayerData.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"interfaces/Marker.html":{},"classes/ModuleProvider.html":{},"components/PumpModelComponent.html":{},"modules/PumpModelModule.html":{},"injectables/PumpModelService.html":{},"guards/QueryParameterGuard.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"interfaces/ShapeData.html":{},"components/SideBarComponent.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"interfaces/WisdomInterface.html":{},"modules/WisdomModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieved",{"_index":1812,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["return",{"_index":268,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"components/BimComponent.html":{},"injectables/BimService.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"injectables/ConsumersService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"directives/LangSelectorDirective.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"classes/ModuleProvider.html":{},"guards/QueryParameterGuard.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":1799,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["returning",{"_index":1100,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["returns",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"components/BimComponent.html":{},"injectables/BimService.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoaderComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"classes/ModuleProvider.html":{},"guards/QueryParameterGuard.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"miscellaneous/functions.html":{}}}],["returntologin",{"_index":302,"title":{},"body":{"guards/AuthGuard.html":{}}}],["returnurl",{"_index":273,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["returnurl.queryparams",{"_index":1492,"title":{},"body":{"components/LoginComponent.html":{}}}],["returnurl.tostring().split(\"?\")[0",{"_index":1493,"title":{},"body":{"components/LoginComponent.html":{}}}],["revokes",{"_index":382,"title":{},"body":{"injectables/AuthService.html":{}}}],["revoking",{"_index":1218,"title":{},"body":{"components/FrameComponent.html":{}}}],["right",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"components/BimComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/PumpModelComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"coverage.html":{}}}],["right.address",{"_index":2160,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.annotation",{"_index":2232,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.bailee",{"_index":2162,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.basin",{"_index":2193,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.county",{"_index":2196,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.eu",{"_index":2198,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.external",{"_index":2169,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.field",{"_index":2202,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.file",{"_index":2171,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.flood",{"_index":2228,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.fluid",{"_index":2182,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.granting",{"_index":2154,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.groundwater",{"_index":2204,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.internal",{"_index":2166,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.irrigation",{"_index":2184,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.local",{"_index":2207,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.location",{"_index":2177,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.locations",{"_index":2173,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.maintenance",{"_index":2210,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.municipal",{"_index":2214,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.plot",{"_index":2217,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.rain",{"_index":2188,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.registering",{"_index":2157,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.rivershed",{"_index":2219,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.serial",{"_index":2221,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.since",{"_index":2144,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.top",{"_index":2223,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.water",{"_index":2151,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.withdrawal",{"_index":2179,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right/:waterright",{"_index":2630,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rights",{"_index":2242,"title":{},"body":{"injectables/WaterRightsService.html":{},"miscellaneous/variables.html":{}}}],["rights.service",{"_index":2115,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["rights.service.ts",{"_index":2234,"title":{},"body":{"injectables/WaterRightsService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["rights.service.ts:116",{"_index":2237,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["rights.service.ts:123",{"_index":2241,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["rights.service.ts:147",{"_index":2239,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["rocket",{"_index":2622,"title":{},"body":{"miscellaneous/variables.html":{}}}],["role",{"_index":2066,"title":{},"body":{"injectables/UserService.html":{}}}],["roles",{"_index":2050,"title":{},"body":{"injectables/UserService.html":{}}}],["root",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"injectables/BimService.html":{},"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"injectables/ConsumersService.html":{},"injectables/ErrorService.html":{},"injectables/ExampleService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"guards/LoaderGuard.html":{},"injectables/LoaderService.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/PumpModelService.html":{},"guards/QueryParameterGuard.html":{},"injectables/SettingsStorageService.html":{},"injectables/UserService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["root'},{'name",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/BimComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/PumpModelComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["route",{"_index":234,"title":{},"body":{"guards/AuthGuard.html":{},"components/ConsumerDetailComponent.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"components/LoginComponent.html":{},"components/MapSelectViewComponent.html":{},"guards/QueryParameterGuard.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"interfaces/WisdomInterface.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["route.data[\"queryparams",{"_index":1965,"title":{},"body":{"guards/QueryParameterGuard.html":{}}}],["route.data[\"redirect",{"_index":1963,"title":{},"body":{"guards/QueryParameterGuard.html":{}}}],["route.queryparams[param",{"_index":1967,"title":{},"body":{"guards/QueryParameterGuard.html":{}}}],["route.url[0]?.path",{"_index":267,"title":{},"body":{"guards/AuthGuard.html":{}}}],["routed",{"_index":1469,"title":{},"body":{"components/LoginComponent.html":{}}}],["router",{"_index":221,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"injectables/ConsumersService.html":{},"injectables/ErrorService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"components/LoginComponent.html":{},"guards/QueryParameterGuard.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["router#parseurl",{"_index":1952,"title":{},"body":{"guards/QueryParameterGuard.html":{}}}],["routermodule",{"_index":185,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/WaterUsageForecastsModule.html":{},"modules/WisdomModule.html":{}}}],["routermodule.forroot(routes",{"_index":200,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":239,"title":{},"body":{"guards/AuthGuard.html":{},"guards/LoaderGuard.html":{},"guards/QueryParameterGuard.html":{}}}],["routes",{"_index":186,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/LoaderGuard.html":{},"classes/ModuleProvider.html":{},"index.html":{},"routes.html":{}}}],["routes.push(insertroute",{"_index":1929,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["routing",{"_index":1462,"title":{},"body":{"components/LoginComponent.html":{}}}],["routing.module",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":184,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":820,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/LoaderComponent.html":{}}}],["run",{"_index":2514,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["rxjs",{"_index":258,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interceptors/BaseUrlInterceptor.html":{},"injectables/BimService.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"guards/QueryParameterGuard.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"dependencies.html":{}}}],["same",{"_index":2056,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["sanitize",{"_index":173,"title":{},"body":{"modules/AppModule.html":{},"interceptors/SanitizeUrlInterceptor.html":{}}}],["sanitizeurlinterceptor",{"_index":131,"title":{"interceptors/SanitizeUrlInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"coverage.html":{},"index.html":{}}}],["schema",{"_index":1788,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{},"miscellaneous/variables.html":{}}}],["schema_v",{"_index":1808,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["scope",{"_index":2065,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["scopeguard",{"_index":1927,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["scopes",{"_index":445,"title":{},"body":{"injectables/AuthStorageService.html":{},"injectables/UserService.html":{},"interfaces/WisdomInterface.html":{},"miscellaneous/variables.html":{}}}],["scopes(scopes",{"_index":505,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["scopes_key",{"_index":485,"title":{},"body":{"injectables/AuthStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["screen",{"_index":1321,"title":{},"body":{"components/LoaderComponent.html":{}}}],["scroll",{"_index":1381,"title":{},"body":{"components/LoaderComponent.html":{},"components/MapComponent.html":{}}}],["scrollwheelzoom",{"_index":1526,"title":{},"body":{"components/MapComponent.html":{}}}],["se",{"_index":266,"title":{},"body":{"guards/AuthGuard.html":{}}}],["see",{"_index":1549,"title":{},"body":{"components/MapComponent.html":{},"interfaces/WisdomInterface.html":{}}}],["select",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/BimComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/PumpModelComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["select.get",{"_index":1896,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["selectable",{"_index":1554,"title":{},"body":{"components/MapComponent.html":{}}}],["selected",{"_index":1529,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/variables.html":{}}}],["selectedcolor",{"_index":1527,"title":{},"body":{"components/MapComponent.html":{}}}],["selectedgeojsonlayer",{"_index":1519,"title":{},"body":{"components/MapComponent.html":{}}}],["selectedlayer",{"_index":1520,"title":{},"body":{"components/MapComponent.html":{}}}],["selectedshapes",{"_index":1521,"title":{},"body":{"components/MapComponent.html":{}}}],["selectedshapes.add(key",{"_index":1744,"title":{},"body":{"components/MapComponent.html":{}}}],["selectedshapes.delete(key",{"_index":1741,"title":{},"body":{"components/MapComponent.html":{}}}],["selectedshapes.has(key",{"_index":1738,"title":{},"body":{"components/MapComponent.html":{}}}],["selection",{"_index":1539,"title":{},"body":{"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{}}}],["selection.keys",{"_index":1892,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["selection.keys.length",{"_index":1894,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["selection.ts",{"_index":2341,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectionready",{"_index":1876,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["selectlang",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/BimComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/PumpModelComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["selector",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/BimComponent.html":{},"components/BreadcrumbsComponent.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/PumpModelComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["selector.directive",{"_index":166,"title":{},"body":{"modules/AppModule.html":{}}}],["selector.directive.ts",{"_index":1286,"title":{},"body":{"directives/LangSelectorDirective.html":{},"coverage.html":{}}}],["selector.directive.ts:17",{"_index":1291,"title":{},"body":{"directives/LangSelectorDirective.html":{}}}],["selector.directive.ts:24",{"_index":1293,"title":{},"body":{"directives/LangSelectorDirective.html":{}}}],["selector.directive.ts:8",{"_index":1290,"title":{},"body":{"directives/LangSelectorDirective.html":{}}}],["send",{"_index":318,"title":{},"body":{"guards/AuthGuard.html":{}}}],["sends",{"_index":301,"title":{},"body":{"guards/AuthGuard.html":{}}}],["sent",{"_index":919,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"miscellaneous/variables.html":{}}}],["separated",{"_index":819,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"miscellaneous/functions.html":{}}}],["server",{"_index":233,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/CacheInterceptor.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"interfaces/LayerData.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"interfaces/ShapeData.html":{},"injectables/UserService.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["service",{"_index":229,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"components/BimComponent.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"injectables/ExampleService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/PumpModelService.html":{},"injectables/SettingsStorageService.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["services",{"_index":1322,"title":{},"body":{"components/LoaderComponent.html":{}}}],["services/consumers.service",{"_index":977,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["services/water",{"_index":978,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["session",{"_index":447,"title":{},"body":{"injectables/AuthStorageService.html":{},"injectables/SettingsStorageService.html":{}}}],["set",{"_index":251,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthStorageService.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"interceptors/LoaderInterceptor.html":{},"components/MapComponent.html":{},"interfaces/Marker.html":{},"guards/QueryParameterGuard.html":{},"injectables/SettingsStorageService.html":{}}}],["set(index",{"_index":809,"title":{},"body":{"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{}}}],["set(use_api_url",{"_index":420,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ConsumersService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"miscellaneous/variables.html":{}}}],["set(use_cache",{"_index":421,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["set(use_error_curtain",{"_index":423,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["set(use_loader",{"_index":1032,"title":{},"body":{"injectables/ConsumersService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["setaccesstoken(token",{"_index":459,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["setboolstorage",{"_index":1991,"title":{},"body":{"injectables/SettingsStorageService.html":{}}}],["setboolstorage(key",{"_index":1995,"title":{},"body":{"injectables/SettingsStorageService.html":{}}}],["setelementclasses(classes",{"_index":882,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["setexpiresin(unixtime",{"_index":467,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["sethidesidebar(setting",{"_index":1228,"title":{},"body":{"components/FrameComponent.html":{},"injectables/SettingsStorageService.html":{}}}],["sethideuserbar(setting",{"_index":1233,"title":{},"body":{"components/FrameComponent.html":{},"injectables/SettingsStorageService.html":{}}}],["setinputlayers(layerconfig",{"_index":1607,"title":{},"body":{"components/MapComponent.html":{}}}],["setinputmarkers(markers",{"_index":1627,"title":{},"body":{"components/MapComponent.html":{}}}],["setname(name",{"_index":1282,"title":{},"body":{"components/IonIconComponent.html":{}}}],["setrefreshtoken(token",{"_index":474,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["sets",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthStorageService.html":{},"components/MapComponent.html":{}}}],["setscopes(scopes",{"_index":478,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["setstorage",{"_index":440,"title":{},"body":{"injectables/AuthStorageService.html":{},"injectables/SettingsStorageService.html":{}}}],["setstorage(data",{"_index":453,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["setstorage(key",{"_index":1997,"title":{},"body":{"injectables/SettingsStorageService.html":{}}}],["setter",{"_index":488,"title":{},"body":{"injectables/AuthStorageService.html":{},"components/IonIconComponent.html":{}}}],["setting",{"_index":1227,"title":{},"body":{"components/FrameComponent.html":{},"injectables/SettingsStorageService.html":{},"miscellaneous/variables.html":{}}}],["settings",{"_index":1219,"title":{},"body":{"components/FrameComponent.html":{},"injectables/SettingsStorageService.html":{}}}],["settingsstorage",{"_index":1214,"title":{},"body":{"components/FrameComponent.html":{}}}],["settingsstorageservice",{"_index":1215,"title":{"injectables/SettingsStorageService.html":{}},"body":{"components/FrameComponent.html":{},"injectables/SettingsStorageService.html":{},"coverage.html":{}}}],["settingsstorageservice.getboolstorage(hide_sidebar_key",{"_index":2006,"title":{},"body":{"injectables/SettingsStorageService.html":{}}}],["settingsstorageservice.getboolstorage(hide_user_bar_key",{"_index":2008,"title":{},"body":{"injectables/SettingsStorageService.html":{}}}],["settingsstorageservice.getstorage(key",{"_index":2004,"title":{},"body":{"injectables/SettingsStorageService.html":{}}}],["settingsstorageservice.setboolstorage(hide_sidebar_key",{"_index":2005,"title":{},"body":{"injectables/SettingsStorageService.html":{}}}],["settingsstorageservice.setboolstorage(hide_user_bar_key",{"_index":2007,"title":{},"body":{"injectables/SettingsStorageService.html":{}}}],["settingsstorageservice.setstorage(key",{"_index":2003,"title":{},"body":{"injectables/SettingsStorageService.html":{}}}],["shall",{"_index":2067,"title":{},"body":{"injectables/UserService.html":{}}}],["shape",{"_index":1312,"title":{},"body":{"interfaces/LayerData.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"interfaces/ShapeData.html":{}}}],["shape.key",{"_index":1750,"title":{},"body":{"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["shape.name",{"_index":1749,"title":{},"body":{"components/MapComponent.html":{}}}],["shapedata",{"_index":1308,"title":{"interfaces/ShapeData.html":{}},"body":{"interfaces/LayerData.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"interfaces/ShapeData.html":{},"coverage.html":{}}}],["shapekeys",{"_index":1863,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["shapekeys.push(shape.key",{"_index":1866,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["shapes",{"_index":1305,"title":{},"body":{"interfaces/LayerData.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"interfaces/ShapeData.html":{},"miscellaneous/variables.html":{}}}],["shapes.push(shape",{"_index":1841,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["shapestore",{"_index":1862,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["show",{"_index":1065,"title":{},"body":{"components/ErrorComponent.html":{},"components/MapComponent.html":{},"miscellaneous/variables.html":{}}}],["showerror",{"_index":1046,"title":{},"body":{"components/ErrorComponent.html":{}}}],["shown",{"_index":1471,"title":{},"body":{"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["showtype",{"_index":1048,"title":{},"body":{"components/ErrorComponent.html":{}}}],["shuffling",{"_index":1700,"title":{},"body":{"components/MapComponent.html":{}}}],["side",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"components/BimComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/PumpModelComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["sidebar",{"_index":1226,"title":{},"body":{"components/FrameComponent.html":{},"injectables/SettingsStorageService.html":{},"components/SideBarComponent.html":{},"classes/StaticLoader.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["sidebar.ts",{"_index":2326,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["sidebar.water",{"_index":2625,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sidebarcomponent",{"_index":100,"title":{"components/SideBarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BimComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/PumpModelComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"coverage.html":{},"index.html":{}}}],["sidebarentries",{"_index":2502,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["sidebarentry",{"_index":2503,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["sidebarentrylvl1",{"_index":2504,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["sidebarentrylvl2",{"_index":2505,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["sidebarentrylvl3",{"_index":2506,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["sidebarlabel",{"_index":2507,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["sidebarlangs",{"_index":2029,"title":{},"body":{"classes/StaticLoader.html":{}}}],["signed",{"_index":207,"title":{},"body":{"guards/AuthGuard.html":{}}}],["simple",{"_index":2018,"title":{},"body":{"classes/StaticLoader.html":{}}}],["simply",{"_index":1801,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["single",{"_index":1311,"title":{},"body":{"interfaces/LayerData.html":{},"interfaces/ShapeData.html":{}}}],["site",{"_index":1207,"title":{},"body":{"components/FrameComponent.html":{}}}],["slash",{"_index":818,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["slashes",{"_index":1973,"title":{},"body":{"interceptors/SanitizeUrlInterceptor.html":{}}}],["small",{"_index":295,"title":{},"body":{"guards/AuthGuard.html":{}}}],["smooth",{"_index":2134,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["snapshot",{"_index":1962,"title":{},"body":{"guards/QueryParameterGuard.html":{},"miscellaneous/functions.html":{}}}],["solution",{"_index":2415,"title":{},"body":{"miscellaneous/functions.html":{}}}],["somewhere",{"_index":1095,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/SanitizeUrlInterceptor.html":{}}}],["sorting",{"_index":1696,"title":{},"body":{"components/MapComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"components/BimComponent.html":{},"injectables/BimService.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/ExampleComponent.html":{},"modules/ExampleModule.html":{},"injectables/ExampleService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"interfaces/LayerData.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"interfaces/Marker.html":{},"classes/ModuleProvider.html":{},"components/PumpModelComponent.html":{},"modules/PumpModelModule.html":{},"injectables/PumpModelService.html":{},"guards/QueryParameterGuard.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"interfaces/ShapeData.html":{},"components/SideBarComponent.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"interfaces/WisdomInterface.html":{},"modules/WisdomModule.html":{}}}],["sparkles",{"_index":2623,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specific",{"_index":2022,"title":{},"body":{"classes/StaticLoader.html":{}}}],["split",{"_index":1682,"title":{},"body":{"components/MapComponent.html":{}}}],["split(\"is",{"_index":896,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["stackoverflow",{"_index":2416,"title":{},"body":{"miscellaneous/functions.html":{}}}],["standard",{"_index":2547,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["start",{"_index":1185,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"classes/StaticLoader.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["starts",{"_index":1386,"title":{},"body":{"guards/LoaderGuard.html":{}}}],["startyear",{"_index":1190,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["state",{"_index":238,"title":{},"body":{"guards/AuthGuard.html":{},"guards/QueryParameterGuard.html":{},"miscellaneous/enumerations.html":{}}}],["state.url",{"_index":274,"title":{},"body":{"guards/AuthGuard.html":{}}}],["state.url.includes(\"login",{"_index":271,"title":{},"body":{"guards/AuthGuard.html":{}}}],["statements",{"_index":2325,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":438,"title":{},"body":{"injectables/AuthStorageService.html":{},"classes/ModuleProvider.html":{},"injectables/SettingsStorageService.html":{},"injectables/UserService.html":{}}}],["staticloader",{"_index":167,"title":{"classes/StaticLoader.html":{}},"body":{"modules/AppModule.html":{},"classes/StaticLoader.html":{},"coverage.html":{}}}],["stating",{"_index":1435,"title":{},"body":{"injectables/LoaderService.html":{}}}],["status",{"_index":324,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/UserService.html":{}}}],["step",{"_index":1058,"title":{},"body":{"components/ErrorComponent.html":{}}}],["still",{"_index":248,"title":{},"body":{"guards/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["stops",{"_index":1271,"title":{},"body":{"components/IonIconComponent.html":{}}}],["storage",{"_index":226,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthStorageService.html":{},"components/FrameComponent.html":{},"injectables/SettingsStorageService.html":{}}}],["storage.service",{"_index":259,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/FrameComponent.html":{},"components/LoginComponent.html":{}}}],["storage.service.ts",{"_index":434,"title":{},"body":{"injectables/AuthStorageService.html":{},"injectables/SettingsStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["storage.service.ts:104",{"_index":477,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["storage.service.ts:21",{"_index":446,"title":{},"body":{"injectables/AuthStorageService.html":{},"injectables/SettingsStorageService.html":{}}}],["storage.service.ts:31",{"_index":1994,"title":{},"body":{"injectables/SettingsStorageService.html":{}}}],["storage.service.ts:33",{"_index":456,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["storage.service.ts:38",{"_index":451,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["storage.service.ts:42",{"_index":1996,"title":{},"body":{"injectables/SettingsStorageService.html":{}}}],["storage.service.ts:46",{"_index":460,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["storage.service.ts:54",{"_index":458,"title":{},"body":{"injectables/AuthStorageService.html":{},"injectables/SettingsStorageService.html":{}}}],["storage.service.ts:62",{"_index":468,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["storage.service.ts:64",{"_index":1999,"title":{},"body":{"injectables/SettingsStorageService.html":{}}}],["storage.service.ts:68",{"_index":1998,"title":{},"body":{"injectables/SettingsStorageService.html":{}}}],["storage.service.ts:70",{"_index":463,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["storage.service.ts:76",{"_index":2000,"title":{},"body":{"injectables/SettingsStorageService.html":{}}}],["storage.service.ts:80",{"_index":475,"title":{},"body":{"injectables/AuthStorageService.html":{},"injectables/SettingsStorageService.html":{}}}],["storage.service.ts:88",{"_index":473,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["storage.service.ts:96",{"_index":479,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["store",{"_index":1836,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/SettingsStorageService.html":{}}}],["stored",{"_index":449,"title":{},"body":{"injectables/AuthStorageService.html":{},"injectables/LoaderService.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/SettingsStorageService.html":{}}}],["storing",{"_index":435,"title":{},"body":{"injectables/AuthStorageService.html":{},"injectables/SettingsStorageService.html":{}}}],["str",{"_index":2431,"title":{},"body":{"miscellaneous/functions.html":{}}}],["string",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"components/BimComponent.html":{},"injectables/BimService.html":{},"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"interfaces/LayerData.html":{},"components/LoaderComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"classes/ModuleProvider.html":{},"guards/QueryParameterGuard.html":{},"injectables/SettingsStorageService.html":{},"interfaces/ShapeData.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"interfaces/WisdomInterface.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["strings",{"_index":795,"title":{},"body":{"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"guards/QueryParameterGuard.html":{},"miscellaneous/functions.html":{}}}],["stringtocolor",{"_index":2349,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["stringtocolor(str",{"_index":2427,"title":{},"body":{"miscellaneous/functions.html":{}}}],["structure",{"_index":2527,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["style",{"_index":1726,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/functions.html":{}}}],["styles",{"_index":1318,"title":{},"body":{"components/LoaderComponent.html":{},"components/MapComponent.html":{}}}],["styleurls",{"_index":1327,"title":{},"body":{"components/LoaderComponent.html":{},"components/MapComponent.html":{}}}],["sub",{"_index":2208,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["subject",{"_index":799,"title":{},"body":{"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"injectables/LoaderService.html":{},"components/MapComponent.html":{}}}],["submits",{"_index":1467,"title":{},"body":{"components/LoginComponent.html":{}}}],["subscribe",{"_index":1128,"title":{},"body":{"injectables/ErrorService.html":{},"components/LoaderComponent.html":{}}}],["subscribe(data",{"_index":986,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["subscribe(next",{"_index":851,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["subscriber.complete",{"_index":292,"title":{},"body":{"guards/AuthGuard.html":{}}}],["subscriber.next(loginurltree",{"_index":304,"title":{},"body":{"guards/AuthGuard.html":{}}}],["subscriber.next(true",{"_index":291,"title":{},"body":{"guards/AuthGuard.html":{}}}],["successful",{"_index":1468,"title":{},"body":{"components/LoginComponent.html":{}}}],["successfully",{"_index":2534,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["such",{"_index":2304,"title":{},"body":{"interfaces/WisdomInterface.html":{}}}],["supplement",{"_index":2189,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["support",{"_index":2461,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":838,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["survey",{"_index":2199,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["svg",{"_index":2462,"title":{},"body":{"modules.html":{}}}],["swap",{"_index":2445,"title":{},"body":{"miscellaneous/functions.html":{}}}],["switch",{"_index":1074,"title":{},"body":{"components/ErrorComponent.html":{},"components/LoginComponent.html":{}}}],["sync",{"_index":2440,"title":{},"body":{"miscellaneous/functions.html":{}}}],["system",{"_index":2518,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["t",{"_index":2436,"title":{},"body":{"miscellaneous/functions.html":{}}}],["table",{"_index":2377,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2376,"title":{},"body":{"coverage.html":{}}}],["takewhile",{"_index":846,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["tap",{"_index":347,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"interceptors/LoaderInterceptor.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/BimComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/PumpModelComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["templateurl",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapSelectViewComponent.html":{},"components/PumpModelComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["territorial",{"_index":1314,"title":{},"body":{"interfaces/LayerData.html":{},"interfaces/ShapeData.html":{}}}],["text",{"_index":790,"title":{},"body":{"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"components/ConsumerDetailComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/MapSelectViewComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["texts",{"_index":1326,"title":{},"body":{"components/LoaderComponent.html":{},"injectables/LoaderService.html":{}}}],["therefore",{"_index":822,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["these&#39",{"_index":1618,"title":{},"body":{"components/MapComponent.html":{}}}],["things",{"_index":861,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["third",{"_index":2419,"title":{},"body":{"miscellaneous/functions.html":{}}}],["this._displaytexts.clear",{"_index":1454,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this._displaytexts.delete(toresolve",{"_index":1452,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this._displaytexts.set(toresolve",{"_index":1447,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this._loading.asobservable",{"_index":1445,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this._loading.next(false",{"_index":1451,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this._loading.next(true",{"_index":1449,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.alive",{"_index":850,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["this.aspectratio",{"_index":671,"title":{},"body":{"components/BimComponent.html":{}}}],["this.authservice.login(username",{"_index":1483,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.logout(this.authstorage.accesstoken!).subscribe",{"_index":1244,"title":{},"body":{"components/FrameComponent.html":{}}}],["this.authservice.refresh(this.authstorage.refreshtoken).subscribe",{"_index":308,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.authservice.validate(token!).subscribe",{"_index":285,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.authstorage.accesstoken",{"_index":279,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/LoginComponent.html":{}}}],["this.authstorage.clear",{"_index":303,"title":{},"body":{"guards/AuthGuard.html":{},"components/FrameComponent.html":{}}}],["this.authstorage.expiresin",{"_index":315,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["this.authstorage.refreshtoken",{"_index":305,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["this.authstorage.scopes",{"_index":313,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["this.bounds.next",{"_index":2136,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["this.bounds.subscribe(bounds",{"_index":2117,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["this.breadcrumbs.set(0",{"_index":1886,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["this.breadcrumbs.set(2",{"_index":1003,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["this.canvasref.nativeelement",{"_index":658,"title":{},"body":{"components/BimComponent.html":{}}}],["this.center",{"_index":1663,"title":{},"body":{"components/MapComponent.html":{}}}],["this.chartdata",{"_index":989,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["this.classes",{"_index":890,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["this.classes.join",{"_index":888,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["this.classes.push(\"is",{"_index":894,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["this.click.emit(evt",{"_index":689,"title":{},"body":{"components/BimComponent.html":{}}}],["this.containerref.nativeelement",{"_index":656,"title":{},"body":{"components/BimComponent.html":{}}}],["this.contextmenu.emit(evt",{"_index":691,"title":{},"body":{"components/BimComponent.html":{}}}],["this.coordinates.next(coordinates",{"_index":1008,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["this.coordinates.subscribe(coordinates",{"_index":1009,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["this.cservice.fetchconsumers({id",{"_index":985,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["this.data",{"_index":2122,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["this.dblclick.emit(evt",{"_index":693,"title":{},"body":{"components/BimComponent.html":{}}}],["this.displaytexts",{"_index":1343,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.displaytextsubject.asobservable",{"_index":1444,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.displaytextsubject.next",{"_index":1455,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.displaytextsubject.next(array.from(this._displaytexts.values",{"_index":1448,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.drag.emit(evt",{"_index":695,"title":{},"body":{"components/BimComponent.html":{}}}],["this.dragend.emit(evt",{"_index":697,"title":{},"body":{"components/BimComponent.html":{}}}],["this.dragenter.emit(evt",{"_index":699,"title":{},"body":{"components/BimComponent.html":{}}}],["this.dragleave.emit(evt",{"_index":701,"title":{},"body":{"components/BimComponent.html":{}}}],["this.dragover.emit(evt",{"_index":703,"title":{},"body":{"components/BimComponent.html":{}}}],["this.dragstart.emit(evt",{"_index":705,"title":{},"body":{"components/BimComponent.html":{}}}],["this.drop.emit(evt",{"_index":707,"title":{},"body":{"components/BimComponent.html":{}}}],["this.elementclasses",{"_index":895,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["this.elref.nativeelement?.setattribute(\"name",{"_index":1284,"title":{},"body":{"components/IonIconComponent.html":{}}}],["this.emitselection",{"_index":1745,"title":{},"body":{"components/MapComponent.html":{}}}],["this.error.emit(evt",{"_index":709,"title":{},"body":{"components/BimComponent.html":{}}}],["this.errorcode",{"_index":1085,"title":{},"body":{"components/ErrorComponent.html":{}}}],["this.errordescription",{"_index":1090,"title":{},"body":{"components/ErrorComponent.html":{}}}],["this.errorname",{"_index":1089,"title":{},"body":{"components/ErrorComponent.html":{}}}],["this.errorpresent.emit(error",{"_index":1136,"title":{},"body":{"injectables/ErrorService.html":{}}}],["this.errorpresent.emit(false",{"_index":1135,"title":{},"body":{"injectables/ErrorService.html":{}}}],["this.etagmap.get(key",{"_index":928,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["this.etagmap.set(key",{"_index":937,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["this.file",{"_index":676,"title":{},"body":{"components/BimComponent.html":{}}}],["this.fps.emit(evt",{"_index":711,"title":{},"body":{"components/BimComponent.html":{}}}],["this.fragments",{"_index":852,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["this.fragments.includes(undefined",{"_index":853,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["this.fragments.length",{"_index":810,"title":{},"body":{"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{}}}],["this.fragments[index",{"_index":812,"title":{},"body":{"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{}}}],["this.gotpointercapture.emit(evt",{"_index":713,"title":{},"body":{"components/BimComponent.html":{}}}],["this.handleconsumerdata(data",{"_index":987,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["this.height",{"_index":1659,"title":{},"body":{"components/MapComponent.html":{}}}],["this.hookevents",{"_index":686,"title":{},"body":{"components/BimComponent.html":{}}}],["this.hoverpick.emit(evt",{"_index":715,"title":{},"body":{"components/BimComponent.html":{}}}],["this.hservice.fetchwaterusagehistory(this.id",{"_index":988,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["this.http.get(join(auth_api",{"_index":2092,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(url.tostring",{"_index":1030,"title":{},"body":{"injectables/ConsumersService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["this.http.post",{"_index":424,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.put",{"_index":2098,"title":{},"body":{"injectables/UserService.html":{}}}],["this.httpcode",{"_index":1087,"title":{},"body":{"components/ErrorComponent.html":{}}}],["this.httpcode)[0",{"_index":1073,"title":{},"body":{"components/ErrorComponent.html":{}}}],["this.httperror",{"_index":1088,"title":{},"body":{"components/ErrorComponent.html":{}}}],["this.id",{"_index":983,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["this.idb",{"_index":1815,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["this.inputcenter",{"_index":1662,"title":{},"body":{"components/MapComponent.html":{}}}],["this.inputheight",{"_index":1658,"title":{},"body":{"components/MapComponent.html":{}}}],["this.inputlayerselectable",{"_index":1734,"title":{},"body":{"components/MapComponent.html":{}}}],["this.inputscrollwheelzoom",{"_index":1681,"title":{},"body":{"components/MapComponent.html":{}}}],["this.inputtileurl",{"_index":1660,"title":{},"body":{"components/MapComponent.html":{}}}],["this.inputzoom",{"_index":1664,"title":{},"body":{"components/MapComponent.html":{}}}],["this.isactive",{"_index":893,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["this.isloading",{"_index":1341,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.keys",{"_index":1891,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["this.lang",{"_index":1295,"title":{},"body":{"directives/LangSelectorDirective.html":{}}}],["this.lastmodifiedmap.get(key",{"_index":931,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["this.lastmodifiedmap.set(key",{"_index":939,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["this.layerconfig.next(layerconfig",{"_index":1651,"title":{},"body":{"components/MapComponent.html":{}}}],["this.layerconfig.subscribe(async",{"_index":1667,"title":{},"body":{"components/MapComponent.html":{}}}],["this.layerdata.next(fetched",{"_index":1677,"title":{},"body":{"components/MapComponent.html":{}}}],["this.layerdata.subscribe(async",{"_index":1692,"title":{},"body":{"components/MapComponent.html":{}}}],["this.layernames[layerkey",{"_index":1669,"title":{},"body":{"components/MapComponent.html":{}}}],["this.loaded.emit(evt",{"_index":716,"title":{},"body":{"components/BimComponent.html":{}}}],["this.location.back",{"_index":1091,"title":{},"body":{"components/ErrorComponent.html":{}}}],["this.loginhasissue",{"_index":1499,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.lostpointercapture.emit(evt",{"_index":718,"title":{},"body":{"components/BimComponent.html":{}}}],["this.map",{"_index":1688,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.map?.flytobounds(bounds",{"_index":2118,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["this.mapcomponent.map!.flyto(coordinates",{"_index":1012,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["this.mapelement.nativeelement",{"_index":1679,"title":{},"body":{"components/MapComponent.html":{}}}],["this.marker",{"_index":1006,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["this.markers",{"_index":2135,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["this.markers.next(markers",{"_index":1656,"title":{},"body":{"components/MapComponent.html":{}}}],["this.markers.subscribe(markers",{"_index":1772,"title":{},"body":{"components/MapComponent.html":{}}}],["this.mousedown.emit(evt",{"_index":720,"title":{},"body":{"components/BimComponent.html":{}}}],["this.mouseenter.emit(evt",{"_index":722,"title":{},"body":{"components/BimComponent.html":{}}}],["this.mouseleave.emit(evt",{"_index":724,"title":{},"body":{"components/BimComponent.html":{}}}],["this.mousemove.emit(evt",{"_index":726,"title":{},"body":{"components/BimComponent.html":{}}}],["this.mouseout.emit(evt",{"_index":728,"title":{},"body":{"components/BimComponent.html":{}}}],["this.mouseover.emit(evt",{"_index":730,"title":{},"body":{"components/BimComponent.html":{}}}],["this.mouseup.emit(evt",{"_index":732,"title":{},"body":{"components/BimComponent.html":{}}}],["this.mousewheel.emit(evt",{"_index":734,"title":{},"body":{"components/BimComponent.html":{}}}],["this.name",{"_index":1002,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["this.navigationend.emit(evt",{"_index":736,"title":{},"body":{"components/BimComponent.html":{}}}],["this.passwordinput?.nativeelement.select",{"_index":1503,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.pick.emit(evt",{"_index":738,"title":{},"body":{"components/BimComponent.html":{}}}],["this.pointercancel.emit(evt",{"_index":740,"title":{},"body":{"components/BimComponent.html":{}}}],["this.pointerdown.emit(evt",{"_index":742,"title":{},"body":{"components/BimComponent.html":{}}}],["this.pointerenter.emit(evt",{"_index":744,"title":{},"body":{"components/BimComponent.html":{}}}],["this.pointerleave.emit(evt",{"_index":746,"title":{},"body":{"components/BimComponent.html":{}}}],["this.pointerlockchange.emit(evt",{"_index":748,"title":{},"body":{"components/BimComponent.html":{}}}],["this.pointerlockerror.emit(evt",{"_index":750,"title":{},"body":{"components/BimComponent.html":{}}}],["this.pointermove.emit(evt",{"_index":752,"title":{},"body":{"components/BimComponent.html":{}}}],["this.pointerout.emit(evt",{"_index":754,"title":{},"body":{"components/BimComponent.html":{}}}],["this.pointerover.emit(evt",{"_index":756,"title":{},"body":{"components/BimComponent.html":{}}}],["this.pointerup.emit(evt",{"_index":758,"title":{},"body":{"components/BimComponent.html":{}}}],["this.promises",{"_index":1453,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.promises.push(toresolve",{"_index":1446,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.recordedat",{"_index":997,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["this.resizeobserver",{"_index":666,"title":{},"body":{"components/BimComponent.html":{}}}],["this.resizeobserver.observe(containerelement",{"_index":674,"title":{},"body":{"components/BimComponent.html":{}}}],["this.route.snapshot.params[\"consumer",{"_index":984,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["this.route.snapshot.params[\"waterright",{"_index":2120,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["this.router.createurltree([api_url",{"_index":2256,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["this.router.events.subscribe(event",{"_index":1134,"title":{},"body":{"injectables/ErrorService.html":{}}}],["this.router.navigate([\"login",{"_index":1245,"title":{},"body":{"components/FrameComponent.html":{}}}],["this.router.navigate([route",{"_index":1494,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.parseurl(\"/login",{"_index":270,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.router.parseurl(`${api_url}/${forecastmodel",{"_index":1199,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["this.router.parseurl(api_url",{"_index":1023,"title":{},"body":{"injectables/ConsumersService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["this.router.parseurl(redirect",{"_index":1964,"title":{},"body":{"guards/QueryParameterGuard.html":{}}}],["this.router.parseurl(this.route.snapshot.queryparams[\"returnurl",{"_index":1490,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.selected.emit",{"_index":1785,"title":{},"body":{"components/MapComponent.html":{}}}],["this.selectedcolor",{"_index":1742,"title":{},"body":{"components/MapComponent.html":{}}}],["this.selectedgeojsonlayer",{"_index":1712,"title":{},"body":{"components/MapComponent.html":{}}}],["this.selectedlayer",{"_index":1752,"title":{},"body":{"components/MapComponent.html":{}}}],["this.selectedshapes",{"_index":1694,"title":{},"body":{"components/MapComponent.html":{}}}],["this.selectedshapes[key",{"_index":1715,"title":{},"body":{"components/MapComponent.html":{}}}],["this.selectionready",{"_index":1893,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["this.service.addloader(promise",{"_index":1413,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["this.service.clearloading",{"_index":1395,"title":{},"body":{"guards/LoaderGuard.html":{}}}],["this.service.displaytexts.subscribe(values",{"_index":1342,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.service.errorpresent.subscribe",{"_index":1080,"title":{},"body":{"components/ErrorComponent.html":{}}}],["this.service.fetchlayerdata",{"_index":1671,"title":{},"body":{"components/MapComponent.html":{}}}],["this.service.fetchmodel(this.file",{"_index":680,"title":{},"body":{"components/BimComponent.html":{}}}],["this.service.fetchwaterrightdetails(waterright",{"_index":2121,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["this.service.loading.subscribe(value",{"_index":1340,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.service.observe",{"_index":848,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["this.service.throwerror",{"_index":1108,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["this.settingsstorage.hidesidebar",{"_index":1240,"title":{},"body":{"components/FrameComponent.html":{}}}],["this.settingsstorage.hideuserbar",{"_index":1242,"title":{},"body":{"components/FrameComponent.html":{}}}],["this.showerror",{"_index":1082,"title":{},"body":{"components/ErrorComponent.html":{}}}],["this.subject.asobservable",{"_index":815,"title":{},"body":{"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{}}}],["this.subject.next(this.fragments",{"_index":813,"title":{},"body":{"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{}}}],["this.tileurl",{"_index":1661,"title":{},"body":{"components/MapComponent.html":{}}}],["this.touchcancel.emit(evt",{"_index":760,"title":{},"body":{"components/BimComponent.html":{}}}],["this.touchend.emit(evt",{"_index":762,"title":{},"body":{"components/BimComponent.html":{}}}],["this.touchmove.emit(evt",{"_index":764,"title":{},"body":{"components/BimComponent.html":{}}}],["this.touchstart.emit(evt",{"_index":766,"title":{},"body":{"components/BimComponent.html":{}}}],["this.translate.get(this.layernames[key",{"_index":1761,"title":{},"body":{"components/MapComponent.html":{}}}],["this.translate.instant(\"water",{"_index":2142,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["this.translate.instant(this.layernames[key",{"_index":1759,"title":{},"body":{"components/MapComponent.html":{}}}],["this.translate.onlangchange.subscribe",{"_index":1756,"title":{},"body":{"components/MapComponent.html":{}}}],["this.translateservice.use(this.lang",{"_index":1296,"title":{},"body":{"directives/LangSelectorDirective.html":{}}}],["this.unloaded.emit(evt",{"_index":768,"title":{},"body":{"components/BimComponent.html":{}}}],["this.unselectedcolor",{"_index":1728,"title":{},"body":{"components/MapComponent.html":{}}}],["this.viewer",{"_index":659,"title":{},"body":{"components/BimComponent.html":{}}}],["this.viewer.load(blob",{"_index":681,"title":{},"body":{"components/BimComponent.html":{}}}],["this.viewer.on(\"click",{"_index":687,"title":{},"body":{"components/BimComponent.html":{}}}],["this.viewer.on(\"contextmenu",{"_index":690,"title":{},"body":{"components/BimComponent.html":{}}}],["this.viewer.on(\"dblclick",{"_index":692,"title":{},"body":{"components/BimComponent.html":{}}}],["this.viewer.on(\"drag",{"_index":694,"title":{},"body":{"components/BimComponent.html":{}}}],["this.viewer.on(\"dragend",{"_index":696,"title":{},"body":{"components/BimComponent.html":{}}}],["this.viewer.on(\"dragenter",{"_index":698,"title":{},"body":{"components/BimComponent.html":{}}}],["this.viewer.on(\"dragleave",{"_index":700,"title":{},"body":{"components/BimComponent.html":{}}}],["this.viewer.on(\"dragover",{"_index":702,"title":{},"body":{"components/BimComponent.html":{}}}],["this.viewer.on(\"dragstart",{"_index":704,"title":{},"body":{"components/BimComponent.html":{}}}],["this.viewer.on(\"drop",{"_index":706,"title":{},"body":{"components/BimComponent.html":{}}}],["this.viewer.on(\"error",{"_index":708,"title":{},"body":{"components/BimComponent.html":{}}}],["this.viewer.on(\"fps",{"_index":710,"title":{},"body":{"components/BimComponent.html":{}}}],["this.viewer.on(\"gotpointercapture",{"_index":712,"title":{},"body":{"components/BimComponent.html":{}}}],["this.viewer.on(\"hoverpick",{"_index":714,"title":{},"body":{"components/BimComponent.html":{}}}],["this.viewer.on(\"loaded",{"_index":682,"title":{},"body":{"components/BimComponent.html":{}}}],["this.viewer.on(\"lostpointercapture",{"_index":717,"title":{},"body":{"components/BimComponent.html":{}}}],["this.viewer.on(\"mousedown",{"_index":719,"title":{},"body":{"components/BimComponent.html":{}}}],["this.viewer.on(\"mouseenter",{"_index":721,"title":{},"body":{"components/BimComponent.html":{}}}],["this.viewer.on(\"mouseleave",{"_index":723,"title":{},"body":{"components/BimComponent.html":{}}}],["this.viewer.on(\"mousemove",{"_index":725,"title":{},"body":{"components/BimComponent.html":{}}}],["this.viewer.on(\"mouseout",{"_index":727,"title":{},"body":{"components/BimComponent.html":{}}}],["this.viewer.on(\"mouseover",{"_index":729,"title":{},"body":{"components/BimComponent.html":{}}}],["this.viewer.on(\"mouseup",{"_index":731,"title":{},"body":{"components/BimComponent.html":{}}}],["this.viewer.on(\"mousewheel",{"_index":733,"title":{},"body":{"components/BimComponent.html":{}}}],["this.viewer.on(\"navigationend",{"_index":735,"title":{},"body":{"components/BimComponent.html":{}}}],["this.viewer.on(\"pick",{"_index":737,"title":{},"body":{"components/BimComponent.html":{}}}],["this.viewer.on(\"pointercancel",{"_index":739,"title":{},"body":{"components/BimComponent.html":{}}}],["this.viewer.on(\"pointerdown",{"_index":741,"title":{},"body":{"components/BimComponent.html":{}}}],["this.viewer.on(\"pointerenter",{"_index":743,"title":{},"body":{"components/BimComponent.html":{}}}],["this.viewer.on(\"pointerleave",{"_index":745,"title":{},"body":{"components/BimComponent.html":{}}}],["this.viewer.on(\"pointerlockchange",{"_index":747,"title":{},"body":{"components/BimComponent.html":{}}}],["this.viewer.on(\"pointerlockerror",{"_index":749,"title":{},"body":{"components/BimComponent.html":{}}}],["this.viewer.on(\"pointermove",{"_index":751,"title":{},"body":{"components/BimComponent.html":{}}}],["this.viewer.on(\"pointerout",{"_index":753,"title":{},"body":{"components/BimComponent.html":{}}}],["this.viewer.on(\"pointerover",{"_index":755,"title":{},"body":{"components/BimComponent.html":{}}}],["this.viewer.on(\"pointerup",{"_index":757,"title":{},"body":{"components/BimComponent.html":{}}}],["this.viewer.on(\"touchcancel",{"_index":759,"title":{},"body":{"components/BimComponent.html":{}}}],["this.viewer.on(\"touchend",{"_index":761,"title":{},"body":{"components/BimComponent.html":{}}}],["this.viewer.on(\"touchmove",{"_index":763,"title":{},"body":{"components/BimComponent.html":{}}}],["this.viewer.on(\"touchstart",{"_index":765,"title":{},"body":{"components/BimComponent.html":{}}}],["this.viewer.on(\"unloaded",{"_index":767,"title":{},"body":{"components/BimComponent.html":{}}}],["this.viewer.on(\"wheel",{"_index":769,"title":{},"body":{"components/BimComponent.html":{}}}],["this.viewer.show(viewtype.default).catch(e",{"_index":684,"title":{},"body":{"components/BimComponent.html":{}}}],["this.viewer.start",{"_index":675,"title":{},"body":{"components/BimComponent.html":{}}}],["this.wheel.emit(evt",{"_index":770,"title":{},"body":{"components/BimComponent.html":{}}}],["this.zoom",{"_index":1665,"title":{},"body":{"components/MapComponent.html":{}}}],["this[\"data\"][\"valid",{"_index":2141,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["though",{"_index":414,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["through",{"_index":2443,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["throw",{"_index":1505,"title":{},"body":{"components/LoginComponent.html":{}}}],["throwerror",{"_index":257,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{}}}],["throwerror(error",{"_index":1130,"title":{},"body":{"injectables/ErrorService.html":{}}}],["tile",{"_index":1564,"title":{},"body":{"components/MapComponent.html":{}}}],["tileurl",{"_index":1522,"title":{},"body":{"components/MapComponent.html":{}}}],["time",{"_index":471,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["times",{"_index":2638,"title":{},"body":{"miscellaneous/variables.html":{}}}],["timestamp",{"_index":499,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["timestamps",{"_index":918,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["title",{"_index":25,"title":{},"body":{"components/AppComponent.html":{}}}],["todo",{"_index":321,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthStorageService.html":{},"components/BimComponent.html":{},"components/FrameComponent.html":{},"components/MapComponent.html":{},"classes/ModuleProvider.html":{}}}],["toenum",{"_index":2344,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["toenum(length",{"_index":2450,"title":{},"body":{"miscellaneous/functions.html":{}}}],["toggle",{"_index":866,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{},"miscellaneous/variables.html":{}}}],["toggleable",{"_index":862,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["toggleable'},{'name",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/BimComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/PumpModelComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["toggleable.directive",{"_index":2318,"title":{},"body":{"modules/WisdomModule.html":{}}}],["toggleable.directive.ts",{"_index":860,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{},"coverage.html":{}}}],["toggleable.directive.ts:15",{"_index":879,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["toggleable.directive.ts:17",{"_index":878,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["toggleable.directive.ts:22",{"_index":872,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["toggleable.directive.ts:26",{"_index":883,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["toggleable.directive.ts:36",{"_index":874,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["token",{"_index":211,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"miscellaneous/variables.html":{}}}],["token_header_key",{"_index":349,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tokens",{"_index":228,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/LoginComponent.html":{}}}],["tokeylength",{"_index":2345,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["tokeylength(res",{"_index":2454,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tooltip",{"_index":1007,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"interfaces/Marker.html":{},"components/WaterRightDetailComponent.html":{}}}],["top",{"_index":1347,"title":{},"body":{"components/LoaderComponent.html":{},"interfaces/WisdomInterface.html":{}}}],["topright",{"_index":2592,"title":{},"body":{"miscellaneous/variables.html":{}}}],["toresolve",{"_index":1428,"title":{},"body":{"injectables/LoaderService.html":{}}}],["touchcancel",{"_index":575,"title":{},"body":{"components/BimComponent.html":{}}}],["touchend",{"_index":576,"title":{},"body":{"components/BimComponent.html":{}}}],["touchmove",{"_index":577,"title":{},"body":{"components/BimComponent.html":{}}}],["touchstart",{"_index":578,"title":{},"body":{"components/BimComponent.html":{}}}],["transforms",{"_index":2455,"title":{},"body":{"miscellaneous/functions.html":{}}}],["transition",{"_index":1371,"title":{},"body":{"components/LoaderComponent.html":{}}}],["translate",{"_index":854,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/FrameComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"miscellaneous/functions.html":{}}}],["translate/core",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"modules/ExampleModule.html":{},"directives/LangSelectorDirective.html":{},"components/MapComponent.html":{},"modules/PumpModelModule.html":{},"classes/StaticLoader.html":{},"components/WaterRightDetailComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"modules/WisdomModule.html":{},"dependencies.html":{}}}],["translated",{"_index":2530,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["translateloader",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"classes/StaticLoader.html":{}}}],["translatemodule",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"modules/ExampleModule.html":{},"modules/PumpModelModule.html":{},"modules/WaterUsageForecastsModule.html":{},"modules/WisdomModule.html":{}}}],["translatemodule.forroot",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["translateobject",{"_index":2350,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["translateobject(service",{"_index":2434,"title":{},"body":{"miscellaneous/functions.html":{}}}],["translateservice",{"_index":797,"title":{},"body":{"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"directives/LangSelectorDirective.html":{},"components/MapComponent.html":{},"components/WaterRightDetailComponent.html":{},"miscellaneous/functions.html":{}}}],["translation",{"_index":1292,"title":{},"body":{"directives/LangSelectorDirective.html":{},"components/MapComponent.html":{},"interfaces/WisdomInterface.html":{},"miscellaneous/typealiases.html":{}}}],["translations",{"_index":1920,"title":{},"body":{"classes/ModuleProvider.html":{},"classes/StaticLoader.html":{},"interfaces/WisdomInterface.html":{},"miscellaneous/variables.html":{}}}],["translator",{"_index":2619,"title":{},"body":{"miscellaneous/variables.html":{}}}],["traversing",{"_index":1054,"title":{},"body":{"components/ErrorComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/BimComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/PumpModelComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["tries",{"_index":213,"title":{},"body":{"guards/AuthGuard.html":{}}}],["trimmedkeys",{"_index":1828,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["true",{"_index":182,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/BreadcrumbsComponent.html":{},"injectables/ConsumersService.html":{},"components/ErrorComponent.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"guards/LoaderGuard.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"guards/QueryParameterGuard.html":{},"injectables/SettingsStorageService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"miscellaneous/variables.html":{}}}],["true}).catch(e",{"_index":1495,"title":{},"body":{"components/LoginComponent.html":{}}}],["try",{"_index":307,"title":{},"body":{"guards/AuthGuard.html":{}}}],["ts",{"_index":1706,"title":{},"body":{"components/MapComponent.html":{},"classes/StaticLoader.html":{}}}],["tslib",{"_index":2400,"title":{},"body":{"dependencies.html":{}}}],["tuple",{"_index":2446,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tupleswap",{"_index":2114,"title":{},"body":{"components/WaterRightDetailComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["tupleswap(location.location.coordinates",{"_index":2127,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["tupleswap(tuple",{"_index":2444,"title":{},"body":{"miscellaneous/functions.html":{}}}],["two",{"_index":2449,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tx",{"_index":1834,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["tx.objectstore(\"queries",{"_index":1868,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["tx.objectstore(\"shapes",{"_index":1837,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["type",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"components/BimComponent.html":{},"injectables/BimService.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"interfaces/LayerData.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"interfaces/Marker.html":{},"classes/ModuleProvider.html":{},"guards/QueryParameterGuard.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"interfaces/ShapeData.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"interfaces/WisdomInterface.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":2466,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1412,"title":{},"body":{"interceptors/LoaderInterceptor.html":{},"guards/QueryParameterGuard.html":{},"injectables/SettingsStorageService.html":{}}}],["unauthorized",{"_index":2545,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["undefined",{"_index":455,"title":{},"body":{"injectables/AuthStorageService.html":{},"components/BreadcrumbsComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"guards/QueryParameterGuard.html":{},"injectables/SettingsStorageService.html":{},"components/WaterRightDetailComponent.html":{},"miscellaneous/functions.html":{}}}],["under",{"_index":1430,"title":{},"body":{"injectables/LoaderService.html":{},"interfaces/WisdomInterface.html":{}}}],["unhandled",{"_index":1096,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["unique",{"_index":2057,"title":{},"body":{"injectables/UserService.html":{}}}],["units",{"_index":1315,"title":{},"body":{"interfaces/LayerData.html":{},"interfaces/ShapeData.html":{}}}],["unix",{"_index":470,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["unixtime",{"_index":469,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["unknown",{"_index":1859,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["unloaded",{"_index":579,"title":{},"body":{"components/BimComponent.html":{}}}],["unselected",{"_index":1567,"title":{},"body":{"components/MapComponent.html":{}}}],["unselectedcolor",{"_index":1528,"title":{},"body":{"components/MapComponent.html":{}}}],["until",{"_index":2146,"title":{},"body":{"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{}}}],["unused",{"_index":1152,"title":{},"body":{"injectables/ExampleService.html":{},"injectables/PumpModelService.html":{}}}],["up",{"_index":831,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"interceptors/SanitizeUrlInterceptor.html":{}}}],["update",{"_index":310,"title":{},"body":{"guards/AuthGuard.html":{},"components/BreadcrumbsComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoaderComponent.html":{},"components/MapComponent.html":{},"miscellaneous/typealiases.html":{}}}],["updated",{"_index":2535,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["updates",{"_index":353,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"directives/LangSelectorDirective.html":{},"injectables/LoaderService.html":{}}}],["updating",{"_index":1697,"title":{},"body":{"components/MapComponent.html":{}}}],["upgrade(db",{"_index":1817,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["upon",{"_index":842,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoginComponent.html":{}}}],["url",{"_index":401,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/BaseUrlInterceptor.html":{},"injectables/ConsumersService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/UserService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["url.interceptor",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["url.interceptor.ts",{"_index":510,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"coverage.html":{}}}],["url.interceptor.ts:23",{"_index":512,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{}}}],["url.interceptor.ts:28",{"_index":1976,"title":{},"body":{"interceptors/SanitizeUrlInterceptor.html":{}}}],["url.queryparams[\"consumer",{"_index":2298,"title":{},"body":{"injectables/WaterUsageHistoryService.html":{}}}],["url.queryparams[\"consumergroup",{"_index":1200,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["url.queryparams[\"id",{"_index":1027,"title":{},"body":{"injectables/ConsumersService.html":{}}}],["url.queryparams[\"in",{"_index":1025,"title":{},"body":{"injectables/ConsumersService.html":{},"injectables/WaterRightsService.html":{}}}],["url.queryparams[\"is_active",{"_index":2248,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["url.queryparams[\"is_real",{"_index":2250,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["url.queryparams[\"key",{"_index":1201,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["url.queryparams[\"usage_above",{"_index":1029,"title":{},"body":{"injectables/ConsumersService.html":{}}}],["url.split",{"_index":1982,"title":{},"body":{"interceptors/SanitizeUrlInterceptor.html":{}}}],["url.ts",{"_index":2337,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["urlencoded",{"_index":411,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["urls",{"_index":1971,"title":{},"body":{"interceptors/SanitizeUrlInterceptor.html":{}}}],["urltree",{"_index":254,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"guards/LoaderGuard.html":{},"guards/QueryParameterGuard.html":{}}}],["us/docs/web/http/headers/etag",{"_index":922,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["us/docs/web/http/headers/last",{"_index":924,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["usage",{"_index":941,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/MapSelectViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["usages",{"_index":1182,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["use",{"_index":276,"title":{},"body":{"guards/AuthGuard.html":{},"components/BimComponent.html":{},"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/MapComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["use_api_url",{"_index":393,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/BaseUrlInterceptor.html":{},"injectables/ConsumersService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["use_base_url",{"_index":516,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["use_cache",{"_index":392,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/CacheInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["use_error_curtain",{"_index":394,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["use_loader",{"_index":779,"title":{},"body":{"injectables/BimService.html":{},"injectables/ConsumersService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"interceptors/LoaderInterceptor.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["useclass",{"_index":180,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":230,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/BaseUrlInterceptor.html":{},"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"injectables/ErrorService.html":{},"components/IonIconComponent.html":{},"injectables/LoaderService.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"interfaces/Marker.html":{},"guards/QueryParameterGuard.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["useful",{"_index":2447,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":206,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/FrameComponent.html":{},"components/LoginComponent.html":{},"injectables/SettingsStorageService.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["username",{"_index":379,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["users",{"_index":2093,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["userservice",{"_index":2042,"title":{"injectables/UserService.html":{}},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["userservice.httpoptions",{"_index":2094,"title":{},"body":{"injectables/UserService.html":{}}}],["uses",{"_index":1261,"title":{},"body":{"components/IonIconComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"interfaces/WisdomInterface.html":{}}}],["using",{"_index":2437,"title":{},"body":{"miscellaneous/functions.html":{}}}],["usually",{"_index":1101,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/SanitizeUrlInterceptor.html":{}}}],["utility",{"_index":1068,"title":{},"body":{"components/ErrorComponent.html":{},"classes/ModuleProvider.html":{},"miscellaneous/functions.html":{}}}],["val",{"_index":1081,"title":{},"body":{"components/ErrorComponent.html":{}}}],["val.error",{"_index":1084,"title":{},"body":{"components/ErrorComponent.html":{}}}],["valid",{"_index":209,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["valid.from.toisostring().slice(0",{"_index":2145,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["valid.until.toisostring().slice(0",{"_index":2147,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["validate",{"_index":368,"title":{},"body":{"injectables/AuthService.html":{}}}],["validate(token",{"_index":386,"title":{},"body":{"injectables/AuthService.html":{}}}],["validtostring",{"_index":2104,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["validtostring(data?.valid",{"_index":2164,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["validtostring(valid",{"_index":2108,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["value",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthStorageService.html":{},"components/BimComponent.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"injectables/ErrorService.html":{},"components/LoaderComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"injectables/SettingsStorageService.html":{},"components/SideBarComponent.html":{},"classes/StaticLoader.html":{},"components/WaterRightDetailComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":448,"title":{},"body":{"injectables/AuthStorageService.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"injectables/SettingsStorageService.html":{},"classes/StaticLoader.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/BimComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/PumpModelComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["variable",{"_index":2327,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2555,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1807,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{},"miscellaneous/functions.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["via",{"_index":901,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"components/IonIconComponent.html":{},"components/MapComponent.html":{},"injectables/UserService.html":{}}}],["view",{"_index":1874,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["view'},{'name",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/BimComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/PumpModelComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["view.component",{"_index":2287,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{}}}],["view.component.html",{"_index":1875,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["view.component.ts",{"_index":1873,"title":{},"body":{"components/MapSelectViewComponent.html":{},"coverage.html":{}}}],["view.component.ts:12",{"_index":1884,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["view.component.ts:14",{"_index":1883,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["view.component.ts:16",{"_index":1879,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["view.component.ts:23",{"_index":1882,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["view.component.ts:31",{"_index":1881,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["view/consumer",{"_index":943,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"coverage.html":{}}}],["view/map",{"_index":1872,"title":{},"body":{"components/MapSelectViewComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"coverage.html":{}}}],["view/result",{"_index":2289,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{},"coverage.html":{}}}],["view/water",{"_index":2101,"title":{},"body":{"components/WaterRightDetailComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"coverage.html":{}}}],["viewchild",{"_index":641,"title":{},"body":{"components/BimComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["viewchild(\"bim",{"_index":649,"title":{},"body":{"components/BimComponent.html":{}}}],["viewchild(\"container",{"_index":648,"title":{},"body":{"components/BimComponent.html":{}}}],["viewchild(\"map",{"_index":982,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/MapComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["viewchild(\"passwordinput",{"_index":1480,"title":{},"body":{"components/LoginComponent.html":{}}}],["viewchild('bim",{"_index":634,"title":{},"body":{"components/BimComponent.html":{}}}],["viewchild('container",{"_index":636,"title":{},"body":{"components/BimComponent.html":{}}}],["viewchild('map",{"_index":972,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/MapComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["viewchild('passwordinput",{"_index":1474,"title":{},"body":{"components/LoginComponent.html":{}}}],["viewer",{"_index":533,"title":{},"body":{"components/BimComponent.html":{}}}],["viewer(canvaselement",{"_index":660,"title":{},"body":{"components/BimComponent.html":{}}}],["viewerinteractionevent",{"_index":642,"title":{},"body":{"components/BimComponent.html":{}}}],["viewerloadedevent",{"_index":643,"title":{},"body":{"components/BimComponent.html":{}}}],["viewerpointerlockchangedevent",{"_index":644,"title":{},"body":{"components/BimComponent.html":{}}}],["views/detail",{"_index":2284,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{}}}],["views/map",{"_index":2286,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{}}}],["views/result",{"_index":2288,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{}}}],["viewtype",{"_index":645,"title":{},"body":{"components/BimComponent.html":{}}}],["void",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthStorageService.html":{},"components/BimComponent.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"injectables/ErrorService.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"interfaces/Marker.html":{},"injectables/SettingsStorageService.html":{},"components/WaterRightDetailComponent.html":{},"miscellaneous/variables.html":{}}}],["volume",{"_index":2205,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["wait",{"_index":280,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{}}}],["want",{"_index":1922,"title":{},"body":{"classes/ModuleProvider.html":{},"miscellaneous/variables.html":{}}}],["warning",{"_index":1079,"title":{},"body":{"components/ErrorComponent.html":{}}}],["wasserverbrauch",{"_index":2617,"title":{},"body":{"miscellaneous/variables.html":{}}}],["water",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/BimComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/PumpModelComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"miscellaneous/variables.html":{}}}],["waterright",{"_index":2119,"title":{},"body":{"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{}}}],["waterrightdetailcomponent",{"_index":103,"title":{"components/WaterRightDetailComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BimComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/PumpModelComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["waterrightdetailrawresponse",{"_index":2245,"title":{},"body":{"injectables/WaterRightsService.html":{},"miscellaneous/typealiases.html":{}}}],["waterrightdetailresponse",{"_index":2111,"title":{},"body":{"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"miscellaneous/typealiases.html":{}}}],["waterrighticon",{"_index":2116,"title":{},"body":{"components/WaterRightDetailComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["waterrightlocationresponse",{"_index":2243,"title":{},"body":{"injectables/WaterRightsService.html":{},"miscellaneous/typealiases.html":{}}}],["waterrightsservice",{"_index":2105,"title":{"injectables/WaterRightsService.html":{}},"body":{"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"coverage.html":{}}}],["waterusageforecastsmodule",{"_index":2275,"title":{"modules/WaterUsageForecastsModule.html":{}},"body":{"modules/WaterUsageForecastsModule.html":{},"index.html":{},"modules.html":{}}}],["waterusageforecastsservice",{"_index":1192,"title":{"injectables/WaterUsageForecastsService.html":{}},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{},"coverage.html":{}}}],["waterusagehistoryservice",{"_index":959,"title":{"injectables/WaterUsageHistoryService.html":{}},"body":{"components/ConsumerDetailComponent.html":{},"injectables/WaterUsageHistoryService.html":{},"coverage.html":{}}}],["webcomponents",{"_index":1262,"title":{},"body":{"components/IonIconComponent.html":{}}}],["webkit",{"_index":1349,"title":{},"body":{"components/LoaderComponent.html":{}}}],["website",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/IonIconComponent.html":{}}}],["weird",{"_index":1970,"title":{},"body":{"interceptors/SanitizeUrlInterceptor.html":{}}}],["wheel",{"_index":580,"title":{},"body":{"components/BimComponent.html":{}}}],["whether",{"_index":845,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/ErrorComponent.html":{},"injectables/ErrorService.html":{},"components/LoaderComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"guards/QueryParameterGuard.html":{}}}],["whole",{"_index":2634,"title":{},"body":{"miscellaneous/variables.html":{}}}],["window",{"_index":2578,"title":{},"body":{"miscellaneous/variables.html":{}}}],["window.location.origin",{"_index":2571,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wisdom",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/FrameComponent.html":{},"components/LoginComponent.html":{},"classes/ModuleProvider.html":{},"interfaces/WisdomInterface.html":{},"miscellaneous/variables.html":{}}}],["wisdom_modules/.../auth",{"_index":2556,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wisdom_modules/.../auth.interceptor.ts",{"_index":2568,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wisdom_modules/.../auth.service.ts",{"_index":2559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wisdom_modules/.../consumers.service.ts",{"_index":2468,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["wisdom_modules/.../deleteusersid200.ts",{"_index":2470,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../deleteusersid403.ts",{"_index":2472,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../deleteusersid404.ts",{"_index":2474,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../environment.common.ts",{"_index":2564,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wisdom_modules/.../environment.prod.ts",{"_index":2560,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wisdom_modules/.../environment.ts",{"_index":2561,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wisdom_modules/.../getusers200.ts",{"_index":2475,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../getusersid200.ts",{"_index":2477,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../getusersid404.ts",{"_index":2479,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../getusersme200.ts",{"_index":2481,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../invert",{"_index":2563,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wisdom_modules/.../map",{"_index":2562,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wisdom_modules/.../map.component.ts",{"_index":2482,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../map.service.ts",{"_index":2557,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wisdom_modules/.../patchusers204.ts",{"_index":2487,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../patchusers403.ts",{"_index":2489,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../patchusers404.ts",{"_index":2491,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../patchusersme200.ts",{"_index":2493,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../postoauthtoken200.ts",{"_index":2494,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../postoauthtoken400.ts",{"_index":2495,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../postoauthtoken401.ts",{"_index":2496,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../postrevoke200.ts",{"_index":2497,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../postrevoke403.ts",{"_index":2499,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../public",{"_index":2570,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wisdom_modules/.../putusers201.ts",{"_index":2500,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../putusers409.ts",{"_index":2501,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../resolution.ts",{"_index":2407,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["wisdom_modules/.../routing.ts",{"_index":2567,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wisdom_modules/.../settings",{"_index":2565,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wisdom_modules/.../side",{"_index":2484,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../static",{"_index":2566,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wisdom_modules/.../use",{"_index":2569,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wisdom_modules/.../user.service.ts",{"_index":2558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wisdom_modules/.../user.ts",{"_index":2508,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../util.ts",{"_index":2411,"title":{},"body":{"miscellaneous/functions.html":{}}}],["wisdom_modules/.../water",{"_index":2406,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["wisdom_modules/common/src/lib/bim/bim.component.ts",{"_index":527,"title":{},"body":{"components/BimComponent.html":{},"coverage.html":{}}}],["wisdom_modules/common/src/lib/bim/bim.component.ts:108",{"_index":630,"title":{},"body":{"components/BimComponent.html":{}}}],["wisdom_modules/common/src/lib/bim/bim.component.ts:26",{"_index":637,"title":{},"body":{"components/BimComponent.html":{}}}],["wisdom_modules/common/src/lib/bim/bim.component.ts:27",{"_index":635,"title":{},"body":{"components/BimComponent.html":{}}}],["wisdom_modules/common/src/lib/bim/bim.component.ts:28",{"_index":638,"title":{},"body":{"components/BimComponent.html":{}}}],["wisdom_modules/common/src/lib/bim/bim.component.ts:30",{"_index":586,"title":{},"body":{"components/BimComponent.html":{}}}],["wisdom_modules/common/src/lib/bim/bim.component.ts:31",{"_index":585,"title":{},"body":{"components/BimComponent.html":{}}}],["wisdom_modules/common/src/lib/bim/bim.component.ts:33",{"_index":588,"title":{},"body":{"components/BimComponent.html":{}}}],["wisdom_modules/common/src/lib/bim/bim.component.ts:34",{"_index":589,"title":{},"body":{"components/BimComponent.html":{}}}],["wisdom_modules/common/src/lib/bim/bim.component.ts:35",{"_index":590,"title":{},"body":{"components/BimComponent.html":{}}}],["wisdom_modules/common/src/lib/bim/bim.component.ts:36",{"_index":591,"title":{},"body":{"components/BimComponent.html":{}}}],["wisdom_modules/common/src/lib/bim/bim.component.ts:37",{"_index":592,"title":{},"body":{"components/BimComponent.html":{}}}],["wisdom_modules/common/src/lib/bim/bim.component.ts:38",{"_index":593,"title":{},"body":{"components/BimComponent.html":{}}}],["wisdom_modules/common/src/lib/bim/bim.component.ts:39",{"_index":594,"title":{},"body":{"components/BimComponent.html":{}}}],["wisdom_modules/common/src/lib/bim/bim.component.ts:40",{"_index":595,"title":{},"body":{"components/BimComponent.html":{}}}],["wisdom_modules/common/src/lib/bim/bim.component.ts:41",{"_index":596,"title":{},"body":{"components/BimComponent.html":{}}}],["wisdom_modules/common/src/lib/bim/bim.component.ts:42",{"_index":597,"title":{},"body":{"components/BimComponent.html":{}}}],["wisdom_modules/common/src/lib/bim/bim.component.ts:43",{"_index":598,"title":{},"body":{"components/BimComponent.html":{}}}],["wisdom_modules/common/src/lib/bim/bim.component.ts:44",{"_index":599,"title":{},"body":{"components/BimComponent.html":{}}}],["wisdom_modules/common/src/lib/bim/bim.component.ts:45",{"_index":600,"title":{},"body":{"components/BimComponent.html":{}}}],["wisdom_modules/common/src/lib/bim/bim.component.ts:46",{"_index":601,"title":{},"body":{"components/BimComponent.html":{}}}],["wisdom_modules/common/src/lib/bim/bim.component.ts:47",{"_index":602,"title":{},"body":{"components/BimComponent.html":{}}}],["wisdom_modules/common/src/lib/bim/bim.component.ts:48",{"_index":603,"title":{},"body":{"components/BimComponent.html":{}}}],["wisdom_modules/common/src/lib/bim/bim.component.ts:49",{"_index":604,"title":{},"body":{"components/BimComponent.html":{}}}],["wisdom_modules/common/src/lib/bim/bim.component.ts:50",{"_index":605,"title":{},"body":{"components/BimComponent.html":{}}}],["wisdom_modules/common/src/lib/bim/bim.component.ts:51",{"_index":606,"title":{},"body":{"components/BimComponent.html":{}}}],["wisdom_modules/common/src/lib/bim/bim.component.ts:52",{"_index":607,"title":{},"body":{"components/BimComponent.html":{}}}],["wisdom_modules/common/src/lib/bim/bim.component.ts:53",{"_index":608,"title":{},"body":{"components/BimComponent.html":{}}}],["wisdom_modules/common/src/lib/bim/bim.component.ts:54",{"_index":609,"title":{},"body":{"components/BimComponent.html":{}}}],["wisdom_modules/common/src/lib/bim/bim.component.ts:55",{"_index":610,"title":{},"body":{"components/BimComponent.html":{}}}],["wisdom_modules/common/src/lib/bim/bim.component.ts:56",{"_index":611,"title":{},"body":{"components/BimComponent.html":{}}}],["wisdom_modules/common/src/lib/bim/bim.component.ts:57",{"_index":612,"title":{},"body":{"components/BimComponent.html":{}}}],["wisdom_modules/common/src/lib/bim/bim.component.ts:58",{"_index":613,"title":{},"body":{"components/BimComponent.html":{}}}],["wisdom_modules/common/src/lib/bim/bim.component.ts:59",{"_index":614,"title":{},"body":{"components/BimComponent.html":{}}}],["wisdom_modules/common/src/lib/bim/bim.component.ts:60",{"_index":615,"title":{},"body":{"components/BimComponent.html":{}}}],["wisdom_modules/common/src/lib/bim/bim.component.ts:61",{"_index":616,"title":{},"body":{"components/BimComponent.html":{}}}],["wisdom_modules/common/src/lib/bim/bim.component.ts:62",{"_index":617,"title":{},"body":{"components/BimComponent.html":{}}}],["wisdom_modules/common/src/lib/bim/bim.component.ts:63",{"_index":618,"title":{},"body":{"components/BimComponent.html":{}}}],["wisdom_modules/common/src/lib/bim/bim.component.ts:64",{"_index":619,"title":{},"body":{"components/BimComponent.html":{}}}],["wisdom_modules/common/src/lib/bim/bim.component.ts:65",{"_index":620,"title":{},"body":{"components/BimComponent.html":{}}}],["wisdom_modules/common/src/lib/bim/bim.component.ts:66",{"_index":621,"title":{},"body":{"components/BimComponent.html":{}}}],["wisdom_modules/common/src/lib/bim/bim.component.ts:67",{"_index":622,"title":{},"body":{"components/BimComponent.html":{}}}],["wisdom_modules/common/src/lib/bim/bim.component.ts:68",{"_index":623,"title":{},"body":{"components/BimComponent.html":{}}}],["wisdom_modules/common/src/lib/bim/bim.component.ts:69",{"_index":624,"title":{},"body":{"components/BimComponent.html":{}}}],["wisdom_modules/common/src/lib/bim/bim.component.ts:70",{"_index":625,"title":{},"body":{"components/BimComponent.html":{}}}],["wisdom_modules/common/src/lib/bim/bim.component.ts:71",{"_index":626,"title":{},"body":{"components/BimComponent.html":{}}}],["wisdom_modules/common/src/lib/bim/bim.component.ts:72",{"_index":627,"title":{},"body":{"components/BimComponent.html":{}}}],["wisdom_modules/common/src/lib/bim/bim.component.ts:73",{"_index":628,"title":{},"body":{"components/BimComponent.html":{}}}],["wisdom_modules/common/src/lib/bim/bim.component.ts:74",{"_index":629,"title":{},"body":{"components/BimComponent.html":{}}}],["wisdom_modules/common/src/lib/bim/bim.component.ts:76",{"_index":583,"title":{},"body":{"components/BimComponent.html":{}}}],["wisdom_modules/common/src/lib/bim/bim.component.ts:80",{"_index":631,"title":{},"body":{"components/BimComponent.html":{}}}],["wisdom_modules/common/src/lib/bim/bim.service.ts",{"_index":771,"title":{},"body":{"injectables/BimService.html":{},"coverage.html":{}}}],["wisdom_modules/common/src/lib/bim/bim.service.ts:13",{"_index":775,"title":{},"body":{"injectables/BimService.html":{}}}],["wisdom_modules/common/src/lib/bim/bim.service.ts:9",{"_index":773,"title":{},"body":{"injectables/BimService.html":{}}}],["wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.component.ts",{"_index":816,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"coverage.html":{}}}],["wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.component.ts:19",{"_index":844,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.component.ts:21",{"_index":829,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.component.ts:33",{"_index":841,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.component.ts:48",{"_index":830,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.component.ts:57",{"_index":835,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.service.ts",{"_index":787,"title":{},"body":{"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"coverage.html":{}}}],["wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.service.ts:29",{"_index":857,"title":{},"body":{"injectables/BreadcrumbsService.html":{}}}],["wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.service.ts:34",{"_index":858,"title":{},"body":{"injectables/BreadcrumbsService.html":{}}}],["wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.service.ts:44",{"_index":856,"title":{},"body":{"injectables/BreadcrumbsService.html":{}}}],["wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.service.ts:51",{"_index":855,"title":{},"body":{"injectables/BreadcrumbsService.html":{}}}],["wisdom_modules/common/src/lib/bulma/bulma",{"_index":859,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{},"coverage.html":{}}}],["wisdom_modules/common/src/lib/guards/query",{"_index":1949,"title":{},"body":{"guards/QueryParameterGuard.html":{},"coverage.html":{}}}],["wisdom_modules/common/src/lib/http",{"_index":2336,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["wisdom_modules/common/src/lib/ion",{"_index":1257,"title":{},"body":{"components/IonIconComponent.html":{},"coverage.html":{}}}],["wisdom_modules/common/src/lib/map/invert",{"_index":2340,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["wisdom_modules/common/src/lib/map/layer",{"_index":1299,"title":{},"body":{"interfaces/LayerData.html":{},"interfaces/ShapeData.html":{},"coverage.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts",{"_index":1510,"title":{},"body":{"components/MapComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:125",{"_index":1537,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:133",{"_index":1585,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:139",{"_index":1586,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:144",{"_index":1589,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:147",{"_index":1553,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:150",{"_index":1555,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:154",{"_index":1595,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:157",{"_index":1592,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:164",{"_index":1599,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:170",{"_index":1598,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:172",{"_index":1597,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:175",{"_index":1570,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:179",{"_index":1533,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:194",{"_index":1574,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:224",{"_index":1572,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:372",{"_index":1571,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:48",{"_index":1593,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:51",{"_index":1536,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:53",{"_index":1584,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:56",{"_index":1563,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:58",{"_index":1603,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:61",{"_index":1535,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:63",{"_index":1578,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:66",{"_index":1568,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:68",{"_index":1606,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:74",{"_index":1556,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:77",{"_index":1566,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:79",{"_index":1561,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.service.ts",{"_index":1787,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["wisdom_modules/common/src/lib/map/map.service.ts:70",{"_index":1897,"title":{},"body":{"injectables/MapService.html":{}}}],["wisdom_modules/common/src/lib/map/map.service.ts:97",{"_index":1899,"title":{},"body":{"injectables/MapService.html":{}}}],["wisdom_modules/common/src/lib/map/marker.ts",{"_index":1900,"title":{},"body":{"interfaces/Marker.html":{},"coverage.html":{}}}],["wisdom_modules/common/src/lib/map/resolution.ts",{"_index":2343,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["wisdom_modules/common/src/lib/util.ts",{"_index":2346,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["wisdom_modules/common/src/lib/wisdom.module.ts",{"_index":2315,"title":{},"body":{"modules/WisdomModule.html":{}}}],["wisdom_modules/common/src/wisdominterface.ts",{"_index":2303,"title":{},"body":{"interfaces/WisdomInterface.html":{},"coverage.html":{}}}],["wisdom_modules/core/src/app/app",{"_index":183,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["wisdom_modules/core/src/app/app.component.ts",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["wisdom_modules/core/src/app/app.component.ts:13",{"_index":47,"title":{},"body":{"components/AppComponent.html":{}}}],["wisdom_modules/core/src/app/app.component.ts:20",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["wisdom_modules/core/src/app/app.module.ts",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["wisdom_modules/core/src/app/auth/auth",{"_index":433,"title":{},"body":{"injectables/AuthStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["wisdom_modules/core/src/app/auth/auth.guard.ts",{"_index":204,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["wisdom_modules/core/src/app/auth/auth.guard.ts:23",{"_index":222,"title":{},"body":{"guards/AuthGuard.html":{}}}],["wisdom_modules/core/src/app/auth/auth.guard.ts:47",{"_index":240,"title":{},"body":{"guards/AuthGuard.html":{}}}],["wisdom_modules/core/src/app/auth/auth.interceptor.ts",{"_index":329,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["wisdom_modules/core/src/app/auth/auth.interceptor.ts:17",{"_index":334,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["wisdom_modules/core/src/app/auth/auth.interceptor.ts:30",{"_index":338,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["wisdom_modules/core/src/app/auth/auth.service.ts",{"_index":363,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["wisdom_modules/core/src/app/auth/auth.service.ts:101",{"_index":381,"title":{},"body":{"injectables/AuthService.html":{}}}],["wisdom_modules/core/src/app/auth/auth.service.ts:41",{"_index":371,"title":{},"body":{"injectables/AuthService.html":{}}}],["wisdom_modules/core/src/app/auth/auth.service.ts:54",{"_index":377,"title":{},"body":{"injectables/AuthService.html":{}}}],["wisdom_modules/core/src/app/auth/auth.service.ts:72",{"_index":387,"title":{},"body":{"injectables/AuthService.html":{}}}],["wisdom_modules/core/src/app/auth/auth.service.ts:84",{"_index":384,"title":{},"body":{"injectables/AuthService.html":{}}}],["wisdom_modules/core/src/app/auth/login/login.component.ts",{"_index":1456,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["wisdom_modules/core/src/app/auth/login/login.component.ts:18",{"_index":1475,"title":{},"body":{"components/LoginComponent.html":{}}}],["wisdom_modules/core/src/app/auth/login/login.component.ts:21",{"_index":1461,"title":{},"body":{"components/LoginComponent.html":{}}}],["wisdom_modules/core/src/app/auth/login/login.component.ts:45",{"_index":1465,"title":{},"body":{"components/LoginComponent.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/login/postoauthtoken200.ts",{"_index":2539,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/login/postoauthtoken400.ts",{"_index":2541,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/login/postoauthtoken401.ts",{"_index":2544,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/login/postrevoke200.ts",{"_index":2546,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/login/postrevoke403.ts",{"_index":2548,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/users/deleteusersid200.ts",{"_index":2509,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/users/deleteusersid403.ts",{"_index":2511,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/users/deleteusersid404.ts",{"_index":2516,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/users/getusers200.ts",{"_index":2519,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/users/getusersid200.ts",{"_index":2520,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/users/getusersid404.ts",{"_index":2522,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/users/getusersme200.ts",{"_index":2523,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/users/patchusers204.ts",{"_index":2533,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/users/patchusers403.ts",{"_index":2536,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/users/patchusers404.ts",{"_index":2537,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/users/patchusersme200.ts",{"_index":2538,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/users/putusers201.ts",{"_index":2549,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/users/putusers409.ts",{"_index":2551,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/types/user.ts",{"_index":2553,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/user.service.ts",{"_index":2043,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["wisdom_modules/core/src/app/auth/user.service.ts:25",{"_index":2047,"title":{},"body":{"injectables/UserService.html":{}}}],["wisdom_modules/core/src/app/auth/user.service.ts:37",{"_index":2071,"title":{},"body":{"injectables/UserService.html":{}}}],["wisdom_modules/core/src/app/auth/user.service.ts:47",{"_index":2068,"title":{},"body":{"injectables/UserService.html":{}}}],["wisdom_modules/core/src/app/auth/user.service.ts:67",{"_index":2051,"title":{},"body":{"injectables/UserService.html":{}}}],["wisdom_modules/core/src/app/base",{"_index":509,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{},"coverage.html":{}}}],["wisdom_modules/core/src/app/cache.interceptor.ts",{"_index":897,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"coverage.html":{}}}],["wisdom_modules/core/src/app/cache.interceptor.ts:23",{"_index":914,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["wisdom_modules/core/src/app/cache.interceptor.ts:25",{"_index":917,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["wisdom_modules/core/src/app/cache.interceptor.ts:35",{"_index":907,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["wisdom_modules/core/src/app/frame/error/error.component.ts",{"_index":1040,"title":{},"body":{"components/ErrorComponent.html":{},"coverage.html":{}}}],["wisdom_modules/core/src/app/frame/error/error.component.ts:17",{"_index":1064,"title":{},"body":{"components/ErrorComponent.html":{}}}],["wisdom_modules/core/src/app/frame/error/error.component.ts:20",{"_index":1062,"title":{},"body":{"components/ErrorComponent.html":{}}}],["wisdom_modules/core/src/app/frame/error/error.component.ts:22",{"_index":1063,"title":{},"body":{"components/ErrorComponent.html":{}}}],["wisdom_modules/core/src/app/frame/error/error.component.ts:24",{"_index":1059,"title":{},"body":{"components/ErrorComponent.html":{}}}],["wisdom_modules/core/src/app/frame/error/error.component.ts:26",{"_index":1061,"title":{},"body":{"components/ErrorComponent.html":{}}}],["wisdom_modules/core/src/app/frame/error/error.component.ts:28",{"_index":1060,"title":{},"body":{"components/ErrorComponent.html":{}}}],["wisdom_modules/core/src/app/frame/error/error.component.ts:34",{"_index":1067,"title":{},"body":{"components/ErrorComponent.html":{}}}],["wisdom_modules/core/src/app/frame/error/error.component.ts:41",{"_index":1052,"title":{},"body":{"components/ErrorComponent.html":{}}}],["wisdom_modules/core/src/app/frame/error/error.component.ts:71",{"_index":1057,"title":{},"body":{"components/ErrorComponent.html":{}}}],["wisdom_modules/core/src/app/frame/error/error.interceptor.ts",{"_index":1093,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"coverage.html":{}}}],["wisdom_modules/core/src/app/frame/error/error.interceptor.ts:21",{"_index":1097,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["wisdom_modules/core/src/app/frame/error/error.interceptor.ts:34",{"_index":1099,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["wisdom_modules/core/src/app/frame/error/error.service.ts",{"_index":1119,"title":{},"body":{"injectables/ErrorService.html":{},"coverage.html":{}}}],["wisdom_modules/core/src/app/frame/error/error.service.ts:13",{"_index":1123,"title":{},"body":{"injectables/ErrorService.html":{}}}],["wisdom_modules/core/src/app/frame/error/error.service.ts:35",{"_index":1131,"title":{},"body":{"injectables/ErrorService.html":{}}}],["wisdom_modules/core/src/app/frame/error/error.ts",{"_index":1033,"title":{},"body":{"interfaces/Error.html":{},"coverage.html":{}}}],["wisdom_modules/core/src/app/frame/frame.component.ts",{"_index":1204,"title":{},"body":{"components/FrameComponent.html":{},"coverage.html":{}}}],["wisdom_modules/core/src/app/frame/frame.component.ts:19",{"_index":1216,"title":{},"body":{"components/FrameComponent.html":{}}}],["wisdom_modules/core/src/app/frame/frame.component.ts:36",{"_index":1224,"title":{},"body":{"components/FrameComponent.html":{}}}],["wisdom_modules/core/src/app/frame/frame.component.ts:40",{"_index":1229,"title":{},"body":{"components/FrameComponent.html":{}}}],["wisdom_modules/core/src/app/frame/frame.component.ts:45",{"_index":1231,"title":{},"body":{"components/FrameComponent.html":{}}}],["wisdom_modules/core/src/app/frame/frame.component.ts:49",{"_index":1234,"title":{},"body":{"components/FrameComponent.html":{}}}],["wisdom_modules/core/src/app/frame/frame.component.ts:54",{"_index":1220,"title":{},"body":{"components/FrameComponent.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.component.ts",{"_index":1319,"title":{},"body":{"components/LoaderComponent.html":{},"coverage.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.component.ts:16",{"_index":1333,"title":{},"body":{"components/LoaderComponent.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.component.ts:25",{"_index":1338,"title":{},"body":{"components/LoaderComponent.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.component.ts:27",{"_index":1337,"title":{},"body":{"components/LoaderComponent.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.component.ts:33",{"_index":1336,"title":{},"body":{"components/LoaderComponent.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.guard.ts",{"_index":1383,"title":{},"body":{"guards/LoaderGuard.html":{},"coverage.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.guard.ts:19",{"_index":1388,"title":{},"body":{"guards/LoaderGuard.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.guard.ts:28",{"_index":1391,"title":{},"body":{"guards/LoaderGuard.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.guard.ts:34",{"_index":1393,"title":{},"body":{"guards/LoaderGuard.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.interceptor.ts",{"_index":1396,"title":{},"body":{"interceptors/LoaderInterceptor.html":{},"coverage.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.interceptor.ts:23",{"_index":1399,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.interceptor.ts:39",{"_index":1400,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.service.ts",{"_index":1414,"title":{},"body":{"injectables/LoaderService.html":{},"coverage.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.service.ts:17",{"_index":1439,"title":{},"body":{"injectables/LoaderService.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.service.ts:22",{"_index":1432,"title":{},"body":{"injectables/LoaderService.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.service.ts:27",{"_index":1437,"title":{},"body":{"injectables/LoaderService.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.service.ts:30",{"_index":1441,"title":{},"body":{"injectables/LoaderService.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.service.ts:38",{"_index":1434,"title":{},"body":{"injectables/LoaderService.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.service.ts:40",{"_index":1443,"title":{},"body":{"injectables/LoaderService.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.service.ts:49",{"_index":1426,"title":{},"body":{"injectables/LoaderService.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.service.ts:67",{"_index":1431,"title":{},"body":{"injectables/LoaderService.html":{}}}],["wisdom_modules/core/src/app/frame/side",{"_index":2009,"title":{},"body":{"components/SideBarComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/i18n/lang",{"_index":1285,"title":{},"body":{"directives/LangSelectorDirective.html":{},"coverage.html":{}}}],["wisdom_modules/core/src/app/i18n/static",{"_index":2016,"title":{},"body":{"classes/StaticLoader.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["wisdom_modules/core/src/app/module",{"_index":1907,"title":{},"body":{"classes/ModuleProvider.html":{},"coverage.html":{}}}],["wisdom_modules/core/src/app/sanitize",{"_index":1968,"title":{},"body":{"interceptors/SanitizeUrlInterceptor.html":{},"coverage.html":{}}}],["wisdom_modules/core/src/app/settings",{"_index":1989,"title":{},"body":{"injectables/SettingsStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["wisdom_modules/core/src/environments/environment.common.ts",{"_index":2353,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["wisdom_modules/core/src/environments/environment.prod.ts",{"_index":2354,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["wisdom_modules/core/src/environments/environment.ts",{"_index":2356,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["wisdom_modules/example/src/lib/example.component.ts",{"_index":1137,"title":{},"body":{"components/ExampleComponent.html":{},"coverage.html":{}}}],["wisdom_modules/example/src/lib/example.module.ts",{"_index":1147,"title":{},"body":{"modules/ExampleModule.html":{}}}],["wisdom_modules/example/src/lib/example.service.ts",{"_index":1151,"title":{},"body":{"injectables/ExampleService.html":{},"coverage.html":{}}}],["wisdom_modules/example/src/public",{"_index":2357,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["wisdom_modules/pump",{"_index":1934,"title":{},"body":{"components/PumpModelComponent.html":{},"modules/PumpModelModule.html":{},"injectables/PumpModelService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["wisdom_modules/water",{"_index":940,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/MapSelectViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["wisdominterface",{"_index":2302,"title":{"interfaces/WisdomInterface.html":{}},"body":{"interfaces/WisdomInterface.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["wisdommodule",{"_index":125,"title":{"modules/WisdomModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ExampleModule.html":{},"modules/PumpModelModule.html":{},"modules/WaterUsageForecastsModule.html":{},"modules/WisdomModule.html":{},"index.html":{},"modules.html":{}}}],["without",{"_index":355,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/MapComponent.html":{}}}],["work",{"_index":1277,"title":{},"body":{"components/IonIconComponent.html":{}}}],["workspace",{"_index":2013,"title":{},"body":{"components/SideBarComponent.html":{},"properties.html":{}}}],["workspace's",{"_index":1911,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["worry",{"_index":1699,"title":{},"body":{"components/MapComponent.html":{}}}],["wrong",{"_index":2090,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["www",{"_index":409,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["x",{"_index":408,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["xbim/viewer",{"_index":646,"title":{},"body":{"components/BimComponent.html":{},"dependencies.html":{}}}],["y",{"_index":1380,"title":{},"body":{"components/LoaderComponent.html":{}}}],["year",{"_index":996,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["yes",{"_index":1429,"title":{},"body":{"injectables/LoaderService.html":{},"injectables/MapService.html":{},"injectables/UserService.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/functions.html":{}}}],["you're",{"_index":288,"title":{},"body":{"guards/AuthGuard.html":{}}}],["yourself",{"_index":2636,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z",{"_index":1374,"title":{},"body":{"components/LoaderComponent.html":{}}}],["zone.js",{"_index":2402,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"modules/ExampleModule.html":{},"components/MapComponent.html":{},"modules/PumpModelModule.html":{},"modules/WaterUsageForecastsModule.html":{},"modules/WisdomModule.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    wisdom_modules/core/src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component of the app, the main entry point for angular.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/app.component.ts:20\n                \n            \n\n\n            \n                \n                    On init this sets the Default image path for Leaflet.\nThis also registers the AnnotationPlugin for chart.js.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"WISdoM-OSS\"\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/core/src/app/app.component.ts:13\n                        \n                    \n\n            \n                \n                    The title of the website.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from \"@angular/core\";\nimport {Chart} from \"chart.js\";\nimport AnnotationPlugin from \"chartjs-plugin-annotation\";\nimport {Icon} from \"leaflet\";\n\n/** Component of the app, the main entry point for angular. */\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\"\n})\nexport class AppComponent implements OnInit {\n  /** The title of the website. */\n  title = \"WISdoM-OSS\";\n\n  /**\n   * On init this sets the Default image path for Leaflet.\n   *\n   * This also registers the {@link AnnotationPlugin} for chart.js.\n   */\n  ngOnInit(): void {\n    Icon.Default.imagePath = \"assets/leaflet/images/\";\n    Chart.register(AnnotationPlugin);\n  }\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BimComponent', 'selector': 'bim'},{'name': 'BreadcrumbsComponent', 'selector': 'breadcrumbs'},{'name': 'ConsumerDetailComponent', 'selector': 'lib-consumer-detail'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'ExampleComponent', 'selector': ''},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IonIconComponent', 'selector': 'ion-icon'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'map'},{'name': 'MapSelectViewComponent', 'selector': 'lib-map-select-view'},{'name': 'PumpModelComponent', 'selector': ''},{'name': 'ResultDataViewComponent', 'selector': 'lib-result-data-view'},{'name': 'SideBarComponent', 'selector': 'app-side-bar'},{'name': 'WaterRightDetailComponent', 'selector': 'lib-water-right-detail'}];\n    var DIRECTIVES = [{'name': 'BulmaIsToggleableDirective', 'selector': '.is-toggleable'},{'name': 'LangSelectorDirective', 'selector': '[selectLang]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nErrorComponent\n\nErrorComponent\n\nAppModule -->\n\nErrorComponent->AppModule\n\n\n\n\n\nFrameComponent\n\nFrameComponent\n\nAppModule -->\n\nFrameComponent->AppModule\n\n\n\n\n\nLangSelectorDirective\n\nLangSelectorDirective\n\nAppModule -->\n\nLangSelectorDirective->AppModule\n\n\n\n\n\nLoaderComponent\n\nLoaderComponent\n\nAppModule -->\n\nLoaderComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nSideBarComponent\n\nSideBarComponent\n\nAppModule -->\n\nSideBarComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nWisdomModule\n\nWisdomModule\n\nAppModule -->\n\nWisdomModule->AppModule\n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nAppModule -->\n\nAuthInterceptor->AppModule\n\n\n\n\n\nBaseUrlInterceptor\n\nBaseUrlInterceptor\n\nAppModule -->\n\nBaseUrlInterceptor->AppModule\n\n\n\n\n\nCacheInterceptor\n\nCacheInterceptor\n\nAppModule -->\n\nCacheInterceptor->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\nLoaderInterceptor\n\nLoaderInterceptor\n\nAppModule -->\n\nLoaderInterceptor->AppModule\n\n\n\n\n\nSanitizeUrlInterceptor\n\nSanitizeUrlInterceptor\n\nAppModule -->\n\nSanitizeUrlInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            wisdom_modules/core/src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            ErrorComponent\n                        \n                        \n                            FrameComponent\n                        \n                        \n                            LangSelectorDirective\n                        \n                        \n                            LoaderComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            SideBarComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AuthInterceptor\n                        \n                        \n                            BaseUrlInterceptor\n                        \n                        \n                            CacheInterceptor\n                        \n                        \n                            ErrorInterceptor\n                        \n                        \n                            LoaderInterceptor\n                        \n                        \n                            SanitizeUrlInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            WisdomModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {HttpClientModule, HTTP_INTERCEPTORS} from \"@angular/common/http\";\nimport {NgModule} from \"@angular/core\";\nimport {FormsModule} from \"@angular/forms\";\nimport {BrowserModule} from \"@angular/platform-browser\";\nimport {TranslateLoader, TranslateModule} from \"@ngx-translate/core\";\nimport {WisdomModule} from \"common\";\n\nimport {AppRoutingModule} from \"./app-routing.module\";\nimport {AppComponent} from \"./app.component\";\nimport {LoginComponent} from \"./auth/login/login.component\";\nimport {AuthInterceptor} from \"./auth/auth.interceptor\";\nimport {BaseUrlInterceptor} from \"./base-url.interceptor\";\nimport {ErrorComponent} from \"./frame/error/error.component\";\nimport {FrameComponent} from \"./frame/frame.component\";\nimport {SideBarComponent} from \"./frame/side-bar/side-bar.component\";\nimport {LangSelectorDirective} from \"./i18n/lang-selector.directive\";\nimport {StaticLoader} from \"./i18n/static-loader\";\nimport {CacheInterceptor} from \"./cache.interceptor\";\nimport {LoaderComponent} from \"./frame/loader/loader.component\";\nimport {LoaderInterceptor} from \"./frame/loader/loader.interceptor\";\nimport {SanitizeUrlInterceptor} from \"./sanitize-url.interceptor\";\nimport {ErrorInterceptor} from \"./frame/error/error.interceptor\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    FrameComponent,\n    LangSelectorDirective,\n    SideBarComponent,\n    ErrorComponent,\n    LoaderComponent\n  ],\n  imports: [\n    WisdomModule,\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    TranslateModule.forRoot({\n      defaultLanguage: globalThis.localStorage.getItem(\"lang\") || \"en_US\",\n      loader: {\n        provide: TranslateLoader,\n        useClass: StaticLoader\n      }\n    })\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ErrorInterceptor,\n      multi: true\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: LoaderInterceptor,\n      multi: true\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: BaseUrlInterceptor,\n      multi: true\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: CacheInterceptor,\n      multi: true\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: SanitizeUrlInterceptor,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            wisdom_modules/core/src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from \"@angular/core\";\nimport {RouterModule, Routes} from \"@angular/router\";\n\nimport {LoginComponent} from \"./auth/login/login.component\";\nimport {AuthGuard} from \"./auth/auth.guard\";\nimport {FrameComponent} from \"./frame/frame.component\";\nimport {ModuleProvider} from \"./module-provider\";\nimport {LoaderGuard} from \"./frame/loader/loader.guard\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: FrameComponent,\n    canActivate: [AuthGuard, LoaderGuard],\n    children: \"ModuleProvider.routes()\"\n  },\n  {path: \"login\", component: LoginComponent, canActivate: [LoaderGuard]},\n  {path: \"**\", redirectTo: \"\"}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                wisdom_modules/core/src/app/auth/auth.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard checking if the user is signed in, it needs to have a valid access\ntoken to browser further.\nAlso tries to refresh the token if the old one is not valid.\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authStorage: AuthStorageService, authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/core/src/app/auth/auth.guard.ts:23\n                            \n                        \n\n                \n                    \n                            Constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authStorage\n                                                  \n                                                        \n                                                                        AuthStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The storage containing the tokens\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The service used to interact with the auth server\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The router to route to the login if necessary\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/auth/auth.guard.ts:47\n                \n            \n\n\n            \n                \n                    Method deciding if a user is allowed to navigate to the requested route.\nThis one checks if the current token is still valid.\nIf the token is not valid it tries to refresh the token.\nIf no refreshing is the possible the route will be set to the login page.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | UrlTree | boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {Injectable} from \"@angular/core\";\nimport {\n  CanActivate,\n  Router,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree\n} from \"@angular/router\";\nimport {throwError, Observable} from \"rxjs\";\n\nimport {AuthStorageService} from \"./auth-storage.service\";\nimport {AuthService} from \"./auth.service\";\n\n/**\n * Guard checking if the user is signed in, it needs to have a valid access\n * token to browser further.\n *\n * Also tries to refresh the token if the old one is not valid.\n */\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AuthGuard implements CanActivate {\n\n  /**\n   * Constructor.\n   * @param authStorage The storage containing the tokens\n   * @param authService The service used to interact with the auth server\n   * @param router The router to route to the login if necessary\n   */\n  constructor(\n    private authStorage: AuthStorageService,\n    private authService: AuthService,\n    private router: Router\n  ) {}\n\n  /**\n   * Method deciding if a user is allowed to navigate to the requested route.\n   *\n   * This one checks if the current token is still valid.\n   * If the token is not valid it tries to refresh the token.\n   * If no refreshing is the possible the route will be set to the login page.\n   *\n   * @param route\n   * @param state\n   */\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable | UrlTree | boolean {\n    // ignore login path per se\n    if (route.url[0]?.path === \"login\") return true;\n    let loginUrlTree = this.router.parseUrl(\"/login\");\n    if (!state.url.includes(\"login\")) {\n      loginUrlTree.queryParams = {returnUrl: state.url};\n    }\n\n    // if no token is available the use can't be logged in\n    let token = this.authStorage.accessToken;\n    if (!token) return loginUrlTree;\n\n    // wait for the server to reply with a token check\n    return new Observable(subscriber => {\n      this.authService.validate(token!).subscribe({\n        next: response => {\n          // token is valid, you're ready to go\n          subscriber.next(true);\n          subscriber.complete();\n        },\n\n        error: errResponse => {\n          /**\n           * Small function to avoid code depletes.\n           * Clears the auth storage and sends the user to the login page.\n           */\n          let returnToLogin = () => {\n            this.authStorage.clear();\n            subscriber.next(loginUrlTree);\n            subscriber.complete();\n          };\n\n          if (this.authStorage.refreshToken) {\n            // if a refresh token is present, try to refresh\n            this.authService.refresh(this.authStorage.refreshToken).subscribe({\n              next: refreshResponse => {\n                // refresh token was valid, update with new data\n                this.authStorage.accessToken = refreshResponse.access_token;\n                this.authStorage.refreshToken = refreshResponse.refresh_token;\n                this.authStorage.scopes = refreshResponse.scope;\n                this.authStorage.expiresIn = refreshResponse.expires_in;\n                subscriber.next(true);\n                subscriber.complete();\n                return;\n              },\n\n              error: refreshErrResponse => {\n                // token is no valid, send the user to the login page\n                if (refreshErrResponse.status === 400) return returnToLogin();\n                // TODO: handle non-400 status codes gracefully\n                else return returnToLogin();\n              }\n            });\n            return;\n          }\n\n          return returnToLogin();\n        }\n      });\n    });\n  }\n\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AuthInterceptor.html":{"url":"interceptors/AuthInterceptor.html","title":"interceptor - AuthInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  AuthInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/core/src/app/auth/auth.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                Interceptor to inject the authorization token into every request.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authStorage: AuthStorageService)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/core/src/app/auth/auth.interceptor.ts:17\n                            \n                        \n\n                \n                    \n                            Constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authStorage\n                                                  \n                                                        \n                                                                        AuthStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The storage containing the tokens to inject\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/auth/auth.interceptor.ts:30\n                \n            \n\n\n            \n                \n                    Injects the token as Bearer authentication into a HttpRequest\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The request the token should be injected in\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The next handler to operate on the request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest\n} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\nimport {tap, Observable} from \"rxjs\";\n\nimport {AuthStorageService} from \"./auth-storage.service\";\n\n/** Key for the token. */\nconst TOKEN_HEADER_KEY = \"Authorization\";\n\n/** Interceptor to inject the authorization token into every request. */\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  /**\n   * Constructor.\n   * @param authStorage The storage containing the tokens to inject\n   */\n  constructor(private authStorage: AuthStorageService) {}\n\n  /**\n   * Injects the token as Bearer authentication into a HttpRequest\n   * @param request The request the token should be injected in\n   * @param next The next handler to operate on the request\n   */\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    let authRequest = request;\n    const token = this.authStorage.accessToken;\n    if (token) {\n      authRequest = request.clone({\n        // this updates the header without removing every other header\n        headers: request.headers.set(TOKEN_HEADER_KEY, \"Bearer \" + token)\n      });\n    }\n    return next.handle(authRequest).pipe(tap(event => {\n      // TODO: handle if the event is 401\n    }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/core/src/app/auth/auth.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service handling the OAuth interaction.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                refresh\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/core/src/app/auth/auth.service.ts:41\n                            \n                        \n\n                \n                    \n                            Constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                For making requests with the auth server\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/auth/auth.service.ts:54\n                \n            \n\n\n            \n                \n                    Logs the user in.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Username of the user\n\n                                    \n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Password of the user\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout(token: string)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/auth/auth.service.ts:101\n                \n            \n\n\n            \n                \n                    Revokes the token.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Token of the user\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refresh\n                        \n                    \n                \n            \n            \n                \nrefresh(token: string)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/auth/auth.service.ts:84\n                \n            \n\n\n            \n                \n                    Refreshes the current token.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Refresh token\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(token: string)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/auth/auth.service.ts:72\n                \n            \n\n\n            \n                \n                    Checks if the given token is valid.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Token to check\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpClient,\n  HttpContext,\n  HttpHeaders,\n  HttpParams\n} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\nimport {USE_CACHE, USE_API_URL, USE_ERROR_CURTAIN} from \"common\";\nimport {join} from \"path-browserify\";\nimport {Observable} from \"rxjs\";\n\nimport PostOAuthToken200 from \"./response_types/login/PostOAuthToken200\";\nimport PostRevoke200 from \"./response_types/login/PostRevoke200\";\n\n/** Url for the interaction. */\nconst AUTH_URL = \"auth\";\n\n/**\n * Options for the post request in the service.\n * As per reference the content type is always \"x-www-form-urlencoded\" instead\n * of \"json\".\n * The response is a json though.\n */\nconst httpOptions: Parameters[2] = {\n  headers: new HttpHeaders({\n    \"Content-Type\": \"application/x-www-form-urlencoded\"\n  }),\n  responseType: \"json\",\n  context: new HttpContext()\n    .set(USE_API_URL, true)\n    .set(USE_CACHE, false)\n    .set(USE_ERROR_CURTAIN, false)\n}\n\n/**\n * Service handling the OAuth interaction.\n */\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AuthService {\n\n  /**\n   * Constructor.\n   * @param http For making requests with the auth server\n   */\n  constructor(private http: HttpClient) {}\n\n  /**\n   * Logs the user in.\n   * @param username Username of the user\n   * @param password Password of the user\n   */\n  login(username: string, password: string) {\n    return this.http.post(\n      join(AUTH_URL, \"oauth/token\"),\n      new HttpParams({\n        fromObject: {\n          grant_type: \"password\",\n          username,\n          password\n        }\n      }),\n      httpOptions\n    ) as Observable;\n  }\n\n  /**\n   * Checks if the given token is valid.\n   * @param token Token to check\n   */\n  validate(token: string) {\n    return this.http.post(\n      join(AUTH_URL, \"oauth/check_token\"),\n      new HttpParams({fromObject: {token}}),\n      httpOptions\n    );\n  }\n\n  /**\n   * Refreshes the current token.\n   * @param token Refresh token\n   */\n  refresh(token: string) {\n    return this.http.post(\n      join(AUTH_URL, \"oauth/token\"),\n      new HttpParams({\n        fromObject: {\n          grant_type: \"refresh_token\",\n          refresh_token: token\n        }\n      }),\n      httpOptions\n    ) as Observable;\n  }\n\n  /**\n   * Revokes the token.\n   * @param token Token of the user\n   */\n  logout(token: string) {\n    return this.http.post(\n      join(AUTH_URL, \"oauth/revoke\"),\n      new HttpParams({fromObject: {\n        token\n      }}),\n      httpOptions\n    ) as Observable;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthStorageService.html":{"url":"injectables/AuthStorageService.html","title":"injectable - AuthStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/core/src/app/auth/auth-storage.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Class for storing the data received from the auth server.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                    Private\n                                    Static\n                                getStorage\n                            \n                            \n                                    Private\n                                    Static\n                                setStorage\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    accessToken\n                                \n                                \n                                    expiresIn\n                                \n                                \n                                    refreshToken\n                                \n                                \n                                    scopes\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/auth/auth-storage.service.ts:21\n                \n            \n\n\n            \n                \n                    Clears the session storage from the values stored by this service.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        getStorage\n                        \n                    \n                \n            \n            \n                \n                    \n                    getStorage(key: string)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/auth/auth-storage.service.ts:38\n                \n            \n\n\n            \n                \n                    Internal function to get session storage values.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        setStorage\n                        \n                    \n                \n            \n            \n                \n                    \n                    setStorage(data: string | null | undefined, key: string)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/auth/auth-storage.service.ts:33\n                \n            \n\n\n            \n                \n                    Internal function to set session storage values.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            string | null | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        accessToken\n                    \n                \n\n                \n                    \n                        getaccessToken()\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/auth/auth-storage.service.ts:54\n                                \n                            \n                    \n                        \n                                Get the access token.\n\n\n                                \n                                \n                        \n                    \n\n                \n                    \n                        setaccessToken(token: string | null | undefined)\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/auth/auth-storage.service.ts:46\n                                \n                            \n                    \n                        \n                                Set the access token.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            token\n                                                    \n                                                            \n                                                                        string | null | undefined\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    May be a nullish value or the token\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        expiresIn\n                    \n                \n\n                \n                    \n                        getexpiresIn()\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/auth/auth-storage.service.ts:70\n                                \n                            \n                    \n                        \n                                Returns the expiration date.\n\n\n                                \n                                \n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n                \n                    \n                        setexpiresIn(unixTime: number | string | null | undefined)\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/auth/auth-storage.service.ts:62\n                                \n                            \n                    \n                        \n                                Set the expiration date.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            unixTime\n                                                    \n                                                            \n                                                                        number | string | null | undefined\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    May be a nullish value or the unix time as number or string\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        refreshToken\n                    \n                \n\n                \n                    \n                        getrefreshToken()\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/auth/auth-storage.service.ts:88\n                                \n                            \n                    \n                        \n                                Get the refresh token.\n\n\n                                \n                                \n                        \n                    \n\n                \n                    \n                        setrefreshToken(token: string | null | undefined)\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/auth/auth-storage.service.ts:80\n                                \n                            \n                    \n                        \n                                Set the refresh token.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            token\n                                                    \n                                                            \n                                                                        string | null | undefined\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    May be a nullish value or the token\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        scopes\n                    \n                \n\n                \n                    \n                        getscopes()\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/auth/auth-storage.service.ts:104\n                                \n                            \n                    \n                        \n                                Get the scopes.\n\n\n                                \n                                \n                        \n                    \n\n                \n                    \n                        setscopes(scopes: string | null | undefined)\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/auth/auth-storage.service.ts:96\n                                \n                            \n                    \n                        \n                                Sets the scopes.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            scopes\n                                                    \n                                                            \n                                                                        string | null | undefined\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    May be a nullish value or the scopes\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\n\n/** Key for the access token. */\nconst ACCESS_TOKEN_KEY = \"auth-token\";\n/** Key fo the expiration date. */\nconst EXPIRES_IN_KEY = \"auth-expires-in\";\n/** Key for the refresh token. */\nconst REFRESH_TOKEN_KEY = \"auth-refresh-token\";\n/** Key for the scopes. */\nconst SCOPES_KEY = \"auth-scopes\";\n\n/** Class for storing the data received from the auth server. */\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AuthStorageService {\n\n  // TODO: doc the getter and setter when https://github.com/microsoft/tsdoc/issues/308 is closed\n\n  /** Clears the session storage from the values stored by this service. */\n  clear(): void {\n    for (let key of [\n      ACCESS_TOKEN_KEY,\n      REFRESH_TOKEN_KEY,\n      EXPIRES_IN_KEY,\n      SCOPES_KEY\n    ]) {\n      globalThis.sessionStorage.removeItem(key);\n    }\n  }\n\n  /** Internal function to set session storage values. */\n  private static setStorage(data: string | null | undefined, key: string) {\n    if (data) globalThis.sessionStorage.setItem(key, data);\n    else globalThis.sessionStorage.removeItem(key);\n  }\n  /** Internal function to get session storage values. */\n  private static getStorage(key: string) {\n    return globalThis.sessionStorage.getItem(key);\n  }\n\n  /**\n   * Set the access token.\n   * @param token May be a nullish value or the token\n   */\n  set accessToken(token: string | null | undefined) {\n    AuthStorageService.setStorage(token, ACCESS_TOKEN_KEY);\n  }\n\n  /**\n   * Get the access token.\n   * @returns A nullish value or the token\n   */\n  get accessToken() {\n    return AuthStorageService.getStorage(ACCESS_TOKEN_KEY);\n  }\n\n  /**\n   * Set the expiration date.\n   * @param unixTime May be a nullish value or the unix time as number or string\n   */\n  set expiresIn(unixTime: number | string | null | undefined) {\n    AuthStorageService.setStorage(`${unixTime}`, EXPIRES_IN_KEY);\n  }\n\n  /**\n   * Returns the expiration date.\n   * @returns The date is unix timestamp or NaN\n   */\n  get expiresIn(): number {\n    let expiresIn = AuthStorageService.getStorage(EXPIRES_IN_KEY);\n    if (expiresIn) return parseInt(expiresIn);\n    return NaN;\n  }\n\n  /**\n   * Set the refresh token.\n   * @param token May be a nullish value or the token\n   */\n  set refreshToken(token: string | null | undefined) {\n    AuthStorageService.setStorage(token, REFRESH_TOKEN_KEY);\n  }\n\n  /**\n   * Get the refresh token.\n   * @returns A nullish value or the token\n   */\n  get refreshToken() {\n    return AuthStorageService.getStorage(REFRESH_TOKEN_KEY);\n  }\n\n  /**\n   * Sets the scopes.\n   * @param scopes May be a nullish value or the scopes\n   */\n  set scopes(scopes: string | null | undefined) {\n    AuthStorageService.setStorage(scopes, SCOPES_KEY);\n  }\n\n  /**\n   * Get the scopes.\n   * @returns The scopes divided by \" \" or a nullish value\n   */\n  get scopes() {\n    return AuthStorageService.getStorage(SCOPES_KEY);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/BaseUrlInterceptor.html":{"url":"interceptors/BaseUrlInterceptor.html","title":"interceptor - BaseUrlInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  BaseUrlInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/core/src/app/base-url.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                Class used to prepend the base url to requests.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/base-url.interceptor.ts:23\n                \n            \n\n\n            \n                \n                    Prepends the base url from the environment to request url\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Request to prepend the url\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The next handler\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n  HttpContextToken\n} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\nimport {USE_BASE_URL, USE_API_URL} from \"common\";\nimport {Observable} from \"rxjs\";\n\nimport {environment} from \"../environments/environment\";\n\n/** Class used to prepend the base url to requests. */\n@Injectable()\nexport class BaseUrlInterceptor implements HttpInterceptor {\n\n  /**\n   * Prepends the base url from the environment to request url\n   * @param request Request to prepend the url\n   * @param next The next handler\n   */\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    let prependUrl = \"\";\n    if (request.context.get(USE_BASE_URL)) prependUrl = environment.baseUrl;\n    if (request.context.get(USE_API_URL)) prependUrl = environment.apiUrl;\n    return next.handle(\n      // prepend the api url with the base url from the environment\n      request.clone({url: prependUrl +  request.url})\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BimComponent.html":{"url":"components/BimComponent.html","title":"component - BimComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BimComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    wisdom_modules/common/src/lib/bim/bim.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                bim\n            \n\n\n\n            \n                template\n                \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                canvasRef\n                            \n                            \n                                containerRef\n                            \n                            \n                                    Private\n                                resizeObserver\n                            \n                            \n                                viewer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                hookEvents\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                aspect-ratio\n                            \n                            \n                                file\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                            \n                                contextmenu\n                            \n                            \n                                dblclick\n                            \n                            \n                                drag\n                            \n                            \n                                dragend\n                            \n                            \n                                dragenter\n                            \n                            \n                                dragleave\n                            \n                            \n                                dragover\n                            \n                            \n                                dragstart\n                            \n                            \n                                drop\n                            \n                            \n                                error\n                            \n                            \n                                fps\n                            \n                            \n                                gotpointercapture\n                            \n                            \n                                hoverpick\n                            \n                            \n                                loaded\n                            \n                            \n                                lostpointercapture\n                            \n                            \n                                mousedown\n                            \n                            \n                                mouseenter\n                            \n                            \n                                mouseleave\n                            \n                            \n                                mousemove\n                            \n                            \n                                mouseout\n                            \n                            \n                                mouseover\n                            \n                            \n                                mouseup\n                            \n                            \n                                mousewheel\n                            \n                            \n                                navigationEnd\n                            \n                            \n                                pick\n                            \n                            \n                                pointercancel\n                            \n                            \n                                pointerdown\n                            \n                            \n                                pointerenter\n                            \n                            \n                                pointerleave\n                            \n                            \n                                pointerlockchange\n                            \n                            \n                                pointerlockerror\n                            \n                            \n                                pointermove\n                            \n                            \n                                pointerout\n                            \n                            \n                                pointerover\n                            \n                            \n                                pointerup\n                            \n                            \n                                touchcancel\n                            \n                            \n                                touchend\n                            \n                            \n                                touchmove\n                            \n                            \n                                touchstart\n                            \n                            \n                                unloaded\n                            \n                            \n                                wheel\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: BimService)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/common/src/lib/bim/bim.component.ts:76\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        BimService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        aspect-ratio\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 16/9\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/bim/bim.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        file\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/bim/bim.component.ts:30\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        click\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/bim/bim.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        contextmenu\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/bim/bim.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dblclick\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/bim/bim.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        drag\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/bim/bim.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dragend\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/bim/bim.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dragenter\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/bim/bim.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dragleave\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/bim/bim.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dragover\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/bim/bim.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dragstart\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/bim/bim.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        drop\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/bim/bim.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        error\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/bim/bim.component.ts:43\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fps\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/bim/bim.component.ts:44\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        gotpointercapture\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/bim/bim.component.ts:45\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hoverpick\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/bim/bim.component.ts:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        loaded\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/bim/bim.component.ts:47\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        lostpointercapture\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/bim/bim.component.ts:48\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mousedown\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/bim/bim.component.ts:49\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseenter\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/bim/bim.component.ts:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseleave\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/bim/bim.component.ts:51\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mousemove\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/bim/bim.component.ts:52\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseout\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/bim/bim.component.ts:53\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseover\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/bim/bim.component.ts:54\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseup\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/bim/bim.component.ts:55\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mousewheel\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/bim/bim.component.ts:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        navigationEnd\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/bim/bim.component.ts:57\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pick\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/bim/bim.component.ts:58\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pointercancel\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/bim/bim.component.ts:59\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pointerdown\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/bim/bim.component.ts:60\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pointerenter\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/bim/bim.component.ts:61\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pointerleave\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/bim/bim.component.ts:62\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pointerlockchange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/bim/bim.component.ts:63\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pointerlockerror\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/bim/bim.component.ts:64\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pointermove\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/bim/bim.component.ts:65\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pointerout\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/bim/bim.component.ts:66\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pointerover\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/bim/bim.component.ts:67\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pointerup\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/bim/bim.component.ts:68\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        touchcancel\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/bim/bim.component.ts:69\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        touchend\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/bim/bim.component.ts:70\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        touchmove\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/bim/bim.component.ts:71\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        touchstart\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/bim/bim.component.ts:72\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        unloaded\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/bim/bim.component.ts:73\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        wheel\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/bim/bim.component.ts:74\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        hookEvents\n                        \n                    \n                \n            \n            \n                \n                    \n                    hookEvents()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/common/src/lib/bim/bim.component.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/common/src/lib/bim/bim.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        canvasRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('bim')\n                        \n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/bim/bim.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        containerRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('container')\n                        \n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/bim/bim.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        resizeObserver\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ResizeObserver\n\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/bim/bim.component.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Viewer\n\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/bim/bim.component.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  AfterViewInit,\n  Component,\n  ElementRef, EventEmitter,\n  Input, Output,\n  ViewChild\n} from '@angular/core';\nimport {\n  Viewer,\n  ViewerInteractionEvent,\n  ViewerLoadedEvent, ViewerPointerLockChangedEvent,\n  ViewType\n} from \"@xbim/viewer\";\nimport {BimService} from \"./bim.service\";\n\n@Component({\n  selector: 'bim',\n  template: `\n    \n      \n    \n  `\n})\nexport class BimComponent implements AfterViewInit {\n\n  @ViewChild(\"container\") containerRef!: ElementRef;\n  @ViewChild(\"bim\") canvasRef!: ElementRef;\n  viewer!: Viewer;\n\n  @Input(\"file\") file?: string;\n  @Input(\"aspect-ratio\") aspectRatio: number = 16/9;\n\n  @Output() click = new EventEmitter();\n  @Output() contextmenu = new EventEmitter();\n  @Output() dblclick = new EventEmitter();\n  @Output() drag = new EventEmitter();\n  @Output() dragend = new EventEmitter();\n  @Output() dragenter = new EventEmitter();\n  @Output() dragleave = new EventEmitter();\n  @Output() dragover = new EventEmitter();\n  @Output() dragstart = new EventEmitter();\n  @Output() drop = new EventEmitter();\n  @Output() error = new EventEmitter();\n  @Output() fps = new EventEmitter();\n  @Output() gotpointercapture = new EventEmitter();\n  @Output() hoverpick = new EventEmitter();\n  @Output() loaded = new EventEmitter();\n  @Output() lostpointercapture = new EventEmitter();\n  @Output() mousedown = new EventEmitter();\n  @Output() mouseenter = new EventEmitter();\n  @Output() mouseleave = new EventEmitter();\n  @Output() mousemove = new EventEmitter();\n  @Output() mouseout = new EventEmitter();\n  @Output() mouseover = new EventEmitter();\n  @Output() mouseup = new EventEmitter();\n  @Output() mousewheel = new EventEmitter();\n  @Output() navigationEnd = new EventEmitter();\n  @Output() pick = new EventEmitter();\n  @Output() pointercancel = new EventEmitter();\n  @Output() pointerdown = new EventEmitter();\n  @Output() pointerenter = new EventEmitter();\n  @Output() pointerleave = new EventEmitter();\n  @Output() pointerlockchange = new EventEmitter();\n  @Output() pointerlockerror = new EventEmitter();\n  @Output() pointermove = new EventEmitter();\n  @Output() pointerout = new EventEmitter();\n  @Output() pointerover = new EventEmitter();\n  @Output() pointerup = new EventEmitter();\n  @Output() touchcancel = new EventEmitter();\n  @Output() touchend = new EventEmitter();\n  @Output() touchmove = new EventEmitter();\n  @Output() touchstart = new EventEmitter();\n  @Output() unloaded = new EventEmitter();\n  @Output() wheel = new EventEmitter();\n\n  private resizeObserver!: ResizeObserver;\n\n  constructor(private service: BimService) {}\n\n  ngAfterViewInit(): void {\n    // TODO: make use of this\n    console.log(Viewer.check());\n    let containerElement = this.containerRef.nativeElement;\n    let canvasElement = this.canvasRef.nativeElement;\n    this.viewer = new Viewer(canvasElement);\n\n    // resize canvas according to container div\n    this.resizeObserver = new ResizeObserver(entries => {\n      canvasElement.width = entries[0].contentRect.width;\n      canvasElement.height = canvasElement.width / this.aspectRatio;\n      containerElement.style.height = canvasElement.height + \"px\";\n    });\n    this.resizeObserver.observe(containerElement);\n\n    this.viewer.start();\n    if (!this.file) return;\n    (async () => {\n      let blob = await this.service.fetchModel(this.file!);\n      this.viewer.load(blob);\n    })();\n    this.viewer.on(\"loaded\", args => {\n      this.viewer.show(ViewType.DEFAULT).catch(e => console.error(e));\n    });\n\n    this.hookEvents();\n  }\n\n  private hookEvents() {\n    this.viewer.on(\"click\", evt => this.click.emit(evt));\n    this.viewer.on(\"contextmenu\", evt => this.contextmenu.emit(evt));\n    this.viewer.on(\"dblclick\", evt => this.dblclick.emit(evt));\n    this.viewer.on(\"drag\", evt => this.drag.emit(evt));\n    this.viewer.on(\"dragend\", evt => this.dragend.emit(evt));\n    this.viewer.on(\"dragenter\", evt => this.dragenter.emit(evt));\n    this.viewer.on(\"dragleave\", evt => this.dragleave.emit(evt));\n    this.viewer.on(\"dragover\", evt => this.dragover.emit(evt));\n    this.viewer.on(\"dragstart\", evt => this.dragstart.emit(evt));\n    this.viewer.on(\"drop\", evt => this.drop.emit(evt));\n    this.viewer.on(\"error\", evt => this.error.emit(evt));\n    this.viewer.on(\"fps\", evt => this.fps.emit(evt));\n    this.viewer.on(\"gotpointercapture\", evt => this.gotpointercapture.emit(evt));\n    this.viewer.on(\"hoverpick\", evt => this.hoverpick.emit(evt));\n    this.viewer.on(\"loaded\", evt => this.loaded.emit(evt));\n    this.viewer.on(\"lostpointercapture\", evt => this.lostpointercapture.emit(evt));\n    this.viewer.on(\"mousedown\", evt => this.mousedown.emit(evt));\n    this.viewer.on(\"mouseenter\", evt => this.mouseenter.emit(evt));\n    this.viewer.on(\"mouseleave\", evt => this.mouseleave.emit(evt));\n    this.viewer.on(\"mousemove\", evt => this.mousemove.emit(evt));\n    this.viewer.on(\"mouseout\", evt => this.mouseout.emit(evt));\n    this.viewer.on(\"mouseover\", evt => this.mouseover.emit(evt));\n    this.viewer.on(\"mouseup\", evt => this.mouseup.emit(evt));\n    this.viewer.on(\"mousewheel\", evt => this.mousewheel.emit(evt));\n    this.viewer.on(\"navigationEnd\", evt => this.navigationEnd.emit(evt));\n    this.viewer.on(\"pick\", evt => this.pick.emit(evt));\n    this.viewer.on(\"pointercancel\", evt => this.pointercancel.emit(evt));\n    this.viewer.on(\"pointerdown\", evt => this.pointerdown.emit(evt));\n    this.viewer.on(\"pointerenter\", evt => this.pointerenter.emit(evt));\n    this.viewer.on(\"pointerleave\", evt => this.pointerleave.emit(evt));\n    this.viewer.on(\"pointerlockchange\", evt => this.pointerlockchange.emit(evt));\n    this.viewer.on(\"pointerlockerror\", evt => this.pointerlockerror.emit(evt));\n    this.viewer.on(\"pointermove\", evt => this.pointermove.emit(evt));\n    this.viewer.on(\"pointerout\", evt => this.pointerout.emit(evt));\n    this.viewer.on(\"pointerover\", evt => this.pointerover.emit(evt));\n    this.viewer.on(\"pointerup\", evt => this.pointerup.emit(evt));\n    this.viewer.on(\"touchcancel\", evt => this.touchcancel.emit(evt));\n    this.viewer.on(\"touchend\", evt => this.touchend.emit(evt));\n    this.viewer.on(\"touchmove\", evt => this.touchmove.emit(evt));\n    this.viewer.on(\"touchstart\", evt => this.touchstart.emit(evt));\n    this.viewer.on(\"unloaded\", evt => this.unloaded.emit(evt));\n    this.viewer.on(\"wheel\", evt => this.wheel.emit(evt));\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BimComponent', 'selector': 'bim'},{'name': 'BreadcrumbsComponent', 'selector': 'breadcrumbs'},{'name': 'ConsumerDetailComponent', 'selector': 'lib-consumer-detail'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'ExampleComponent', 'selector': ''},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IonIconComponent', 'selector': 'ion-icon'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'map'},{'name': 'MapSelectViewComponent', 'selector': 'lib-map-select-view'},{'name': 'PumpModelComponent', 'selector': ''},{'name': 'ResultDataViewComponent', 'selector': 'lib-result-data-view'},{'name': 'SideBarComponent', 'selector': 'app-side-bar'},{'name': 'WaterRightDetailComponent', 'selector': 'lib-water-right-detail'}];\n    var DIRECTIVES = [{'name': 'BulmaIsToggleableDirective', 'selector': '.is-toggleable'},{'name': 'LangSelectorDirective', 'selector': '[selectLang]'}];\n    var ACTUAL_COMPONENT = {'name': 'BimComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BimService.html":{"url":"injectables/BimService.html","title":"injectable - BimService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BimService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/common/src/lib/bim/bim.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchModel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/common/src/lib/bim/bim.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        fetchModel\n                        \n                    \n                \n            \n            \n                \nfetchModel(fileLink: string)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/common/src/lib/bim/bim.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fileLink\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {HttpClient, HttpContext} from \"@angular/common/http\";\nimport {firstValueFrom} from \"rxjs\";\nimport {USE_LOADER} from \"../http-context/use-loader\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BimService {\n\n  constructor(private http: HttpClient) {}\n\n  fetchModel(fileLink: string): Promise {\n    let context = new HttpContext();\n    context.set(USE_LOADER, \"common.bim.loading\");\n    return firstValueFrom(this.http.get(fileLink, {\n      responseType: \"blob\",\n      context\n    }))\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Breadcrumb.html":{"url":"interfaces/Breadcrumb.html","title":"interface - Breadcrumb","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Breadcrumb\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Breadcrumb fragment interface.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            link\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            query\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional icon name to be displayed on the left of the fragment name.\nThis will use an IonIconComponent for the icon.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        link:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Router link to be set for the fragment.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        query\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        query:         Params\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Params\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional query parameters for the router link.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:     string | string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    String or array of strings to be displayed as fragment.\nEvery element will be passed to the TranslateService.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\nimport {Params, ActivatedRouteSnapshot, UrlTree} from \"@angular/router\";\nimport {Observable, BehaviorSubject, Subject} from \"rxjs\";\n\n/** Breadcrumb fragment interface. */\nexport interface Breadcrumb {\n  /**\n   * Optional icon name to be displayed on the left of the fragment name.\n   * This will use an {@link IonIconComponent} for the icon.\n   */\n  icon?: string,\n  /**\n   * String or array of strings to be displayed as fragment.\n   * Every element will be passed to the {@link TranslateService}.\n   */\n  text: string | string[],\n  /** Router link to be set for the fragment. */\n  link: string,\n  /** Optional query parameters for the router link. */\n  query?: Params\n}\n\n/** Service collecting the breadcrumbs. */\n@Injectable({\n  providedIn: 'root'\n})\nexport class BreadcrumbsService {\n  /** List of breadcrumbs. */\n  fragments: Breadcrumb[] = [];\n  /**\n   * {@link Subject} for the {@link Breadcrumb}s, to be used as\n   * {@link Observable}.\n   */\n  private subject: BehaviorSubject\n    = new BehaviorSubject([]);\n\n  /**\n   * Set a new breadcrumb fragment.\n   *\n   * This removes all fragments with a higher index than the set one.\n   * @param index Index of the breadcrumb array\n   * @param value Breadcrumb fragment to display\n   */\n  set(index: number, value: Breadcrumb) {\n    this.fragments.length = index + 1;\n    this.fragments[index] = value;\n    this.subject.next(this.fragments);\n  }\n\n  /** Observe the breadcrumb fragments. */\n  observe(): Observable {\n    return this.subject.asObservable();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BreadcrumbsComponent.html":{"url":"components/BreadcrumbsComponent.html","title":"component - BreadcrumbsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BreadcrumbsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component to display breadcrumbs collected by the BreadcrumbsService.\nThis will display a slash separated row with all breadcrumb fragments.\nThe one the most right is considered the current page and is therefore not\nclickable.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                breadcrumbs\n            \n\n\n\n\n            \n                templateUrl\n                ./breadcrumbs.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                alive\n                            \n                            \n                                fragments\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isAllSet\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: BreadcrumbsService)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.component.ts:21\n                            \n                        \n\n                \n                    \n                            Constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        BreadcrumbsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to get breadcrumb fragments from\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isAllSet\n                        \n                    \n                \n            \n            \n                \nisAllSet()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.component.ts:48\n                \n            \n\n\n            \n                \n                    Check if all fragments up to the most right are set.\nIf one is undefined this will return false.\nThis allows ensuring that only fully defined breadcrumbs will be displayed.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.component.ts:57\n                \n            \n\n\n            \n                \n                    On destroy set alive to false.\nThis makes sure that the component does not live as long as the service.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.component.ts:33\n                \n            \n\n\n            \n                \n                    Upon init this will observe the service and update the breadcrumbs if\nneeded.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        alive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.component.ts:19\n                        \n                    \n\n            \n                \n                    Whether this component is alive.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fragments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         (Breadcrumb | undefined)[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.component.ts:21\n                        \n                    \n\n            \n                \n                    Breadcrumb fragments that will be displayed.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from \"@angular/core\";\nimport {takeWhile} from \"rxjs\";\n\nimport {Breadcrumb, BreadcrumbsService} from \"./breadcrumbs.service\";\n\n/**\n * Component to display breadcrumbs collected by the {@link BreadcrumbsService}.\n *\n * This will display a slash separated row with all breadcrumb fragments.\n * The one the most right is considered the current page and is therefore not\n * clickable.\n */\n@Component({\n  selector: 'breadcrumbs',\n  templateUrl: './breadcrumbs.component.html'\n})\nexport class BreadcrumbsComponent implements OnInit, OnDestroy {\n  /** Whether this component is alive. */\n  private alive: boolean = true;\n  /** Breadcrumb fragments that will be displayed. */\n  fragments: (Breadcrumb | undefined)[] = [];\n\n  /**\n   * Constructor.\n   * @param service Service to get breadcrumb fragments from\n   */\n  constructor(private service: BreadcrumbsService) { }\n\n  /**\n   * Upon init this will observe the service and update the breadcrumbs if\n   * needed.\n   */\n  ngOnInit(): void {\n    this.service.observe()\n      .pipe(takeWhile(() => this.alive))\n      .subscribe(next => {\n      this.fragments = next\n    });\n  }\n\n  /**\n   * Check if all fragments up to the most right are set.\n   *\n   * If one is undefined this will return `false`.\n   *\n   * This allows ensuring that only fully defined breadcrumbs will be displayed.\n   */\n  isAllSet(): boolean {\n    return !this.fragments.includes(undefined);\n  }\n\n  /**\n   * On destroy set {@link alive} to `false`.\n   *\n   * This makes sure that the component does not live as long as the service.\n   */\n  ngOnDestroy(): void {\n    this.alive = false;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            \n          \n          \n            \n              {{text | translate}}\n            \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                        {{text | translate}}                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BimComponent', 'selector': 'bim'},{'name': 'BreadcrumbsComponent', 'selector': 'breadcrumbs'},{'name': 'ConsumerDetailComponent', 'selector': 'lib-consumer-detail'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'ExampleComponent', 'selector': ''},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IonIconComponent', 'selector': 'ion-icon'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'map'},{'name': 'MapSelectViewComponent', 'selector': 'lib-map-select-view'},{'name': 'PumpModelComponent', 'selector': ''},{'name': 'ResultDataViewComponent', 'selector': 'lib-result-data-view'},{'name': 'SideBarComponent', 'selector': 'app-side-bar'},{'name': 'WaterRightDetailComponent', 'selector': 'lib-water-right-detail'}];\n    var DIRECTIVES = [{'name': 'BulmaIsToggleableDirective', 'selector': '.is-toggleable'},{'name': 'LangSelectorDirective', 'selector': '[selectLang]'}];\n    var ACTUAL_COMPONENT = {'name': 'BreadcrumbsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BreadcrumbsService.html":{"url":"injectables/BreadcrumbsService.html","title":"injectable - BreadcrumbsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BreadcrumbsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service collecting the breadcrumbs.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fragments\n                            \n                            \n                                    Private\n                                subject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                observe\n                            \n                            \n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        observe\n                        \n                    \n                \n            \n            \n                \nobserve()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.service.ts:51\n                \n            \n\n\n            \n                \n                    Observe the breadcrumb fragments.\n\n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        set\n                        \n                    \n                \n            \n            \n                \nset(index: number, value: Breadcrumb)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.service.ts:44\n                \n            \n\n\n            \n                \n                    Set a new breadcrumb fragment.\nThis removes all fragments with a higher index than the set one.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Index of the breadcrumb array\n\n                                    \n                                \n                                \n                                    value\n                                    \n                                                Breadcrumb\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Breadcrumb fragment to display\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        fragments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Breadcrumb[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.service.ts:29\n                        \n                    \n\n            \n                \n                    List of breadcrumbs.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.service.ts:34\n                        \n                    \n\n            \n                \n                    Subject for the Breadcrumbs, to be used as\nObservable.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\nimport {Params, ActivatedRouteSnapshot, UrlTree} from \"@angular/router\";\nimport {Observable, BehaviorSubject, Subject} from \"rxjs\";\n\n/** Breadcrumb fragment interface. */\nexport interface Breadcrumb {\n  /**\n   * Optional icon name to be displayed on the left of the fragment name.\n   * This will use an {@link IonIconComponent} for the icon.\n   */\n  icon?: string,\n  /**\n   * String or array of strings to be displayed as fragment.\n   * Every element will be passed to the {@link TranslateService}.\n   */\n  text: string | string[],\n  /** Router link to be set for the fragment. */\n  link: string,\n  /** Optional query parameters for the router link. */\n  query?: Params\n}\n\n/** Service collecting the breadcrumbs. */\n@Injectable({\n  providedIn: 'root'\n})\nexport class BreadcrumbsService {\n  /** List of breadcrumbs. */\n  fragments: Breadcrumb[] = [];\n  /**\n   * {@link Subject} for the {@link Breadcrumb}s, to be used as\n   * {@link Observable}.\n   */\n  private subject: BehaviorSubject\n    = new BehaviorSubject([]);\n\n  /**\n   * Set a new breadcrumb fragment.\n   *\n   * This removes all fragments with a higher index than the set one.\n   * @param index Index of the breadcrumb array\n   * @param value Breadcrumb fragment to display\n   */\n  set(index: number, value: Breadcrumb) {\n    this.fragments.length = index + 1;\n    this.fragments[index] = value;\n    this.subject.next(this.fragments);\n  }\n\n  /** Observe the breadcrumb fragments. */\n  observe(): Observable {\n    return this.subject.asObservable();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/BulmaIsToggleableDirective.html":{"url":"directives/BulmaIsToggleableDirective.html","title":"directive - BulmaIsToggleableDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  BulmaIsToggleableDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/common/src/lib/bulma/bulma-is-toggleable.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                Directive for making things toggleable with bulma.\nClicking on the node that has this directive will toggle the \"is-active\"\nclass.\n\n            \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        .is-toggleable\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                classes\n                            \n                            \n                                    Private\n                                isActive\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    elementClasses\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        class\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/bulma/bulma-is-toggleable.directive.ts:22\n                            \n                        \n                \n                    \n                        The classes of the host node.\n\n                    \n                \n            \n        \n\n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            click\n                        \n                        \n                    \n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/common/src/lib/bulma/bulma-is-toggleable.directive.ts:36\n                \n            \n\n\n            \n                \n                    Function to be executed when the host is clicked.\nWill toggle the \"is-active\" class on the host node.\n\n\n                \n            \n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toggle\n                        \n                    \n                \n            \n            \n                \ntoggle()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('click')\n                \n            \n\n            \n                \n                    Defined in wisdom_modules/common/src/lib/bulma/bulma-is-toggleable.directive.ts:36\n                \n            \n\n\n            \n                \n                    Function to be executed when the host is clicked.\nWill toggle the \"is-active\" class on the host node.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        classes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/bulma/bulma-is-toggleable.directive.ts:17\n                        \n                    \n\n            \n                \n                    The classes of the host node.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/bulma/bulma-is-toggleable.directive.ts:15\n                        \n                    \n\n            \n                \n                    Is the host currently active.\n\n                \n            \n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        elementClasses\n                    \n                \n\n                \n                    \n                        getelementClasses()\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/common/src/lib/bulma/bulma-is-toggleable.directive.ts:22\n                                \n                            \n                    \n                        \n                                The classes of the host node.\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        setelementClasses(classes: string)\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/common/src/lib/bulma/bulma-is-toggleable.directive.ts:26\n                                \n                            \n                    \n                        \n                                Set the classes of the host node.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            classes\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import {HostBinding, Directive, Input, HostListener} from \"@angular/core\";\n\n/**\n * Directive for making things toggleable with bulma.\n *\n * Clicking on the node that has this directive will toggle the \"is-active\"\n * class.\n */\n@Directive({\n  selector: \".is-toggleable\"\n})\nexport class BulmaIsToggleableDirective {\n\n  /** Is the host currently active. */\n  private isActive: boolean = false;\n  /** The classes of the host node. */\n  private classes: string[] = [];\n\n  /** The classes of the host node. */\n  @Input(\"class\")\n  @HostBinding(\"class\")\n  get elementClasses(): string {\n    return this.classes.join(\" \");\n  }\n  /** Set the classes of the host node. */\n  set elementClasses(classes: string) {\n    this.classes = classes.trim().split(/\\s+/);\n  }\n\n  /**\n   * Function to be executed when the host is clicked.\n   *\n   * Will toggle the \"is-active\" class on the host node.\n   */\n  @HostListener(\"click\")\n  toggle() {\n    this.isActive = !this.isActive;\n    if (this.isActive) this.classes.push(\"is-active\")\n    else {\n      this.elementClasses = this.elementClasses\n        .split(\"is-active\")\n        .join(\"\");\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/CacheInterceptor.html":{"url":"interceptors/CacheInterceptor.html","title":"interceptor - CacheInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  CacheInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/core/src/app/cache.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                Interceptor to handle cache-control behaviour via\nETag and\nLast-Modified\nheaders.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                eTagMap\n                            \n                            \n                                    Private\n                                lastModifiedMap\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/cache.interceptor.ts:35\n                \n            \n\n\n            \n                \n                    Intercept requests to insert caching headers, if the context\nUSE_CACHE is set.\nWill append If-None-Match and Last-Modified-Since if possible.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Any http request\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The next interceptor or another request handler\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        eTagMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/core/src/app/cache.interceptor.ts:23\n                        \n                    \n\n            \n                \n                    Map holding all ETags received from the server.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        lastModifiedMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/core/src/app/cache.interceptor.ts:25\n                        \n                    \n\n            \n                \n                    Map holding all timestamps sent by the server.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpHeaders,\n  HttpInterceptor,\n  HttpRequest,\n  HttpResponse\n} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\nimport {USE_CACHE} from \"common\";\nimport {tap, Observable} from \"rxjs\";\n\n/**\n * Interceptor to handle cache-control behaviour via\n * [ETag](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/ETag) and\n * [Last-Modified](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Last-Modified)\n * headers.\n */\n@Injectable()\nexport class CacheInterceptor implements HttpInterceptor {\n\n  /** Map holding all ETags received from the server. */\n  private eTagMap: Map = new Map();\n  /** Map holding all timestamps sent by the server. */\n  private lastModifiedMap: Map = new Map();\n\n  /**\n   * Intercept requests to insert caching headers, if the context\n   * {@link USE_CACHE} is set.\n   * Will append `If-None-Match` and `Last-Modified-Since` if possible.\n   *\n   * @param request Any http request\n   * @param next The next interceptor or another request handler\n   */\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    // do not insert any cache headers if USE_CACHE is false\n    if (!request.context.get(USE_CACHE)) return next.handle(request);\n\n    let key = request.urlWithParams;\n\n    let eTag = this.eTagMap.get(key);\n    if (eTag) request.headers.set(\"If-None-Match\", eTag);\n\n    let lastModified = this.lastModifiedMap.get(key);\n    if (lastModified) request.headers.set(\"If-Modified-Since\", lastModified);\n\n    return next.handle(request.clone({\n      headers: request.headers\n    })).pipe(tap(event => {\n      if (!(event instanceof HttpResponse)) return;\n\n      let eTag = event.headers.get(\"ETag\");\n      if (eTag) this.eTagMap.set(key, eTag);\n\n      let lastModified = event.headers.get(\"Last-Modified\");\n      if (lastModified) this.lastModifiedMap.set(key, lastModified);\n    }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConsumerDetailComponent.html":{"url":"components/ConsumerDetailComponent.html","title":"component - ConsumerDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ConsumerDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    wisdom_modules/water-usage-forecasts/src/lib/views/detail-view/consumer-detail/consumer-detail.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-consumer-detail\n            \n\n\n\n\n            \n                templateUrl\n                ./consumer-detail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                chartData\n                            \n                            \n                                    Private\n                                coordinates\n                            \n                            \n                                historyData\n                            \n                            \n                                id\n                            \n                            \n                                mapComponent\n                            \n                            \n                                    Optional\n                                marker\n                            \n                            \n                                name\n                            \n                            \n                                recordedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleConsumerData\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, cService: ConsumersService, hService: WaterUsageHistoryService, breadcrumbs: BreadcrumbsService)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/detail-view/consumer-detail/consumer-detail.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cService\n                                                  \n                                                        \n                                                                        ConsumersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        hService\n                                                  \n                                                        \n                                                                        WaterUsageHistoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        breadcrumbs\n                                                  \n                                                        \n                                                                        BreadcrumbsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleConsumerData\n                        \n                    \n                \n            \n            \n                \nhandleConsumerData(data: ConsumerLocationsResponse)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/water-usage-forecasts/src/lib/views/detail-view/consumer-detail/consumer-detail.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                ConsumerLocationsResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/water-usage-forecasts/src/lib/views/detail-view/consumer-detail/consumer-detail.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/water-usage-forecasts/src/lib/views/detail-view/consumer-detail/consumer-detail.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        chartData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ChartData\n\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/detail-view/consumer-detail/consumer-detail.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        coordinates\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject<>\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([NaN, NaN])\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/detail-view/consumer-detail/consumer-detail.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        historyData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         HistoryResponse\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/detail-view/consumer-detail/consumer-detail.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/detail-view/consumer-detail/consumer-detail.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mapComponent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MapComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('map')\n                        \n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/detail-view/consumer-detail/consumer-detail.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        marker\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Marker\n\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/detail-view/consumer-detail/consumer-detail.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/detail-view/consumer-detail/consumer-detail.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recordedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/detail-view/consumer-detail/consumer-detail.component.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {ViewChild, Component, OnInit, AfterViewInit} from \"@angular/core\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {ChartData} from \"chart.js/auto\";\nimport {MapComponent, Marker, BreadcrumbsService} from \"common\";\nimport {BehaviorSubject} from \"rxjs\";\n\nimport {\n  ConsumerLocationsResponse,\n  ConsumersService\n} from \"../../../services/consumers.service\";\nimport {\n  HistoryResponse,\n  WaterUsageHistoryService\n} from \"../../../services/water-usage-history.service\";\nimport {consumerIcon} from \"../../../map-icons\";\n\n@Component({\n  selector: 'lib-consumer-detail',\n  templateUrl: './consumer-detail.component.html'\n})\nexport class ConsumerDetailComponent implements OnInit, AfterViewInit {\n\n  name: string = \"\";\n  id: string = \"\";\n  historyData: HistoryResponse = [];\n  marker?: Marker;\n  private coordinates: BehaviorSubject =\n    new BehaviorSubject([NaN, NaN]);\n  chartData?: ChartData;\n  recordedAt: string = \"\";\n\n  @ViewChild(\"map\") mapComponent!: MapComponent;\n\n  constructor(\n    private route: ActivatedRoute,\n    private cService: ConsumersService,\n    private hService: WaterUsageHistoryService,\n    private breadcrumbs: BreadcrumbsService\n  ) { }\n\n  ngOnInit(): void {\n    this.id = this.route.snapshot.params[\"consumer\"];\n    this.cService.fetchConsumers({id: [this.id]})\n      .subscribe(data => this.handleConsumerData(data ?? []));\n    this.hService.fetchWaterUsageHistory(this.id)\n      .subscribe(data => {\n        this.chartData = {\n          datasets: [{\n            data: data.map(({usage}) => usage),\n            backgroundColor: \"blue\"\n          }],\n          labels: data.map(({year}) => year)\n        };\n        this.recordedAt = data[data.length - 1].recordedAt.toISOString().substring(0, 10);\n      });\n  }\n\n  handleConsumerData(data: ConsumerLocationsResponse) {\n    for (let {id, name, geojson} of data) {\n      this.name = name;\n      this.breadcrumbs.set(2, {\n        text: name,\n        link: \"#\"\n      });\n      let coordinates = [geojson.coordinates[1], geojson.coordinates[0]] as [number, number];\n      this.marker = {\n        coordinates,\n        tooltip: name,\n        icon: consumerIcon\n      }\n      this.coordinates.next(coordinates);\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.coordinates.subscribe(coordinates => {\n      if (coordinates[0] && coordinates[1]) this.mapComponent.map!.flyTo(coordinates);\n    });\n  }\n\n}\n\n    \n\n    \n        \n\n{{name}}\n{{id}}\n\n\n  \n    \n  \n\n\n\n  \n    \n      \n    \n  \n  \n    {{recordedAt}}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{name}}{{id}}                                {{recordedAt}}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BimComponent', 'selector': 'bim'},{'name': 'BreadcrumbsComponent', 'selector': 'breadcrumbs'},{'name': 'ConsumerDetailComponent', 'selector': 'lib-consumer-detail'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'ExampleComponent', 'selector': ''},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IonIconComponent', 'selector': 'ion-icon'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'map'},{'name': 'MapSelectViewComponent', 'selector': 'lib-map-select-view'},{'name': 'PumpModelComponent', 'selector': ''},{'name': 'ResultDataViewComponent', 'selector': 'lib-result-data-view'},{'name': 'SideBarComponent', 'selector': 'app-side-bar'},{'name': 'WaterRightDetailComponent', 'selector': 'lib-water-right-detail'}];\n    var DIRECTIVES = [{'name': 'BulmaIsToggleableDirective', 'selector': '.is-toggleable'},{'name': 'LangSelectorDirective', 'selector': '[selectLang]'}];\n    var ACTUAL_COMPONENT = {'name': 'ConsumerDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConsumersService.html":{"url":"injectables/ConsumersService.html","title":"injectable - ConsumersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ConsumersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/water-usage-forecasts/src/lib/services/consumers.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchConsumers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, router: Router)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/services/consumers.service.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        fetchConsumers\n                        \n                    \n                \n            \n            \n                \nfetchConsumers(params: Partial)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/water-usage-forecasts/src/lib/services/consumers.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {HttpClient, HttpContext, HttpHeaders} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\nimport {Router} from \"@angular/router\";\nimport {USE_API_URL, USE_LOADER} from \"common\";\nimport {Observable} from \"rxjs\";\n\nconst API_URL = \"consumers/\";\n\nexport type ConsumerLocationsResponse = {\n  id: number,\n  name: string,\n  geojson: {\n    crs: {\n      type: \"name\",\n      properties: {\n        name: string\n      }\n    },\n    type: \"Point\",\n    coordinates: [number, number]\n  }\n}[];\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConsumersService {\n\n  constructor(\n    private http: HttpClient,\n    private router: Router\n  ) {}\n\n  fetchConsumers(params: Partial): Observable {\n    let url = this.router.parseUrl(API_URL);\n    if (params.in) url.queryParams[\"in\"] = params.in;\n    if (params.id) url.queryParams[\"id\"] = params.id;\n    if (params.usageAbove) url.queryParams[\"usage_above\"] = params.usageAbove;\n    return this.http.get(url.toString(), {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\"\n      }),\n      responseType: \"json\",\n      context: new HttpContext()\n        .set(USE_API_URL, true)\n        .set(USE_LOADER, true)\n    }) as Observable;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Error.html":{"url":"interfaces/Error.html","title":"interface - Error","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Error\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/core/src/app/frame/error/error.ts\n        \n\n\n            \n                Description\n            \n            \n                Custom error type containing infos to display in the main container.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            error\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            errorDescription\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            errorName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            httpCode\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            httpError\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Internal error code.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorDescription\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorDescription:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Internal error description.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Internal error name.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        httpCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        httpCode:     number | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Http code of the error.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        httpError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        httpError:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Http code name of the error.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Error {\n  /** Http code of the error. */\n  httpCode?: number | string;\n  /** Http code name of the error. */\n  httpError?: string;\n  /** Internal error code. */\n  error?: string;\n  /** Internal error name. */\n  errorName?: string;\n  /** Internal error description. */\n  errorDescription?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorComponent.html":{"url":"components/ErrorComponent.html","title":"component - ErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    wisdom_modules/core/src/app/frame/error/error.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component covering the entire main container to display an error that has not\nbeen handled.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-error\n            \n\n\n\n\n            \n                templateUrl\n                ./error.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                errorCode\n                            \n                            \n                                    Optional\n                                errorDescription\n                            \n                            \n                                    Optional\n                                errorName\n                            \n                            \n                                    Optional\n                                httpCode\n                            \n                            \n                                    Optional\n                                httpError\n                            \n                            \n                                showError\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goBack\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    showType\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(location: Location, service: ErrorService)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/core/src/app/frame/error/error.component.ts:41\n                            \n                        \n\n                \n                    \n                            Constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                        Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Location service to allow traversing the history\n\n                                                        \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        ErrorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Error service collecting the errors\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goBack\n                        \n                    \n                \n            \n            \n                \ngoBack()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/frame/error/error.component.ts:71\n                \n            \n\n\n            \n                \n                    Return one step in the history.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        errorCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/core/src/app/frame/error/error.component.ts:24\n                        \n                    \n\n            \n                \n                    Internal error code.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        errorDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/core/src/app/frame/error/error.component.ts:28\n                        \n                    \n\n            \n                \n                    Internal error description.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        errorName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/core/src/app/frame/error/error.component.ts:26\n                        \n                    \n\n            \n                \n                    Internal error name.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        httpCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | string\n\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/core/src/app/frame/error/error.component.ts:20\n                        \n                    \n\n            \n                \n                    Http code of the error.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        httpError\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/core/src/app/frame/error/error.component.ts:22\n                        \n                    \n\n            \n                \n                    Http code name of the error.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showError\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/core/src/app/frame/error/error.component.ts:17\n                        \n                    \n\n            \n                \n                    Whether to show the component.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        showType\n                    \n                \n\n                \n                    \n                        getshowType()\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/frame/error/error.component.ts:34\n                                \n                            \n                    \n                        \n                                Utility function to return the bulma type name for certain http error\ncodes.\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import {Location} from \"@angular/common\";\nimport {Component, OnInit} from \"@angular/core\";\n\nimport {ErrorService} from \"./error.service\";\n\n/**\n * Component covering the entire main container to display an error that has not\n * been handled.\n */\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html'\n})\nexport class ErrorComponent {\n\n  /** Whether to show the component. */\n  showError: boolean = false;\n\n  /** Http code of the error. */\n  httpCode?: number | string;\n  /** Http code name of the error. */\n  httpError?: string;\n  /** Internal error code. */\n  errorCode?: string;\n  /** Internal error name. */\n  errorName?: string;\n  /** Internal error description. */\n  errorDescription?: string;\n\n  /**\n   * Utility function to return the bulma type name for certain http error\n   * codes.\n   */\n  get showType(): string {\n    let codeType = (\"\" + this.httpCode)[0];\n    switch (codeType) {\n      case \"5\": return \"danger\";\n      case \"4\": return \"warning\";\n      default: return \"info\";\n    }\n  }\n\n  /**\n   * Constructor.\n   * @param location Location service to allow traversing the history\n   * @param service Error service collecting the errors\n   */\n  constructor(\n    private location: Location,\n    private service: ErrorService\n  ) {\n    this.service.errorPresent.subscribe(\n      val => {\n        if (val) {\n          this.showError = true;\n          Object.assign(this, val);\n          if (val.error) this.errorCode = val.error;\n        }\n        else {\n          this.showError = false;\n          delete this.httpCode;\n          delete this.httpError;\n          delete this.errorCode;\n          delete this.errorName;\n          delete this.errorDescription;\n        }\n      });\n  }\n\n  /** Return one step in the history. */\n  goBack() {\n    this.location.back();\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          {{httpCode}}\n        \n        \n          {{httpError}}\n        \n        \n          {{errorName}}\n        \n        \n          {{errorDescription}}\n        \n        \n          \n            \n          \n          Go Back\n        \n        \n          {{errorCode}}\n        \n      \n    \n  \n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{httpCode}}                          {{httpError}}                          {{errorName}}                          {{errorDescription}}                                                          Go Back                          {{errorCode}}                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BimComponent', 'selector': 'bim'},{'name': 'BreadcrumbsComponent', 'selector': 'breadcrumbs'},{'name': 'ConsumerDetailComponent', 'selector': 'lib-consumer-detail'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'ExampleComponent', 'selector': ''},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IonIconComponent', 'selector': 'ion-icon'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'map'},{'name': 'MapSelectViewComponent', 'selector': 'lib-map-select-view'},{'name': 'PumpModelComponent', 'selector': ''},{'name': 'ResultDataViewComponent', 'selector': 'lib-result-data-view'},{'name': 'SideBarComponent', 'selector': 'app-side-bar'},{'name': 'WaterRightDetailComponent', 'selector': 'lib-water-right-detail'}];\n    var DIRECTIVES = [{'name': 'BulmaIsToggleableDirective', 'selector': '.is-toggleable'},{'name': 'LangSelectorDirective', 'selector': '[selectLang]'}];\n    var ACTUAL_COMPONENT = {'name': 'ErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ErrorInterceptor.html":{"url":"interceptors/ErrorInterceptor.html","title":"interceptor - ErrorInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  ErrorInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/core/src/app/frame/error/error.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                Interceptor for http request.\nThis one is set as the last element to capture http error that were not\nhandled somewhere else.\nThese unhandled errors will be passed to the ErrorService.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(service: ErrorService)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/core/src/app/frame/error/error.interceptor.ts:21\n                            \n                        \n\n                \n                    \n                            Constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        ErrorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Error service to pass the errors into\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/frame/error/error.interceptor.ts:34\n                \n            \n\n\n            \n                \n                    Intercept all returning errors and pass them to the ErrorService.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Request to check\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Next interceptor, usually none for this interceptor\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest\n} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\nimport {USE_ERROR_CURTAIN} from \"common\";\nimport {catchError, throwError, Observable} from \"rxjs\";\n\nimport {ErrorService} from \"./error.service\";\n\n/**\n * Interceptor for http request.\n * This one is set as the last element to capture http error that were not\n * handled somewhere else.\n *\n * These unhandled errors will be passed to the {@link ErrorService}.\n */\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n\n  /**\n   * Constructor.\n   * @param service Error service to pass the errors into\n   */\n  constructor(private service: ErrorService) {}\n\n  /**\n   * Intercept all returning errors and pass them to the {@link ErrorService}.\n   * @param request Request to check\n   * @param next Next interceptor, usually none for this interceptor\n   */\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    let context = request.context.get(USE_ERROR_CURTAIN);\n    if (!context) return next.handle(request);\n\n    return next.handle(request).pipe(\n      catchError(requestError => {\n        if (!requestError.ok) {\n          console.log(requestError);\n          this.service.throwError({\n            httpCode: requestError.error.httpCode ?? requestError.status,\n            httpError: requestError.error.httpError ?? requestError.statusText,\n            error: requestError.error.error,\n            errorName: requestError.error.errorName ?? requestError.name,\n            errorDescription: requestError.error.errorDescription ?? requestError.message\n          });\n        }\n        return throwError(() => new Error(requestError));\n      })\n    )\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorService.html":{"url":"injectables/ErrorService.html","title":"injectable - ErrorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ErrorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/core/src/app/frame/error/error.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Error service to collect errors from the ErrorInterceptor.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorPresent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                throwError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/core/src/app/frame/error/error.service.ts:13\n                            \n                        \n\n                \n                    \n                            Constructor.\nThis also creates an event handler on the NavigationStart event in\norder to reset the error presence.\n(Set errorPresent to false.)\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router to subscribe to events\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        throwError\n                        \n                    \n                \n            \n            \n                \nthrowError(error: Error)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/frame/error/error.service.ts:35\n                \n            \n\n\n            \n                \n                    Emit an error.\nThis is used by the ErrorInterceptor to pass errors to this\nservice.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                Error\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Error to pass\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorPresent\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/core/src/app/frame/error/error.service.ts:13\n                        \n                    \n\n            \n                \n                    Event emitter whether an event is currently present.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import {EventEmitter, Injectable, Output} from \"@angular/core\";\nimport {ActivatedRoute, Router, NavigationStart} from \"@angular/router\";\n\nimport {Error} from \"./error\";\n\n/** Error service to collect errors from the {@link ErrorInterceptor}. */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ErrorService {\n\n  /** Event emitter whether an event is currently present. */\n  errorPresent = new EventEmitter();\n\n  /**\n   * Constructor.\n   *\n   * This also creates an event handler on the {@link NavigationStart} event in\n   * order to reset the error presence.\n   * (Set {@link errorPresent} to `false`.)\n   * @param router Router to subscribe to events\n   */\n  constructor(private router: Router) {\n    this.router.events.subscribe(event => {\n      if (event instanceof NavigationStart) this.errorPresent.emit(false);\n    })\n  }\n\n  /**\n   * Emit an error.\n   * This is used by the {@link ErrorInterceptor} to pass errors to this\n   * service.\n   * @param error Error to pass\n   */\n  throwError(error: Error) {\n    this.errorPresent.emit(error);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ExampleComponent.html":{"url":"components/ExampleComponent.html","title":"component - ExampleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ExampleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    wisdom_modules/example/src/lib/example.component.ts\n\n\n\n    \n        Description\n    \n    \n        Minimalistic example Component.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                templateUrl\n                example.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import {Component, OnInit} from \"@angular/core\";\n\n/** Minimalistic example Component. */\n@Component({\n  templateUrl: \"example.component.html\"\n})\nexport class ExampleComponent {\n\n}\n\n    \n\n    \n        \n\n  \n    Example here\n  \n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Example here          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BimComponent', 'selector': 'bim'},{'name': 'BreadcrumbsComponent', 'selector': 'breadcrumbs'},{'name': 'ConsumerDetailComponent', 'selector': 'lib-consumer-detail'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'ExampleComponent', 'selector': ''},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IonIconComponent', 'selector': 'ion-icon'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'map'},{'name': 'MapSelectViewComponent', 'selector': 'lib-map-select-view'},{'name': 'PumpModelComponent', 'selector': ''},{'name': 'ResultDataViewComponent', 'selector': 'lib-result-data-view'},{'name': 'SideBarComponent', 'selector': 'app-side-bar'},{'name': 'WaterRightDetailComponent', 'selector': 'lib-water-right-detail'}];\n    var DIRECTIVES = [{'name': 'BulmaIsToggleableDirective', 'selector': '.is-toggleable'},{'name': 'LangSelectorDirective', 'selector': '[selectLang]'}];\n    var ACTUAL_COMPONENT = {'name': 'ExampleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ExampleModule.html":{"url":"modules/ExampleModule.html","title":"module - ExampleModule","body":"\n                   \n\n\n\n\n    Modules\n    ExampleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ExampleModule\n\n\n\ncluster_ExampleModule_declarations\n\n\n\ncluster_ExampleModule_imports\n\n\n\ncluster_ExampleModule_exports\n\n\n\n\nExampleComponent\n\nExampleComponent\n\n\n\nExampleModule\n\nExampleModule\n\nExampleModule -->\n\nExampleComponent->ExampleModule\n\n\n\n\n\nExampleComponent \n\nExampleComponent \n\nExampleComponent  -->\n\nExampleModule->ExampleComponent \n\n\n\n\n\nWisdomModule\n\nWisdomModule\n\nExampleModule -->\n\nWisdomModule->ExampleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            wisdom_modules/example/src/lib/example.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Minimalistic example module.\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ExampleComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            WisdomModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ExampleComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from \"@angular/core\";\nimport {TranslateModule} from \"@ngx-translate/core\";\nimport {WisdomModule} from \"common\";\n\nimport {ExampleComponent} from \"./example.component\";\nimport {CommonModule} from \"@angular/common\";\n\n/** Minimalistic example module. */\n@NgModule({\n  declarations: [\n    ExampleComponent\n  ],\n  imports: [\n    WisdomModule,\n    CommonModule,\n    TranslateModule\n  ],\n  exports: [\n    ExampleComponent\n  ]\n})\nexport class ExampleModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExampleService.html":{"url":"injectables/ExampleService.html","title":"injectable - ExampleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ExampleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/example/src/lib/example.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Unused but exported service as example.\n\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\n\n/** Unused but exported service as example. */\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ExampleService {\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ForecastEntry.html":{"url":"interfaces/ForecastEntry.html","title":"interface - ForecastEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ForecastEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/water-usage-forecasts/src/lib/services/water-usage-forecasts.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            forecast\n                                        \n                                \n                                \n                                        \n                                            reference\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        forecast\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        forecast:         Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Record\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reference\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reference:         Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Record\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {HttpClient, HttpContext, HttpHeaders} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\nimport {Router} from \"@angular/router\";\nimport {USE_API_URL, USE_LOADER} from \"common\";\nimport {Observable} from \"rxjs\";\n\n/** Route of the API access. */\nconst API_URL = \"water-usage-forecasts\";\n\n/** Possible forecast calculation methods. */\nexport enum ForecastType {\n  LOGARITHMIC = \"logarithmic\",\n  LINEAR = \"linear\",\n  POLYNOMIAL = \"polynomial\"\n}\n\n/** Interface for the data received from the server. */\nexport interface ForecastResponse {\n  /**\n   * The results in accumulated form so that the client doesn't have to\n   * calculate it itself.\n   */\n  accumulations: {\n    /** Accumulations by consumer group. */\n    consumerGroup: ForecastEntry,\n    /** Accumulations by municipal. */\n    municipal: ForecastEntry\n  },\n  partials: {\n    consumerGroup: {\n      key: string,\n      name: string\n    },\n    municipal: ForecastResponse[\"partials\"][0][\"consumerGroup\"],\n    referenceUsages: {\n      equation: string,\n      float: number,\n      model: \"logarithmic\" | \"linear\" | \"polynomial\",\n      usages: {\n        amounts: number[],\n        end: number,\n        start: number\n      }\n    },\n    forecast: ForecastResponse[\"partials\"][0][\"referenceUsages\"]\n  }[]\n}\n\nexport interface ForecastEntry {\n  forecast: Record,\n  reference: Record\n}\n\nexport interface ForecastUsage {\n  displayName: string,\n  endYear: number,\n  startYear: number,\n  usages: number[]\n}\n\n/**\n * Service to interact with server providing the data to display.\n */\n@Injectable({\n  providedIn: \"root\"\n})\nexport class WaterUsageForecastsService {\n\n  constructor(\n    private http: HttpClient,\n    private router: Router\n  ) {}\n\n  fetchForecastData(\n    key: string | string[],\n    forecastModel: ForecastType,\n    consumerGroup?:\n      \"businesses\" |\n      \"households_and_small_businesses\" |\n      \"farming_forestry_fishing_industry\" |\n      \"public_institutions\" |\n      \"all\"\n  ): Observable {\n    let url = this.router.parseUrl(`${API_URL}/${forecastModel}`);\n    if (consumerGroup) url.queryParams[\"consumerGroup\"] = consumerGroup;\n    url.queryParams[\"key\"] = key;\n    return this.http.get(url.toString(), {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\"\n      }),\n      responseType: \"json\",\n      context: new HttpContext()\n        .set(USE_API_URL, true)\n        .set(USE_LOADER, \"water-usage-forecasts.display.loading\")\n    }) as Observable;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ForecastResponse.html":{"url":"interfaces/ForecastResponse.html","title":"interface - ForecastResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ForecastResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/water-usage-forecasts/src/lib/services/water-usage-forecasts.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the data received from the server.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accumulations\n                                        \n                                \n                                \n                                        \n                                            partials\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accumulations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accumulations:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The results in accumulated form so that the client doesn't have to\ncalculate it itself.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        partials\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        partials:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {HttpClient, HttpContext, HttpHeaders} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\nimport {Router} from \"@angular/router\";\nimport {USE_API_URL, USE_LOADER} from \"common\";\nimport {Observable} from \"rxjs\";\n\n/** Route of the API access. */\nconst API_URL = \"water-usage-forecasts\";\n\n/** Possible forecast calculation methods. */\nexport enum ForecastType {\n  LOGARITHMIC = \"logarithmic\",\n  LINEAR = \"linear\",\n  POLYNOMIAL = \"polynomial\"\n}\n\n/** Interface for the data received from the server. */\nexport interface ForecastResponse {\n  /**\n   * The results in accumulated form so that the client doesn't have to\n   * calculate it itself.\n   */\n  accumulations: {\n    /** Accumulations by consumer group. */\n    consumerGroup: ForecastEntry,\n    /** Accumulations by municipal. */\n    municipal: ForecastEntry\n  },\n  partials: {\n    consumerGroup: {\n      key: string,\n      name: string\n    },\n    municipal: ForecastResponse[\"partials\"][0][\"consumerGroup\"],\n    referenceUsages: {\n      equation: string,\n      float: number,\n      model: \"logarithmic\" | \"linear\" | \"polynomial\",\n      usages: {\n        amounts: number[],\n        end: number,\n        start: number\n      }\n    },\n    forecast: ForecastResponse[\"partials\"][0][\"referenceUsages\"]\n  }[]\n}\n\nexport interface ForecastEntry {\n  forecast: Record,\n  reference: Record\n}\n\nexport interface ForecastUsage {\n  displayName: string,\n  endYear: number,\n  startYear: number,\n  usages: number[]\n}\n\n/**\n * Service to interact with server providing the data to display.\n */\n@Injectable({\n  providedIn: \"root\"\n})\nexport class WaterUsageForecastsService {\n\n  constructor(\n    private http: HttpClient,\n    private router: Router\n  ) {}\n\n  fetchForecastData(\n    key: string | string[],\n    forecastModel: ForecastType,\n    consumerGroup?:\n      \"businesses\" |\n      \"households_and_small_businesses\" |\n      \"farming_forestry_fishing_industry\" |\n      \"public_institutions\" |\n      \"all\"\n  ): Observable {\n    let url = this.router.parseUrl(`${API_URL}/${forecastModel}`);\n    if (consumerGroup) url.queryParams[\"consumerGroup\"] = consumerGroup;\n    url.queryParams[\"key\"] = key;\n    return this.http.get(url.toString(), {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\"\n      }),\n      responseType: \"json\",\n      context: new HttpContext()\n        .set(USE_API_URL, true)\n        .set(USE_LOADER, \"water-usage-forecasts.display.loading\")\n    }) as Observable;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ForecastUsage.html":{"url":"interfaces/ForecastUsage.html","title":"interface - ForecastUsage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ForecastUsage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/water-usage-forecasts/src/lib/services/water-usage-forecasts.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            displayName\n                                        \n                                \n                                \n                                        \n                                            endYear\n                                        \n                                \n                                \n                                        \n                                            startYear\n                                        \n                                \n                                \n                                        \n                                            usages\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endYear\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        endYear:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startYear\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startYear:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        usages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        usages:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {HttpClient, HttpContext, HttpHeaders} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\nimport {Router} from \"@angular/router\";\nimport {USE_API_URL, USE_LOADER} from \"common\";\nimport {Observable} from \"rxjs\";\n\n/** Route of the API access. */\nconst API_URL = \"water-usage-forecasts\";\n\n/** Possible forecast calculation methods. */\nexport enum ForecastType {\n  LOGARITHMIC = \"logarithmic\",\n  LINEAR = \"linear\",\n  POLYNOMIAL = \"polynomial\"\n}\n\n/** Interface for the data received from the server. */\nexport interface ForecastResponse {\n  /**\n   * The results in accumulated form so that the client doesn't have to\n   * calculate it itself.\n   */\n  accumulations: {\n    /** Accumulations by consumer group. */\n    consumerGroup: ForecastEntry,\n    /** Accumulations by municipal. */\n    municipal: ForecastEntry\n  },\n  partials: {\n    consumerGroup: {\n      key: string,\n      name: string\n    },\n    municipal: ForecastResponse[\"partials\"][0][\"consumerGroup\"],\n    referenceUsages: {\n      equation: string,\n      float: number,\n      model: \"logarithmic\" | \"linear\" | \"polynomial\",\n      usages: {\n        amounts: number[],\n        end: number,\n        start: number\n      }\n    },\n    forecast: ForecastResponse[\"partials\"][0][\"referenceUsages\"]\n  }[]\n}\n\nexport interface ForecastEntry {\n  forecast: Record,\n  reference: Record\n}\n\nexport interface ForecastUsage {\n  displayName: string,\n  endYear: number,\n  startYear: number,\n  usages: number[]\n}\n\n/**\n * Service to interact with server providing the data to display.\n */\n@Injectable({\n  providedIn: \"root\"\n})\nexport class WaterUsageForecastsService {\n\n  constructor(\n    private http: HttpClient,\n    private router: Router\n  ) {}\n\n  fetchForecastData(\n    key: string | string[],\n    forecastModel: ForecastType,\n    consumerGroup?:\n      \"businesses\" |\n      \"households_and_small_businesses\" |\n      \"farming_forestry_fishing_industry\" |\n      \"public_institutions\" |\n      \"all\"\n  ): Observable {\n    let url = this.router.parseUrl(`${API_URL}/${forecastModel}`);\n    if (consumerGroup) url.queryParams[\"consumerGroup\"] = consumerGroup;\n    url.queryParams[\"key\"] = key;\n    return this.http.get(url.toString(), {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\"\n      }),\n      responseType: \"json\",\n      context: new HttpContext()\n        .set(USE_API_URL, true)\n        .set(USE_LOADER, \"water-usage-forecasts.display.loading\")\n    }) as Observable;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FrameComponent.html":{"url":"components/FrameComponent.html","title":"component - FrameComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FrameComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    wisdom_modules/core/src/app/frame/frame.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component framing the application.\nEvery site except the login page will display this frame.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-frame\n            \n\n\n\n\n            \n                templateUrl\n                ./frame.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hideSidebar\n                                \n                                \n                                    hideUserBar\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, authStorage: AuthStorageService, router: Router, settingsStorage: SettingsStorageService)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/core/src/app/frame/frame.component.ts:19\n                            \n                        \n\n                \n                    \n                            Constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to interact with the auth server\n\n                                                        \n                                                \n                                                \n                                                        authStorage\n                                                  \n                                                        \n                                                                        AuthStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Storage of the keys for revoking\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router to route the user on logout\n\n                                                        \n                                                \n                                                \n                                                        settingsStorage\n                                                  \n                                                        \n                                                                        SettingsStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Storage of the settings\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/frame/frame.component.ts:54\n                \n            \n\n\n            \n                \n                    Log the user out and bring the user to the login page.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hideSidebar\n                    \n                \n\n                \n                    \n                        gethideSidebar()\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/frame/frame.component.ts:36\n                                \n                            \n                    \n                        \n                                Get hide sidebar setting.\n\n\n                        \n                    \n\n                \n                    \n                        sethideSidebar(setting: boolean)\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/frame/frame.component.ts:40\n                                \n                            \n                    \n                        \n                                Set hide sidebar setting.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            setting\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        hideUserBar\n                    \n                \n\n                \n                    \n                        gethideUserBar()\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/frame/frame.component.ts:45\n                                \n                            \n                    \n                        \n                                Get hide user bar setting.\n\n\n                        \n                    \n\n                \n                    \n                        sethideUserBar(setting: boolean)\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/frame/frame.component.ts:49\n                                \n                            \n                    \n                        \n                                Set hide user bar setting.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            setting\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {Component, OnInit} from \"@angular/core\";\nimport {Router} from \"@angular/router\";\n\nimport {AuthService} from \"../auth/auth.service\";\nimport {AuthStorageService} from \"../auth/auth-storage.service\";\nimport {SettingsStorageService} from \"../settings-storage.service\";\n\n// TODO: add further nesting - https://bulma.io/documentation/components/menu/\n\n/**\n * Component framing the application.\n *\n * Every site except the login page will display this frame.\n */\n@Component({\n  selector: \"app-frame\",\n  templateUrl: \"./frame.component.html\"\n})\nexport class FrameComponent {\n\n  /**\n   * Constructor.\n   * @param authService Service to interact with the auth server\n   * @param authStorage Storage of the keys for revoking\n   * @param router Router to route the user on logout\n   * @param settingsStorage Storage of the settings\n   */\n  constructor(\n    private authService: AuthService,\n    private authStorage: AuthStorageService,\n    private router: Router,\n    private settingsStorage: SettingsStorageService\n  ) {}\n\n  /** Get hide sidebar setting. */\n  get hideSidebar() {\n    return this.settingsStorage.hideSidebar || false;\n  }\n  /** Set hide sidebar setting. */\n  set hideSidebar(setting: boolean) {\n    this.settingsStorage.hideSidebar = setting;\n  }\n\n  /** Get hide user bar setting. */\n  get hideUserBar() {\n    return this.settingsStorage.hideUserBar || false;\n  }\n  /** Set hide user bar setting. */\n  set hideUserBar(setting: boolean) {\n    this.settingsStorage.hideUserBar = setting;\n  }\n\n  /** Log the user out and bring the user to the login page. */\n  logout() {\n    this.authService.logout(this.authStorage.accessToken!).subscribe(() => {\n      this.authStorage.clear();\n      this.router.navigate([\"login\"], {replaceUrl: true})\n        .catch(e => console.error(e));\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n  \n\n\n  \n    \n      \n        \n          \n            \n              \n                \n              \n              \n                WISdoM-OSS\n              \n            \n          \n        \n      \n      \n        \n          \n            \n              \n                \n              \n            \n          \n        \n        \n          \n            \n              \n                \n              \n              \n            {{\"lang\" | translate}}\n          \n            \n            \n              \n                \n                  \n                    \n                      \n                    \n                    \n                      Deutsch\n                    \n                  \n                \n              \n              \n                \n                  \n                    \n                      \n                    \n                    \n                      English\n                    \n                  \n                \n              \n            \n          \n          \n            \n              \n                \n                  \n                \n              \n            \n          \n        \n      \n    \n    \n      \n        \n      \n      \n        \n          \n            \n              \n                \n              \n            \n          \n        \n      \n      \n        \n          {{\"core.frame.account\" | translate}}\n          \n            \n              \n                \n                  \n                    \n                  \n                  \n                    {{\"core.frame.logout\" | translate}}\n                  \n                \n              \n            \n          \n          {{\"core.frame.administration\" | translate}}\n          \n            \n              \n                \n                  \n                    \n                  \n                  \n                    {{\"core.frame.userManagement\" | translate}}\n                  \n                \n              \n            \n            \n              \n                \n                  \n                    \n                  \n                  \n                    {{\"core.frame.permissions\" | translate}}\n                  \n                \n              \n            \n            \n              \n                \n                  \n                    \n                  \n                  \n                    {{\"core.frame.roles\" | translate}}\n                  \n                \n              \n            \n          \n          \n            \n              \n              \n            \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                      WISdoM-OSS                                                                                                                                                                                                                                                                    {{\"lang\" | translate}}                                                                                                                                                                                          Deutsch                                                                                                                                                                                                                            English                                                                                                                                                                                                                                                                                                                                                                                                          {{\"core.frame.account\" | translate}}                                                                                                                                                  {{\"core.frame.logout\" | translate}}                                                                                {{\"core.frame.administration\" | translate}}                                                                                                                                                  {{\"core.frame.userManagement\" | translate}}                                                                                                                                                                                                    {{\"core.frame.permissions\" | translate}}                                                                                                                                                                                                    {{\"core.frame.roles\" | translate}}                                                                                                                                                                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BimComponent', 'selector': 'bim'},{'name': 'BreadcrumbsComponent', 'selector': 'breadcrumbs'},{'name': 'ConsumerDetailComponent', 'selector': 'lib-consumer-detail'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'ExampleComponent', 'selector': ''},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IonIconComponent', 'selector': 'ion-icon'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'map'},{'name': 'MapSelectViewComponent', 'selector': 'lib-map-select-view'},{'name': 'PumpModelComponent', 'selector': ''},{'name': 'ResultDataViewComponent', 'selector': 'lib-result-data-view'},{'name': 'SideBarComponent', 'selector': 'app-side-bar'},{'name': 'WaterRightDetailComponent', 'selector': 'lib-water-right-detail'}];\n    var DIRECTIVES = [{'name': 'BulmaIsToggleableDirective', 'selector': '.is-toggleable'},{'name': 'LangSelectorDirective', 'selector': '[selectLang]'}];\n    var ACTUAL_COMPONENT = {'name': 'FrameComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IonIconComponent.html":{"url":"components/IonIconComponent.html","title":"component - IonIconComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IonIconComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    wisdom_modules/common/src/lib/ion-icon/ion-icon.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component is used to inject the icons from IonIcons.\nIonIcons uses WebComponents to display the icons.\nTo allow to use them here, this component adds the icons via js.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ion-icon\n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    name\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(elRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/common/src/lib/ion-icon/ion-icon.component.ts:12\n                            \n                        \n\n                \n                    \n                            Constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        elRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Element reference to itself\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/ion-icon/ion-icon.component.ts:31\n                            \n                        \n                \n                    \n                        The name of the icon.\nIs not used by angular but needed to render the correct icon and necessary\nso that angular stops complaining.\nThis setter also directly modifies the native element to have the \"name\"\ndirectly as an attribute which is needed to make ion icons work.\nYou can find the names at the official website\nhttps://ionic.io/ionicons.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n\n                \n                    \n                        setname(name: string | undefined)\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/common/src/lib/ion-icon/ion-icon.component.ts:31\n                                \n                            \n                    \n                        \n                                The name of the icon.\nIs not used by angular but needed to render the correct icon and necessary\nso that angular stops complaining.\nThis setter also directly modifies the native element to have the \"name\"\ndirectly as an attribute which is needed to make ion icons work.\nYou can find the names at the official website\nhttps://ionic.io/ionicons.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            name\n                                                    \n                                                            \n                                                                        string | undefined\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {Component, Input, ElementRef} from \"@angular/core\";\n\n/**\n * This component is used to inject the icons from IonIcons.\n * IonIcons uses WebComponents to display the icons.\n * To allow to use them here, this component adds the icons via js.\n */\n@Component({\n  selector: \"ion-icon\",\n  template: \"\"\n})\nexport class IonIconComponent {\n\n  /**\n   * Constructor.\n   * @param elRef Element reference to itself\n   */\n  constructor(private elRef: ElementRef) {}\n\n  /**\n   * The name of the icon.\n   * Is not used by angular but needed to render the correct icon and necessary\n   * so that angular stops complaining.\n   *\n   * This setter also directly modifies the native element to have the \"name\"\n   * directly as an attribute which is needed to make ion icons work.\n   *\n   * You can find the names at the official website\n   * {@link https://ionic.io/ionicons}.\n   */\n  @Input() set name(name: string | undefined) {\n    this.elRef.nativeElement?.setAttribute(\"name\", name);\n  };\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BimComponent', 'selector': 'bim'},{'name': 'BreadcrumbsComponent', 'selector': 'breadcrumbs'},{'name': 'ConsumerDetailComponent', 'selector': 'lib-consumer-detail'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'ExampleComponent', 'selector': ''},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IonIconComponent', 'selector': 'ion-icon'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'map'},{'name': 'MapSelectViewComponent', 'selector': 'lib-map-select-view'},{'name': 'PumpModelComponent', 'selector': ''},{'name': 'ResultDataViewComponent', 'selector': 'lib-result-data-view'},{'name': 'SideBarComponent', 'selector': 'app-side-bar'},{'name': 'WaterRightDetailComponent', 'selector': 'lib-water-right-detail'}];\n    var DIRECTIVES = [{'name': 'BulmaIsToggleableDirective', 'selector': '.is-toggleable'},{'name': 'LangSelectorDirective', 'selector': '[selectLang]'}];\n    var ACTUAL_COMPONENT = {'name': 'IonIconComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/LangSelectorDirective.html":{"url":"directives/LangSelectorDirective.html","title":"directive - LangSelectorDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  LangSelectorDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/core/src/app/i18n/lang-selector.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                Directive to set the currently displayed language.\n\n            \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selectLang]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clickLangSelect\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectLang\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/core/src/app/i18n/lang-selector.directive.ts:8\n                            \n                        \n\n                \n                    \n                            Constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to update the current language\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        selectLang\n                    \n                \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/core/src/app/i18n/lang-selector.directive.ts:17\n                            \n                        \n                \n                    \n                        The language key that the translation service should use.\n\n                    \n                \n            \n        \n\n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            click\n                        \n                        \n                    \n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/i18n/lang-selector.directive.ts:24\n                \n            \n\n\n            \n                \n                    Upon clicking on the element with this directive the lang of the\ntranslation service updates with the given language key.\n\n\n                \n            \n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clickLangSelect\n                        \n                    \n                \n            \n            \n                \nclickLangSelect()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('click')\n                \n            \n\n            \n                \n                    Defined in wisdom_modules/core/src/app/i18n/lang-selector.directive.ts:24\n                \n            \n\n\n            \n                \n                    Upon clicking on the element with this directive the lang of the\ntranslation service updates with the given language key.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import {Directive, Input, HostListener} from \"@angular/core\";\nimport {TranslateService} from \"@ngx-translate/core\";\n\n/** Directive to set the currently displayed language. */\n@Directive({\n  selector: \"[selectLang]\"\n})\nexport class LangSelectorDirective {\n\n  /**\n   * Constructor.\n   * @param translateService Service to update the current language\n   */\n  constructor(private translateService: TranslateService) {}\n\n  /** The language key that the translation service should use. */\n  @Input(\"selectLang\") lang: string | undefined;\n\n  /**\n   * Upon clicking on the element with this directive the lang of the\n   * translation service updates with the given language key.\n   */\n  @HostListener(\"click\")\n  clickLangSelect() {\n    if (!this.lang) return;\n    this.translateService.use(this.lang);\n    globalThis.localStorage.setItem(\"lang\", this.lang);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LayerData.html":{"url":"interfaces/LayerData.html","title":"interface - LayerData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LayerData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/common/src/lib/map/layer-data.ts\n        \n\n\n            \n                Description\n            \n            \n                Type to represent layer data received from the geo data server.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            box\n                                        \n                                \n                                \n                                        \n                                            shapes\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        box\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        box:     [, , , ]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [, , , ]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Corner coordinates of a box containing all the shapes this displays.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shapes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        shapes:         ShapeData[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ShapeData[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List of shapes.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import * as L from \"leaflet\";\nimport {GeoJsonObject} from \"geojson\";\n\n/** Type to represent a single shape with all of its metadata. */\nexport interface ShapeData {\n  /** Name of the shape. */\n  name: string,\n  /** Key of the shape. */\n  key: string,\n  /** Nomenclature of Territorial Units code of the shape. */\n  nutsKey: string,\n  /** GeoJson representing the shape. */\n  geoJson: GeoJsonObject\n}\n\n/** Type to represent layer data received from the geo data server. */\nexport interface LayerData {\n  /** Corner coordinates of a box containing all the shapes this displays. */\n  box: [[number, number], [number, number], [number, number], [number, number]],\n  /** List of shapes. */\n  shapes: ShapeData[]\n}\n\nexport default LayerData;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoaderComponent.html":{"url":"components/LoaderComponent.html","title":"component - LoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    wisdom_modules/core/src/app/frame/loader/loader.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component covering the main container with a loading screen while we wait for\nservices to respond.\nThis will display an animation and possibly some loading texts.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-loader\n            \n\n            \n                styleUrls\n                ./loader.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./loader.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                displayTexts\n                            \n                            \n                                isLoading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: LoaderService)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/core/src/app/frame/loader/loader.component.ts:16\n                            \n                        \n\n                \n                    \n                            Constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        LoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to handle communication efforts\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/frame/loader/loader.component.ts:33\n                \n            \n\n\n            \n                \n                    On init this should subscribe to the service in order to update the loading\nscreen.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        displayTexts\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/core/src/app/frame/loader/loader.component.ts:27\n                        \n                    \n\n            \n                \n                    The texts to display while loading.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/core/src/app/frame/loader/loader.component.ts:25\n                        \n                    \n\n            \n                \n                    Whether the loader should be active.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit, AfterViewInit} from \"@angular/core\";\n\nimport {LoaderService} from \"./loader.service\";\n\n/**\n * Component covering the main container with a loading screen while we wait for\n * services to respond.\n *\n * This will display an animation and possibly some loading texts.\n */\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.scss']\n})\nexport class LoaderComponent implements OnInit {\n\n  /**\n   * Constructor.\n   * @param service Service to handle communication efforts\n   */\n  constructor(private service: LoaderService) {}\n\n  /** Whether the loader should be active. */\n  isLoading = false;\n  /** The texts to display while loading. */\n  displayTexts: string[] = [];\n\n  /**\n   * On init this should subscribe to the service in order to update the loading\n   * screen.\n   */\n  ngOnInit(): void {\n    this.service.loading.subscribe(value => this.isLoading = value);\n    this.service.displayTexts.subscribe(values => this.displayTexts = values);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n      \n        \n          \n        \n              \n          \n        \n              \n          \n        \n      \n      \n      {{text | translate}}\n    \n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./loader.component.scss\n                \n                .item {\n  position: relative;\n  top: 0;\n  -webkit-animation: bounce 1s infinite ease-in-out;\n  animation: bounce 1s infinite ease-in-out;\n}\n\n.item:nth-child(1) {\n  -webkit-animation-delay: -1.4s;\n  animation-delay: 0s - 1s;\n}\n.item:nth-child(2) {\n  -webkit-animation-delay: -0.7s;\n  animation-delay: 0.3s - 1s;\n}\n.item:nth-child(3) {\n  -webkit-animation-delay: -0s;\n  animation-delay: 0.6s - 1;\n}\n\n\n@-webkit-keyframes bounce {\n  0%, 100% {\n    top: -15px;\n    opacity: 0.8;\n  }\n  50% {\n    top: 15px;\n    opacity: 1;\n  }\n}\n\n@keyframes bounce {\n  0%, 100% {\n    top: -10px;\n    opacity: 0.8;\n  }\n  50% {\n    top: 10px;\n    opacity: 1;\n  }\n}\n\n.loader-container {\n  transition: height 0.8s ease;\n  z-index: 2000;\n}\n\n.main-container {\n  height: calc(100vh - 56px);\n  display: grid;\n  overflow-y: scroll;\n}\n\n.main-container > div {\n  grid-column: 1;\n  grid-row: 1;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                            {{text | translate}}              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BimComponent', 'selector': 'bim'},{'name': 'BreadcrumbsComponent', 'selector': 'breadcrumbs'},{'name': 'ConsumerDetailComponent', 'selector': 'lib-consumer-detail'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'ExampleComponent', 'selector': ''},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IonIconComponent', 'selector': 'ion-icon'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'map'},{'name': 'MapSelectViewComponent', 'selector': 'lib-map-select-view'},{'name': 'PumpModelComponent', 'selector': ''},{'name': 'ResultDataViewComponent', 'selector': 'lib-result-data-view'},{'name': 'SideBarComponent', 'selector': 'app-side-bar'},{'name': 'WaterRightDetailComponent', 'selector': 'lib-water-right-detail'}];\n    var DIRECTIVES = [{'name': 'BulmaIsToggleableDirective', 'selector': '.is-toggleable'},{'name': 'LangSelectorDirective', 'selector': '[selectLang]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/LoaderGuard.html":{"url":"guards/LoaderGuard.html","title":"guard - LoaderGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    LoaderGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                wisdom_modules/core/src/app/frame/loader/loader.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard to be called when a navigation starts.\nThis will reset the loader.\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                canActivateChild\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(service: LoaderService)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/core/src/app/frame/loader/loader.guard.ts:19\n                            \n                        \n\n                \n                    \n                            Constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        LoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to report the navigation change\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/frame/loader/loader.guard.ts:28\n                \n            \n\n\n            \n                \n                    Report on navigation change for direct routes.\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canActivateChild\n                        \n                    \n                \n            \n            \n                \ncanActivateChild()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/frame/loader/loader.guard.ts:34\n                \n            \n\n\n            \n                \n                    Report on navigation change for child routes.\n\n\n                \n            \n        \n    \n\n        \n\n\n        \n            import {Injectable} from \"@angular/core\";\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree, CanActivateChild\n} from \"@angular/router\";\nimport {Observable} from \"rxjs\";\n\nimport {LoaderService} from \"./loader.service\";\n\n/**\n * Guard to be called when a navigation starts.\n * This will reset the loader.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderGuard implements CanActivate, CanActivateChild {\n\n  /**\n   * Constructor.\n   * @param service Service to report the navigation change\n   */\n  constructor(private service: LoaderService) {}\n\n  /** Report on navigation change for direct routes. */\n  canActivate(): true {\n    this.service.clearLoading();\n    return true;\n  }\n\n  /** Report on navigation change for child routes. */\n  canActivateChild(): true {\n    this.service.clearLoading();\n    return true;\n  }\n\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/LoaderInterceptor.html":{"url":"interceptors/LoaderInterceptor.html","title":"interceptor - LoaderInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  LoaderInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/core/src/app/frame/loader/loader.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                Interceptor for the loading, this allows detecting load change.\nThis will report to the LoaderService when the USE_LOADER\ncontext is set.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(service: LoaderService)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/core/src/app/frame/loader/loader.interceptor.ts:23\n                            \n                        \n\n                \n                    \n                            Constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        LoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Loader service to report to\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/frame/loader/loader.interceptor.ts:39\n                \n            \n\n\n            \n                \n                    Check whether USE_LOADER is set.\nIf so, report to the service.\nWhen the request returns this also notifies the service.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Request to check\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Next interceptor\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpResponseBase,\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n  HttpErrorResponse,\n  HttpResponse\n} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\nimport {USE_LOADER} from \"common\";\nimport {tap, Observable} from \"rxjs\";\n\nimport {LoaderService} from \"./loader.service\";\n\n/**\n * Interceptor for the loading, this allows detecting load change.\n *\n * This will report to the {@link LoaderService} when the {@link USE_LOADER}\n * context is set.\n */\n@Injectable()\nexport class LoaderInterceptor implements HttpInterceptor {\n\n  /**\n   * Constructor.\n   * @param service Loader service to report to\n   */\n  constructor(private service: LoaderService) {}\n\n  /**\n   * Check whether {@link USE_LOADER} is set.\n   * If so, report to the service.\n   *\n   * When the request returns this also notifies the service.\n   * @param request Request to check\n   * @param next Next interceptor\n   */\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n    let context = request.context.get(USE_LOADER);\n    if (!context) return next.handle(request);\n\n    let observable = next.handle(request);\n    let promise = new Promise(resolve => {\n      observable = observable.pipe(tap({\n        next(value) {\n          if (value instanceof HttpResponse) {\n            return resolve(value);\n          }\n        },\n        error(err) {\n          if (err instanceof HttpErrorResponse) {\n            return resolve(err);\n          }\n        }\n      }))\n    });\n    if (typeof context == \"string\") this.service.addLoader(promise, context);\n    else this.service.addLoader(promise);\n    return observable;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoaderService.html":{"url":"injectables/LoaderService.html","title":"injectable - LoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/core/src/app/frame/loader/loader.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Loader service handling the communication between component and interceptor\nand guard.\nAll loading updates will be reported to this service.\nThis is then communicated to the component to display the loader or not.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _displayTexts\n                            \n                            \n                                    Private\n                                _loading\n                            \n                            \n                                    Private\n                                displayTextSubject\n                            \n                            \n                                    Private\n                                promises\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addLoader\n                            \n                            \n                                clearLoading\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    displayTexts\n                                \n                                \n                                    loading\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addLoader\n                        \n                    \n                \n            \n            \n                \naddLoader(toResolve: Promise, displayText?: string)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/frame/loader/loader.service.ts:49\n                \n            \n\n\n            \n                \n                    Add a loader to the currently awaited requests.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    toResolve\n                                    \n                                            Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Promise to wait for\n\n                                    \n                                \n                                \n                                    displayText\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional text to display under the loader animation\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearLoading\n                        \n                    \n                \n            \n            \n                \nclearLoading()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/frame/loader/loader.service.ts:67\n                \n            \n\n\n            \n                \n                    Clear all loading and ignore the updates of these requests.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _displayTexts\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map | string>\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/core/src/app/frame/loader/loader.service.ts:22\n                        \n                    \n\n            \n                \n                    Internally stored texts to display on the component.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/core/src/app/frame/loader/loader.service.ts:38\n                        \n                    \n\n            \n                \n                    Subject stating whether the app currently awaits requests.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        displayTextSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/core/src/app/frame/loader/loader.service.ts:27\n                        \n                    \n\n            \n                \n                     @link Subject} to display the loadings texts, to be used as\n Observable.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        promises\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Promise[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/core/src/app/frame/loader/loader.service.ts:17\n                        \n                    \n\n            \n                \n                    All request that we currently await.\n\n                \n            \n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        displayTexts\n                    \n                \n\n                \n                    \n                        getdisplayTexts()\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/frame/loader/loader.service.ts:30\n                                \n                            \n                    \n                        \n                                Texts to display on the component.\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        loading\n                    \n                \n\n                \n                    \n                        getloading()\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/frame/loader/loader.service.ts:40\n                                \n                            \n                    \n                        \n                                Observable stating whether the app currently awaits requests.\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\nimport {Observable, Subject} from \"rxjs\";\n\n/**\n * Loader service handling the communication between component and interceptor\n * and guard.\n *\n * All loading updates will be reported to this service.\n * This is then communicated to the component to display the loader or not.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderService {\n\n  /** All request that we currently await. */\n  private promises: Promise[] = [];\n  /**\n   * Internally stored texts to display on the component.\n   * @internal\n   */\n  private _displayTexts: Map, string> = new Map();\n  /**\n   *  @link Subject} to display the loadings texts, to be used as\n   *  {@link Observable}.\n   */\n  private displayTextSubject = new Subject();\n\n  /** Texts to display on the component. */\n  get displayTexts(): Observable {\n    return this.displayTextSubject.asObservable();\n  }\n\n  /**\n   * {@link Subject} stating whether the app currently awaits requests.\n   * @internal\n   */\n  private _loading = new Subject();\n  /** {@link Observable} stating whether the app currently awaits requests. */\n  get loading(): Observable {\n    return this._loading.asObservable();\n  }\n\n  /**\n   * Add a loader to the currently awaited requests.\n   * @param toResolve Promise to wait for\n   * @param displayText Optional text to display under the loader animation\n   */\n  addLoader(toResolve: Promise, displayText?: string) {\n    this.promises.push(toResolve);\n    if (displayText) {\n      this._displayTexts.set(toResolve, displayText);\n      this.displayTextSubject.next(Array.from(this._displayTexts.values()));\n    }\n    this._loading.next(true);\n    toResolve\n      .then(() => Promise.allSettled(this.promises))\n      .then(() => this._loading.next(false))\n      .then(() => {\n        this._displayTexts.delete(toResolve);\n        this.displayTextSubject.next(Array.from(this._displayTexts.values()));\n      })\n      .then(() => this.promises = []);\n  }\n\n  /** Clear all loading and ignore the updates of these requests. */\n  clearLoading() {\n    this.promises = [];\n    this._displayTexts.clear();\n    this.displayTextSubject.next([]);\n    this._loading.next(false);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    wisdom_modules/core/src/app/auth/login/login.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for the login page.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loginHasIssue\n                            \n                            \n                                passwordInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, authStorage: AuthStorageService, router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/core/src/app/auth/login/login.component.ts:21\n                            \n                        \n\n                \n                    \n                            Constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to interact with the auth server\n\n                                                        \n                                                \n                                                \n                                                        authStorage\n                                                  \n                                                        \n                                                                        AuthStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service containing the tokens\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router for routing the user after login\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The current route\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit(f: NgForm)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/auth/login/login.component.ts:45\n                \n            \n\n\n            \n                \n                    Function to call when the user submits the login.\nUpon successful login the user will be routed to the main page.\nUpon error the error message will be shown.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    f\n                                    \n                                                NgForm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The values of the login form\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loginHasIssue\n                        \n                    \n                \n            \n                \n                    \n                        Type :      | string\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/core/src/app/auth/login/login.component.ts:21\n                        \n                    \n\n            \n                \n                    Has the login currently some issue.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('passwordInput')\n                        \n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/core/src/app/auth/login/login.component.ts:18\n                        \n                    \n\n            \n                \n                    The password input html element.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {ViewChild, Component, OnInit, ElementRef} from \"@angular/core\";\nimport {NgForm} from \"@angular/forms\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\n\nimport {AuthService} from \"../auth.service\";\nimport {AuthStorageService} from \"../auth-storage.service\";\nimport PostOAuthToken400 from \"../response_types/login/PostOAuthToken400\";\nimport PostOAuthToken401 from \"../response_types/login/PostOAuthToken401\";\n\n/** Component for the login page. */\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"./login.component.html\"\n})\nexport class LoginComponent {\n\n  /** The password input html element. */\n  @ViewChild(\"passwordInput\") passwordInput!: ElementRef;\n\n  /** Has the login currently some issue. */\n  loginHasIssue: false | string = false;\n\n  /**\n   * Constructor.\n   * @param authService Service to interact with the auth server\n   * @param authStorage Service containing the tokens\n   * @param router Router for routing the user after login\n   * @param route The current route\n   */\n  constructor(\n    private authService: AuthService,\n    private authStorage: AuthStorageService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {}\n\n  /**\n   * Function to call when the user submits the login.\n   *\n   * Upon successful login the user will be routed to the main page.\n   *\n   * Upon error the error message will be shown.\n   * @param f The values of the login form\n   */\n  onSubmit(f: NgForm): void {\n    const valid = f.valid;\n    const {username, password} = f.value;\n    this.authService.login(username, password).subscribe({\n      next: response => {\n        this.authStorage.accessToken = response.access_token;\n        this.authStorage.refreshToken = response.refresh_token;\n        this.authStorage.scopes = response.scope;\n        this.authStorage.expiresIn = response.expires_in;\n        console.log(\"successfully logged in\");\n        let returnUrl = this.router.parseUrl(this.route.snapshot.queryParams[\"returnUrl\"] ?? \"\");\n        let queryParams = returnUrl.queryParams;\n        let route = returnUrl.toString().split(\"?\")[0];\n        this.router.navigate([route], {queryParams, replaceUrl: true}).catch(e => console.error(e));\n      },\n      error: errResponse => {\n        let error;\n        switch (errResponse.status) {\n          case 400:\n            error = errResponse.error as PostOAuthToken400;\n            console.error(error);\n            this.loginHasIssue = \"Kombination is nicht korrekt.\";\n            this.passwordInput?.nativeElement.select();\n            break;\n          case 401:\n            error = errResponse.error as PostOAuthToken401;\n            console.error(error);\n            throw errResponse;\n          default:\n            throw errResponse;\n        }\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n        \n          \n            WISdoM OSS\n            \n              \n                {{\"core.login.username\" | translate}}\n                \n                  \n                  \n                    \n                  \n                  \n                    \n                  \n                \n              \n              \n                {{\"core.login.password\" | translate}}\n                \n                  \n                  \n                    \n                  \n                  \n                    \n                  \n                \n              \n              \n                {{\"core.login.forgotPassword\" | translate}}\n              \n              \n                {{loginHasIssue}}\n              \n              \n                \n                  \n                    {{\"core.login.login\" | translate}}\n                  \n                \n              \n            \n          \n        \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                  WISdoM OSS                                          {{\"core.login.username\" | translate}}                                                                                                                                                                                                              {{\"core.login.password\" | translate}}                                                                                                                                                                                                              {{\"core.login.forgotPassword\" | translate}}                                            {{loginHasIssue}}                                                                                  {{\"core.login.login\" | translate}}                                                                                                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BimComponent', 'selector': 'bim'},{'name': 'BreadcrumbsComponent', 'selector': 'breadcrumbs'},{'name': 'ConsumerDetailComponent', 'selector': 'lib-consumer-detail'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'ExampleComponent', 'selector': ''},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IonIconComponent', 'selector': 'ion-icon'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'map'},{'name': 'MapSelectViewComponent', 'selector': 'lib-map-select-view'},{'name': 'PumpModelComponent', 'selector': ''},{'name': 'ResultDataViewComponent', 'selector': 'lib-result-data-view'},{'name': 'SideBarComponent', 'selector': 'app-side-bar'},{'name': 'WaterRightDetailComponent', 'selector': 'lib-water-right-detail'}];\n    var DIRECTIVES = [{'name': 'BulmaIsToggleableDirective', 'selector': '.is-toggleable'},{'name': 'LangSelectorDirective', 'selector': '[selectLang]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MapComponent.html":{"url":"components/MapComponent.html","title":"component - MapComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MapComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    wisdom_modules/common/src/lib/map/map.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for displaying maps.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                map\n            \n\n            \n                styleUrls\n                ./map.component.css\n            \n\n\n            \n                template\n                \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                center\n                            \n                            \n                                height\n                            \n                            \n                                    Private\n                                layerConfig\n                            \n                            \n                                    Private\n                                layerData\n                            \n                            \n                                    Private\n                                layerNames\n                            \n                            \n                                    Optional\n                                map\n                            \n                            \n                                    Private\n                                mapElement\n                            \n                            \n                                    Private\n                                markers\n                            \n                            \n                                    Private\n                                    Optional\n                                selectedGeoJsonLayer\n                            \n                            \n                                    Private\n                                    Optional\n                                selectedLayer\n                            \n                            \n                                    Private\n                                selectedShapes\n                            \n                            \n                                tileUrl\n                            \n                            \n                                zoom\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                emitSelection\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                center\n                            \n                            \n                                height\n                            \n                            \n                                layers\n                            \n                            \n                                layerSelectable\n                            \n                            \n                                markers\n                            \n                            \n                                scrollWheelZoom\n                            \n                            \n                                selectedColor\n                            \n                            \n                                tileUrl\n                            \n                            \n                                unselectedColor\n                            \n                            \n                                zoom\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    inputLayers\n                                \n                                \n                                    inputMarkers\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: MapService, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/common/src/lib/map/map.component.ts:179\n                            \n                        \n\n                \n                    \n                            Constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        MapService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to interact with the server for geo data\n\n                                                        \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Translation service to update resolution names\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        center\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/map/map.component.ts:61\n                            \n                        \n                \n                    \n                        Input for the center coordinates of the map.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/map/map.component.ts:51\n                            \n                        \n                \n                    \n                        Input for the height of the map.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        layers\n                    \n                \n                \n                    \n                        Type :         LayerConfig\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/map/map.component.ts:125\n                            \n                        \n                \n                    \n                        Input for the layers that should be displayed.\nThe key of the record is layer key and is also emitted on the selection.\nThe value of the record is an array and the values of that should be the\nfollowing:\n\n  \n    The name of the layer, this will be only used to display a name of\n    the layer (may also be a translation key).\n  \n  \n    This should be the resolution to display the layer at, this may also\nbe\n    null to display the keys directly without any shape intersection\n    resolving.\n  \n  \n    These should be the keys used to display the shapes from.\n    If the given keys are empty or null, this will display everything from\n    the give resolution.\n  \n\n\nAttention: The service needs at least one of the resolution or the\nkeys\nto properly respond.\n```html\n// TODO: update link when geo data docs update\nSee https://wisdom04.vlba.uni-oldenburg.de/repos/service-geo-data-rest/main/api/get-layer\n```\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        layerSelectable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/map/map.component.ts:147\n                            \n                        \n                \n                    \n                        Should the layers be selectable.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        markers\n                    \n                \n                \n                    \n                        Type :         Marker[]\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/map/map.component.ts:150\n                            \n                        \n                \n                    \n                        Markers that should be displayed on the map.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        scrollWheelZoom\n                    \n                \n                \n                    \n                        Type :     boolean | \"center\"\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/map/map.component.ts:74\n                            \n                        \n                \n                    \n                        Input for the option if the map should scroll zoom on mouse scroll.\nIf \"center\" is passed, the map will always zoom onto the center.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedColor\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"#d35a0c\"\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/map/map.component.ts:79\n                            \n                        \n                \n                    \n                        Input for a hex code selected shapes.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        tileUrl\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/map/map.component.ts:56\n                            \n                        \n                \n                    \n                        Input for the tile url of the map.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        unselectedColor\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"#1f5aec\"\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/map/map.component.ts:77\n                            \n                        \n                \n                    \n                        Input for a hex code for unselected shapes.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        zoom\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/map/map.component.ts:66\n                            \n                        \n                \n                    \n                        Input for the map zoom level.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/map/map.component.ts:175\n                            \n                        \n                \n                    \n                        Outputs the currently selected shapes.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        emitSelection\n                        \n                    \n                \n            \n            \n                \n                    \n                    emitSelection()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/common/src/lib/map/map.component.ts:372\n                \n            \n\n\n            \n                \n                    Internally used function to emit the currently selected shapes via the\nselected output.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/common/src/lib/map/map.component.ts:224\n                \n            \n\n\n            \n                \n                    Renders the map with the given input values.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/common/src/lib/map/map.component.ts:194\n                \n            \n\n\n            \n                \n                    While init this sets the input values to the inner, private values.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        center\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"53.1434501, 8.2145521\"\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/map/map.component.ts:63\n                        \n                    \n\n            \n                \n                    Center of the map, defaults to longitude and latitude of Oldenburg.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"500px\"\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/map/map.component.ts:53\n                        \n                    \n\n            \n                \n                    Height of map, defaults to 500px.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        layerConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject({})\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/map/map.component.ts:133\n                        \n                    \n\n            \n                \n                    Subject of the LayerConfig, to be used as\nObservable.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        layerData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject>\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject({})\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/map/map.component.ts:139\n                        \n                    \n\n            \n                \n                    Subject of the pairs of Layerkey and LayerData,\nto be used as Observable.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        layerNames\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Record\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/map/map.component.ts:144\n                        \n                    \n\n            \n                \n                    Subject of the layer names mapped by the LayerKey.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        map\n                        \n                    \n                \n            \n                \n                    \n                        Type :     L.Map\n\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/map/map.component.ts:157\n                        \n                    \n\n            \n                \n                    The leaflet map that is displayed here.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        mapElement\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('map')\n                        \n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/map/map.component.ts:48\n                        \n                    \n\n            \n                \n                    The ref to the map html element.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        markers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/map/map.component.ts:154\n                        \n                    \n\n            \n                \n                    Markers Subject to be used as Observable.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        selectedGeoJsonLayer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     L.Layer\n\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/map/map.component.ts:172\n                        \n                    \n\n            \n                \n                    The currently selected geo json layer.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        selectedLayer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LayerKey\n\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/map/map.component.ts:170\n                        \n                    \n\n            \n                \n                    The currently selected layer in the map control.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        selectedShapes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Record>\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/map/map.component.ts:164\n                        \n                    \n\n            \n                \n                    Internally holds all elements that are currently selected.\nThe set holds all keys of shapes currently selected.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tileUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"https://tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/map/map.component.ts:58\n                        \n                    \n\n            \n                \n                    Tile url of the map, defaults to the osm.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        zoom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 7\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/map/map.component.ts:68\n                        \n                    \n\n            \n                \n                    Zoom level of the map, defaults to 7.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        inputLayers\n                    \n                \n\n\n                \n                    \n                        setinputLayers(layerConfig: LayerConfig)\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/common/src/lib/map/map.component.ts:125\n                                \n                            \n                    \n                        \n                                Input for the layers that should be displayed.\nThe key of the record is layer key and is also emitted on the selection.\nThe value of the record is an array and the values of that should be the\nfollowing:\n\n  \n    The name of the layer, this will be only used to display a name of\n    the layer (may also be a translation key).\n  \n  \n    This should be the resolution to display the layer at, this may also\nbe\n    null to display the keys directly without any shape intersection\n    resolving.\n  \n  \n    These should be the keys used to display the shapes from.\n    If the given keys are empty or null, this will display everything from\n    the give resolution.\n  \n\n\nAttention: The service needs at least one of the resolution or the\nkeys\nto properly respond.\n```html\n// TODO: update link when geo data docs update\nSee https://wisdom04.vlba.uni-oldenburg.de/repos/service-geo-data-rest/main/api/get-layer\n```\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            layerConfig\n                                                    \n                                                            \n                                                                            LayerConfig\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                        Example :\n                                            \n                                                &lt;map\n  height=&quot;70vh&quot;\n  [layers]=&quot;{\n    full_res: [&#39;All of municipal resolution&#39;, Resolution.MUNICIPAL, null],\n    only_keys: [&#39;Only show exactly these&#39;, null, [&#39;01&#39;, &#39;034030000000&#39;]],\n    mixed: [&#39;Show district resolution&#39;, Resolution.DISTRICT, [&#39;01&#39;,\n  &#39;034030000000&#39;]]\n  }&quot;\n&gt;&lt;/map&gt;\n\n// TODO: update link when geo data docs update\n                                            \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        inputMarkers\n                    \n                \n\n\n                \n                    \n                        setinputMarkers(markers: Marker[])\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/common/src/lib/map/map.component.ts:150\n                                \n                            \n                    \n                        \n                                Markers that should be displayed on the map.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            markers\n                                                    \n                                                            \n                                                                            Marker[]\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n  ViewChild,\n  Component,\n  EventEmitter,\n  OnInit,\n  AfterViewInit,\n  Input,\n  Output,\n  ElementRef\n} from \"@angular/core\";\nimport {BehaviorSubject, firstValueFrom, Subject} from \"rxjs\";\n\nimport * as L from \"leaflet\";\n\nimport {MapService} from \"./map.service\";\nimport LayerData from \"./layer-data\";\nimport {Resolution} from \"./resolution\";\nimport {Marker} from \"./marker\";\n\nimport * as LX from \"./invert-selection\";\n\nimport \"leaflet.markercluster\";\nimport {TranslateService} from \"@ngx-translate/core\";\n\n/** Type alias to enforce the meaning of the layer keys. */\ntype LayerKey = string;\n\n/** A layer config for the input of {@link MapComponent.inputLayers}. */\ntype LayerConfig = Record;\n\n/**\n * Component for displaying maps.\n */\n@Component({\n  selector: \"map\",\n  template: `\n    \n      \n    \n  `,\n  styleUrls: [\n    \"./map.component.css\"\n  ]\n})\nexport class MapComponent implements OnInit, AfterViewInit {\n\n  /** The ref to the map html element. */\n  @ViewChild(\"map\") private mapElement!: ElementRef;\n\n  /** Input for the height of the map. */\n  @Input(\"height\") inputHeight?: string;\n  /** Height of map, defaults to 500px. */\n  height = \"500px\";\n\n  /** Input for the tile url of the map. */\n  @Input(\"tileUrl\") inputTileUrl?: string;\n  /** Tile url of the map, defaults to the osm. */\n  tileUrl = \"https://tile.openstreetmap.org/{z}/{x}/{y}.png\";\n\n  /** Input for the center coordinates of the map. */\n  @Input(\"center\") inputCenter?: string;\n  /** Center of the map, defaults to longitude and latitude of Oldenburg. */\n  center = \"53.1434501, 8.2145521\";\n\n  /** Input for the map zoom level. */\n  @Input(\"zoom\") inputZoom?: string;\n  /** Zoom level of the map, defaults to 7. */\n  zoom = 7;\n\n  /**\n   * Input for the option if the map should scroll zoom on mouse scroll.\n   * If \"center\" is passed, the map will always zoom onto the center.\n   */\n  @Input(\"scrollWheelZoom\") inputScrollWheelZoom: boolean | \"center\" = true;\n\n  /** Input for a hex code for unselected shapes. */\n  @Input(\"unselectedColor\") unselectedColor = \"#1f5aec\";\n  /** Input for a hex code selected shapes. */\n  @Input(\"selectedColor\") selectedColor = \"#d35a0c\";\n\n  /**\n   * Input for the layers that should be displayed.\n   *\n   * The key of the record is layer key and is also emitted on the selection.\n   * The value of the record is an array and the values of that should be the\n   * following:\n   * \n   *   \n   *     The name of the layer, this will be only used to display a name of\n   *     the layer (may also be a translation key).\n   *   \n   *   \n   *     This should be the resolution to display the layer at, this may also\n   * be\n   *     null to display the keys directly without any shape intersection\n   *     resolving.\n   *   \n   *   \n   *     These should be the keys used to display the shapes from.\n   *     If the given keys are empty or null, this will display everything from\n   *     the give resolution.\n   *   \n   * \n   *\n   * **Attention**: The service needs at least one of the resolution or the\n   * keys\n   * to properly respond.\n   *\n   * @example\n   * ```html\n   * \n   * ```\n   * // TODO: update link when geo data docs update\n   * @see https://wisdom04.vlba.uni-oldenburg.de/repos/service-geo-data-rest/main/api/get-layer\n   */\n  @Input(\"layers\")\n  set inputLayers(layerConfig: LayerConfig) {\n    this.layerConfig.next(layerConfig);\n  };\n  /**\n   * {@link Subject} of the {@link LayerConfig}, to be used as\n   * {@link Observable}.\n   * @private\n   */\n  private layerConfig: BehaviorSubject = new BehaviorSubject({});\n  /**\n   * {@link Subject} of the pairs of {@link Layerkey} and {@link LayerData},\n   * to be used as {@link Observable}.\n   * @private\n   */\n  private layerData: BehaviorSubject> = new BehaviorSubject({});\n  /**\n   * {@link Subject} of the layer names mapped by the {@link LayerKey}.\n   * @private\n   */\n  private layerNames: Record = {};\n\n  /** Should the layers be selectable. */\n  @Input(\"layerSelectable\") inputLayerSelectable: boolean = true;\n\n  /** Markers that should be displayed on the map. */\n  @Input(\"markers\") set inputMarkers(markers: Marker[]) {\n    this.markers.next(markers);\n  };\n  /** {@link Marker}s {@link Subject} to be used as {@link Observable}. */\n  private markers = new BehaviorSubject([]);\n\n  /** The leaflet map that is displayed here. */\n  map?: L.Map;\n\n  /**\n   * Internally holds all elements that are currently selected.\n   *\n   * The set holds all keys of shapes currently selected.\n   */\n  private selectedShapes: Record> = {};\n\n  /**\n   * The currently selected layer in the map control.\n   * @private\n   */\n  private selectedLayer?: LayerKey;\n  /** The currently selected geo json layer. */\n  private selectedGeoJsonLayer?: L.Layer;\n\n  /** Outputs the currently selected shapes. */\n  @Output() selected = new EventEmitter();\n\n  /**\n   * Constructor.\n   * @param service Service to interact with the server for geo data\n   * @param translate Translation service to update resolution names\n   */\n  constructor(\n    private service: MapService,\n    private translate: TranslateService\n  ) {}\n\n  /**\n   * While init this sets the input values to the inner, private values.\n   */\n  ngOnInit(): void {\n    if (this.inputHeight) this.height = this.inputHeight;\n    if (this.inputTileUrl) this.tileUrl = this.inputTileUrl;\n    if (this.inputCenter) this.center = this.inputCenter;\n    if (this.inputZoom) this.zoom = parseInt(this.inputZoom);\n\n    this.layerConfig.subscribe(async config => {\n      let layerData = {};\n      let requests: Record> = {};\n      for (\n        let [layerKey, [displayName, resolution, keys]]\n        of Object.entries(config)\n      ) {\n        this.layerNames[layerKey] = displayName;\n        requests[layerKey] = this.service.fetchLayerData(\n          resolution,\n          keys?.map(k => k.split(\" \").join(\"\"))\n        );\n      }\n      let fetched: Record = {};\n      for (let [layerKey, data] of Object.entries(requests)) {\n        fetched[layerKey] = await data;\n      }\n      this.layerData.next(fetched);\n    });\n  }\n\n  /**\n   * Renders the map with the given input values.\n   */\n  ngAfterViewInit(): void {\n    const nativeMapElement = this.mapElement.nativeElement;\n\n    const map = L.map(nativeMapElement, {\n      scrollWheelZoom: this.inputScrollWheelZoom,\n      center: this.center\n        .split(\", \")\n        .map(str => parseFloat(str)) as [number, number],\n      zoom: this.zoom\n    });\n    map.getRenderer(map as any).options.padding = 100;\n\n    L.tileLayer(this.tileUrl).addTo(map);\n\n    this.map = map;\n    let layersControl: L.Control.Layers;\n    // TODO: make a clear type from this\n    let invertSelectionControl: any;\n\n    this.layerData.subscribe(async layerData => {\n      let displayLayer = true;\n\n      // reset selected data\n      this.selectedShapes = {};\n\n      if (layersControl) map.removeControl(layersControl);\n      layersControl = L.control.layers();\n      // layer index to allow sorting by it\n      // this allows updating the names without having to worry about layer\n      // shuffling\n      let layerIndex = 0;\n      layersControl.options.sortLayers = true;\n      layersControl.options.sortFunction = (layerA, layerB) => {\n        // @ts-ignore these orders are injected here to allow fixed ordering\n        return layerA.options.order - layerB.options.order;\n      }\n      let layers: L.Layer[] = [];\n\n      if (this.selectedGeoJsonLayer) map.removeLayer(this.selectedGeoJsonLayer);\n\n      // update map with new layer data\n      for (let [key, data] of Object.entries(layerData)) {\n        let selectedShapes = this.selectedShapes[key] = new Set();\n        // use for every layer a new geoJSON layer\n        let geoJsonLayer = L.geoJSON(undefined, {\n          // @ts-ignore insert order here to allow fixed ordering when updating\n          // translation\n          order: layerIndex++,\n          attribution: `\n            \n              📐 © GeoBasis-DE / BKG 2022\n            \n            |\n            \n              🔖 dl-de/by-2-0\n            \n          `,\n          style: {color: this.unselectedColor},\n          onEachFeature: (feature, layer) => {\n            // used properties are injected later into the feature\n            layer.bindTooltip(feature.properties.name, {direction: \"center\"});\n            if (this.inputLayerSelectable) {\n              layer.on(\"click\", () => {\n                let [key, path] = [feature.properties.key, layer as L.Path];\n                if (selectedShapes.has(key)) {\n                  path.setStyle({color: this.unselectedColor});\n                  path.bringToBack();\n                  selectedShapes.delete(key);\n                }\n                else {\n                  path.setStyle({color: this.selectedColor});\n                  path.bringToFront();\n                  selectedShapes.add(key);\n                }\n                this.emitSelection();\n              });\n            }\n            layers.push(layer);\n          }\n        });\n        for (let shape of data.shapes) {\n          geoJsonLayer.addData(Object.assign(shape.geoJson, {properties: {\n            name: shape.name,\n            key: shape.key\n          }}));\n          if (displayLayer) {\n            geoJsonLayer.addTo(map);\n            displayLayer = false;\n            this.selectedLayer = key;\n            this.selectedGeoJsonLayer = geoJsonLayer;\n            map.fitBounds([\n              data.box[0],\n              data.box[2]\n            ]);\n          }\n        }\n        this.translate.onLangChange.subscribe(() => {\n          layersControl.removeLayer(geoJsonLayer);\n          layersControl.addBaseLayer(\n            geoJsonLayer,\n            this.translate.instant(this.layerNames[key])\n          );\n        });\n        let layerName = await firstValueFrom(\n          this.translate.get(this.layerNames[key])\n        );\n        layersControl.addBaseLayer(geoJsonLayer, layerName);\n        map.on(\"baselayerchange\", ({layer}) => {\n          if (layer == geoJsonLayer) {\n            this.selectedGeoJsonLayer = layer;\n            this.selectedLayer = key;\n            this.emitSelection();\n          }\n        })\n      }\n      if (Object.keys(layerData).length > 1) layersControl.addTo(map);\n\n      if (this.inputLayerSelectable) {\n        if (invertSelectionControl) map.removeControl(invertSelectionControl);\n        invertSelectionControl = LX.control.invertSelection(() => {\n          for (let layer of layers) {\n            layer.fire(\"click\");\n          }\n        });\n        invertSelectionControl.addTo(map);\n      }\n    });\n\n    let markerLayer = L.markerClusterGroup();\n    this.markers.subscribe(markers => {\n      markerLayer.removeFrom(map);\n      markerLayer = L.markerClusterGroup();\n      for (let marker of markers) {\n        let lMarker = L.marker(marker.coordinates);\n        if (marker.icon) lMarker.setIcon(marker.icon);\n        if (marker.tooltip) lMarker.bindTooltip(marker.tooltip);\n        if (marker.onClick) lMarker.on(\"click\", marker.onClick)\n        lMarker.addTo(markerLayer);\n      }\n      markerLayer.addTo(map);\n    });\n  }\n\n  /**\n   * Internally used function to emit the currently selected shapes via the\n   * {@link selected} output.\n   * @private\n   */\n  private emitSelection(): void {\n    let layerKey = this.selectedLayer!;\n    let layerName = this.layerNames[layerKey]!;\n    let keys = Array.from(this.selectedShapes[layerKey]);\n    this.selected.emit({\n      layer: layerKey,\n      name: layerName,\n      keys\n    });\n  }\n}\n\n    \n\n\n    \n                \n                    ./map.component.css\n                \n                .map-container {}\n\n.map {\n  height: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BimComponent', 'selector': 'bim'},{'name': 'BreadcrumbsComponent', 'selector': 'breadcrumbs'},{'name': 'ConsumerDetailComponent', 'selector': 'lib-consumer-detail'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'ExampleComponent', 'selector': ''},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IonIconComponent', 'selector': 'ion-icon'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'map'},{'name': 'MapSelectViewComponent', 'selector': 'lib-map-select-view'},{'name': 'PumpModelComponent', 'selector': ''},{'name': 'ResultDataViewComponent', 'selector': 'lib-result-data-view'},{'name': 'SideBarComponent', 'selector': 'app-side-bar'},{'name': 'WaterRightDetailComponent', 'selector': 'lib-water-right-detail'}];\n    var DIRECTIVES = [{'name': 'BulmaIsToggleableDirective', 'selector': '.is-toggleable'},{'name': 'LangSelectorDirective', 'selector': '[selectLang]'}];\n    var ACTUAL_COMPONENT = {'name': 'MapComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MapDB.html":{"url":"interfaces/MapDB.html","title":"interface - MapDB","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MapDB\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/common/src/lib/map/map.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The schema the map db uses.\n\n            \n\n            \n                Extends\n            \n            \n                    DBSchema\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            queries\n                                        \n                                \n                                \n                                        \n                                            shapes\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        queries\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        queries:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    All cached queries, used to identify if a query is already in the db.\nThe key[0] represents the resolution of the query, a -1 represents no\nresolution.\nThe rest are the given keys.\nThe value is an array of all the keys the query returned.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shapes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        shapes:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    All shapes in the indexed db.\nThe key is the key of the shape.\nThe value is some ShapeData.\nSince LayerData is simply an array of ShapeData, this may\nbe used to reconstruct some layer data.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  HttpClient,\n  HttpContext,\n  HttpHeaders,\n  HttpParams\n} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\nimport {openDB, DBSchema} from \"idb\";\nimport {Layer} from \"leaflet\";\nimport {firstValueFrom} from \"rxjs\";\n\nimport {Resolution} from \"./resolution\";\nimport {LayerData, ShapeData} from \"./layer-data\";\nimport {USE_API_URL} from \"../http-context/use-api-url\";\nimport {USE_LOADER} from \"../http-context/use-loader\";\n\n/** API url for the map to request data from. */\nconst API_URL = \"geodata\";\n/** Indexed DB name. */\nconst DB_NAME = \"map-db\";\n/** Indexed DB schema version. */\nconst SCHEMA_V = 2;\n\n/** The schema the map db uses. */\ninterface MapDB extends DBSchema {\n  /**\n   * All cached queries, used to identify if a query is already in the db.\n   *\n   * The key[0] represents the resolution of the query, a -1 represents no\n   * resolution.\n   * The rest are the given keys.\n   *\n   * The value is an array of all the keys the query returned.\n   */\n  queries: {\n    key: [number, ...string[]],\n    value: {\n      box: LayerData[\"box\"],\n      shapes: string[]\n    }\n  },\n\n  /**\n   * All shapes in the indexed db.\n   *\n   * The key is the key of the shape.\n   *\n   * The value is some {@link ShapeData}.\n   * Since {@link LayerData} is simply an array of {@link ShapeData}, this may\n   * be used to reconstruct some layer data.\n   */\n  shapes: {\n    key: string,\n    value: ShapeData\n  }\n}\n\n/**\n * Service to interact with the geo data api to fetch map data.\n *\n * Fetched map data is cached in the indexedDB and therefore only retrieved\n * lazily.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MapService {\n\n  /** Indexed DB client. */\n  private readonly idb;\n\n  /**\n   * Constructor.\n   * @param http Client to request geo data\n   */\n  constructor(private http: HttpClient) {\n    this.idb = openDB(DB_NAME, SCHEMA_V, {\n      upgrade(db, oldV) {\n        if (oldV) {\n          db.deleteObjectStore(\"queries\");\n          db.deleteObjectStore(\"shapes\");\n        }\n        db.createObjectStore(\"queries\");\n        db.createObjectStore(\"shapes\");\n      }\n    });\n  }\n\n  /**\n   * Asynchronously fetch the map from the geo data rest api.\n   *\n   * Will only fetch data if not already stored in the indexedDB.\n   * @param resolution The resolution the of the shapes returned by the service\n   * @param keys The keys given to look for shapes\n   * @param force If true, this will ignore the cache and request everything\n   */\n  async fetchLayerData(\n    resolution: Resolution | null | undefined,\n    keys?: string[] | null,\n    force: boolean = false\n  ): Promise {\n    // prepare db and keys\n    let idb = await this.idb;\n    let trimmedKeys = keys ?? [];\n    let resolutionNum = resolution ? Resolution.toKeyLength(resolution) : -1;\n    let queryKey = [resolutionNum, ...trimmedKeys] as [number, ...string[]];\n\n    // check for cached keys or ignore if is force is true\n    let cachedQuery = force ? undefined : await idb.get(\"queries\", queryKey);\n    if (cachedQuery) {\n      let tx = idb.transaction(\"shapes\", \"readonly\");\n      let store = tx.objectStore(\"shapes\");\n      let shapes: ShapeData[] = [];\n      let operations = [];\n      for (let key of cachedQuery.shapes) {\n        operations.push(store.get(key).then(shape => {\n          if (shape) shapes.push(shape);\n        }));\n      }\n      operations.push(tx.done);\n      await Promise.all(operations);\n      return {\n        box: cachedQuery.box,\n        shapes\n      };\n    }\n\n    // if cachedKeys was empty, request data from the server\n    let params = new HttpParams();\n    if (resolution) params = params.set(\"resolution\", resolution);\n    if (keys && keys.length) params = params.appendAll({key: keys.map(k => {\n      if (resolution) return k.substring(0, resolutionNum);\n      return k;\n    })});\n\n    let rawLayerData = await firstValueFrom(this.http.get(`${API_URL}/`, {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\"\n      }),\n      params,\n      responseType: \"json\",\n      context: new HttpContext()\n        .set(USE_API_URL, true)\n        .set(USE_LOADER, true)\n    }));\n\n    rawLayerData.shapes = rawLayerData.shapes.map(rawShape => ({\n      nutsKey: rawShape.nuts_key,\n      geoJson: rawShape.geojson,\n      ...rawShape\n    }));\n\n    let layerData = rawLayerData as unknown as LayerData;\n\n    // store the requested data back into the db\n    let tx = idb.transaction([\"queries\", \"shapes\"], \"readwrite\");\n    let operations = [];\n    let shapeStore = tx.objectStore(\"shapes\");\n    let shapeKeys = [];\n    for (let shape of layerData.shapes) {\n      operations.push(shapeStore.put(shape, shape.key));\n      shapeKeys.push(shape.key);\n    }\n    let queryStore = tx.objectStore(\"queries\");\n    operations.push(queryStore.put({\n      box: layerData.box,\n      shapes: shapeKeys\n    }, queryKey));\n    await Promise.all(operations);\n\n    return layerData;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MapSelectViewComponent.html":{"url":"components/MapSelectViewComponent.html","title":"component - MapSelectViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MapSelectViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    wisdom_modules/water-usage-forecasts/src/lib/views/map-select-view/map-select-view.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-map-select-view\n            \n\n\n\n\n            \n                templateUrl\n                ./map-select-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                keys\n                            \n                            \n                                Resolution\n                            \n                            \n                                selectionReady\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                mapSelection\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(breadcrumbs: BreadcrumbsService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/map-select-view/map-select-view.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        breadcrumbs\n                                                  \n                                                        \n                                                                        BreadcrumbsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        mapSelection\n                        \n                    \n                \n            \n            \n                \nmapSelection(selection: literal type)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/water-usage-forecasts/src/lib/views/map-select-view/map-select-view.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    selection\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/water-usage-forecasts/src/lib/views/map-select-view/map-select-view.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        keys\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/map-select-view/map-select-view.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Resolution\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Resolution\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/map-select-view/map-select-view.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectionReady\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/map-select-view/map-select-view.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from \"@angular/core\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {Resolution, BreadcrumbsService} from \"common\";\n\n@Component({\n  selector: 'lib-map-select-view',\n  templateUrl: './map-select-view.component.html'\n})\nexport class MapSelectViewComponent implements OnInit {\n\n  // imported resolution from the map component\n  Resolution = Resolution;\n\n  keys?: string[];\n\n  selectionReady = false;\n\n  constructor(\n    private breadcrumbs: BreadcrumbsService,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit(): void {\n    this.breadcrumbs.set(0, {\n      icon: \"calendar\",\n      text: \"water-usage-forecasts.breadcrumbs.water-consumption-prognosis\",\n      link: \"/water-usage-forecasts\"\n    })\n  }\n\n  mapSelection(\n    selection: {keys: string[]}\n  ) {\n    this.keys = selection.keys;\n    this.selectionReady = !!selection.keys.length;\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n  \n\n\n  \n    \n      \n        \n      \n      water-usage-forecasts.map-select.get-results\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        water-usage-forecasts.map-select.get-results      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BimComponent', 'selector': 'bim'},{'name': 'BreadcrumbsComponent', 'selector': 'breadcrumbs'},{'name': 'ConsumerDetailComponent', 'selector': 'lib-consumer-detail'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'ExampleComponent', 'selector': ''},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IonIconComponent', 'selector': 'ion-icon'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'map'},{'name': 'MapSelectViewComponent', 'selector': 'lib-map-select-view'},{'name': 'PumpModelComponent', 'selector': ''},{'name': 'ResultDataViewComponent', 'selector': 'lib-result-data-view'},{'name': 'SideBarComponent', 'selector': 'app-side-bar'},{'name': 'WaterRightDetailComponent', 'selector': 'lib-water-right-detail'}];\n    var DIRECTIVES = [{'name': 'BulmaIsToggleableDirective', 'selector': '.is-toggleable'},{'name': 'LangSelectorDirective', 'selector': '[selectLang]'}];\n    var ACTUAL_COMPONENT = {'name': 'MapSelectViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MapService.html":{"url":"injectables/MapService.html","title":"injectable - MapService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MapService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/common/src/lib/map/map.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service to interact with the geo data api to fetch map data.\nFetched map data is cached in the indexedDB and therefore only retrieved\nlazily.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                idb\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                fetchLayerData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/common/src/lib/map/map.service.ts:70\n                            \n                        \n\n                \n                    \n                            Constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Client to request geo data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        fetchLayerData\n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchLayerData(resolution: Resolution | null | undefined, keys?: string[] | null, force: boolean)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/common/src/lib/map/map.service.ts:97\n                \n            \n\n\n            \n                \n                    Asynchronously fetch the map from the geo data rest api.\nWill only fetch data if not already stored in the indexedDB.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    resolution\n                                    \n                                                Resolution | null | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The resolution the of the shapes returned by the service\n\n                                    \n                                \n                                \n                                    keys\n                                    \n                                            string[] | null\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The keys given to look for shapes\n\n                                    \n                                \n                                \n                                    force\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                    \n                                        If true, this will ignore the cache and request everything\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        idb\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/map/map.service.ts:70\n                        \n                    \n\n            \n                \n                    Indexed DB client.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpClient,\n  HttpContext,\n  HttpHeaders,\n  HttpParams\n} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\nimport {openDB, DBSchema} from \"idb\";\nimport {Layer} from \"leaflet\";\nimport {firstValueFrom} from \"rxjs\";\n\nimport {Resolution} from \"./resolution\";\nimport {LayerData, ShapeData} from \"./layer-data\";\nimport {USE_API_URL} from \"../http-context/use-api-url\";\nimport {USE_LOADER} from \"../http-context/use-loader\";\n\n/** API url for the map to request data from. */\nconst API_URL = \"geodata\";\n/** Indexed DB name. */\nconst DB_NAME = \"map-db\";\n/** Indexed DB schema version. */\nconst SCHEMA_V = 2;\n\n/** The schema the map db uses. */\ninterface MapDB extends DBSchema {\n  /**\n   * All cached queries, used to identify if a query is already in the db.\n   *\n   * The key[0] represents the resolution of the query, a -1 represents no\n   * resolution.\n   * The rest are the given keys.\n   *\n   * The value is an array of all the keys the query returned.\n   */\n  queries: {\n    key: [number, ...string[]],\n    value: {\n      box: LayerData[\"box\"],\n      shapes: string[]\n    }\n  },\n\n  /**\n   * All shapes in the indexed db.\n   *\n   * The key is the key of the shape.\n   *\n   * The value is some {@link ShapeData}.\n   * Since {@link LayerData} is simply an array of {@link ShapeData}, this may\n   * be used to reconstruct some layer data.\n   */\n  shapes: {\n    key: string,\n    value: ShapeData\n  }\n}\n\n/**\n * Service to interact with the geo data api to fetch map data.\n *\n * Fetched map data is cached in the indexedDB and therefore only retrieved\n * lazily.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MapService {\n\n  /** Indexed DB client. */\n  private readonly idb;\n\n  /**\n   * Constructor.\n   * @param http Client to request geo data\n   */\n  constructor(private http: HttpClient) {\n    this.idb = openDB(DB_NAME, SCHEMA_V, {\n      upgrade(db, oldV) {\n        if (oldV) {\n          db.deleteObjectStore(\"queries\");\n          db.deleteObjectStore(\"shapes\");\n        }\n        db.createObjectStore(\"queries\");\n        db.createObjectStore(\"shapes\");\n      }\n    });\n  }\n\n  /**\n   * Asynchronously fetch the map from the geo data rest api.\n   *\n   * Will only fetch data if not already stored in the indexedDB.\n   * @param resolution The resolution the of the shapes returned by the service\n   * @param keys The keys given to look for shapes\n   * @param force If true, this will ignore the cache and request everything\n   */\n  async fetchLayerData(\n    resolution: Resolution | null | undefined,\n    keys?: string[] | null,\n    force: boolean = false\n  ): Promise {\n    // prepare db and keys\n    let idb = await this.idb;\n    let trimmedKeys = keys ?? [];\n    let resolutionNum = resolution ? Resolution.toKeyLength(resolution) : -1;\n    let queryKey = [resolutionNum, ...trimmedKeys] as [number, ...string[]];\n\n    // check for cached keys or ignore if is force is true\n    let cachedQuery = force ? undefined : await idb.get(\"queries\", queryKey);\n    if (cachedQuery) {\n      let tx = idb.transaction(\"shapes\", \"readonly\");\n      let store = tx.objectStore(\"shapes\");\n      let shapes: ShapeData[] = [];\n      let operations = [];\n      for (let key of cachedQuery.shapes) {\n        operations.push(store.get(key).then(shape => {\n          if (shape) shapes.push(shape);\n        }));\n      }\n      operations.push(tx.done);\n      await Promise.all(operations);\n      return {\n        box: cachedQuery.box,\n        shapes\n      };\n    }\n\n    // if cachedKeys was empty, request data from the server\n    let params = new HttpParams();\n    if (resolution) params = params.set(\"resolution\", resolution);\n    if (keys && keys.length) params = params.appendAll({key: keys.map(k => {\n      if (resolution) return k.substring(0, resolutionNum);\n      return k;\n    })});\n\n    let rawLayerData = await firstValueFrom(this.http.get(`${API_URL}/`, {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\"\n      }),\n      params,\n      responseType: \"json\",\n      context: new HttpContext()\n        .set(USE_API_URL, true)\n        .set(USE_LOADER, true)\n    }));\n\n    rawLayerData.shapes = rawLayerData.shapes.map(rawShape => ({\n      nutsKey: rawShape.nuts_key,\n      geoJson: rawShape.geojson,\n      ...rawShape\n    }));\n\n    let layerData = rawLayerData as unknown as LayerData;\n\n    // store the requested data back into the db\n    let tx = idb.transaction([\"queries\", \"shapes\"], \"readwrite\");\n    let operations = [];\n    let shapeStore = tx.objectStore(\"shapes\");\n    let shapeKeys = [];\n    for (let shape of layerData.shapes) {\n      operations.push(shapeStore.put(shape, shape.key));\n      shapeKeys.push(shape.key);\n    }\n    let queryStore = tx.objectStore(\"queries\");\n    operations.push(queryStore.put({\n      box: layerData.box,\n      shapes: shapeKeys\n    }, queryKey));\n    await Promise.all(operations);\n\n    return layerData;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Marker.html":{"url":"interfaces/Marker.html","title":"interface - Marker","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Marker\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/common/src/lib/map/marker.ts\n        \n\n\n            \n                Description\n            \n            \n                Marker interface for creating custom markers on a MapComponent.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            coordinates\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            icon\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            onClick\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            tooltip\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        coordinates\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        coordinates:     [number, number]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [number, number]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Coordinates of the marker.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:     L.Icon | L.DivIcon\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     L.Icon | L.DivIcon\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional icon for the marker, if not set a default one will be used.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onClick\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        onClick:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Event handler for a click on the marker.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tooltip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tooltip:     Content |  | Tooltip\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Content |  | Tooltip\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Displayed tooltip when hovering the marker.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {Content, LeafletMouseEvent, Layer, Tooltip} from \"leaflet\";\n\nimport * as L from \"leaflet\";\n\n/** Marker interface for creating custom markers on a {@link MapComponent}. */\nexport interface Marker {\n  /** Coordinates of the marker. */\n  coordinates: [number, number],\n  /** Displayed tooltip when hovering the marker. */\n  tooltip?: Content | ((layer: Layer) => Content) | Tooltip,\n  /** Event handler for a click on the marker. */\n  onClick?: (evt: LeafletMouseEvent) => void,\n  /** Optional icon for the marker, if not set a default one will be used. */\n  icon?: L.Icon | L.DivIcon\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ModuleProvider.html":{"url":"classes/ModuleProvider.html","title":"class - ModuleProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ModuleProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/core/src/app/module-provider.ts\n        \n\n\n            \n                Description\n            \n            \n                Class to provide data from the reexported wisdom modules.\nReads its data from the workspace's \"module.ts\".\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                langs\n                            \n                            \n                                    Static\n                                routes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Private\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/core/src/app/module-provider.ts:13\n                            \n                        \n\n                \n                    \n                            This class is a pure utility class and doesn't need constructing.\n\n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        langs\n                        \n                    \n                \n            \n            \n                \n                    \n                    langs(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/module-provider.ts:40\n                \n            \n\n\n            \n                \n                    Get the translations from the wisdom modules given a language key.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The language key for the translations\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        routes\n                        \n                    \n                \n            \n            \n                \n                    \n                    routes()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/module-provider.ts:24\n                \n            \n\n\n            \n                \n                    Get the routes the wisdom modules want to be available at.\n\n\n                    \n                        Returns :         Routes\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Routes} from \"@angular/router\";\n\nimport {AuthGuard} from \"./auth/auth.guard\";\nimport {LoaderGuard} from \"./frame/loader/loader.guard\";\n\nimport * as modules from \"../../../../modules\";\n\n/**\n * Class to provide data from the reexported wisdom modules.\n *\n * Reads its data from the workspace's \"module.ts\".\n */\nexport class ModuleProvider {\n\n  /**\n   * This class is a pure utility class and doesn't need constructing.\n   * @private\n   */\n  private constructor() {}\n\n  /**\n   * Get the routes the wisdom modules want to be available at.\n   */\n  static routes(): Routes {\n    let routes: Routes = [];\n    for (let module of Object.values(modules)) {\n      let insertRoute = module.wisdomInterface.route;\n      if (!insertRoute.canActivate) insertRoute.canActivate = [];\n      // TODO: add ScopeGuard here\n      insertRoute.canActivate.push(AuthGuard, LoaderGuard);\n      routes.push(insertRoute);\n    }\n    return routes;\n  }\n\n  /**\n   * Get the translations from the wisdom modules given a language key.\n   * @param lang The language key for the translations\n   */\n  static langs(lang: string) {\n    let collectedLang = {};\n    for (let module of Object.values(modules)) {\n      let moduleLang = module.wisdomInterface.translations[lang];\n      if (moduleLang) {\n        Object.assign(collectedLang, moduleLang);\n      }\n    }\n    return collectedLang;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PumpModelComponent.html":{"url":"components/PumpModelComponent.html","title":"component - PumpModelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PumpModelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    wisdom_modules/pump-models/src/lib/pump-model.component.ts\n\n\n\n    \n        Description\n    \n    \n        Minimalistic example Component.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                templateUrl\n                pump-model.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import {Component, OnInit} from \"@angular/core\";\n\n/** Minimalistic example Component. */\n@Component({\n  templateUrl: \"pump-model.component.html\"\n})\nexport class PumpModelComponent {\n\n}\n\n    \n\n    \n        \n\n  \n    Example here\n  \n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Example here          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BimComponent', 'selector': 'bim'},{'name': 'BreadcrumbsComponent', 'selector': 'breadcrumbs'},{'name': 'ConsumerDetailComponent', 'selector': 'lib-consumer-detail'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'ExampleComponent', 'selector': ''},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IonIconComponent', 'selector': 'ion-icon'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'map'},{'name': 'MapSelectViewComponent', 'selector': 'lib-map-select-view'},{'name': 'PumpModelComponent', 'selector': ''},{'name': 'ResultDataViewComponent', 'selector': 'lib-result-data-view'},{'name': 'SideBarComponent', 'selector': 'app-side-bar'},{'name': 'WaterRightDetailComponent', 'selector': 'lib-water-right-detail'}];\n    var DIRECTIVES = [{'name': 'BulmaIsToggleableDirective', 'selector': '.is-toggleable'},{'name': 'LangSelectorDirective', 'selector': '[selectLang]'}];\n    var ACTUAL_COMPONENT = {'name': 'PumpModelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PumpModelModule.html":{"url":"modules/PumpModelModule.html","title":"module - PumpModelModule","body":"\n                   \n\n\n\n\n    Modules\n    PumpModelModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PumpModelModule\n\n\n\ncluster_PumpModelModule_declarations\n\n\n\ncluster_PumpModelModule_exports\n\n\n\ncluster_PumpModelModule_imports\n\n\n\n\nPumpModelComponent\n\nPumpModelComponent\n\n\n\nPumpModelModule\n\nPumpModelModule\n\nPumpModelModule -->\n\nPumpModelComponent->PumpModelModule\n\n\n\n\n\nPumpModelComponent \n\nPumpModelComponent \n\nPumpModelComponent  -->\n\nPumpModelModule->PumpModelComponent \n\n\n\n\n\nWisdomModule\n\nWisdomModule\n\nPumpModelModule -->\n\nWisdomModule->PumpModelModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            wisdom_modules/pump-models/src/lib/pump-model.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Minimalistic example module.\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            PumpModelComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            WisdomModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PumpModelComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from \"@angular/core\";\nimport {TranslateModule} from \"@ngx-translate/core\";\nimport {WisdomModule} from \"common\";\n\nimport {PumpModelComponent} from \"./pump-model.component\";\nimport {CommonModule} from \"@angular/common\";\n\n/** Minimalistic example module. */\n@NgModule({\n  declarations: [\n    PumpModelComponent\n  ],\n  imports: [\n    WisdomModule,\n    CommonModule,\n    TranslateModule\n  ],\n  exports: [\n    PumpModelComponent\n  ]\n})\nexport class PumpModelModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PumpModelService.html":{"url":"injectables/PumpModelService.html","title":"injectable - PumpModelService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PumpModelService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/pump-models/src/lib/pump-model.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Unused but exported service as example.\n\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\n\n/** Unused but exported service as example. */\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PumpModelService {\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/QueryParameterGuard.html":{"url":"guards/QueryParameterGuard.html","title":"guard - QueryParameterGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    QueryParameterGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                wisdom_modules/common/src/lib/guards/query-parameter.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard to check if certain query parameters are set.\nIn the data attribute of route it expects an optional redirectTo\ncontaining an Observable, a Promise or a direct\nUrlTree or a string that will be passed to Router#parseUrl\nand queryParams containing a string or an array of strings.\n\nredirect will be used when the check fails.\nqueryParams will be iterated to check for the keys\n\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/common/src/lib/guards/query-parameter.guard.ts:25\n                            \n                        \n\n                \n                    \n                            Constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router used to parse redirect entries\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/common/src/lib/guards/query-parameter.guard.ts:41\n                \n            \n\n\n            \n                \n                    Whether the route can be activated.\nFor more info check QueryParameterGuard.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Currently activated route snapshot\n\n                                    \n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Current state of the router\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {Injectable} from \"@angular/core\";\nimport {\n  CanActivate,\n  Router,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree\n} from \"@angular/router\";\nimport {Observable} from \"rxjs\";\n\n/**\n * Guard to check if certain query parameters are set.\n *\n * In the `data` attribute of route it expects an optional `redirectTo`\n * containing an {@link Observable}, a {@link Promise} or a direct\n * {@link UrlTree} or a string that will be passed to {@link Router#parseUrl}\n * and `queryParams` containing a string or an array of strings.\n *\n * - `redirect` will be used when the check fails.\n * - `queryParams` will be iterated to check for the keys\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class QueryParameterGuard implements CanActivate {\n\n  /**\n   * Constructor.\n   * @param router Router used to parse redirect entries\n   */\n  constructor(private router: Router) {}\n\n  /**\n   * Whether the route can be activated.\n   *\n   * For more info check {@link QueryParameterGuard}.\n   *\n   * @param route Currently activated route snapshot\n   * @param state Current state of the router\n   */\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean | UrlTree {\n    let redirect  = route.data[\"redirect\"] ?? false;\n    if (typeof redirect === \"string\") redirect = this.router.parseUrl(redirect);\n    for (let param of [route.data[\"queryParams\"] ?? []].flat()) {\n      if (route.queryParams[param] === undefined) return redirect;\n    }\n    return true;\n  }\n\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/SanitizeUrlInterceptor.html":{"url":"interceptors/SanitizeUrlInterceptor.html","title":"interceptor - SanitizeUrlInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  SanitizeUrlInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/core/src/app/sanitize-url.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                Interceptor to fix up weird urls.\nCurrently, this checks for too many slashes (/) and reduces them to the\ncorrect amount.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/sanitize-url.interceptor.ts:28\n                \n            \n\n\n            \n                \n                    Intercepting a request and fix it up if too many slashes (/) were\ninjected somewhere.\nThis interceptor is usually the last before the request will be sent to the\npublic.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Request to check and sanitize\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The next interceptor\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest\n} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\nimport {Observable} from \"rxjs\";\n\n/**\n * Interceptor to fix up weird urls.\n *\n * Currently, this checks for too many slashes (`/`) and reduces them to the\n * correct amount.\n */\n@Injectable()\nexport class SanitizeUrlInterceptor implements HttpInterceptor {\n\n  /**\n   * Intercepting a request and fix it up if too many slashes (`/`) were\n   * injected somewhere.\n   *\n   * This interceptor is usually the last before the request will be sent to the\n   * public.\n   * @param request Request to check and sanitize\n   * @param next The next interceptor\n   */\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n    let {url} = request;\n    let [protocol, pathWithParams] = url.split(\"://\");\n    let [path, ...query] = pathWithParams.split(\"?\");\n    path = path.replace(/\\/+/g, \"/\");\n    let newUrl = `${protocol}://${path}`;\n    if (query.length) {\n      newUrl += `?${query.join(\"?\")}`;\n    }\n    return next.handle(request.clone({\n      url: newUrl\n    }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SettingsStorageService.html":{"url":"injectables/SettingsStorageService.html","title":"injectable - SettingsStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SettingsStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/core/src/app/settings-storage.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Storage service for storing settings in the session storage.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                getBoolStorage\n                            \n                            \n                                    Private\n                                    Static\n                                getStorage\n                            \n                            \n                                    Private\n                                    Static\n                                setBoolStorage\n                            \n                            \n                                    Private\n                                    Static\n                                setStorage\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hideSidebar\n                                \n                                \n                                    hideUserBar\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        getBoolStorage\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBoolStorage(key: string)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/settings-storage.service.ts:54\n                \n            \n\n\n            \n                \n                    Internal function to get boolean session storage values.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Key of the storage item\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | null\n\n                    \n                    \n                        The stored value or null if missing\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        getStorage\n                        \n                    \n                \n            \n            \n                \n                    \n                    getStorage(key: string)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/settings-storage.service.ts:31\n                \n            \n\n\n            \n                \n                    Internal function to get session storage values.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Key of the storage item\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | null\n\n                    \n                    \n                        The stored value or null if missing\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        setBoolStorage\n                        \n                    \n                \n            \n            \n                \n                    \n                    setBoolStorage(key: string, data: boolean | null)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/settings-storage.service.ts:42\n                \n            \n\n\n            \n                \n                    Internal function to set boolean session storage values.\nStore undefined or null to clear the storage.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Key of the storage item\n\n                                    \n                                \n                                \n                                    data\n                                    \n                                            boolean | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Data to store\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        setStorage\n                        \n                    \n                \n            \n            \n                \n                    \n                    setStorage(key: string, data: string | null | undefined)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/settings-storage.service.ts:21\n                \n            \n\n\n            \n                \n                    Internal function to set session storage values.\nStore undefined or null to clear the storage.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Key of the storage item\n\n                                    \n                                \n                                \n                                    data\n                                    \n                                            string | null | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Data to store\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hideSidebar\n                    \n                \n\n                \n                    \n                        gethideSidebar()\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/settings-storage.service.ts:68\n                                \n                            \n                    \n                        \n                                Get hide sidebar setting.\n\n\n                                \n                                    Returns :     boolean | null\n\n                                \n                        \n                    \n\n                \n                    \n                        sethideSidebar(setting: boolean | null)\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/settings-storage.service.ts:64\n                                \n                            \n                    \n                        \n                                Set hide sidebar setting.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            setting\n                                                    \n                                                            \n                                                                        boolean | null\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        hideUserBar\n                    \n                \n\n                \n                    \n                        gethideUserBar()\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/settings-storage.service.ts:80\n                                \n                            \n                    \n                        \n                                Get hide user bar setting.\n\n\n                                \n                                    Returns :     boolean | null\n\n                                \n                        \n                    \n\n                \n                    \n                        sethideUserBar(setting: boolean | null)\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/settings-storage.service.ts:76\n                                \n                            \n                    \n                        \n                                Set hide user bar setting.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            setting\n                                                    \n                                                            \n                                                                        boolean | null\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\n\n/** Key for the sidebar hide setting. */\nconst HIDE_SIDEBAR_KEY = \"hide-sidebar\";\n/** key for the user bar hide setting. */\nconst HIDE_USER_BAR_KEY = \"hide-user-bar\";\n\n/** Storage service for storing settings in the session storage. */\n@Injectable({\n  providedIn: 'root'\n})\nexport class SettingsStorageService {\n\n  /**\n   * Internal function to set session storage values.\n   *\n   * Store undefined or null to clear the storage.\n   * @param key Key of the storage item\n   * @param data Data to store\n   */\n  private static setStorage(key: string, data: string | null | undefined): void {\n    if (data) globalThis.sessionStorage.setItem(key, data);\n    else globalThis.sessionStorage.removeItem(key);\n  }\n  /**\n   * Internal function to get session storage values.\n   *\n   * @param key Key of the storage item\n   * @returns The stored value or null if missing\n   */\n  private static getStorage(key: string): string | null {\n    return globalThis.sessionStorage.getItem(key);\n  }\n\n  /**\n   * Internal function to set boolean session storage values.\n   *\n   * Store undefined or null to clear the storage.\n   * @param key Key of the storage item\n   * @param data Data to store\n   */\n  private static setBoolStorage(key: string, data: boolean | null): void {\n    if (typeof data === \"boolean\") {\n      SettingsStorageService.setStorage(key, `${data}`);\n    }\n    else SettingsStorageService.setStorage(key, data);\n  }\n  /**\n   * Internal function to get boolean session storage values.\n   *\n   * @param key Key of the storage item\n   * @returns The stored value or null if missing\n   */\n  private static getBoolStorage(key: string): boolean | null {\n    let data = SettingsStorageService.getStorage(key);\n    if (!data) return null;\n    return data === \"true\";\n  }\n\n  /**\n   * Set hide sidebar setting.\n   * @param setting\n   */\n  set hideSidebar(setting: boolean | null) {\n    SettingsStorageService.setBoolStorage(HIDE_SIDEBAR_KEY, setting);\n  }\n  /** Get hide sidebar setting. */\n  get hideSidebar(): boolean | null {\n    return SettingsStorageService.getBoolStorage(HIDE_SIDEBAR_KEY);\n  }\n\n  /**\n   * Set hide user bar setting.\n   * @param setting\n   */\n  set hideUserBar(setting: boolean | null) {\n    SettingsStorageService.setBoolStorage(HIDE_USER_BAR_KEY, setting);\n  }\n  /** Get hide user bar setting. */\n  get hideUserBar(): boolean | null {\n    return SettingsStorageService.getBoolStorage(HIDE_USER_BAR_KEY);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ShapeData.html":{"url":"interfaces/ShapeData.html","title":"interface - ShapeData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ShapeData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/common/src/lib/map/layer-data.ts\n        \n\n\n            \n                Description\n            \n            \n                Type to represent a single shape with all of its metadata.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            geoJson\n                                        \n                                \n                                \n                                        \n                                            key\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            nutsKey\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        geoJson\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        geoJson:     GeoJsonObject\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     GeoJsonObject\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    GeoJson representing the shape.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Key of the shape.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Name of the shape.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nutsKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nutsKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nomenclature of Territorial Units code of the shape.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import * as L from \"leaflet\";\nimport {GeoJsonObject} from \"geojson\";\n\n/** Type to represent a single shape with all of its metadata. */\nexport interface ShapeData {\n  /** Name of the shape. */\n  name: string,\n  /** Key of the shape. */\n  key: string,\n  /** Nomenclature of Territorial Units code of the shape. */\n  nutsKey: string,\n  /** GeoJson representing the shape. */\n  geoJson: GeoJsonObject\n}\n\n/** Type to represent layer data received from the geo data server. */\nexport interface LayerData {\n  /** Corner coordinates of a box containing all the shapes this displays. */\n  box: [[number, number], [number, number], [number, number], [number, number]],\n  /** List of shapes. */\n  shapes: ShapeData[]\n}\n\nexport default LayerData;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SideBarComponent.html":{"url":"components/SideBarComponent.html","title":"component - SideBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SideBarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    wisdom_modules/core/src/app/frame/side-bar/side-bar.component.ts\n\n\n\n    \n        Description\n    \n    \n        The component displaying the sidebar.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-side-bar\n            \n\n\n\n\n            \n                templateUrl\n                ./side-bar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                sideBar\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        sideBar\n                        \n                    \n                \n            \n                \n                    \n                        Default value : sidebar\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/core/src/app/frame/side-bar/side-bar.component.ts:13\n                        \n                    \n\n            \n                \n                    Load the sidebar from the workspace.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component} from \"@angular/core\";\n\nimport {sidebar} from \"../../../../../../sidebar\";\n\n/** The component displaying the sidebar. */\n@Component({\n  selector: \"app-side-bar\",\n  templateUrl: \"./side-bar.component.html\"\n})\nexport class SideBarComponent {\n\n  /** Load the sidebar from the workspace. */\n  sideBar = sidebar;\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n      {{label[0] | translate}}\n    \n  \n\n  \n    \n      \n        \n          \n            \n          \n          {{entry[0] | translate}}\n        \n      \n      \n        \n          \n            \n          \n          {{entry[0] | translate}}\n        \n      \n      \n\n      \n    \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                {{label[0] | translate}}                                                                    {{entry[0] | translate}}                                                                      {{entry[0] | translate}}                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BimComponent', 'selector': 'bim'},{'name': 'BreadcrumbsComponent', 'selector': 'breadcrumbs'},{'name': 'ConsumerDetailComponent', 'selector': 'lib-consumer-detail'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'ExampleComponent', 'selector': ''},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IonIconComponent', 'selector': 'ion-icon'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'map'},{'name': 'MapSelectViewComponent', 'selector': 'lib-map-select-view'},{'name': 'PumpModelComponent', 'selector': ''},{'name': 'ResultDataViewComponent', 'selector': 'lib-result-data-view'},{'name': 'SideBarComponent', 'selector': 'app-side-bar'},{'name': 'WaterRightDetailComponent', 'selector': 'lib-water-right-detail'}];\n    var DIRECTIVES = [{'name': 'BulmaIsToggleableDirective', 'selector': '.is-toggleable'},{'name': 'LangSelectorDirective', 'selector': '[selectLang]'}];\n    var ACTUAL_COMPONENT = {'name': 'SideBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StaticLoader.html":{"url":"classes/StaticLoader.html","title":"class - StaticLoader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StaticLoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/core/src/app/i18n/static-loader.ts\n        \n\n\n            \n                Description\n            \n            \n                The loader for the translations.\nSince all translations are available from the start this one is rather simple.\n\n            \n\n\n            \n                Implements\n            \n            \n                        TranslateLoader\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTranslation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getTranslation\n                        \n                    \n                \n            \n            \n                \ngetTranslation(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/i18n/static-loader.ts:36\n                \n            \n\n\n            \n                \n                    Get the translations for a specific language key.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The language key\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {TranslateLoader} from \"@ngx-translate/core\";\nimport {\n  de_DELang as de_DELangCommon,\n  en_USLang as en_USLangCommon\n} from \"common\";\nimport {of, Observable} from \"rxjs\";\n\nimport de_DELang from \"./langs/de_DE\";\nimport en_USLang from \"./langs/en_US\";\nimport {ModuleProvider} from \"../module-provider\";\nimport {langs as sideBarLangs} from \"../../../../../sidebar\";\n\n/** The languages the loader provides. */\nlet langs: any = {\n  de_DE: Object.assign({}, de_DELang, de_DELangCommon, ModuleProvider.langs(\"de_DE\")),\n  en_US: Object.assign({}, en_USLang, en_USLangCommon, ModuleProvider.langs(\"en_US\"))\n}\n\nfor (let [lang, values] of Object.entries(sideBarLangs)) {\n  langs[lang as \"de_DE\" | \"en_US\"].sidebar = {};\n  for (let [key, value] of Object.entries(values)) {\n    langs[lang as \"de_DE\" | \"en_US\"].sidebar[key] = value;\n  }\n}\n\n/**\n * The loader for the translations.\n * Since all translations are available from the start this one is rather simple.\n */\nexport class StaticLoader implements TranslateLoader {\n\n  /**\n   * Get the translations for a specific language key.\n   * @param lang The language key\n   */\n  getTranslation(lang: string): Observable {\n    // @ts-ignore\n    return of(langs[lang]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/core/src/app/auth/user.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service to interact with the user management of the auth server.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createUser\n                            \n                            \n                                getUsers\n                            \n                            \n                                    Private\n                                    Static\n                                httpOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/core/src/app/auth/user.service.ts:25\n                            \n                        \n\n                \n                    \n                            Constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to interact with the server via http\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createUser\n                        \n                    \n                \n            \n            \n                \ncreateUser(firstName: string, lastName: string, username: string, password: string, scopes?: string, roles?: number[])\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/auth/user.service.ts:67\n                \n            \n\n\n            \n                \n                    Create a new user account\nThis will create a new user account.\nDuring the creation a user account must not use the same username\n(login name).\nAll other properties may be not unique.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    firstName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        First name(s) of the person associated to the account\n\n                                    \n                                \n                                \n                                    lastName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Last name(s) of the person associated to the account\n\n                                    \n                                \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Username for the login\n\n                                    \n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The initial account password for this user\n\n                                    \n                                \n                                \n                                    scopes\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The scopes the user may use as OAuth2.0 scope string\n\n                                    \n                                \n                                \n                                    roles\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        List of Role names which the user shall be associated with\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsers\n                        \n                    \n                \n            \n            \n                \ngetUsers()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/auth/user.service.ts:47\n                \n            \n\n\n            \n                \n                    Get all user accounts currently in the database.\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        httpOptions\n                        \n                    \n                \n            \n            \n                \n                    \n                    httpOptions()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/auth/user.service.ts:37\n                \n            \n\n\n            \n                \n                    Helper function to generate the http options necessary for all requests.\n\n\n                    \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {HttpClient, HttpHeaders, HttpResponse} from \"@angular/common/http\";\nimport {join} from \"@angular/compiler-cli\";\nimport {Injectable} from \"@angular/core\";\nimport {Observable} from \"rxjs\";\n\nimport GetUsers200 from \"./response_types/users/GetUsers200\";\nimport PutUsers201 from \"./response_types/users/PutUsers201\";\nimport PutUsers409 from \"./response_types/users/PutUsers409\";\n\n// FIXME: this url is incorrect and the base needs to be moved\n/** Url for the interaction. */\nconst AUTH_API = \"localhost:8090/auth/\";\n\n/** Options passed into the get requests. */\nconst getOptions: Parameters[1] = {\n  responseType: \"json\"\n}\n\n// FIXME: this is currently pretty wrong in the implementation\n\n/** Service to interact with the user management of the auth server. */\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserService {\n\n  /**\n   * Constructor.\n   * @param http Service to interact with the server via http\n   */\n  constructor(private http: HttpClient) {}\n\n  /**\n   * Helper function to generate the http options necessary for all requests.\n   * @private\n   */\n  private static httpOptions(): Parameters[1] {\n    return {\n      responseType: \"json\",\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\"\n      }),\n    }\n  }\n\n  /** Get all user accounts currently in the database. */\n  getUsers() {\n    return this.http.get(join(AUTH_API, \"users\"), UserService.httpOptions()) as\n      Observable>;\n  }\n\n  /**\n   * Create a new user account\n   *\n   * This will create a new user account.\n   * During the creation a user account must not use the same username\n   * (login name).\n   * All other properties may be not unique.\n   *\n   * @param firstName First name(s) of the person associated to the account\n   * @param lastName Last name(s) of the person associated to the account\n   * @param username Username for the login\n   * @param password The initial account password for this user\n   * @param scopes The scopes the user may use as OAuth2.0 scope string\n   * @param roles List of Role names which the user shall be associated with\n   */\n  createUser(\n    firstName: string,\n    lastName: string,\n    username: string,\n    password: string,\n    scopes?: string,\n    roles?: number[]\n  ) {\n    const body: any = {\n      firstName, lastName, username, password\n    };\n    if (scopes) body.scopes = scopes;\n    if (roles) body.roles = roles;\n\n    return this.http.put(\n      join(AUTH_API, \"users\"),\n      body,\n      UserService.httpOptions()\n    ) as Observable |\n      {status: 409} & HttpResponse\n    >;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WaterRightDetailComponent.html":{"url":"components/WaterRightDetailComponent.html","title":"component - WaterRightDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  WaterRightDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    wisdom_modules/water-usage-forecasts/src/lib/views/detail-view/water-right-detail/water-right-detail.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-water-right-detail\n            \n\n\n\n\n            \n                templateUrl\n                ./water-right-detail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bounds\n                            \n                            \n                                data\n                            \n                            \n                                map\n                            \n                            \n                                markers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                validToString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, service: WaterRightsService, translate: TranslateService, breadcrumbs: BreadcrumbsService)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/detail-view/water-right-detail/water-right-detail.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        WaterRightsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        breadcrumbs\n                                                  \n                                                        \n                                                                        BreadcrumbsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/water-usage-forecasts/src/lib/views/detail-view/water-right-detail/water-right-detail.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/water-usage-forecasts/src/lib/views/detail-view/water-right-detail/water-right-detail.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validToString\n                        \n                    \n                \n            \n            \n                \nvalidToString(valid)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/water-usage-forecasts/src/lib/views/detail-view/water-right-detail/water-right-detail.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    valid\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        bounds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject<>\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([[NaN, NaN], [NaN, NaN]])\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/detail-view/water-right-detail/water-right-detail.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WaterRightDetailResponse\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/detail-view/water-right-detail/water-right-detail.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        map\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MapComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('map')\n                        \n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/detail-view/water-right-detail/water-right-detail.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        markers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Marker[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/detail-view/water-right-detail/water-right-detail.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {ViewChild, Component, OnInit, AfterViewInit} from \"@angular/core\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {tupleSwap, MapComponent, Marker, BreadcrumbsService} from \"common\";\nimport {LeafletMouseEvent} from \"leaflet\";\nimport {BehaviorSubject} from \"rxjs\";\n\nimport {\n  WaterRightDetailResponse,\n  WaterRightsService\n} from \"../../../services/water-rights.service\";\nimport {waterRightIcon} from \"../../../map-icons\";\n\n@Component({\n  selector: 'lib-water-right-detail',\n  templateUrl: './water-right-detail.component.html'\n})\nexport class WaterRightDetailComponent implements OnInit, AfterViewInit {\n\n  data: WaterRightDetailResponse = {};\n  markers: Marker[] = [];\n\n  @ViewChild(\"map\") map!: MapComponent;\n  bounds: BehaviorSubject =\n    new BehaviorSubject([[NaN, NaN], [NaN, NaN]]);\n\n  constructor(\n    private route: ActivatedRoute,\n    private service: WaterRightsService,\n    private translate: TranslateService,\n    private breadcrumbs: BreadcrumbsService\n  ) { }\n\n  ngAfterViewInit(): void {\n    this.bounds.subscribe(bounds => this.map.map?.flyToBounds(bounds));\n  }\n\n  ngOnInit(): void {\n    this.breadcrumbs.set(2, {\n      text: \"water-usage-forecasts.breadcrumbs.water-right\",\n      link: \"#\"\n    });\n\n    let waterRight = this.route.snapshot.params[\"waterRight\"];\n    this.service.fetchWaterRightDetails(waterRight)\n      .subscribe(data => {\n        this.data = data;\n\n        let bounds: [number[], number[]] = [[], []];\n        let markers: Marker[] = [];\n        for (let location of data.locations ?? []) {\n          if (!location?.location) continue;\n          if (!location.real) continue;\n          let coordinates = tupleSwap(location.location.coordinates);\n          bounds[0].push(coordinates[0]);\n          bounds[1].push(coordinates[1]);\n          markers.push({\n            coordinates,\n            tooltip: location.name,\n            onClick: (evt: LeafletMouseEvent) => {\n              document.getElementById(`${location?.id}`)?.scrollIntoView({\n                behavior: \"smooth\"\n              })\n            },\n            icon: waterRightIcon\n          });\n        }\n        this.markers = markers;\n        this.bounds.next([\n          [Math.max(...bounds[0]), Math.max(...bounds[1])],\n          [Math.min(...bounds[0]), Math.min(...bounds[1])]\n        ]);\n      });\n  }\n\n  validToString(valid: this[\"data\"][\"valid\"]): string | undefined {\n    let since = this.translate.instant(\"water-usage-forecasts.water-right.since\");\n    if (!valid) return undefined;\n    let from = valid.from.toISOString().slice(0, 10);\n    let until = valid.until.toISOString().slice(0, 10);\n    if (until !== \"9999-12-31\") {\n      return `${from} - ${until}`;\n    }\n    return `${since} ${from}`;\n  }\n\n}\n\n    \n\n    \n        \n\n\n  {{\"water-usage-forecasts.water-right.water-right\" | translate}}\n\n\n\n  \n    \n  \n\n\n\n  \n    {{data.legalTitle}}\n    \n      {{data.subject}}\n      \n        {{\"water-usage-forecasts.water-right.granting-authority\" | translate}}:\n        {{data?.grantingAuthority}}\n        \n      \n      \n        {{\"water-usage-forecasts.water-right.registering-authority\" | translate}}:\n        {{data?.registeringAuthority}}\n        \n      \n      \n        {{\"water-usage-forecasts.water-right.water-authority\" | translate}}:\n        {{data?.waterAuthority}}\n        \n      \n      \n        {{\"water-usage-forecasts.water-right.address\"}}:\n        {{data?.address}}\n        \n      \n      \n        {{\"water-usage-forecasts.water-right.bailee\" | translate}}:\n        {{data?.bailee}}\n        \n      \n    \n  \n  \n    \n      \n        \n          \n            \n              \n            \n            {{validToString(data?.valid)}}\n          \n        \n      \n    \n    \n      \n        \n          \n            \n              \n            \n            {{data?.dateOfChange?.toISOString()?.slice(0, 10)}}\n          \n        \n        \n          \n            \n            \n            \n          \n        \n      \n    \n  \n\n\n\n  \n    \n      \n        \n          {{\"water-usage-forecasts.water-right.internal-id\" | translate}}\n        \n        {{data?.id}}\n      \n    \n    \n      \n        \n          {{\"water-usage-forecasts.water-right.water-right-no\" | translate}}\n        \n        {{data?.no}}\n      \n    \n    \n      \n        \n          {{\"water-usage-forecasts.water-right.external-id\" | translate}}\n        \n        {{data?.externalId}}\n      \n    \n    \n      \n        \n          {{\"water-usage-forecasts.water-right.file-reference\" | translate}}\n        \n        {{data?.fileReference}}\n      \n    \n  \n\n\n\n  \n    \n      {{\"water-usage-forecasts.water-right.locations\" | translate}}\n    \n  \n  \n    \n      \n        \n          {{location?.name}}\n        \n        \n          \n            \n          \n          \n            \n          \n          \n            \n          \n        \n      \n      \n        {{location?.legalScope}}\n      \n      \n        \n          \n            \n              \n                {{\"water-usage-forecasts.water-right.internal-id\" | translate}}\n              \n              {{location?.id}}\n            \n          \n          \n            \n              \n                {{\"water-usage-forecasts.water-right.location-no\" | translate}}\n              \n              {{location?.no}}\n            \n          \n        \n      \n      \n        \n          {{\"water-usage-forecasts.water-right.withdrawal\" | translate}}\n        \n        \n          \n            \n              \n                \n                  {{rate.amount}} {{rate.unit}}/{{rate.duration}}\n                \n              \n            \n          \n        \n      \n      \n        \n          {{\"water-usage-forecasts.water-right.fluid-discharge\" | translate}}\n        \n        \n          \n            \n              \n                \n                  {{rate.amount}} {{rate.unit}}/{{rate.duration}}\n                \n              \n            \n          \n        \n      \n      \n        \n          {{\"water-usage-forecasts.water-right.irrigation-area\" | translate}}\n        \n        \n          \n            \n              \n                {{location?.irrigationArea?.amount}} {{location?.irrigationArea?.unit}}\n              \n            \n          \n        \n      \n      \n        \n          {{\"water-usage-forecasts.water-right.rain-supplement\" | translate}}\n        \n        \n          \n            \n              \n                {{location?.rainSupplement?.amount}} {{location?.rainSupplement?.unit}}\n                /{{location?.rainSupplement?.duration}}\n              \n            \n          \n        \n      \n      \n        \n          \n          \n            {{\"water-usage-forecasts.water-right.basin-no\" | translate}}\n            {{location?.basinNo?.key}} {{location?.basinNo?.name}}\n          \n          \n            {{\"water-usage-forecasts.water-right.county\" | translate}}\n            {{location?.county}}\n          \n          \n            {{\"water-usage-forecasts.water-right.eu-survey-area\" | translate}}\n            {{location?.euSurveyArea?.key}} {{location?.euSurveyArea?.name}}\n          \n          \n            {{\"water-usage-forecasts.water-right.field\" | translate}}\n            {{location?.field}}\n          \n          \n            {{\"water-usage-forecasts.water-right.groundwater-volume\" | translate}}\n            {{location?.groundwaterVolume}}\n          \n          \n            {{\"water-usage-forecasts.water-right.local-sub-district\" | translate}}\n            {{location?.localSubDistrict}}\n          \n          \n            {{\"water-usage-forecasts.water-right.maintenance-association\" | translate}}\n            {{location?.maintenanceAssociation?.key}} {{location?.maintenanceAssociation?.name}}\n          \n          \n            {{\"water-usage-forecasts.water-right.municipal-area\" | translate}}\n            {{location?.municipalArea?.key}} {{location?.municipalArea?.name}}\n          \n          \n            {{\"water-usage-forecasts.water-right.plot\" | translate}}\n            {{location?.plot}}\n          \n          \n            {{\"water-usage-forecasts.water-right.rivershed\" | translate}}\n            {{location?.rivershed}}\n          \n          \n            {{\"water-usage-forecasts.water-right.serial-no\" | translate}}\n            {{location?.serialNo}}\n          \n          \n            {{\"water-usage-forecasts.water-right.top-map-1:25000\" | translate}}\n            {{location?.topMap1to25000?.key}} {{location?.topMap1to25000?.name}}\n          \n          \n            {{\"water-usage-forecasts.water-right.water-body\" | translate}}\n            {{location?.waterBody}}\n          \n          \n            {{\"water-usage-forecasts.water-right.flood-area\" | translate}}\n            {{location?.floodArea}}\n          \n          \n            {{\"water-usage-forecasts.water-right.water-protection-area\" | translate}}\n            {{location?.waterProtectionArea}}\n          \n          \n        \n      \n    \n  \n\n\n\n  \n    \n      {{\"water-usage-forecasts.water-right.annotation\" | translate}}\n    \n  \n  \n    {{data?.annotation}}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{\"water-usage-forecasts.water-right.water-right\" | translate}}              {{data.legalTitle}}          {{data.subject}}              {{\"water-usage-forecasts.water-right.granting-authority\" | translate}}:        {{data?.grantingAuthority}}                            {{\"water-usage-forecasts.water-right.registering-authority\" | translate}}:        {{data?.registeringAuthority}}                            {{\"water-usage-forecasts.water-right.water-authority\" | translate}}:        {{data?.waterAuthority}}                            {{\"water-usage-forecasts.water-right.address\"}}:        {{data?.address}}                            {{\"water-usage-forecasts.water-right.bailee\" | translate}}:        {{data?.bailee}}                                                                                                    {{validToString(data?.valid)}}                                                                                                          {{data?.dateOfChange?.toISOString()?.slice(0, 10)}}                                                                                                                                    {{\"water-usage-forecasts.water-right.internal-id\" | translate}}                {{data?.id}}                                      {{\"water-usage-forecasts.water-right.water-right-no\" | translate}}                {{data?.no}}                                      {{\"water-usage-forecasts.water-right.external-id\" | translate}}                {{data?.externalId}}                                      {{\"water-usage-forecasts.water-right.file-reference\" | translate}}                {{data?.fileReference}}                        {{\"water-usage-forecasts.water-right.locations\" | translate}}                                    {{location?.name}}                                                                                                                                            {{location?.legalScope}}                                                                        {{\"water-usage-forecasts.water-right.internal-id\" | translate}}                            {{location?.id}}                                                                          {{\"water-usage-forecasts.water-right.location-no\" | translate}}                            {{location?.no}}                                                            {{\"water-usage-forecasts.water-right.withdrawal\" | translate}}                                                                                      {{rate.amount}} {{rate.unit}}/{{rate.duration}}                                                                                          {{\"water-usage-forecasts.water-right.fluid-discharge\" | translate}}                                                                                      {{rate.amount}} {{rate.unit}}/{{rate.duration}}                                                                                          {{\"water-usage-forecasts.water-right.irrigation-area\" | translate}}                                                                    {{location?.irrigationArea?.amount}} {{location?.irrigationArea?.unit}}                                                                          {{\"water-usage-forecasts.water-right.rain-supplement\" | translate}}                                                                    {{location?.rainSupplement?.amount}} {{location?.rainSupplement?.unit}}                /{{location?.rainSupplement?.duration}}                                                                                                {{\"water-usage-forecasts.water-right.basin-no\" | translate}}            {{location?.basinNo?.key}} {{location?.basinNo?.name}}                                {{\"water-usage-forecasts.water-right.county\" | translate}}            {{location?.county}}                                {{\"water-usage-forecasts.water-right.eu-survey-area\" | translate}}            {{location?.euSurveyArea?.key}} {{location?.euSurveyArea?.name}}                                {{\"water-usage-forecasts.water-right.field\" | translate}}            {{location?.field}}                                {{\"water-usage-forecasts.water-right.groundwater-volume\" | translate}}            {{location?.groundwaterVolume}}                                {{\"water-usage-forecasts.water-right.local-sub-district\" | translate}}            {{location?.localSubDistrict}}                                {{\"water-usage-forecasts.water-right.maintenance-association\" | translate}}            {{location?.maintenanceAssociation?.key}} {{location?.maintenanceAssociation?.name}}                                {{\"water-usage-forecasts.water-right.municipal-area\" | translate}}            {{location?.municipalArea?.key}} {{location?.municipalArea?.name}}                                {{\"water-usage-forecasts.water-right.plot\" | translate}}            {{location?.plot}}                                {{\"water-usage-forecasts.water-right.rivershed\" | translate}}            {{location?.rivershed}}                                {{\"water-usage-forecasts.water-right.serial-no\" | translate}}            {{location?.serialNo}}                                {{\"water-usage-forecasts.water-right.top-map-1:25000\" | translate}}            {{location?.topMap1to25000?.key}} {{location?.topMap1to25000?.name}}                                {{\"water-usage-forecasts.water-right.water-body\" | translate}}            {{location?.waterBody}}                                {{\"water-usage-forecasts.water-right.flood-area\" | translate}}            {{location?.floodArea}}                                {{\"water-usage-forecasts.water-right.water-protection-area\" | translate}}            {{location?.waterProtectionArea}}                                                    {{\"water-usage-forecasts.water-right.annotation\" | translate}}            {{data?.annotation}}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BimComponent', 'selector': 'bim'},{'name': 'BreadcrumbsComponent', 'selector': 'breadcrumbs'},{'name': 'ConsumerDetailComponent', 'selector': 'lib-consumer-detail'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'ExampleComponent', 'selector': ''},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IonIconComponent', 'selector': 'ion-icon'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'map'},{'name': 'MapSelectViewComponent', 'selector': 'lib-map-select-view'},{'name': 'PumpModelComponent', 'selector': ''},{'name': 'ResultDataViewComponent', 'selector': 'lib-result-data-view'},{'name': 'SideBarComponent', 'selector': 'app-side-bar'},{'name': 'WaterRightDetailComponent', 'selector': 'lib-water-right-detail'}];\n    var DIRECTIVES = [{'name': 'BulmaIsToggleableDirective', 'selector': '.is-toggleable'},{'name': 'LangSelectorDirective', 'selector': '[selectLang]'}];\n    var ACTUAL_COMPONENT = {'name': 'WaterRightDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WaterRightsService.html":{"url":"injectables/WaterRightsService.html","title":"injectable - WaterRightsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WaterRightsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/water-usage-forecasts/src/lib/services/water-rights.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchWaterRightDetails\n                            \n                            \n                                fetchWaterRightLocations\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, router: Router)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/services/water-rights.service.ts:116\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        fetchWaterRightDetails\n                        \n                    \n                \n            \n            \n                \nfetchWaterRightDetails(no: number)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/water-usage-forecasts/src/lib/services/water-rights.service.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    no\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetchWaterRightLocations\n                        \n                    \n                \n            \n            \n                \nfetchWaterRightLocations(params: Partial)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/water-usage-forecasts/src/lib/services/water-rights.service.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {HttpClient, HttpContext, HttpHeaders} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\nimport {Router} from \"@angular/router\";\nimport {USE_API_URL, USE_LOADER} from \"common\";\nimport {map, Observable} from \"rxjs\";\n\nconst API_URL = \"water-rights/\";\n\nexport type WaterRightLocationResponse = {\n  name: string,\n  id: number,\n  waterRight: number,\n  active: boolean,\n  real: boolean,\n  geojson: {\n    type: \"Point\",\n    coordinates: [number, number]\n  }\n}[];\n\nexport type WaterRightDetailResponse = Partial\n}>;\n\ntype WaterRightDetailRawResponse =\n  Omit &\n  Partial;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WaterRightsService {\n\n  constructor(\n    private http: HttpClient,\n    private router: Router\n  ) {}\n\n  fetchWaterRightLocations(params: Partial): Observable {\n    let url = this.router.parseUrl(API_URL);\n    if (params.in) url.queryParams[\"in\"] = params.in;\n    if (params.isActive) url.queryParams[\"is_active\"] = params.isActive;\n    if (params.isReal) url.queryParams[\"is_real\"] = params.isReal;\n    return this.http.get(url.toString(), {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\"\n      }),\n      responseType: \"json\",\n      context: new HttpContext()\n        .set(USE_API_URL, true)\n        .set(USE_LOADER, true)\n    }).pipe(map((\n      res: any[]) => res.map(\n        el => Object.assign({}, el, {waterRight: el.water_right})\n      )\n    ));\n  }\n\n  fetchWaterRightDetails(no: number): Observable {\n    let url = this.router.createUrlTree([API_URL, \"details\", no]);\n    return this.http.get(url.toString(), {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\"\n      }),\n      responseType: \"json\",\n      context: new HttpContext()\n        .set(USE_API_URL, true)\n        .set(USE_LOADER, true)\n    }).pipe(map((res: WaterRightDetailRawResponse) => {\n      let cleaned = JSON.stringify(res)\n        .replace(/\"\\s*([^\"]+)\\s*\"/g, '\"$1\"')\n        .replace(/'\\s*([^']+)\\s*'/g, \"'$1'\")\n        .replace(/\"'([^'\"\\s:,]+)'\"/g, '\"$1\"')\n        .replace(/'\"([^'\"\\s:,]+)\"'/g, \"'$1'\")\n      return JSON.parse(cleaned) as WaterRightDetailRawResponse;\n    })).pipe(map((raw: WaterRightDetailRawResponse) => {\n      let res = JSON.parse(JSON.stringify(raw)) as WaterRightDetailResponse;\n      if (raw.dateOfChange) res.dateOfChange = new Date(raw.dateOfChange);\n      if (raw.valid) res.valid = {\n        from: new Date(raw.valid.from),\n        until: new Date(raw.valid.until)\n      };\n      return res;\n    }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WaterUsageForecastsModule.html":{"url":"modules/WaterUsageForecastsModule.html","title":"module - WaterUsageForecastsModule","body":"\n                   \n\n\n\n\n    Modules\n    WaterUsageForecastsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_WaterUsageForecastsModule\n\n\n\ncluster_WaterUsageForecastsModule_imports\n\n\n\ncluster_WaterUsageForecastsModule_declarations\n\n\n\n\nConsumerDetailComponent\n\nConsumerDetailComponent\n\n\n\nWaterUsageForecastsModule\n\nWaterUsageForecastsModule\n\nWaterUsageForecastsModule -->\n\nConsumerDetailComponent->WaterUsageForecastsModule\n\n\n\n\n\nMapSelectViewComponent\n\nMapSelectViewComponent\n\nWaterUsageForecastsModule -->\n\nMapSelectViewComponent->WaterUsageForecastsModule\n\n\n\n\n\nResultDataViewComponent\n\nResultDataViewComponent\n\nWaterUsageForecastsModule -->\n\nResultDataViewComponent->WaterUsageForecastsModule\n\n\n\n\n\nWaterRightDetailComponent\n\nWaterRightDetailComponent\n\nWaterUsageForecastsModule -->\n\nWaterRightDetailComponent->WaterUsageForecastsModule\n\n\n\n\n\nWisdomModule\n\nWisdomModule\n\nWaterUsageForecastsModule -->\n\nWisdomModule->WaterUsageForecastsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            wisdom_modules/water-usage-forecasts/src/lib/water-usage-forecasts.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ConsumerDetailComponent\n                        \n                        \n                            MapSelectViewComponent\n                        \n                        \n                            ResultDataViewComponent\n                        \n                        \n                            WaterRightDetailComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            WisdomModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {CommonModule} from \"@angular/common\";\nimport {NgModule} from \"@angular/core\";\nimport {RouterModule} from \"@angular/router\";\nimport {TranslateModule} from \"@ngx-translate/core\";\nimport {WisdomModule} from \"common\";\nimport {NgChartsModule} from \"ng2-charts\";\n\nimport {\n  ConsumerDetailComponent\n} from \"./views/detail-view/consumer-detail/consumer-detail.component\";\nimport {\n  WaterRightDetailComponent\n} from \"./views/detail-view/water-right-detail/water-right-detail.component\";\nimport {\n  MapSelectViewComponent\n} from \"./views/map-select-view/map-select-view.component\";\nimport {\n  ResultDataViewComponent\n} from \"./views/result-data-view/result-data-view.component\";\n\n@NgModule({\n  declarations: [\n    MapSelectViewComponent,\n    ResultDataViewComponent,\n    ConsumerDetailComponent,\n    WaterRightDetailComponent\n  ],\n  imports: [\n    WisdomModule,\n    NgChartsModule,\n    CommonModule,\n    RouterModule,\n    TranslateModule\n  ]\n})\nexport class WaterUsageForecastsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WaterUsageForecastsService.html":{"url":"injectables/WaterUsageForecastsService.html","title":"injectable - WaterUsageForecastsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WaterUsageForecastsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/water-usage-forecasts/src/lib/services/water-usage-forecasts.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service to interact with server providing the data to display.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchForecastData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, router: Router)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/services/water-usage-forecasts.service.ts:67\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        fetchForecastData\n                        \n                    \n                \n            \n            \n                \nfetchForecastData(key: string | string[], forecastModel: ForecastType, consumerGroup?: \"businesses\" | \"households_and_small_businesses\" | \"farming_forestry_fishing_industry\" | \"public_institutions\" | \"all\")\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/water-usage-forecasts/src/lib/services/water-usage-forecasts.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                            string | string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    forecastModel\n                                    \n                                                ForecastType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    consumerGroup\n                                    \n                                            \"businesses\" | \"households_and_small_businesses\" | \"farming_forestry_fishing_industry\" | \"public_institutions\" | \"all\"\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {HttpClient, HttpContext, HttpHeaders} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\nimport {Router} from \"@angular/router\";\nimport {USE_API_URL, USE_LOADER} from \"common\";\nimport {Observable} from \"rxjs\";\n\n/** Route of the API access. */\nconst API_URL = \"water-usage-forecasts\";\n\n/** Possible forecast calculation methods. */\nexport enum ForecastType {\n  LOGARITHMIC = \"logarithmic\",\n  LINEAR = \"linear\",\n  POLYNOMIAL = \"polynomial\"\n}\n\n/** Interface for the data received from the server. */\nexport interface ForecastResponse {\n  /**\n   * The results in accumulated form so that the client doesn't have to\n   * calculate it itself.\n   */\n  accumulations: {\n    /** Accumulations by consumer group. */\n    consumerGroup: ForecastEntry,\n    /** Accumulations by municipal. */\n    municipal: ForecastEntry\n  },\n  partials: {\n    consumerGroup: {\n      key: string,\n      name: string\n    },\n    municipal: ForecastResponse[\"partials\"][0][\"consumerGroup\"],\n    referenceUsages: {\n      equation: string,\n      float: number,\n      model: \"logarithmic\" | \"linear\" | \"polynomial\",\n      usages: {\n        amounts: number[],\n        end: number,\n        start: number\n      }\n    },\n    forecast: ForecastResponse[\"partials\"][0][\"referenceUsages\"]\n  }[]\n}\n\nexport interface ForecastEntry {\n  forecast: Record,\n  reference: Record\n}\n\nexport interface ForecastUsage {\n  displayName: string,\n  endYear: number,\n  startYear: number,\n  usages: number[]\n}\n\n/**\n * Service to interact with server providing the data to display.\n */\n@Injectable({\n  providedIn: \"root\"\n})\nexport class WaterUsageForecastsService {\n\n  constructor(\n    private http: HttpClient,\n    private router: Router\n  ) {}\n\n  fetchForecastData(\n    key: string | string[],\n    forecastModel: ForecastType,\n    consumerGroup?:\n      \"businesses\" |\n      \"households_and_small_businesses\" |\n      \"farming_forestry_fishing_industry\" |\n      \"public_institutions\" |\n      \"all\"\n  ): Observable {\n    let url = this.router.parseUrl(`${API_URL}/${forecastModel}`);\n    if (consumerGroup) url.queryParams[\"consumerGroup\"] = consumerGroup;\n    url.queryParams[\"key\"] = key;\n    return this.http.get(url.toString(), {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\"\n      }),\n      responseType: \"json\",\n      context: new HttpContext()\n        .set(USE_API_URL, true)\n        .set(USE_LOADER, \"water-usage-forecasts.display.loading\")\n    }) as Observable;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WaterUsageHistoryService.html":{"url":"injectables/WaterUsageHistoryService.html","title":"injectable - WaterUsageHistoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WaterUsageHistoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/water-usage-forecasts/src/lib/services/water-usage-history.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchWaterUsageHistory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, router: Router)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/services/water-usage-history.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        fetchWaterUsageHistory\n                        \n                    \n                \n            \n            \n                \nfetchWaterUsageHistory(id: string)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/water-usage-forecasts/src/lib/services/water-usage-history.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {HttpClient, HttpContext, HttpHeaders} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\nimport {Router} from \"@angular/router\";\nimport {USE_API_URL, USE_LOADER} from \"common\";\nimport {map, Observable} from \"rxjs\";\n\nconst API_URL = \"water-usage-history/\";\n\nexport type HistoryResponse = {\n  year: number,\n  usage: number,\n  recordedAt: Date\n}[];\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WaterUsageHistoryService {\n\n  constructor(\n    private http: HttpClient,\n    private router: Router\n  ) { }\n\n  fetchWaterUsageHistory(id: string): Observable {\n    let url = this.router.parseUrl(API_URL);\n    url.queryParams[\"consumer\"] = id;\n    return this.http.get(url.toString(), {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\"\n      }),\n      responseType: \"json\",\n      context: new HttpContext()\n        .set(USE_API_URL, true)\n        .set(USE_LOADER, true)\n    }).pipe(map(\n      data => data.map(\n        ({\n           year,\n           usage,\n           recorded_at\n        }) => ({\n          year,\n          usage,\n          recordedAt: new Date(recorded_at)\n        })\n      )\n    ))\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WisdomInterface.html":{"url":"interfaces/WisdomInterface.html","title":"interface - WisdomInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  WisdomInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/common/src/WisdomInterface.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the wisdom modules.\nEvery wisdom module must provide such an object implementing this interface.\nThe object must be exported under the name \"wisdomInterface\".\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            route\n                                        \n                                \n                                \n                                        \n                                            scopes\n                                        \n                                \n                                \n                                        \n                                            translations\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        route\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        route:         Route\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Route\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The route that leads to this module.\nThis may also include guards but some guards will be automatically injected.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scopes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scopes:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The scopes required to see the component.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        translations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        translations:     Record>>>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record>>>\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The translations the modules provides and uses.\nThe top most entry should be the namespace, the following the component and\nin the component there should be keys for the translation keys.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {Route} from \"@angular/router\";\n\n/**\n * Interface for the wisdom modules.\n *\n * Every wisdom module must provide such an object implementing this interface.\n * The object must be exported under the name \"wisdomInterface\".\n */\nexport interface WisdomInterface {\n  /**\n   * The route that leads to this module.\n   * This may also include guards but some guards will be automatically injected.\n   */\n  route: Route;\n  /** The scopes required to see the component. */\n  scopes: string[];\n  /**\n   * The translations the modules provides and uses.\n   *\n   * The top most entry should be the namespace, the following the component and\n   * in the component there should be keys for the translation keys.\n   */\n  translations: Record>>>\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WisdomModule.html":{"url":"modules/WisdomModule.html","title":"module - WisdomModule","body":"\n                   \n\n\n\n\n    Modules\n    WisdomModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_WisdomModule\n\n\n\ncluster_WisdomModule_exports\n\n\n\ncluster_WisdomModule_declarations\n\n\n\n\nBimComponent\n\nBimComponent\n\n\n\nWisdomModule\n\nWisdomModule\n\nWisdomModule -->\n\nBimComponent->WisdomModule\n\n\n\n\n\nBreadcrumbsComponent\n\nBreadcrumbsComponent\n\nWisdomModule -->\n\nBreadcrumbsComponent->WisdomModule\n\n\n\n\n\nBulmaIsToggleableDirective\n\nBulmaIsToggleableDirective\n\nWisdomModule -->\n\nBulmaIsToggleableDirective->WisdomModule\n\n\n\n\n\nIonIconComponent\n\nIonIconComponent\n\nWisdomModule -->\n\nIonIconComponent->WisdomModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nWisdomModule -->\n\nMapComponent->WisdomModule\n\n\n\n\n\nBimComponent \n\nBimComponent \n\nBimComponent  -->\n\nWisdomModule->BimComponent \n\n\n\n\n\nBreadcrumbsComponent \n\nBreadcrumbsComponent \n\nBreadcrumbsComponent  -->\n\nWisdomModule->BreadcrumbsComponent \n\n\n\n\n\nBulmaIsToggleableDirective \n\nBulmaIsToggleableDirective \n\nBulmaIsToggleableDirective  -->\n\nWisdomModule->BulmaIsToggleableDirective \n\n\n\n\n\nIonIconComponent \n\nIonIconComponent \n\nIonIconComponent  -->\n\nWisdomModule->IonIconComponent \n\n\n\n\n\nMapComponent \n\nMapComponent \n\nMapComponent  -->\n\nWisdomModule->MapComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            wisdom_modules/common/src/lib/wisdom.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BimComponent\n                        \n                        \n                            BreadcrumbsComponent\n                        \n                        \n                            BulmaIsToggleableDirective\n                        \n                        \n                            IonIconComponent\n                        \n                        \n                            MapComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BimComponent\n                        \n                        \n                            BreadcrumbsComponent\n                        \n                        \n                            BulmaIsToggleableDirective\n                        \n                        \n                            IonIconComponent\n                        \n                        \n                            MapComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {CommonModule} from \"@angular/common\";\nimport {NgModule} from \"@angular/core\";\nimport {RouterModule} from \"@angular/router\";\nimport {TranslateModule} from \"@ngx-translate/core\";\n\nimport {BreadcrumbsComponent} from \"./breadcrumbs/breadcrumbs.component\";\nimport {\n  BulmaIsToggleableDirective\n} from \"./bulma/bulma-is-toggleable.directive\";\nimport {IonIconComponent} from \"./ion-icon/ion-icon.component\";\nimport {MapComponent} from \"./map/map.component\";\nimport { BimComponent } from './bim/bim.component';\n\n@NgModule({\n  declarations: [\n    IonIconComponent,\n    BulmaIsToggleableDirective,\n    MapComponent,\n    BreadcrumbsComponent,\n    BimComponent\n  ],\n  imports: [\n    TranslateModule,\n    CommonModule,\n    RouterModule\n  ],\n  exports: [\n    BimComponent,\n    IonIconComponent,\n    BulmaIsToggleableDirective,\n    MapComponent,\n    BreadcrumbsComponent\n  ]\n})\nexport class WisdomModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                sidebar.ts\n            \n            variable\n            langs\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                sidebar.ts\n            \n            variable\n            sidebar\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/WisdomInterface.ts\n            \n            interface\n            WisdomInterface\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/bim/bim.component.ts\n            \n            component\n            BimComponent\n            \n                0 %\n                (0/52)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/bim/bim.service.ts\n            \n            injectable\n            BimService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.component.ts\n            \n            component\n            BreadcrumbsComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.service.ts\n            \n            injectable\n            BreadcrumbsService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.service.ts\n            \n            interface\n            Breadcrumb\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/bulma/bulma-is-toggleable.directive.ts\n            \n            directive\n            BulmaIsToggleableDirective\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/guards/query-parameter.guard.ts\n            \n            guard\n            QueryParameterGuard\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/http-context/use-api-url.ts\n            \n            variable\n            USE_API_URL\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/http-context/use-base-url.ts\n            \n            variable\n            USE_BASE_URL\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/http-context/use-cache.ts\n            \n            variable\n            USE_CACHE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/http-context/use-error-curtain.ts\n            \n            variable\n            USE_ERROR_CURTAIN\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/http-context/use-loader.ts\n            \n            variable\n            USE_LOADER\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/ion-icon/ion-icon.component.ts\n            \n            component\n            IonIconComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/map/invert-selection.ts\n            \n            variable\n            control\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/map/layer-data.ts\n            \n            interface\n            LayerData\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/map/layer-data.ts\n            \n            interface\n            ShapeData\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/map/map.component.ts\n            \n            component\n            MapComponent\n            \n                100 %\n                (29/29)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/map/map.service.ts\n            \n            injectable\n            MapService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/map/map.service.ts\n            \n            interface\n            MapDB\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/map/map.service.ts\n            \n            variable\n            API_URL\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/map/map.service.ts\n            \n            variable\n            DB_NAME\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/map/map.service.ts\n            \n            variable\n            SCHEMA_V\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/map/marker.ts\n            \n            interface\n            Marker\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/map/resolution.ts\n            \n            function\n            toEnum\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/map/resolution.ts\n            \n            function\n            toKeyLength\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/util.ts\n            \n            function\n            getResolvedUrl\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/util.ts\n            \n            function\n            prettyPrintNum\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/util.ts\n            \n            function\n            stringToColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/util.ts\n            \n            function\n            translateObject\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/util.ts\n            \n            function\n            tupleSwap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/auth/auth-storage.service.ts\n            \n            injectable\n            AuthStorageService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/auth/auth-storage.service.ts\n            \n            variable\n            ACCESS_TOKEN_KEY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/auth/auth-storage.service.ts\n            \n            variable\n            EXPIRES_IN_KEY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/auth/auth-storage.service.ts\n            \n            variable\n            REFRESH_TOKEN_KEY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/auth/auth-storage.service.ts\n            \n            variable\n            SCOPES_KEY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/auth/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/auth/auth.interceptor.ts\n            \n            interceptor\n            AuthInterceptor\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/auth/auth.interceptor.ts\n            \n            variable\n            TOKEN_HEADER_KEY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/auth/auth.service.ts\n            \n            variable\n            AUTH_URL\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/auth/auth.service.ts\n            \n            variable\n            httpOptions\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/auth/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/auth/user.service.ts\n            \n            injectable\n            UserService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/auth/user.service.ts\n            \n            variable\n            AUTH_API\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/auth/user.service.ts\n            \n            variable\n            getOptions\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/base-url.interceptor.ts\n            \n            interceptor\n            BaseUrlInterceptor\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/cache.interceptor.ts\n            \n            interceptor\n            CacheInterceptor\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/frame/error/error.component.ts\n            \n            component\n            ErrorComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/frame/error/error.interceptor.ts\n            \n            interceptor\n            ErrorInterceptor\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/frame/error/error.service.ts\n            \n            injectable\n            ErrorService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/frame/error/error.ts\n            \n            interface\n            Error\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/frame/frame.component.ts\n            \n            component\n            FrameComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/frame/loader/loader.component.ts\n            \n            component\n            LoaderComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/frame/loader/loader.guard.ts\n            \n            guard\n            LoaderGuard\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/frame/loader/loader.interceptor.ts\n            \n            interceptor\n            LoaderInterceptor\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/frame/loader/loader.service.ts\n            \n            injectable\n            LoaderService\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/frame/side-bar/side-bar.component.ts\n            \n            component\n            SideBarComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/i18n/lang-selector.directive.ts\n            \n            directive\n            LangSelectorDirective\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/i18n/static-loader.ts\n            \n            class\n            StaticLoader\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/i18n/static-loader.ts\n            \n            variable\n            langs\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/module-provider.ts\n            \n            class\n            ModuleProvider\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/sanitize-url.interceptor.ts\n            \n            interceptor\n            SanitizeUrlInterceptor\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/settings-storage.service.ts\n            \n            injectable\n            SettingsStorageService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/settings-storage.service.ts\n            \n            variable\n            HIDE_SIDEBAR_KEY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/settings-storage.service.ts\n            \n            variable\n            HIDE_USER_BAR_KEY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/environments/environment.common.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/environments/environment.prod.ts\n            \n            variable\n            baseUrl\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/environments/environment.ts\n            \n            variable\n            baseUrl\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/environments/environment.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/example/src/lib/example.component.ts\n            \n            component\n            ExampleComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/example/src/lib/example.service.ts\n            \n            injectable\n            ExampleService\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/example/src/public-api.ts\n            \n            variable\n            wisdomInterface\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/pump-models/src/lib/pump-model.component.ts\n            \n            component\n            PumpModelComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/pump-models/src/lib/pump-model.service.ts\n            \n            injectable\n            PumpModelService\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/pump-models/src/public-api.ts\n            \n            variable\n            wisdomInterface\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/water-usage-forecasts/src/lib/map-icons.ts\n            \n            variable\n            consumerIcon\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                wisdom_modules/water-usage-forecasts/src/lib/map-icons.ts\n            \n            variable\n            waterRightIcon\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                wisdom_modules/water-usage-forecasts/src/lib/routing.ts\n            \n            variable\n            route\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                wisdom_modules/water-usage-forecasts/src/lib/services/consumers.service.ts\n            \n            injectable\n            ConsumersService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                wisdom_modules/water-usage-forecasts/src/lib/services/consumers.service.ts\n            \n            variable\n            API_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                wisdom_modules/water-usage-forecasts/src/lib/services/water-rights.service.ts\n            \n            injectable\n            WaterRightsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                wisdom_modules/water-usage-forecasts/src/lib/services/water-rights.service.ts\n            \n            variable\n            API_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                wisdom_modules/water-usage-forecasts/src/lib/services/water-usage-forecasts.service.ts\n            \n            injectable\n            WaterUsageForecastsService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                wisdom_modules/water-usage-forecasts/src/lib/services/water-usage-forecasts.service.ts\n            \n            interface\n            ForecastEntry\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                wisdom_modules/water-usage-forecasts/src/lib/services/water-usage-forecasts.service.ts\n            \n            interface\n            ForecastResponse\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                wisdom_modules/water-usage-forecasts/src/lib/services/water-usage-forecasts.service.ts\n            \n            interface\n            ForecastUsage\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                wisdom_modules/water-usage-forecasts/src/lib/services/water-usage-forecasts.service.ts\n            \n            variable\n            API_URL\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/water-usage-forecasts/src/lib/services/water-usage-history.service.ts\n            \n            injectable\n            WaterUsageHistoryService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                wisdom_modules/water-usage-forecasts/src/lib/services/water-usage-history.service.ts\n            \n            variable\n            API_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                wisdom_modules/water-usage-forecasts/src/lib/views/detail-view/consumer-detail/consumer-detail.component.ts\n            \n            component\n            ConsumerDetailComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                wisdom_modules/water-usage-forecasts/src/lib/views/detail-view/water-right-detail/water-right-detail.component.ts\n            \n            component\n            WaterRightDetailComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                wisdom_modules/water-usage-forecasts/src/lib/views/map-select-view/map-select-view.component.ts\n            \n            component\n            MapSelectViewComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                wisdom_modules/water-usage-forecasts/src/lib/views/result-data-view/result-data-view.component.ts\n            \n            component\n            ResultDataViewComponent\n            \n                100 %\n                (21/21)\n            \n        \n        \n            \n                \n                wisdom_modules/water-usage-forecasts/src/public-api.ts\n            \n            variable\n            wisdomInterface\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~14.2.4\n        \n            @angular/common : ~14.2.4\n        \n            @angular/compiler : ~14.2.4\n        \n            @angular/core : ~14.2.4\n        \n            @angular/forms : ~14.2.4\n        \n            @angular/platform-browser : ~14.2.4\n        \n            @angular/platform-browser-dynamic : ~14.2.4\n        \n            @angular/router : ~14.2.4\n        \n            @ngx-translate/core : ^14.0.0\n        \n            @xbim/viewer : 2.0.1-pre202207200746\n        \n            bulma : ^0.9.4\n        \n            bulma-prefers-dark : ^0.1.0-beta.1\n        \n            chart.js : ~3.8.2\n        \n            chartjs-plugin-annotation : ^2.0.1\n        \n            dayjs : ^1.11.5\n        \n            geojson : ^0.5.0\n        \n            idb : ^7.1.0\n        \n            leaflet : ~1.8.0\n        \n            leaflet.markercluster : ~1.5.3\n        \n            ng2-charts : ^4.0.1\n        \n            path-browserify : ^1.0.1\n        \n            rxjs : ~7.5.7\n        \n            tslib : ^2.4.0\n        \n            zone.js : ~0.11.8\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ForecastType   (wisdom_modules/.../water-usage-forecasts.service.ts)\n                        \n                        \n                            Resolution   (wisdom_modules/.../resolution.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    wisdom_modules/water-usage-forecasts/src/lib/services/water-usage-forecasts.service.ts\n    \n        \n            \n                \n                    \n                        \n                        ForecastType\n                    \n                \n                    \n                        \n                            Possible forecast calculation methods.\n\n                        \n                    \n                        \n                            \n                                 LOGARITHMIC\n                            \n                        \n                        \n                            \n                                Value : logarithmic\n                            \n                        \n                        \n                            \n                                 LINEAR\n                            \n                        \n                        \n                            \n                                Value : linear\n                            \n                        \n                        \n                            \n                                 POLYNOMIAL\n                            \n                        \n                        \n                            \n                                Value : polynomial\n                            \n                        \n            \n        \n\n    wisdom_modules/common/src/lib/map/resolution.ts\n    \n        \n            \n                \n                    \n                        \n                        Resolution\n                    \n                \n                    \n                        \n                            Resolutions the map may display.\n\n                        \n                    \n                        \n                            \n                                 STATE\n                            \n                        \n                        \n                            \n                                Value : state\n                            \n                        \n                        \n                            \n                                 DISTRICT\n                            \n                        \n                        \n                            \n                                Value : district\n                            \n                        \n                        \n                            \n                                 ADMINISTRATION\n                            \n                        \n                        \n                            \n                                Value : administration\n                            \n                        \n                        \n                            \n                                 MUNICIPAL\n                            \n                        \n                        \n                            \n                                Value : municipal\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            getResolvedUrl   (wisdom_modules/.../util.ts)\n                        \n                        \n                            prettyPrintNum   (wisdom_modules/.../util.ts)\n                        \n                        \n                            stringToColor   (wisdom_modules/.../util.ts)\n                        \n                        \n                            toEnum   (wisdom_modules/.../resolution.ts)\n                        \n                        \n                            toKeyLength   (wisdom_modules/.../resolution.ts)\n                        \n                        \n                            translateObject   (wisdom_modules/.../util.ts)\n                        \n                        \n                            tupleSwap   (wisdom_modules/.../util.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    wisdom_modules/common/src/lib/util.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getResolvedUrl\n                        \n                    \n                \n            \n            \n                \ngetResolvedUrl(route: ActivatedRouteSnapshot)\n                \n            \n\n\n\n\n            \n                \n                    Function to return a fully resolved url in a string from an activated route\nsnapshot.\nRecreated by this solution on StackOverflow.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Route snapshot of a component.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prettyPrintNum\n                        \n                    \n                \n            \n            \n                \nprettyPrintNum(num: number)\n                \n            \n\n\n\n\n            \n                \n                    Returns a number presentation where every third digit from the end is\nseparated by a dot.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    num\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Number to pretty print\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            prettyPrintNum(12345678) =&gt; &quot;12.345.678&quot;\n                        \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stringToColor\n                        \n                    \n                \n            \n            \n                \nstringToColor(str: string, map?: Record)\n                \n            \n\n\n\n\n            \n                \n                    Generates deterministically a hex color code from any string.\nThis is a modernized version of this\nStackOverflow reply.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    str\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A string to generate a hex color for\n\n                                    \n                                \n                                \n                                    map\n                                    \n                                            Record\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        A color map for predefined strings\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        A hex color code in the style of '#abc123'\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        translateObject\n                        \n                    \n                \n            \n            \n                \ntranslateObject(service: TranslateService, obj: T)\n                \n            \n\n\n\n\n            \n                \n                    Utility function to translate strings in any data object using the given\ntranslate service.\nInternally the instant() method is used, causing this to be sync, beware.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    service\n                                    \n                                            TranslateService\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Translate service to translate with\n\n                                    \n                                \n                                \n                                    obj\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Object to iterate and translate through\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tupleSwap\n                        \n                    \n                \n            \n            \n                \ntupleSwap(tuple)\n                \n            \n\n\n\n\n            \n                \n                    Utility function to swap the values of a tuple.\nUseful if coordinates are in the wrong order.\n(e.g. geojson to leaflet)\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    tuple\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Tuple of two values\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    wisdom_modules/common/src/lib/map/resolution.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        toEnum\n                        \n                    \n                \n            \n            \n                \ntoEnum(length: number)\n                \n            \n\n\n\n\n            \n                \n                    Get the Resolution from a key length.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Key length\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Resolution | undefined\n\n                    \n                    \n                        Resolution if found, otherwise undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toKeyLength\n                        \n                    \n                \n            \n            \n                \ntoKeyLength(res: Resolution)\n                \n            \n\n\n\n\n            \n                \n                    Transforms a Resolution into the key length.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                                Resolution\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Resolution to find key length\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_ExampleModule\n\n\n\ncluster_ExampleModule_declarations\n\n\n\ncluster_ExampleModule_exports\n\n\n\ncluster_PumpModelModule\n\n\n\ncluster_PumpModelModule_declarations\n\n\n\ncluster_PumpModelModule_exports\n\n\n\ncluster_WaterUsageForecastsModule\n\n\n\ncluster_WaterUsageForecastsModule_declarations\n\n\n\ncluster_WisdomModule\n\n\n\ncluster_WisdomModule_declarations\n\n\n\ncluster_WisdomModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nErrorComponent\n\nErrorComponent\n\nAppModule -->\n\nErrorComponent->AppModule\n\n\n\n\n\nFrameComponent\n\nFrameComponent\n\nAppModule -->\n\nFrameComponent->AppModule\n\n\n\n\n\nLangSelectorDirective\n\nLangSelectorDirective\n\nAppModule -->\n\nLangSelectorDirective->AppModule\n\n\n\n\n\nLoaderComponent\n\nLoaderComponent\n\nAppModule -->\n\nLoaderComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nSideBarComponent\n\nSideBarComponent\n\nAppModule -->\n\nSideBarComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nWisdomModule\n\nWisdomModule\n\nAppModule -->\n\nWisdomModule->AppModule\n\n\n\n\n\nExampleModule\n\nExampleModule\n\nExampleModule -->\n\nWisdomModule->ExampleModule\n\n\n\n\n\nPumpModelModule\n\nPumpModelModule\n\nPumpModelModule -->\n\nWisdomModule->PumpModelModule\n\n\n\n\n\nWaterUsageForecastsModule\n\nWaterUsageForecastsModule\n\nWaterUsageForecastsModule -->\n\nWisdomModule->WaterUsageForecastsModule\n\n\n\n\n\nBimComponent \n\nBimComponent \n\nBimComponent  -->\n\nWisdomModule->BimComponent \n\n\n\n\n\nBreadcrumbsComponent \n\nBreadcrumbsComponent \n\nBreadcrumbsComponent  -->\n\nWisdomModule->BreadcrumbsComponent \n\n\n\n\n\nBulmaIsToggleableDirective \n\nBulmaIsToggleableDirective \n\nBulmaIsToggleableDirective  -->\n\nWisdomModule->BulmaIsToggleableDirective \n\n\n\n\n\nIonIconComponent \n\nIonIconComponent \n\nIonIconComponent  -->\n\nWisdomModule->IonIconComponent \n\n\n\n\n\nMapComponent \n\nMapComponent \n\nMapComponent  -->\n\nWisdomModule->MapComponent \n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nAppModule -->\n\nAuthInterceptor->AppModule\n\n\n\n\n\nBaseUrlInterceptor\n\nBaseUrlInterceptor\n\nAppModule -->\n\nBaseUrlInterceptor->AppModule\n\n\n\n\n\nCacheInterceptor\n\nCacheInterceptor\n\nAppModule -->\n\nCacheInterceptor->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\nLoaderInterceptor\n\nLoaderInterceptor\n\nAppModule -->\n\nLoaderInterceptor->AppModule\n\n\n\n\n\nSanitizeUrlInterceptor\n\nSanitizeUrlInterceptor\n\nAppModule -->\n\nSanitizeUrlInterceptor->AppModule\n\n\n\n\n\nExampleComponent\n\nExampleComponent\n\nExampleModule -->\n\nExampleComponent->ExampleModule\n\n\n\n\n\nExampleComponent \n\nExampleComponent \n\nExampleComponent  -->\n\nExampleModule->ExampleComponent \n\n\n\n\n\nPumpModelComponent\n\nPumpModelComponent\n\nPumpModelModule -->\n\nPumpModelComponent->PumpModelModule\n\n\n\n\n\nPumpModelComponent \n\nPumpModelComponent \n\nPumpModelComponent  -->\n\nPumpModelModule->PumpModelComponent \n\n\n\n\n\nConsumerDetailComponent\n\nConsumerDetailComponent\n\nWaterUsageForecastsModule -->\n\nConsumerDetailComponent->WaterUsageForecastsModule\n\n\n\n\n\nMapSelectViewComponent\n\nMapSelectViewComponent\n\nWaterUsageForecastsModule -->\n\nMapSelectViewComponent->WaterUsageForecastsModule\n\n\n\n\n\nResultDataViewComponent\n\nResultDataViewComponent\n\nWaterUsageForecastsModule -->\n\nResultDataViewComponent->WaterUsageForecastsModule\n\n\n\n\n\nWaterRightDetailComponent\n\nWaterRightDetailComponent\n\nWaterUsageForecastsModule -->\n\nWaterRightDetailComponent->WaterUsageForecastsModule\n\n\n\n\n\nBimComponent\n\nBimComponent\n\nWisdomModule -->\n\nBimComponent->WisdomModule\n\n\n\n\n\nBreadcrumbsComponent\n\nBreadcrumbsComponent\n\nWisdomModule -->\n\nBreadcrumbsComponent->WisdomModule\n\n\n\n\n\nBulmaIsToggleableDirective\n\nBulmaIsToggleableDirective\n\nWisdomModule -->\n\nBulmaIsToggleableDirective->WisdomModule\n\n\n\n\n\nIonIconComponent\n\nIonIconComponent\n\nWisdomModule -->\n\nIonIconComponent->WisdomModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nWisdomModule -->\n\nMapComponent->WisdomModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    16 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    15 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    10 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        3 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ExampleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PumpModelModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WaterUsageForecastsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WisdomModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.1.0\n        \n            Description : Workspace for the angular frontend.\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ConsumerLocationsResponse   (wisdom_modules/.../consumers.service.ts)\n                        \n                        \n                            DeleteUsersId200   (wisdom_modules/.../DeleteUsersId200.ts)\n                        \n                        \n                            DeleteUsersId403   (wisdom_modules/.../DeleteUsersId403.ts)\n                        \n                        \n                            DeleteUsersId404   (wisdom_modules/.../DeleteUsersId404.ts)\n                        \n                        \n                            GetUsers200   (wisdom_modules/.../GetUsers200.ts)\n                        \n                        \n                            GetUsersId200   (wisdom_modules/.../GetUsersId200.ts)\n                        \n                        \n                            GetUsersId404   (wisdom_modules/.../GetUsersId404.ts)\n                        \n                        \n                            GetUsersMe200   (wisdom_modules/.../GetUsersMe200.ts)\n                        \n                        \n                            HistoryResponse   (wisdom_modules/.../water-usage-history.service.ts)\n                        \n                        \n                            LayerConfig   (wisdom_modules/.../map.component.ts)\n                        \n                        \n                            LayerKey   (wisdom_modules/.../map.component.ts)\n                        \n                        \n                            nullString   (wisdom_modules/.../side-bar-entries.ts)\n                        \n                        \n                            PatchUsers204   (wisdom_modules/.../PatchUsers204.ts)\n                        \n                        \n                            PatchUsers403   (wisdom_modules/.../PatchUsers403.ts)\n                        \n                        \n                            PatchUsers404   (wisdom_modules/.../PatchUsers404.ts)\n                        \n                        \n                            PatchUsersMe200   (wisdom_modules/.../PatchUsersMe200.ts)\n                        \n                        \n                            PostOAuthToken200   (wisdom_modules/.../PostOAuthToken200.ts)\n                        \n                        \n                            PostOAuthToken400   (wisdom_modules/.../PostOAuthToken400.ts)\n                        \n                        \n                            PostOAuthToken401   (wisdom_modules/.../PostOAuthToken401.ts)\n                        \n                        \n                            PostRevoke200   (wisdom_modules/.../PostRevoke200.ts)\n                        \n                        \n                            PostRevoke403   (wisdom_modules/.../PostRevoke403.ts)\n                        \n                        \n                            PutUsers201   (wisdom_modules/.../PutUsers201.ts)\n                        \n                        \n                            PutUsers409   (wisdom_modules/.../PutUsers409.ts)\n                        \n                        \n                            SideBarEntries   (wisdom_modules/.../side-bar-entries.ts)\n                        \n                        \n                            SideBarEntry   (wisdom_modules/.../side-bar-entries.ts)\n                        \n                        \n                            SideBarEntryLvl1   (wisdom_modules/.../side-bar-entries.ts)\n                        \n                        \n                            SideBarEntryLvl2   (wisdom_modules/.../side-bar-entries.ts)\n                        \n                        \n                            SideBarEntryLvl3   (wisdom_modules/.../side-bar-entries.ts)\n                        \n                        \n                            SideBarLabel   (wisdom_modules/.../side-bar-entries.ts)\n                        \n                        \n                            User   (wisdom_modules/.../User.ts)\n                        \n                        \n                            WaterRightDetailRawResponse   (wisdom_modules/.../water-rights.service.ts)\n                        \n                        \n                            WaterRightDetailResponse   (wisdom_modules/.../water-rights.service.ts)\n                        \n                        \n                            WaterRightLocationResponse   (wisdom_modules/.../water-rights.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    wisdom_modules/water-usage-forecasts/src/lib/services/consumers.service.ts\n    \n    \n        \n            \n                \n                    \n                    ConsumerLocationsResponse\n                \n            \n            \n                \n                        literal type[]\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/users/DeleteUsersId200.ts\n    \n    \n        \n            \n                \n                    \n                    DeleteUsersId200\n                \n            \n            \n                \n                    The user was deleted\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/users/DeleteUsersId403.ts\n    \n    \n        \n            \n                \n                    \n                    DeleteUsersId403\n                \n            \n            \n                \n                    Insufficient privileges to run this action\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/users/DeleteUsersId404.ts\n    \n    \n        \n            \n                \n                    \n                    DeleteUsersId404\n                \n            \n            \n                \n                    The user does not exist in the system\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/users/GetUsers200.ts\n    \n    \n        \n            \n                \n                    \n                    GetUsers200\n                \n            \n            \n                \n                            User[]\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/users/GetUsersId200.ts\n    \n    \n        \n            \n                \n                    \n                    GetUsersId200\n                \n            \n            \n                \n                    \nInformation about the User\n\n\n                \n            \n            \n                \n                            Omit\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/users/GetUsersId404.ts\n    \n    \n        \n            \n                \n                    \n                    GetUsersId404\n                \n            \n            \n                \n                    The user does not exist in the system\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/users/GetUsersMe200.ts\n    \n    \n        \n            \n                \n                    \n                    GetUsersMe200\n                \n            \n            \n                \n                    Information\n\n                \n            \n            \n                \n                            Omit\n\n                \n            \n        \n    \n    wisdom_modules/water-usage-forecasts/src/lib/services/water-usage-history.service.ts\n    \n    \n        \n            \n                \n                    \n                    HistoryResponse\n                \n            \n            \n                \n                        literal type[]\n\n                \n            \n        \n    \n    wisdom_modules/common/src/lib/map/map.component.ts\n    \n    \n        \n            \n                \n                    \n                    LayerConfig\n                \n            \n            \n                \n                    A layer config for the input of MapComponent.inputLayers.\n\n                \n            \n            \n                \n                            Record\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    LayerKey\n                \n            \n            \n                \n                    Type alias to enforce the meaning of the layer keys.\n\n                \n            \n            \n                \n                            string\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/frame/side-bar/side-bar-entries.ts\n    \n    \n        \n            \n                \n                    \n                    nullString\n                \n            \n            \n                \n                    Nullable string.\n\n                \n            \n            \n                \n                        string | null\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SideBarEntries\n                \n            \n            \n                \n                    This type describes the nested data structure of the sidebar.\nThis type consists of nested arrays.\nThe first layer are for labels.\nAll the following are entries with a name, that may be translated if give a\ntranslation key, a possible icon name from ://ionic.io/ioniconshttps,\na path to follow and possible children.\n\n                \n            \n            \n                \n                            SideBarLabel[]\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SideBarEntry\n                \n            \n            \n                \n                    [identifier name, icon name, path]\n\n                \n            \n            \n                \n                            [string, nullString, nullString]\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SideBarEntryLvl1\n                \n            \n            \n                \n                             | SideBarEntry\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SideBarEntryLvl2\n                \n            \n            \n                \n                             | SideBarEntry\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SideBarEntryLvl3\n                \n            \n            \n                \n                            SideBarEntry\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SideBarLabel\n                \n            \n            \n                \n                        [string, nullString, SideBarEntryLvl1[]]\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/users/PatchUsers204.ts\n    \n    \n        \n            \n                \n                    \n                    PatchUsers204\n                \n            \n            \n                \n                    Successfully updated the user\n\n                \n            \n            \n                \n                            Omit\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/users/PatchUsers403.ts\n    \n    \n        \n            \n                \n                    \n                    PatchUsers403\n                \n            \n            \n                \n                    Insufficient privileges to update the users\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/users/PatchUsers404.ts\n    \n    \n        \n            \n                \n                    \n                    PatchUsers404\n                \n            \n            \n                \n                    The user does not exist and therefore cannot be updated\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/users/PatchUsersMe200.ts\n    \n    \n        \n            \n                \n                    \n                    PatchUsersMe200\n                \n            \n            \n                \n                    Successfully updated the user\n\n                \n            \n            \n                \n                            Omit\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/login/PostOAuthToken200.ts\n    \n    \n        \n            \n                \n                    \n                    PostOAuthToken200\n                \n            \n            \n                \n                    The user was authorized successfully\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/login/PostOAuthToken400.ts\n    \n    \n        \n            \n                \n                    \n                    PostOAuthToken400\n                \n            \n            \n                \n                    Bad request made\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/login/PostOAuthToken401.ts\n    \n    \n        \n            \n                \n                    \n                    PostOAuthToken401\n                \n            \n            \n                \n                    Unauthorized\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/login/PostRevoke200.ts\n    \n    \n        \n            \n                \n                    \n                    PostRevoke200\n                \n            \n            \n                \n                    Standard response\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/login/PostRevoke403.ts\n    \n    \n        \n            \n                \n                    \n                    PostRevoke403\n                \n            \n            \n                \n                    The scope of the current user is insufficient\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/users/PutUsers201.ts\n    \n    \n        \n            \n                \n                    \n                    PutUsers201\n                \n            \n            \n                \n                    The user was created successfully\n\n                \n            \n            \n                \n                            User\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/users/PutUsers409.ts\n    \n    \n        \n            \n                \n                    \n                    PutUsers409\n                \n            \n            \n                \n                    A user with the same data already exists\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/types/User.ts\n    \n    \n        \n            \n                \n                    \n                    User\n                \n            \n            \n                \n                    Representation of a user.\n\n                \n            \n            \n                \n                        Partial\n\n                \n            \n        \n    \n    wisdom_modules/water-usage-forecasts/src/lib/services/water-rights.service.ts\n    \n    \n        \n            \n                \n                    \n                    WaterRightDetailRawResponse\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    WaterRightDetailResponse\n                \n            \n            \n                \n                        Partial\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    WaterRightLocationResponse\n                \n            \n            \n                \n                        literal type[]\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ACCESS_TOKEN_KEY   (wisdom_modules/.../auth-storage.service.ts)\n                        \n                        \n                            API_URL   (wisdom_modules/.../map.service.ts)\n                        \n                        \n                            API_URL   (wisdom_modules/.../consumers.service.ts)\n                        \n                        \n                            API_URL   (wisdom_modules/.../water-rights.service.ts)\n                        \n                        \n                            API_URL   (wisdom_modules/.../water-usage-forecasts.service.ts)\n                        \n                        \n                            API_URL   (wisdom_modules/.../water-usage-history.service.ts)\n                        \n                        \n                            AUTH_API   (wisdom_modules/.../user.service.ts)\n                        \n                        \n                            AUTH_URL   (wisdom_modules/.../auth.service.ts)\n                        \n                        \n                            baseUrl   (wisdom_modules/.../environment.prod.ts)\n                        \n                        \n                            baseUrl   (wisdom_modules/.../environment.ts)\n                        \n                        \n                            consumerIcon   (wisdom_modules/.../map-icons.ts)\n                        \n                        \n                            control   (wisdom_modules/.../invert-selection.ts)\n                        \n                        \n                            DB_NAME   (wisdom_modules/.../map.service.ts)\n                        \n                        \n                            environment   (wisdom_modules/.../environment.common.ts)\n                        \n                        \n                            environment   (wisdom_modules/.../environment.prod.ts)\n                        \n                        \n                            environment   (wisdom_modules/.../environment.ts)\n                        \n                        \n                            EXPIRES_IN_KEY   (wisdom_modules/.../auth-storage.service.ts)\n                        \n                        \n                            getOptions   (wisdom_modules/.../user.service.ts)\n                        \n                        \n                            HIDE_SIDEBAR_KEY   (wisdom_modules/.../settings-storage.service.ts)\n                        \n                        \n                            HIDE_USER_BAR_KEY   (wisdom_modules/.../settings-storage.service.ts)\n                        \n                        \n                            httpOptions   (wisdom_modules/.../auth.service.ts)\n                        \n                        \n                            langs   (sidebar.ts)\n                        \n                        \n                            langs   (wisdom_modules/.../static-loader.ts)\n                        \n                        \n                            REFRESH_TOKEN_KEY   (wisdom_modules/.../auth-storage.service.ts)\n                        \n                        \n                            route   (wisdom_modules/.../routing.ts)\n                        \n                        \n                            SCHEMA_V   (wisdom_modules/.../map.service.ts)\n                        \n                        \n                            SCOPES_KEY   (wisdom_modules/.../auth-storage.service.ts)\n                        \n                        \n                            sidebar   (sidebar.ts)\n                        \n                        \n                            TOKEN_HEADER_KEY   (wisdom_modules/.../auth.interceptor.ts)\n                        \n                        \n                            USE_API_URL   (wisdom_modules/.../use-api-url.ts)\n                        \n                        \n                            USE_BASE_URL   (wisdom_modules/.../use-base-url.ts)\n                        \n                        \n                            USE_CACHE   (wisdom_modules/.../use-cache.ts)\n                        \n                        \n                            USE_ERROR_CURTAIN   (wisdom_modules/.../use-error-curtain.ts)\n                        \n                        \n                            USE_LOADER   (wisdom_modules/.../use-loader.ts)\n                        \n                        \n                            waterRightIcon   (wisdom_modules/.../map-icons.ts)\n                        \n                        \n                            wisdomInterface   (wisdom_modules/.../public-api.ts)\n                        \n                        \n                            wisdomInterface   (wisdom_modules/.../public-api.ts)\n                        \n                        \n                            wisdomInterface   (wisdom_modules/.../public-api.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    wisdom_modules/core/src/app/auth/auth-storage.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ACCESS_TOKEN_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"auth-token\"\n                    \n                \n\n            \n                \n                    Key for the access token.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        EXPIRES_IN_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"auth-expires-in\"\n                    \n                \n\n            \n                \n                    Key fo the expiration date.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        REFRESH_TOKEN_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"auth-refresh-token\"\n                    \n                \n\n            \n                \n                    Key for the refresh token.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SCOPES_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"auth-scopes\"\n                    \n                \n\n            \n                \n                    Key for the scopes.\n\n                \n            \n\n        \n    \n\n    wisdom_modules/common/src/lib/map/map.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        API_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"geodata\"\n                    \n                \n\n            \n                \n                    API url for the map to request data from.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DB_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"map-db\"\n                    \n                \n\n            \n                \n                    Indexed DB name.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SCHEMA_V\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 2\n                    \n                \n\n            \n                \n                    Indexed DB schema version.\n\n                \n            \n\n        \n    \n\n    wisdom_modules/water-usage-forecasts/src/lib/services/consumers.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        API_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"consumers/\"\n                    \n                \n\n\n        \n    \n\n    wisdom_modules/water-usage-forecasts/src/lib/services/water-rights.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        API_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"water-rights/\"\n                    \n                \n\n\n        \n    \n\n    wisdom_modules/water-usage-forecasts/src/lib/services/water-usage-forecasts.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        API_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"water-usage-forecasts\"\n                    \n                \n\n            \n                \n                    Route of the API access.\n\n                \n            \n\n        \n    \n\n    wisdom_modules/water-usage-forecasts/src/lib/services/water-usage-history.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        API_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"water-usage-history/\"\n                    \n                \n\n\n        \n    \n\n    wisdom_modules/core/src/app/auth/user.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AUTH_API\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"localhost:8090/auth/\"\n                    \n                \n\n            \n                \n                    Url for the interaction.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : {\n  responseType: \"json\"\n}\n                    \n                \n\n            \n                \n                    Options passed into the get requests.\n\n                \n            \n\n        \n    \n\n    wisdom_modules/core/src/app/auth/auth.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AUTH_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"auth\"\n                    \n                \n\n            \n                \n                    Url for the interaction.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        httpOptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : {\n  headers: new HttpHeaders({\n    \"Content-Type\": \"application/x-www-form-urlencoded\"\n  }),\n  responseType: \"json\",\n  context: new HttpContext()\n    .set(USE_API_URL, true)\n    .set(USE_CACHE, false)\n    .set(USE_ERROR_CURTAIN, false)\n}\n                    \n                \n\n            \n                \n                    Options for the post request in the service.\nAs per reference the content type is always \"x-www-form-urlencoded\" instead\nof \"json\".\nThe response is a json though.\n\n                \n            \n\n        \n    \n\n    wisdom_modules/core/src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : window.location.origin + \"/\"\n                    \n                \n\n            \n                \n                    Base url for making requests.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.assign({}, commonEnvironment, {\n  production: true,\n  baseUrl,\n  apiUrl: baseUrl + \"api/\"\n})\n                    \n                \n\n            \n                \n                    Environment for the dev mode.\n\n                \n            \n\n        \n    \n\n    wisdom_modules/core/src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : window.location.origin + \"/\"\n                    \n                \n\n            \n                \n                    Url used to call the original window location, will be captured by the proxy.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.assign({}, commonEnvironment, {\n  production: false,\n  baseUrl,\n  apiUrl: baseUrl + \"api/\"\n})\n                    \n                \n\n            \n                \n                    Environment for the dev mode.\n\n                \n            \n\n        \n    \n\n    wisdom_modules/water-usage-forecasts/src/lib/map-icons.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        consumerIcon\n                        \n                    \n                \n            \n                \n                    \n                        Default value : icon({\n  iconUrl: \"https://unpkg.com/ionicons@5.5.2/dist/svg/business.svg\",\n  iconSize: [35, 35]\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        waterRightIcon\n                        \n                    \n                \n            \n                \n                    \n                        Default value : icon({\n  iconUrl: \"https://unpkg.com/ionicons@5.5.2/dist/svg/water.svg\",\n  iconSize: [35, 35]\n})\n                    \n                \n\n\n        \n    \n\n    wisdom_modules/common/src/lib/map/invert-selection.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        control\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  invertSelection: (callback: (arg0: MouseEvent) => void, options?: L.ControlOptions) => {\n    let InvertSelection = L.Control.extend({\n      options: {\n        position: \"topright\"\n      },\n      initialize: function (options: any) {\n        L.Util.setOptions(this, options);\n      },\n      onAdd: function (map: L.Map) {\n        let centerContent = [\n          \"is-flex is-align-content-center\",\n          \"is-align-items-center\",\n          \"is-justify-content-center\"\n        ].join(\" \");\n\n        let container = L.DomUtil.create(\n          \"div\",\n          \"select-all-container leaflet-control-layers leaflet-control\"\n        );\n        container.addEventListener(\"click\", callback);\n        let button = L.DomUtil.create(\n          \"a\",\n          \"leaflet-control-layers-toggle \" + centerContent,\n          container\n        );\n        button.style.backgroundImage = \"none\";\n        let icon = L.DomUtil.create(\n          \"ion-icon\",\n          \"select-all-icon\",\n          button\n        );\n        icon.style.pointerEvents = \"none\";\n        icon.setAttribute(\"name\", \"extension-puzzle\");\n        icon.setAttribute(\"size\", \"large\");\n        icon.style.color = \"#a0a0a0\";\n        return container;\n      }\n    });\n    return new InvertSelection(options);\n  }\n}\n                    \n                \n\n            \n                \n                    Custom control to invert the currently selected shapes on a\nMapComponent.\n\n                \n            \n\n        \n    \n\n    wisdom_modules/core/src/environments/environment.common.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  // empty for now but still injected\n}\n                    \n                \n\n            \n                \n                    Environment values for both dev and prod mode.\n\n                \n            \n\n        \n    \n\n    wisdom_modules/core/src/app/settings-storage.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        HIDE_SIDEBAR_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"hide-sidebar\"\n                    \n                \n\n            \n                \n                    Key for the sidebar hide setting.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        HIDE_USER_BAR_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"hide-user-bar\"\n                    \n                \n\n            \n                \n                    key for the user bar hide setting.\n\n                \n            \n\n        \n    \n\n    sidebar.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        langs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  de_DE: {\n    \"water-usage\": \"Wasserverbrauch\"\n  },\n  en_US: {\n    \"water-usage\": \"Water Usage\"\n  }\n}\n                    \n                \n\n            \n                \n                    This constant is used to inject language content into the translator.\nThe keys to use the injected will use the namespace \"sidebar\".\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sidebar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SideBarEntries\n\n                    \n                \n                \n                    \n                        Default value : [\n  [\n    \"Proof of Concept\", \"rocket\", [\n      [\"Example\", \"sparkles\", \"example\"],\n      [\"No Example\", null, null],\n      [\"Pump Models\", null, \"pump-models\"]\n    ]\n  ],\n  [\n    \"sidebar.water-usage\", \"bar-chart\", [\n      [\"water-usage-forecasts.label.name\", \"calendar\", \"water-usage-forecasts\"]\n    ]\n  ]\n]\n                    \n                \n\n            \n                \n                    This constant describes how the sidebar should directly look like.\nFor further explanation check SideBarEntries.\n\n                \n            \n\n        \n    \n\n    wisdom_modules/core/src/app/i18n/static-loader.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        langs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n  de_DE: Object.assign({}, de_DELang, de_DELangCommon, ModuleProvider.langs(\"de_DE\")),\n  en_US: Object.assign({}, en_USLang, en_USLangCommon, ModuleProvider.langs(\"en_US\"))\n}\n                    \n                \n\n            \n                \n                    The languages the loader provides.\n\n                \n            \n\n        \n    \n\n    wisdom_modules/water-usage-forecasts/src/lib/routing.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Route\n\n                    \n                \n                \n                    \n                        Default value : {\n  path: \"water-usage-forecasts\",\n  children: [\n    {\n      path: \"\",\n      component: MapSelectViewComponent,\n    },\n    {\n      path: \"results\",\n      component: ResultDataViewComponent,\n      data: {\n        redirectTo: \"/water-usage-forecasts\",\n        queryParams: \"key\"\n      },\n      canActivate: [QueryParameterGuard]\n    },\n    {\n      path: \"detail\",\n      children: [\n        {\n          path: \"\",\n          pathMatch: \"full\",\n          redirectTo: \"/water-usage-forecasts\"\n        },\n        {\n          path: \"water-right/:waterRight\",\n          component: WaterRightDetailComponent\n        },\n        {\n          path: \"consumer/:consumer\",\n          component: ConsumerDetailComponent\n        }\n      ]\n    },\n    {\n      path: \"**\",\n      redirectTo: \"/water-usage-forecasts\"\n    }\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    wisdom_modules/core/src/app/auth/auth.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TOKEN_HEADER_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Authorization\"\n                    \n                \n\n            \n                \n                    Key for the token.\n\n                \n            \n\n        \n    \n\n    wisdom_modules/common/src/lib/http-context/use-api-url.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        USE_API_URL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new HttpContextToken(() => false)\n                    \n                \n\n            \n                \n                    HttpContextToken used to determine if the api url should be used.\nDefaults to false.\n\n                \n            \n\n        \n    \n\n    wisdom_modules/common/src/lib/http-context/use-base-url.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        USE_BASE_URL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new HttpContextToken(() => true)\n                    \n                \n\n            \n                \n                    HttpContextToken used to determine if the base url should be used.\nDefaults to true.\n\n                \n            \n\n        \n    \n\n    wisdom_modules/common/src/lib/http-context/use-cache.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        USE_CACHE\n                        \n                    \n                \n            \n                \n                    \n                        Type :     miscellaneous\n\n                    \n                \n                \n                    \n                        Default value : new HttpContextToken(() => true)\n                    \n                \n\n            \n                \n                    HttpContextToken used to determine if cache headers should be sent.\nDefaults to true.\n\n                \n            \n\n        \n    \n\n    wisdom_modules/common/src/lib/http-context/use-error-curtain.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        USE_ERROR_CURTAIN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new HttpContextToken(() => true)\n                    \n                \n\n            \n                \n                    HttpContextToken used to determine if requests that error should show\nthe error message on curtain covering the whole main container.\nDisable this if you want to handle errors yourself.\nDefaults to true.\n\n                \n            \n\n        \n    \n\n    wisdom_modules/common/src/lib/http-context/use-loader.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        USE_LOADER\n                        \n                    \n                \n            \n                \n                    \n                        Type :     miscellaneous\n\n                    \n                \n                \n                    \n                        Default value : new HttpContextToken(() => false)\n                    \n                \n\n            \n                \n                    HttpContextToken used to determine if loader should be shown.\nA given string will be run through the translator and therefore may get\ntranslated.\nUseful for longer loading times.\nDefaults to false.\n\n                \n            \n\n        \n    \n\n    wisdom_modules/example/src/public-api.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        wisdomInterface\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WisdomInterface\n\n                    \n                \n                \n                    \n                        Default value : {\n  route: {\n    path: \"example\",\n    component: ExampleComponent\n  },\n  scopes: [\"example\"],\n  translations: {\n    de_DE,\n    en_US\n  }\n}\n                    \n                \n\n            \n                \n                    The wisdom interface for the core module to inject this module.\n\n                \n            \n\n        \n    \n\n    wisdom_modules/water-usage-forecasts/src/public-api.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        wisdomInterface\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WisdomInterface\n\n                    \n                \n                \n                    \n                        Default value : {\n  route,\n  scopes: [\"water-usage-forecasts\"],\n  translations: {\n    de_DE,\n    en_US\n  }\n}\n                    \n                \n\n            \n                \n                    Public interface for the wisdom core to inject this module.\n\n                \n            \n\n        \n    \n\n    wisdom_modules/pump-models/src/public-api.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        wisdomInterface\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WisdomInterface\n\n                    \n                \n                \n                    \n                        Default value : {\n  route: {\n    path: \"pump-models\",\n    component: PumpModelComponent\n  },\n  scopes: [\"example\"],\n  translations: {\n    de_DE,\n    en_US\n  }\n}\n                    \n                \n\n            \n                \n                    The wisdom interface for the core module to inject this module.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
