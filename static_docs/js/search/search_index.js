var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.505,1,1.11]],["body/components/AppComponent.html",[0,0.919,1,1.944,2,1.901,3,0.216,4,0.216,5,1.519,6,1.519,7,1.519,8,0.191,9,3.521,10,0.635,11,2.569,12,4.134,13,4.639,14,5.406,15,4.639,16,1.807,17,2.948,18,1.371,19,2.518,20,2.224,21,2.485,22,5.406,23,0.294,24,1.41,25,6.68,26,0.935,27,3.811,28,0.837,29,4.103,30,0.672,31,0.019,32,1.719,33,0.349,34,0.672,35,1.443,36,1.124,37,3.205,38,4.134,39,4.103,40,4.639,41,0.321,42,0.377,43,0.216,44,0.267,45,2.269,46,4.103,47,2.851,48,4.103,49,2.851,50,4.103,51,1.519,52,2.001,53,1.901,54,1.181,55,2.379,56,1.519,57,0.591,58,1.519,59,1.241,60,1.241,61,2.001,62,1.181,63,1.519,64,1.181,65,1.181,66,1.519,67,1.241,68,1.371,69,1.519,70,1.241,71,1.443,72,1.241,73,1.519,74,1.181,75,1.519,76,1.241,77,1.519,78,1.241,79,2.238,80,1.124,81,1.304,82,2.001,83,1.241,84,1.519,85,0.832,86,1.241,87,1.519,88,1.519,89,1.181,90,1.304,91,1.018,92,1.371,93,1.304,94,1.181,95,1.519,96,1.181,97,1.443,98,1.519,99,0.014,100,0.014]],["title/modules/AppModule.html",[101,1.431,102,2.549]],["body/modules/AppModule.html",[1,2.172,3,0.186,4,0.186,8,0.165,11,1.242,31,0.02,41,0.583,42,0.325,43,0.186,44,0.23,62,1.889,65,1.889,72,1.985,74,1.889,86,1.985,96,1.889,99,0.012,100,0.012,102,5.307,103,1.534,104,2.533,105,3.03,106,3.03,107,3.03,108,3.03,109,3.03,110,4.196,111,3.631,112,4.196,113,4.196,114,4.196,115,4.196,116,4.196,117,2.702,118,1.953,119,1.831,120,3.531,121,3.123,122,4.885,123,2.897,124,4.885,125,4.885,126,6.563,127,1.534,128,2.897,129,4.885,130,2.701,131,4.885,132,3.03,133,2.454,134,4.193,135,2.454,136,1.722,137,1.722,138,1.623,139,3.531,140,3.531,141,3.03,142,3.531,143,2.257,144,4.885,145,3.03,146,3.03,147,3.531,148,2.454,149,3.531,150,3.531,151,3.531,152,3.395,153,3.531,154,2.897,155,3.531,156,3.531,157,3.531,158,3.531,159,3.531,160,3.531,161,3.531,162,2.701,163,5.019,164,6.563,165,6.345,166,2.61]],["title/modules/AppRoutingModule.html",[101,1.431,110,2.345]],["body/modules/AppRoutingModule.html",[0,0.917,3,0.266,4,0.266,8,0.236,31,0.019,41,0.579,42,0.465,43,0.266,44,0.329,62,1.777,65,1.777,74,1.777,99,0.016,100,0.016,101,1.972,103,2.197,110,3.947,123,2.998,128,3.661,141,4.34,145,4.34,146,4.34,167,5.057,168,5.057,169,5.298,170,4.261,171,2.08,172,3.947,173,4.34,174,3.233,175,4.34,176,4.261,177,4.34,178,6.174,179,1.872,180,3.191,181,4.291,182,4.34,183,3.233,184,5.057,185,5.057,186,5.057,187,5.057,188,3.233]],["title/guards/AuthGuard.html",[172,2.345,189,2.549]],["body/guards/AuthGuard.html",[0,0.403,3,0.154,4,0.154,8,0.136,10,0.661,16,0.978,20,1.203,23,0.209,26,0.739,28,0.661,30,0.479,31,0.02,33,0.363,41,0.462,42,0.269,43,0.154,44,0.19,45,2.363,57,0.393,85,0.593,99,0.011,100,0.011,133,2.969,166,1.203,171,1.203,172,2.731,180,1.345,181,4.104,183,4.174,189,2.969,190,2.237,191,2.51,192,4.272,193,3.197,194,4.272,195,3.267,196,5.245,197,3.267,198,4.648,199,3.267,200,5.552,201,4.426,202,4.272,203,4.246,204,1.521,205,2.51,206,3.071,207,3.871,208,4.012,209,2.925,210,0.739,211,0.739,212,3.508,213,3.227,214,2.969,215,3.267,216,1.23,217,1.964,218,2.215,219,2.878,220,2.076,221,3.948,222,3.666,223,2.51,224,4.764,225,4.246,226,4.764,227,2.925,228,3.267,229,4.272,230,4.272,231,4.272,232,3.267,233,3.666,234,2.731,235,3.666,236,4.272,237,3.666,238,1.964,239,4.246,240,2.076,241,4.332,242,2.215,243,0.912,244,0.93,245,2.033,246,2.51,247,1.271,248,1.786,249,1.453,250,2.033,251,2.237,252,2.925,253,2.925,254,1.393,255,4.272,256,2.925,257,2.033,258,1.87,259,2.925,260,2.51,261,3.267,262,2.925,263,2.925,264,1.734,265,1.581,266,2.925,267,2.925,268,2.363,269,1.618,270,2.925,271,2.925,272,2.925,273,4.272,274,5.552,275,3.267,276,2.51,277,2.51,278,2.51,279,3.267,280,2.925,281,2.925,282,2.925,283,2.925,284,2.237,285,2.925,286,3.666,287,4.272,288,2.925,289,2.925,290,2.925,291,2.51,292,1.345,293,2.925,294,2.237,295,2.925,296,2.51,297,2.925,298,5.048,299,2.51,300,2.925,301,3.666,302,2.925,303,2.925,304,2.925,305,2.925,306,1.734,307,2.925,308,2.925,309,2.51,310,2.925,311,2.51,312,2.925,313,2.925,314,2.925,315,2.925,316,3.666,317,2.51,318,2.51,319,2.925]],["title/interceptors/AuthInterceptor.html",[112,2.345,320,2.029]],["body/interceptors/AuthInterceptor.html",[3,0.216,4,0.216,8,0.191,10,0.935,16,1.369,23,0.293,26,0.934,28,0.836,30,0.67,31,0.02,33,0.459,41,0.502,42,0.376,43,0.216,44,0.267,45,2.266,57,0.496,99,0.014,100,0.014,112,3.452,127,1.78,179,1.999,198,4.633,204,1.655,205,3.515,206,3.553,210,0.934,211,0.934,212,4.199,213,3.452,214,3.753,215,4.13,219,2.123,240,2.485,243,1.152,244,1.302,245,2.846,248,1.828,254,0.874,261,3.132,268,3.792,279,3.132,286,3.515,320,2.987,321,2.618,322,3.132,323,4.912,324,5.185,325,3.149,326,3.862,327,4.096,328,2.618,329,4.383,330,4.106,331,4.096,332,5.4,333,6.042,334,5.4,335,4.13,336,4.634,337,5.4,338,2.618,339,3.452,340,3.132,341,1.179,342,3.132,343,1.516,344,5.4,345,4.096,346,3.515,347,5.4,348,3.515,349,4.096,350,2.123,351,4.096,352,4.096,353,3.132]],["title/injectables/AuthService.html",[207,2.175,243,0.783]],["body/injectables/AuthService.html",[3,0.168,4,0.168,8,0.149,10,0.983,20,1.313,23,0.229,26,0.787,28,0.946,30,0.947,31,0.02,33,0.556,34,1.181,41,0.511,42,0.293,43,0.168,44,0.208,57,0.562,99,0.012,100,0.012,127,1.387,138,1.468,166,1.313,179,1.685,180,1.468,183,2.91,193,3.466,196,3.481,198,4.732,201,4.019,204,1.453,207,2.699,210,1.057,211,1.057,216,1.527,219,2.75,220,1.872,233,3.906,234,2.91,240,2.69,243,0.971,244,1.015,247,1.387,248,1.922,251,2.442,254,1.234,264,2.699,265,2.352,269,1.766,325,1.387,343,1.182,350,1.655,354,1.557,355,2.442,356,4.552,357,4.552,358,4.057,359,3.906,360,4.552,361,2.219,362,3.696,363,3.193,364,3.391,365,3.481,366,2.91,367,4.552,368,5.113,369,3.193,370,4.552,371,4.675,372,4.552,373,3.193,374,4.552,375,4.552,376,3.193,377,4.552,378,4.552,379,3.193,380,2.36,381,2.219,382,2.518,383,4.057,384,1.766,385,2.041,386,2.74,387,2.74,388,3.193,389,2.74,390,3.193,391,1.557,392,2.442,393,2.041,394,2.74,395,1.893,396,2.699,397,2.74,398,2.442,399,3.906,400,3.481,401,3.906,402,2.74,403,3.145,404,2.74,405,4.248,406,3.193,407,2.74,408,1.893,409,1.893,410,2.74,411,5.782,412,5.782,413,4.552,414,4.552,415,4.552,416,3.193,417,4.552,418,4.552,419,3.193]],["title/injectables/AuthStorageService.html",[206,2.029,243,0.783]],["body/injectables/AuthStorageService.html",[3,0.133,4,0.133,8,0.118,10,0.86,20,1.043,23,0.181,26,0.664,28,1.028,30,1.126,31,0.02,32,1.932,33,0.497,34,1.187,36,1.82,41,0.198,42,0.233,43,0.133,44,0.302,45,1.402,57,0.538,85,1.127,99,0.01,100,0.01,179,1.915,197,4.252,198,4.619,201,4.066,206,2.125,210,1.012,211,1.012,213,3.74,216,1.106,219,3.033,220,1.58,238,3.095,243,0.82,247,1.101,248,1.565,249,1.684,254,1.249,292,2.379,296,3.296,341,1.845,354,1.236,420,5.148,421,1.762,422,3.296,423,3.296,424,3.957,425,3.74,426,3.296,427,3.296,428,1.873,429,4.637,430,5.56,431,4.637,432,4.781,433,2.175,434,5.021,435,3.236,436,2.669,437,3.296,438,2.535,439,3.957,440,3.841,441,3.598,442,3.598,443,2.535,444,2.535,445,2.175,446,2.535,447,2.535,448,6.641,449,2.535,450,2.535,451,4.771,452,5.021,453,2.5,454,2.535,455,2.535,456,3.841,457,4.637,458,3.841,459,2.535,460,2.535,461,2.535,462,2.175,463,2.535,464,2.535,465,2.535,466,2.535,467,3.296,468,3.547,469,2.175,470,3.547,471,2.175,472,3.547,473,3.547,474,2.175,475,2.535,476,2.535,477,2.535,478,2.535,479,3.296,480,2.175,481,2.175,482,2.535,483,3.841,484,2.535,485,2.535,486,2.535,487,2.535,488,3.296,489,2.535,490,2.535,491,2.535,492,2.535,493,2.535,494,2.535,495,2.535,496,2.535]],["title/components/BarChartComponent.html",[0,0.505,59,1.11]],["body/components/BarChartComponent.html",[0,0.811,1,0.88,2,1.497,3,0.153,4,0.153,5,1.576,6,1.077,7,1.077,8,0.136,10,0.659,11,2.165,16,1.423,18,0.973,19,2.417,23,0.208,24,1.11,26,0.736,28,1.046,30,0.824,31,0.02,32,1.874,33,0.554,41,0.433,42,0.267,43,0.153,44,0.19,47,3.849,51,1.077,52,1.576,53,1.948,54,0.838,55,2.05,56,1.077,57,0.584,58,1.077,59,1.676,60,1.862,61,1.576,62,0.838,63,1.077,64,0.838,65,0.838,66,1.077,67,0.88,68,0.973,69,1.077,70,0.88,71,1.023,72,0.88,73,1.077,74,0.838,75,1.077,76,0.88,77,1.077,78,0.88,79,1.863,80,0.797,81,0.925,82,1.576,83,0.88,84,1.077,85,1.348,86,0.88,87,1.077,88,1.077,89,0.838,90,0.925,91,0.722,92,0.973,93,0.925,94,0.838,95,1.077,96,0.838,97,1.023,98,1.077,99,0.011,100,0.011,136,1.419,137,1.419,179,1.077,204,0.797,210,0.871,211,1.1,238,1.338,248,0.88,249,1.772,254,1.074,265,1.077,306,2.524,343,1.077,393,4.252,428,2.076,497,5.88,498,2.226,499,2.524,500,3.654,501,3.498,502,4.32,503,5.123,504,4.32,505,4.32,506,4.236,507,3.654,508,2.524,509,2.498,510,3.849,511,2.911,512,2.076,513,3.85,514,2.911,515,2.076,516,4.257,517,3.498,518,2.911,519,2.722,520,3.654,521,3.654,522,3.256,523,3.654,524,4.753,525,2.911,526,3.654,527,2.959,528,4.753,529,3.256,530,2.911,531,3.654,532,3.498,533,1.726,534,2.498,535,2.911,536,3.256,537,5.457,538,2.911,539,1.861,540,2.911,541,2.498,542,3.654,543,2.023,544,1.419,545,2.226,546,2.023,547,2.498,548,2.498,549,2.498,550,2.498,551,2.498,552,4.32,553,2.498,554,2.498,555,2.498,556,3.654,557,2.498,558,4.32,559,2.226,560,4.32,561,2.498,562,2.498,563,3.654,564,2.498,565,2.498,566,1.861]],["title/interceptors/BaseUrlInterceptor.html",[113,2.345,320,2.029]],["body/interceptors/BaseUrlInterceptor.html",[3,0.234,4,0.234,8,0.207,10,0.882,16,1.487,23,0.318,26,0.985,28,0.688,30,0.728,31,0.019,33,0.378,41,0.536,42,0.409,43,0.234,44,0.409,57,0.409,99,0.014,100,0.014,113,3.642,127,1.932,138,2.045,143,4.381,210,0.769,211,0.769,217,2.619,240,2.586,243,1.216,244,1.414,248,1.723,254,0.949,268,3.878,321,2.843,325,3.097,326,4.019,328,2.843,329,4.238,330,4.238,336,4.889,338,2.843,339,3.642,366,3.642,384,2.46,391,3.583,567,4.889,568,3.401,569,6.853,570,4.447,571,5.697,572,5.069,573,3.817,574,3.401,575,4.447,576,6.629,577,4.447,578,4.447,579,4.447,580,4.447,581,4.447,582,2.843,583,4.447,584,4.447]],["title/directives/BulmaIsToggleableDirective.html",[54,1.056,94,1.056]],["body/directives/BulmaIsToggleableDirective.html",[3,0.193,4,0.193,8,0.171,10,0.568,18,1.227,19,1.677,23,0.263,24,1.308,26,0.868,28,1.052,30,0.936,31,0.02,32,1.595,33,0.522,34,1.133,35,1.764,36,1.374,41,0.287,42,0.337,43,0.193,44,0.451,54,1.912,57,0.337,93,1.167,94,1.444,99,0.013,100,0.013,210,0.635,211,0.635,238,2.628,242,2.601,249,1.912,254,0.783,292,2.628,365,3.836,385,2.346,428,2.446,508,2.974,533,2.176,536,5.625,544,1.789,585,5.94,586,3.149,587,5.016,588,6.143,589,4.305,590,4.305,591,7.226,592,6.024,593,7.02,594,4.982,595,5.715,596,4.305,597,4.305,598,5.715,599,5.016,600,5.016,601,5.715,602,5.715,603,3.149,604,3.67,605,2.306,606,3.67,607,3.207,608,3.67,609,3.67,610,3.67,611,3.67,612,3.149,613,3.67,614,3.67,615,3.67,616,3.67,617,3.67,618,3.67,619,3.149,620,5.715,621,3.67,622,5.016,623,3.67]],["title/interceptors/CacheInterceptor.html",[114,2.345,320,2.029]],["body/interceptors/CacheInterceptor.html",[3,0.228,4,0.228,8,0.202,16,1.45,23,0.31,24,1.462,26,0.969,28,0.961,30,0.71,31,0.02,33,0.528,35,1.971,36,1.536,41,0.513,42,0.399,43,0.228,44,0.282,57,0.399,80,1.968,99,0.014,100,0.014,114,3.583,127,1.884,138,1.994,210,0.75,211,0.75,240,2.555,243,1.196,244,1.379,249,2.005,254,1.325,265,2.517,268,3.436,321,2.772,325,1.884,326,3.583,328,3.583,329,4.197,330,4.197,338,2.772,339,3.583,340,3.316,341,1.248,350,2.248,353,3.316,382,3.101,624,3.721,625,6.211,626,6.211,627,4.336,628,4.336,629,4.336,630,4.287,631,3.316,632,4.336,633,3.721,634,4.336,635,4.336,636,4.336,637,5.605,638,3.721,639,4.336,640,4.336,641,4.336,642,4.336,643,4.336,644,3.721,645,4.336,646,4.336,647,3.721,648,6.211,649,4.336,650,4.336,651,6.211,652,4.336,653,4.336,654,4.336]],["title/modules/ChartModule.html",[101,1.431,655,2.175]],["body/modules/ChartModule.html",[3,0.259,4,0.259,8,0.229,10,0.76,31,0.019,41,0.537,42,0.452,43,0.259,44,0.32,59,2.281,60,1.487,70,2.281,71,1.728,99,0.015,100,0.015,101,2.366,103,2.135,104,3.145,117,3.356,118,2.718,119,2.548,121,3.878,123,2.914,128,3.597,188,3.878,214,4.216,500,5.206,655,4.427,656,4.217,657,4.217,658,4.217,659,4.914,660,5.206,661,3.758,662,6.066]],["title/components/ErrorComponent.html",[0,0.505,62,1.056]],["body/components/ErrorComponent.html",[0,0.875,1,1.073,2,1.723,3,0.187,4,0.187,5,1.313,6,1.313,7,1.313,8,0.165,10,0.758,11,2.414,16,1.638,17,2.737,18,1.186,19,2.479,21,2.253,23,0.254,24,1.278,26,0.847,27,3.59,28,0.937,30,0.581,31,0.02,32,1.558,33,0.477,34,0.802,35,1.247,36,0.972,41,0.383,42,0.326,43,0.187,44,0.231,51,1.313,52,1.814,53,1.723,54,1.021,55,2.241,56,1.313,57,0.584,58,1.313,59,1.073,60,1.073,61,1.814,62,1.743,63,1.313,64,1.021,65,1.021,66,1.313,67,1.073,68,1.186,69,1.313,70,1.073,71,1.247,72,1.073,73,1.313,74,1.021,75,1.313,76,1.073,77,1.313,78,1.073,79,2.078,80,0.972,81,1.128,82,1.814,83,1.073,84,1.313,85,0.719,86,1.073,87,1.313,88,1.313,89,1.021,90,1.128,91,0.88,92,1.186,93,1.128,94,1.021,95,1.313,96,1.021,97,1.247,98,1.313,99,0.012,100,0.012,171,1.459,204,1.538,208,2.103,210,0.613,211,0.971,221,3.768,234,3.133,248,1.073,275,5.026,284,5.394,294,5.329,318,4.205,343,1.313,453,2.016,488,4.205,515,3.204,544,1.729,663,3.044,664,4.9,665,4.9,666,6.056,667,4.9,668,3.044,669,4.631,670,4.9,671,3.547,672,4.205,673,4.9,674,4.631,675,3.133,676,3.747,677,3.547,678,4.205,679,3.547,680,3.547,681,3.547,682,3.547,683,3.547,684,3.747,685,3.133]],["title/components/ExampleComponent.html",[0,0.505,64,1.056]],["body/components/ExampleComponent.html",[0,0.946,1,1.36,2,2.017,3,0.237,4,0.237,5,1.664,6,1.664,7,1.664,8,0.21,10,0.696,11,2.472,17,2.192,18,1.503,19,2.528,21,2.638,31,0.019,41,0.352,42,0.413,43,0.237,44,0.293,49,3.987,51,1.664,52,2.124,53,2.017,54,1.295,55,2.464,56,1.664,57,0.612,58,1.664,59,1.36,60,1.36,61,2.124,62,1.295,63,1.664,64,1.916,65,1.295,66,1.664,67,1.36,68,1.503,69,1.664,70,1.36,71,1.581,72,1.36,73,1.664,74,1.295,75,1.664,76,1.36,77,1.664,78,1.36,79,2.339,80,1.232,81,1.43,82,2.124,83,1.36,84,1.664,85,0.912,86,1.36,87,1.664,88,1.664,89,1.295,90,1.43,91,1.116,92,1.503,93,1.43,94,1.295,95,1.664,96,1.295,97,1.581,98,1.664,99,0.015,100,0.015,512,2.797,686,3.859,687,4.924,688,3.946,689,5.737,690,5.737]],["title/modules/ExampleModule.html",[101,1.431,691,2.549]],["body/modules/ExampleModule.html",[3,0.262,4,0.262,8,0.232,10,0.77,31,0.019,41,0.54,42,0.457,43,0.262,44,0.324,64,2.174,99,0.015,100,0.015,101,2.384,103,2.161,104,3.169,111,3.989,117,3.381,118,2.752,119,2.579,121,3.907,123,3.624,128,3.624,135,4.248,136,2.425,137,2.425,138,2.287,188,3.907,687,5.245,688,3.624,691,5.167,692,4.269,693,4.269,694,4.974,695,4.269,696,4.974,697,4.974]],["title/injectables/ExampleService.html",[243,0.783,698,2.805]],["body/injectables/ExampleService.html",[3,0.295,4,0.295,8,0.261,10,0.867,20,2.305,31,0.019,41,0.438,42,0.515,43,0.295,44,0.365,99,0.017,100,0.017,216,1.89,243,1.401,247,2.435,354,2.732,688,3.893,698,5.021,699,4.809,700,6.565,701,5.634]],["title/interfaces/ForecastEntry.html",[702,1.226,703,2.345]],["body/interfaces/ForecastEntry.html",[3,0.256,4,0.256,8,0.226,23,0.348,24,1.57,31,0.02,33,0.512,34,1.12,43,0.345,57,0.446,91,1.205,99,0.015,100,0.015,341,1.398,395,4.057,453,2.99,685,3.104,702,2.188,703,4.374,704,2.686,705,2.11,706,3.104,707,3.374,708,4.497,709,3.966,710,2.686,711,3.713,712,4.185,713,3.849,714,3.713,715,3.713,716,3.713,717,3.713,718,3.713,719,3.713,720,3.374,721,3.374,722,3.374,723,4.605,724,3.713,725,3.374,726,3.713,727,2.879,728,3.374,729,3.713,730,3.713]],["title/interfaces/ForecastResponse.html",[702,1.226,710,2.029]],["body/interfaces/ForecastResponse.html",[3,0.254,4,0.254,8,0.225,23,0.345,24,1.562,31,0.02,33,0.608,34,1.117,43,0.343,57,0.443,91,1.195,99,0.015,100,0.015,341,1.387,395,2.856,453,2.985,685,3.079,702,2.18,703,4.169,704,2.665,705,2.093,706,3.079,707,3.348,708,3.83,709,3.314,710,3.314,711,5.219,712,4.164,713,3.83,714,5.219,715,3.684,716,3.684,717,3.684,718,3.684,719,3.684,720,3.348,721,3.348,722,3.348,723,4.582,724,3.684,725,3.348,726,3.684,727,2.856,728,3.348,729,3.684,730,3.684,731,4.742]],["title/interfaces/ForecastUsage.html",[702,1.226,727,2.175]],["body/interfaces/ForecastUsage.html",[3,0.249,4,0.249,8,0.22,23,0.338,24,1.543,31,0.02,33,0.576,34,1.166,43,0.34,57,0.434,91,1.172,99,0.015,100,0.015,341,1.36,395,2.801,453,3.098,685,3.02,702,2.161,703,4.132,704,2.613,705,2.052,706,3.02,707,3.283,708,3.784,709,3.274,710,2.613,711,3.612,712,4.114,713,3.784,714,3.612,715,3.612,716,3.612,717,3.612,718,3.612,719,3.612,720,3.283,721,3.283,722,3.283,723,5.337,724,3.612,725,3.283,726,3.612,727,3.509,728,4.709,729,5.182,730,5.182]],["title/components/FrameComponent.html",[0,0.505,65,1.056]],["body/components/FrameComponent.html",[0,0.803,1,0.86,2,1.471,3,0.15,4,0.15,5,1.052,6,1.052,7,1.052,8,0.132,10,0.647,11,2.277,17,1.386,18,0.95,19,2.409,21,1.924,23,0.203,26,0.724,28,0.945,30,0.813,31,0.02,32,1.579,33,0.422,37,2.481,38,3.2,41,0.456,42,0.261,43,0.15,44,0.185,45,1.572,51,1.052,52,1.549,53,1.471,54,0.818,55,2.027,56,1.052,57,0.58,58,1.052,59,0.86,60,1.766,61,1.549,62,0.818,63,1.052,64,0.818,65,1.577,66,1.052,67,0.86,68,0.95,69,1.052,70,0.86,71,1,72,0.86,73,1.052,74,0.818,75,1.052,76,0.86,77,1.052,78,0.86,79,1.838,80,0.779,81,0.904,82,1.549,83,0.86,84,1.052,85,0.576,86,0.86,87,1.052,88,1.052,89,0.818,90,0.904,91,0.705,92,0.95,93,0.904,94,0.818,95,1.052,96,0.818,97,1,98,1.052,99,0.011,100,0.011,119,2.169,166,1.169,171,1.169,183,3.501,193,3.485,199,2.174,204,1.501,206,3.029,207,3.742,208,3.986,210,0.859,211,0.859,212,3.806,213,3.501,216,1.205,218,2.169,219,2.169,220,1.721,221,2.481,238,2.807,239,4.188,242,3.165,245,2.908,248,1.657,249,1.577,254,0.893,299,2.439,359,5.239,428,2.04,512,3.426,515,2.04,605,1.924,732,2.439,733,4.184,734,4.184,735,4.184,736,4.184,737,5.477,738,4.184,739,4.261,740,4.261,741,2.439,742,5.477,743,3.806,744,2.843,745,2.04,746,4.184,747,4.261,748,2.843,749,4.184,750,4.184,751,2.439,752,2.843,753,4.953,754,3.029,755,5.274,756,2.439,757,2.843,758,2.439,759,2.843,760,2.439,761,2.843,762,2.843,763,2.843,764,2.843,765,2.843,766,2.843,767,4.184,768,2.439,769,4.184,770,2.439,771,2.843,772,2.843,773,2.439,774,2.843,775,2.439,776,2.908,777,4.184,778,4.184,779,4.184,780,4.184,781,4.184,782,4.184,783,4.184,784,4.184]],["title/components/IonIconComponent.html",[0,0.505,67,1.11]],["body/components/IonIconComponent.html",[0,0.948,1,1.168,2,1.826,3,0.203,4,0.203,5,1.429,6,1.429,7,1.429,8,0.18,10,0.598,11,2.371,15,5.384,18,1.291,19,2.502,23,0.276,28,0.598,31,0.019,33,0.328,34,0.85,40,4.456,41,0.302,42,0.355,43,0.203,44,0.251,49,3.609,51,1.429,52,1.922,53,1.826,54,1.112,55,2.322,56,1.429,57,0.652,58,1.429,59,1.168,60,1.168,61,1.922,62,1.112,63,1.429,64,1.112,65,1.112,66,1.429,67,1.898,68,1.961,69,1.429,70,1.168,71,1.358,72,1.168,73,1.429,74,1.112,75,1.429,76,1.168,77,1.429,78,1.168,79,2.172,80,1.058,81,1.228,82,1.922,83,1.168,84,1.429,85,0.783,86,1.168,87,1.429,88,1.429,89,1.112,90,1.228,91,0.958,92,1.291,93,1.228,94,1.112,95,1.429,96,1.112,97,1.358,98,1.429,99,0.013,100,0.013,217,2.885,222,4.456,258,3.32,323,3.971,442,2.692,508,3.079,515,2.532,522,3.971,544,2.532,676,3.971,785,4.456,786,3.971,787,3.314,788,6.742,789,6.274,790,3.609,791,5.193,792,5.193,793,5.193,794,3.971,795,5.193,796,5.156,797,3.862,798,5.193,799,5.193,800,5.193,801,5.193,802,5.193,803,5.193,804,5.193,805,2.684]],["title/directives/LangSelectorDirective.html",[54,1.056,96,1.056]],["body/directives/LangSelectorDirective.html",[3,0.222,4,0.222,8,0.197,10,0.852,18,1.409,19,1.84,23,0.302,26,0.952,28,1.005,30,0.69,31,0.019,32,1.34,33,0.468,34,0.901,41,0.43,42,0.387,43,0.222,44,0.275,53,2.155,54,2.027,57,0.387,93,1.34,96,1.584,97,2.284,99,0.014,100,0.014,136,2.056,137,2.056,204,1.679,210,0.729,211,0.729,216,2.027,234,3.519,238,2.53,248,1.275,254,0.9,258,3.519,306,3.263,341,1.94,343,1.561,346,5.259,380,3.177,442,2.853,508,3.263,510,4.893,533,2.5,544,2.056,590,5.259,596,4.723,597,4.723,603,3.618,607,3.519,612,3.618,619,3.618,776,4.515,806,5.783,807,3.618,808,4.209,809,5.017,810,6.496,811,4.216,812,4.216,813,4.216,814,4.683,815,5.504,816,4.686,817,4.216,818,5.504,819,4.216,820,4.216]],["title/components/LineChartComponent.html",[0,0.505,70,1.11]],["body/components/LineChartComponent.html",[0,0.811,1,0.879,2,1.496,3,0.153,4,0.153,5,1.574,6,1.076,7,1.076,8,0.135,10,0.658,11,2.164,16,1.422,18,0.972,19,2.417,23,0.208,24,1.109,26,0.736,28,1.046,30,0.823,31,0.02,32,1.873,33,0.554,41,0.433,42,0.267,43,0.153,44,0.189,47,3.847,51,1.076,52,1.574,53,1.946,54,0.837,55,2.049,56,1.076,57,0.584,58,1.076,59,0.879,60,1.522,61,1.574,62,0.837,63,1.076,64,0.837,65,0.837,66,1.076,67,0.879,68,0.972,69,1.076,70,1.675,71,2.164,72,0.879,73,1.076,74,0.837,75,1.076,76,0.879,77,1.076,78,0.879,79,1.862,80,0.797,81,0.924,82,1.574,83,0.879,84,1.076,85,1.348,86,0.879,87,1.076,88,1.076,89,0.837,90,0.924,91,0.721,92,0.972,93,0.924,94,0.837,95,1.076,96,0.837,97,1.022,98,1.076,99,0.011,100,0.011,136,1.417,137,1.417,179,1.076,204,0.797,210,0.87,211,1.099,238,1.337,248,0.879,249,1.772,254,1.074,265,1.076,306,2.522,343,1.076,393,4.251,428,2.074,498,2.223,499,2.522,501,3.496,502,4.317,503,5.123,504,4.317,505,4.317,506,4.234,507,3.65,508,2.522,509,2.495,510,3.847,512,2.074,513,3.847,515,2.074,517,3.496,519,2.719,520,3.65,521,3.65,522,3.253,523,3.65,524,4.751,526,3.65,527,2.956,528,4.751,529,3.253,531,3.65,532,3.496,533,1.724,534,2.495,536,3.253,537,5.455,539,1.858,541,2.495,542,3.65,543,2.02,544,1.417,545,2.223,546,2.02,547,2.495,548,2.495,549,2.495,550,2.495,551,2.495,552,4.317,553,2.495,554,2.495,555,2.495,556,3.65,557,2.495,558,4.317,559,2.223,560,4.317,561,2.495,562,2.495,563,3.65,564,2.495,565,2.495,566,1.858,821,5.878,822,2.907,823,2.907,824,4.254,825,2.907,826,2.907,827,2.907,828,2.907,829,2.907,830,2.907,831,2.495]],["title/components/LoaderComponent.html",[0,0.505,72,1.11]],["body/components/LoaderComponent.html",[0,0.738,1,0.984,2,1.622,3,0.171,4,0.171,5,1.204,6,1.204,7,1.204,8,0.152,11,2.362,12,3.527,16,1.542,17,2.613,18,1.087,19,2.453,21,2.121,23,0.33,24,1.203,26,0.798,27,3.457,28,0.902,30,0.532,31,0.02,32,1.466,33,0.392,34,0.755,35,1.622,36,1.468,41,0.361,42,0.299,43,0.171,44,0.212,51,1.204,52,1.707,53,1.622,54,0.936,55,2.158,56,1.204,57,0.566,58,1.204,59,0.984,60,0.984,61,1.707,62,0.936,63,1.204,64,0.936,65,0.936,66,1.204,67,0.984,68,1.087,69,1.204,70,0.984,71,1.144,72,1.764,73,1.204,74,0.936,75,1.204,76,0.984,77,1.204,78,0.984,79,1.984,80,0.891,81,1.034,82,1.707,83,0.984,84,1.204,85,0.659,86,0.984,87,1.204,88,1.204,89,0.936,90,1.034,91,0.807,92,1.087,93,1.034,94,0.936,95,1.204,96,0.936,97,1.144,98,1.204,99,0.012,100,0.012,119,2.391,154,3.177,204,0.891,210,0.563,211,0.563,216,1.328,343,1.204,435,1.799,501,2.261,512,2.249,515,1.586,566,3.426,605,2.121,832,2.792,833,2.792,834,3.958,835,5.359,836,4.612,837,4.599,838,5.359,839,2.079,840,3.457,841,3.253,842,3.253,843,3.253,844,3.253,845,2.488,846,3.253,847,3.253,848,3.253,849,3.253,850,4.612,851,2.488,852,2.792,853,3.253,854,5.283,855,6.156,856,6.718,857,5.831,858,5.831,859,4.612,860,5.359,861,5.359,862,3.253,863,6.394,864,3.253,865,4.612,866,3.253,867,3.253,868,3.253,869,3.253,870,3.253,871,3.65,872,4.612,873,3.527,874,4.612,875,5.831,876,4.612,877,4.612,878,4.612,879,4.098,880,3.253,881,3.958,882,3.253,883,3.253,884,3.253,885,3.253,886,3.253,887,5.359,888,3.253,889,2.792,890,3.253,891,2.792,892,3.253,893,3.253]],["title/guards/LoaderGuard.html",[176,2.345,189,2.549]],["body/guards/LoaderGuard.html",[3,0.254,4,0.254,8,0.225,16,1.61,20,1.981,23,0.345,26,1.036,28,0.927,30,0.789,31,0.02,33,0.509,41,0.534,42,0.443,43,0.254,44,0.314,57,0.551,99,0.015,100,0.015,166,1.981,171,1.981,176,3.83,181,4.878,190,3.684,204,1.32,210,1.036,211,1.036,216,1.725,221,3.552,223,4.134,224,5.856,225,4.988,226,5.856,240,2.683,241,5.597,242,3.106,243,1.279,244,1.531,247,2.093,254,1.028,343,1.783,839,3.079,840,4.046,845,3.684,894,4.134,895,4.817,896,4.817,897,3.552,898,4.817]],["title/interceptors/LoaderInterceptor.html",[115,2.345,320,2.029]],["body/interceptors/LoaderInterceptor.html",[3,0.238,4,0.238,8,0.211,16,1.511,23,0.324,26,0.996,28,0.891,30,0.74,31,0.02,33,0.489,34,0.74,36,1.239,41,0.539,42,0.416,43,0.238,44,0.294,57,0.529,99,0.015,100,0.015,115,3.681,127,1.965,138,2.079,204,1.239,210,0.996,211,0.996,216,1.658,240,2.896,243,1.229,244,1.438,254,1.423,265,1.674,268,3.504,321,2.891,325,1.965,326,3.681,328,3.681,329,4.264,330,4.264,338,2.891,339,3.681,340,3.458,343,1.674,409,3.954,630,4.403,633,4.941,647,4.941,839,2.891,840,3.954,845,3.458,897,2.681,899,3.88,900,4.522,901,4.522,902,5.758,903,4.522,904,2.681,905,4.522,906,4.522,907,4.522,908,4.522,909,4.522,910,4.522,911,4.522,912,4.522,913,3.88,914,5.758]],["title/injectables/LoaderService.html",[243,0.783,840,2.175]],["body/injectables/LoaderService.html",[3,0.215,4,0.215,8,0.19,20,1.676,23,0.292,24,1.404,26,0.931,28,1.097,30,0.881,31,0.02,32,1.711,33,0.512,34,1.091,35,2.254,36,1.756,41,0.421,42,0.375,43,0.215,44,0.265,57,0.375,80,1.756,99,0.014,100,0.014,210,0.705,211,0.705,240,2.479,243,1.149,244,1.296,247,1.771,249,2.115,254,1.149,265,2.534,354,1.987,428,2.624,837,5.172,840,3.191,897,3.952,915,3.497,916,6.027,917,6.027,918,6.027,919,6.027,920,5.382,921,6.41,922,5.172,923,5.382,924,6.665,925,4.075,926,5.382,927,2.605,928,4.075,929,4.075,930,6.665,931,4.075,932,4.075,933,4.075,934,4.075,935,4.075,936,4.075,937,4.075,938,4.075,939,4.075,940,4.075,941,4.075,942,5.382,943,4.075,944,4.075,945,5.382,946,4.075,947,5.382,948,4.075,949,4.075]],["title/components/LoginComponent.html",[0,0.505,74,1.056]],["body/components/LoginComponent.html",[0,0.804,1,0.861,2,1.473,3,0.15,4,0.15,5,1.053,6,1.053,7,1.053,8,0.133,10,0.769,11,2.278,12,3.203,17,1.387,18,0.951,19,2.41,21,1.925,23,0.204,24,1.092,26,0.724,28,0.848,30,0.466,31,0.02,32,1.331,33,0.466,34,0.686,35,1.473,36,0.78,37,2.483,38,3.203,41,0.494,42,0.262,43,0.15,44,0.185,51,1.053,52,2.028,53,1.927,54,0.819,55,2.028,56,1.053,57,0.561,58,1.053,59,0.861,60,0.861,61,1.55,62,0.819,63,1.053,64,0.819,65,0.819,66,1.053,67,0.861,68,0.951,69,1.053,70,0.861,71,1.001,72,0.861,73,1.053,74,1.578,75,1.053,76,0.861,77,1.053,78,0.861,79,1.839,80,0.78,81,0.905,82,1.55,83,0.861,84,1.053,85,0.577,86,0.861,87,1.053,88,1.053,89,0.819,90,0.905,91,0.706,92,0.951,93,0.905,94,0.819,95,1.053,96,0.819,97,1.001,98,1.053,99,0.011,100,0.011,130,2.176,171,1.171,179,1.55,183,4.493,193,3.166,196,2.176,204,1.501,206,3.031,207,3.744,208,3.987,210,0.724,211,0.724,212,3.808,214,2.91,215,3.203,216,1.578,218,2.171,219,2.576,220,1.723,239,4.191,245,1.978,246,2.442,248,1.658,249,1.43,260,2.442,261,2.176,268,1.574,269,1.574,275,4.955,276,4.264,278,2.442,279,2.176,284,3.203,292,1.925,301,2.442,309,2.442,311,2.442,316,2.442,368,3.8,371,2.176,400,3.203,435,2.317,512,3.159,527,2.91,532,3.453,533,1.687,543,1.978,544,2.042,605,2.284,607,2.677,741,2.442,773,2.442,775,2.442,816,4.191,950,2.442,951,4.188,952,5.84,953,4.969,954,4.188,955,4.188,956,4.188,957,4.188,958,5.48,959,2.846,960,4.188,961,4.188,962,4.188,963,3.594,964,4.188,965,4.188,966,2.846,967,2.846,968,3.594,969,2.846,970,3.594,971,2.846,972,2.846,973,2.846,974,2.846,975,2.846,976,2.846,977,2.846,978,2.846,979,2.846,980,2.846,981,2.846,982,2.442,983,2.846,984,2.442,985,3.594,986,4.188,987,4.188,988,2.846,989,2.846,990,2.846,991,2.846,992,2.846,993,2.442,994,4.188,995,4.188,996,4.188,997,4.188,998,4.188]],["title/components/MapComponent.html",[0,0.505,76,1.11]],["body/components/MapComponent.html",[0,0.55,1,0.405,2,0.805,3,0.07,4,0.07,5,0.847,6,0.495,7,0.495,8,0.062,10,0.354,11,1.531,16,0.765,17,1.463,18,0.447,19,2.08,23,0.096,24,0.926,26,0.396,27,2.106,28,1.024,30,0.582,31,0.02,32,1.479,33,0.566,34,0.96,35,1.925,36,1.606,41,0.364,42,0.123,43,0.07,44,0.087,45,2.714,49,2.775,51,0.495,52,1.478,53,1.249,54,0.385,55,1.315,56,0.495,57,0.539,58,0.495,59,0.405,60,0.405,61,0.847,62,0.385,63,0.495,64,0.385,65,0.385,66,0.495,67,0.405,68,0.447,69,0.495,70,0.405,71,0.47,72,0.405,73,0.495,74,0.385,75,0.495,76,1.075,77,0.495,78,0.405,79,1.111,80,1.903,81,0.425,82,0.847,83,0.405,84,0.495,85,1.261,86,0.405,87,0.495,88,0.495,89,0.385,90,0.425,91,0.332,92,0.447,93,0.425,94,0.385,95,0.495,96,0.385,97,0.47,98,0.495,99,0.006,100,0.006,117,2.937,118,0.74,166,0.55,179,0.847,180,0.615,195,2.295,203,2.295,204,0.822,210,0.396,211,0.753,216,1.412,217,2.441,218,1.187,220,0.942,238,1.633,244,0.425,248,0.405,249,1.918,258,0.855,265,1.816,292,1.053,294,2.717,306,3.037,335,1.023,341,1.688,343,0.495,348,2.575,366,0.855,380,2.07,385,0.855,391,1.732,424,1.023,425,1.918,428,1.116,435,2.834,441,2.543,453,1.234,467,1.965,499,1.357,501,2.085,506,2.717,508,1.357,515,2.909,532,2.085,533,0.793,543,0.93,544,3.13,605,0.615,607,3.395,672,1.965,688,1.357,709,3.179,713,0.855,728,1.591,745,3.034,794,1.751,805,3.233,808,3.054,814,3.025,831,3.049,832,1.148,834,1.965,839,0.855,871,0.793,873,1.751,879,1.023,881,4.557,999,1.023,1000,2.289,1001,3.001,1002,4.698,1003,4.21,1004,2.553,1005,3.001,1006,3.001,1007,3.77,1008,3.001,1009,3.552,1010,3.993,1011,3.552,1012,3.993,1013,3.001,1014,3.001,1015,3.552,1016,6.222,1017,2.289,1018,2.271,1019,1.338,1020,3.56,1021,1.338,1022,2.289,1023,1.338,1024,2.289,1025,4.331,1026,3.001,1027,2.717,1028,2.295,1029,2.295,1030,3.001,1031,3.001,1032,2.575,1033,2.717,1034,3.001,1035,3.001,1036,4.396,1037,2.085,1038,2.295,1039,2.575,1040,3.001,1041,3.001,1042,3.001,1043,3.552,1044,2.575,1045,3.001,1046,3.001,1047,3.001,1048,2.289,1049,1.338,1050,3.552,1051,1.338,1052,3.552,1053,2.289,1054,1.338,1055,2.289,1056,1.338,1057,3.552,1058,3.001,1059,1.338,1060,1.338,1061,3.049,1062,2.289,1063,1.338,1064,2.289,1065,1.338,1066,2.289,1067,2.289,1068,2.289,1069,1.338,1070,4.21,1071,2.289,1072,2.289,1073,2.289,1074,3.552,1075,1.338,1076,5.122,1077,1.338,1078,1.338,1079,1.338,1080,1.965,1081,1.338,1082,2.271,1083,1.338,1084,1.338,1085,2.289,1086,1.338,1087,2.289,1088,2.289,1089,3.993,1090,1.338,1091,1.751,1092,1.338,1093,3.552,1094,2.289,1095,2.289,1096,1.338,1097,2.289,1098,3.552,1099,1.338,1100,1.338,1101,1.338,1102,1.338,1103,1.338,1104,1.338,1105,1.338,1106,2.289,1107,1.338,1108,1.338,1109,1.338,1110,1.338,1111,1.338,1112,1.338,1113,2.289,1114,2.289,1115,1.338,1116,1.338,1117,1.148,1118,1.338,1119,1.338,1120,1.338,1121,1.148,1122,1.338,1123,1.338,1124,1.338,1125,1.464,1126,0.855,1127,1.148,1128,1.148,1129,1.148,1130,1.148,1131,1.965,1132,1.148,1133,1.338,1134,1.338,1135,1.338,1136,1.338,1137,1.338,1138,1.338,1139,1.338,1140,1.338,1141,1.338,1142,1.338,1143,1.338,1144,1.338,1145,1.338,1146,1.338,1147,2.289,1148,1.338,1149,2.289,1150,1.338,1151,2.289,1152,2.289,1153,1.338,1154,2.289,1155,1.338,1156,1.338,1157,1.338,1158,2.289,1159,1.338,1160,1.338,1161,1.338,1162,1.338,1163,1.023,1164,1.338,1165,1.338,1166,1.023,1167,1.338,1168,1.338,1169,1.338,1170,1.338,1171,1.338,1172,1.338,1173,1.338,1174,1.338,1175,1.338,1176,1.338,1177,1.338,1178,3.001,1179,2.289,1180,1.338,1181,3.001,1182,1.338,1183,3.001,1184,1.338,1185,1.338,1186,1.338,1187,1.338,1188,1.338,1189,2.289,1190,1.338,1191,1.338,1192,1.338,1193,2.289,1194,1.338,1195,2.289,1196,1.338,1197,1.338,1198,1.338,1199,1.338,1200,1.338,1201,1.338,1202,1.338,1203,2.289,1204,1.338,1205,1.338,1206,1.338,1207,1.338,1208,1.338,1209,2.289,1210,1.338,1211,1.338,1212,1.338,1213,1.023,1214,1.338,1215,3.001,1216,1.338,1217,1.338,1218,1.338,1219,1.338,1220,1.338,1221,1.338,1222,1.338,1223,1.338,1224,1.338,1225,2.289,1226,1.338,1227,1.338]],["title/interfaces/MapDB.html",[702,1.226,1228,2.549]],["body/interfaces/MapDB.html",[3,0.141,4,0.141,8,0.124,10,0.413,20,1.099,23,0.191,24,1.042,31,0.02,33,0.526,34,0.931,36,1.635,41,0.497,42,0.245,43,0.141,44,0.174,80,1.695,85,1.38,99,0.01,100,0.01,127,1.161,154,1.584,166,1.969,179,1.772,204,0.732,216,1.15,217,2.442,218,1.385,220,1.099,232,2.043,242,1.385,243,0.853,244,0.849,247,1.161,248,1.607,249,0.769,250,2.777,254,1.134,264,1.584,265,1.772,325,2.08,341,1.781,343,0.989,350,1.385,362,2.554,364,3.396,380,2.481,381,2.777,382,2.21,383,3.055,384,1.478,391,1.302,396,1.584,403,1.584,408,1.584,409,1.584,436,1.856,441,2.071,442,2.071,453,1.643,582,3.06,605,1.228,674,4.063,675,3.815,684,2.043,702,0.893,704,1.478,731,3.692,745,3.277,790,2.777,805,3.326,871,3.15,897,1.584,904,1.584,1004,3.955,1007,4.119,1018,1.708,1020,3.326,1025,3.06,1028,4.063,1033,4.063,1036,5.141,1037,1.856,1038,2.043,1125,1.708,1126,1.708,1163,2.043,1166,4.349,1213,2.043,1228,2.777,1229,1.856,1230,3.429,1231,4.973,1232,3.429,1233,4.108,1234,5.122,1235,4.559,1236,3.429,1237,3.66,1238,3.429,1239,4.559,1240,4.108,1241,4.108,1242,3.429,1243,3.668,1244,3.429,1245,3.429,1246,2.292,1247,3.66,1248,2.292,1249,2.777,1250,1.708,1251,2.043,1252,1.856,1253,2.777,1254,4.108,1255,3.429,1256,1.856,1257,2.292,1258,2.292,1259,3.429,1260,2.292,1261,3.429,1262,2.292,1263,2.292,1264,2.292,1265,2.292,1266,2.292,1267,2.043,1268,4.559,1269,2.043,1270,2.292,1271,2.292,1272,2.292,1273,3.429,1274,4.108,1275,2.292,1276,4.108,1277,4.559,1278,2.292,1279,3.429,1280,2.292,1281,3.055,1282,3.429,1283,3.429,1284,2.292,1285,2.292,1286,2.292,1287,3.429,1288,2.292,1289,2.292,1290,2.292,1291,2.292,1292,2.292,1293,2.292,1294,2.292,1295,1.856,1296,2.043,1297,2.043,1298,2.292,1299,2.292,1300,2.043,1301,2.292,1302,2.292,1303,2.292,1304,2.292,1305,2.292,1306,2.292,1307,2.292,1308,2.292,1309,2.292,1310,2.292,1311,2.292,1312,2.292]],["title/components/MapSelectViewComponent.html",[0,0.505,78,1.11]],["body/components/MapSelectViewComponent.html",[0,0.852,1,1.129,2,1.784,3,0.196,4,0.196,5,1.381,6,1.381,7,1.381,8,0.174,11,2.347,18,1.247,19,2.493,21,2.333,23,0.267,24,1.323,26,0.878,28,0.957,30,0.611,31,0.019,32,1.186,33,0.526,34,0.944,35,1.784,36,1.39,41,0.397,42,0.343,43,0.196,44,0.243,51,1.381,52,1.878,53,1.784,54,1.074,55,2.29,56,1.381,57,0.595,58,1.381,59,1.129,60,1.129,61,1.878,62,1.074,63,1.381,64,1.074,65,1.074,66,1.381,67,1.129,68,1.247,69,1.381,70,1.129,71,1.312,72,1.129,73,1.381,74,1.074,75,1.381,76,1.535,77,1.381,78,1.871,79,2.395,80,1.829,81,2.344,82,1.878,83,1.129,84,1.381,85,0.756,86,1.129,87,1.381,88,1.381,89,1.074,90,1.833,91,1.724,92,1.247,93,1.186,94,1.074,95,1.381,96,1.074,97,1.312,98,1.381,99,0.016,100,0.013,138,1.716,210,0.645,211,0.997,519,3.244,605,2.333,705,2.811,731,3.526,745,3.016,1007,3.668,1027,3.88,1313,5.553,1314,4.948,1315,2.854,1316,4.354,1317,5.765,1318,5.765,1319,3.732,1320,3.732,1321,3.732,1322,5.074,1323,3.732,1324,3.202,1325,3.732,1326,3.202,1327,3.732,1328,3.732,1329,3.732,1330,5.074,1331,5.074]],["title/injectables/MapService.html",[243,0.783,1018,2.345]],["body/injectables/MapService.html",[3,0.133,4,0.133,8,0.118,10,0.717,20,1.042,23,0.181,24,1.001,26,0.664,28,0.717,30,0.414,31,0.02,33,0.394,34,0.995,35,0.89,36,1.523,41,0.489,42,0.233,43,0.133,44,0.165,57,0.353,80,1.756,85,1.428,99,0.01,100,0.01,127,1.1,154,1.501,166,2.127,179,1.715,204,1.27,210,0.664,211,0.664,216,1.489,217,1.764,218,1.99,220,1.042,232,1.936,242,2.403,243,0.819,244,0.805,247,1.1,248,1.564,249,1.334,250,3.221,254,1.104,264,1.501,265,1.715,325,2.415,341,1.6,343,0.937,350,1.313,354,1.235,361,1.76,362,3.306,364,3.553,380,2.403,381,2.667,382,2.123,383,2.935,384,1.401,391,1.235,396,1.501,403,1.501,408,1.501,409,1.501,436,2.667,441,3.032,442,2.681,453,1.579,582,3.553,605,1.764,674,3.955,675,2.963,684,1.936,702,0.846,745,3.281,790,1.76,805,3.221,871,2.748,897,2.275,904,1.501,927,1.619,1004,3.739,1007,4.146,1018,2.453,1020,4.065,1025,2.453,1028,2.935,1033,3.544,1036,4.901,1037,1.76,1038,2.935,1125,1.619,1126,1.619,1163,2.935,1166,4.25,1213,1.936,1228,1.76,1229,1.76,1230,2.173,1231,4.473,1232,2.173,1233,3.294,1234,3.294,1235,4.438,1236,2.173,1237,3.544,1238,2.173,1239,3.294,1240,3.977,1241,3.977,1242,2.173,1243,3.295,1244,2.173,1245,2.173,1246,2.173,1247,4.25,1248,2.173,1249,2.667,1250,1.619,1251,1.936,1252,1.76,1253,2.667,1254,5.019,1255,4.438,1256,2.667,1257,3.294,1258,3.294,1259,4.438,1260,3.294,1261,3.294,1262,2.173,1263,2.173,1264,2.173,1265,2.173,1266,3.294,1267,2.935,1268,5.019,1269,2.935,1270,3.977,1271,3.977,1272,2.173,1273,3.294,1274,3.977,1275,2.173,1276,3.977,1277,4.438,1278,2.173,1279,3.294,1280,2.173,1281,2.935,1282,3.294,1283,3.294,1284,2.173,1285,2.173,1286,2.173,1287,3.294,1288,2.173,1289,2.173,1290,2.173,1291,2.173,1292,2.173,1293,2.173,1294,2.173,1295,1.76,1296,1.936,1297,1.936,1298,2.173,1299,2.173,1300,1.936,1301,2.173,1302,2.173,1303,2.173,1304,2.173,1305,2.173,1306,2.173,1307,2.173,1308,2.173,1309,2.173,1310,2.173,1311,2.173,1312,2.173,1332,3.838,1333,2.532,1334,2.532]],["title/classes/ModuleProvider.html",[44,0.239,174,2.345]],["body/classes/ModuleProvider.html",[0,0.557,3,0.213,4,0.213,8,0.189,10,0.829,23,0.29,26,0.927,28,0.929,30,0.877,31,0.02,33,0.344,34,0.983,37,4.052,41,0.5,43,0.213,44,0.454,57,0.372,85,1.296,99,0.014,100,0.014,101,2.09,103,3.075,163,4.098,170,4.691,171,1.665,172,3.426,173,3.474,174,3.426,176,3.426,177,3.474,180,1.861,181,2.813,204,1.646,210,0.7,211,0.7,248,1.225,249,1.729,254,1.144,257,3.724,341,1.841,380,2.778,425,4.369,594,2.813,776,3.724,809,4.443,1335,5.487,1336,3.474,1337,5.359,1338,5.359,1339,5.359,1340,5.359,1341,3.724,1342,4.048,1343,5.359,1344,4.599,1345,5.359,1346,5.359,1347,5.359,1348,5.359,1349,4.048,1350,4.443,1351,4.048,1352,5.359,1353,5.359,1354,4.048,1355,4.048,1356,4.048,1357,5.359,1358,6.007,1359,4.048,1360,4.048]],["title/components/ResultDataViewComponent.html",[0,0.505,83,1.11]],["body/components/ResultDataViewComponent.html",[0,0.514,1,0.549,2,1.039,3,0.096,4,0.096,5,0.672,6,0.672,7,0.672,8,0.085,11,1.785,16,0.988,17,1.821,18,0.607,19,2.232,21,1.359,23,0.13,24,0.771,26,0.511,27,2.552,28,1.033,30,0.913,31,0.02,32,1.929,33,0.543,34,1.013,35,1.666,36,1.298,41,0.436,42,0.167,43,0.156,44,0.118,51,1.754,52,1.094,53,1.039,54,0.523,55,1.593,56,0.672,57,0.579,58,0.672,59,0.549,60,0.549,61,1.094,62,0.523,63,0.672,64,0.523,65,0.523,66,0.672,67,0.549,68,0.607,69,0.672,70,0.549,71,0.639,72,0.549,73,0.672,74,0.523,75,0.672,76,0.549,77,0.672,78,0.549,79,1.754,80,0.498,81,0.577,82,1.094,83,1.302,84,1.754,85,1.497,86,0.549,87,0.672,88,0.672,89,0.523,90,2.082,91,1.794,92,0.607,93,0.577,94,0.523,95,0.672,96,0.523,97,0.639,98,0.672,99,0.007,100,0.007,138,0.835,166,1.537,171,0.747,179,0.672,204,0.81,208,3.173,210,0.926,211,1.05,216,0.851,221,2.215,228,4.733,238,0.835,242,0.942,244,0.577,249,1.904,254,1.011,269,2.381,291,1.559,292,0.835,341,1.462,353,1.389,395,2.552,398,1.389,428,1.441,439,1.389,441,2.232,453,0.747,503,1.262,512,2.72,513,2.857,519,1.889,545,1.389,559,2.26,566,1.161,605,1.979,669,3.292,705,2.925,708,3.566,710,1.005,727,1.752,839,1.161,851,3.623,871,1.752,889,3.206,897,1.752,982,1.559,984,1.559,985,2.536,993,2.536,1315,1.389,1316,2.536,1324,1.559,1361,5.778,1362,5.149,1363,3.736,1364,3.736,1365,3.736,1366,3.736,1367,3.736,1368,3.736,1369,3.736,1370,2.955,1371,2.955,1372,2.955,1373,4.305,1374,2.955,1375,2.955,1376,2.992,1377,1.816,1378,5.078,1379,1.816,1380,2.955,1381,4.305,1382,1.816,1383,2.955,1384,4.412,1385,1.816,1386,1.816,1387,1.816,1388,1.816,1389,1.816,1390,2.955,1391,1.816,1392,1.816,1393,1.816,1394,1.816,1395,1.816,1396,1.816,1397,1.816,1398,1.816,1399,1.816,1400,1.816,1401,1.816,1402,1.816,1403,1.816,1404,2.955,1405,1.816,1406,1.816,1407,1.389,1408,1.389,1409,1.816,1410,1.816,1411,1.816,1412,2.955,1413,1.816,1414,1.816,1415,1.816,1416,2.955,1417,1.816,1418,1.816,1419,1.816,1420,1.816,1421,1.816,1422,1.389,1423,1.816,1424,1.816,1425,1.816,1426,1.816,1427,1.816,1428,1.816,1429,1.816,1430,1.816,1431,2.955,1432,1.816,1433,1.816,1434,1.816,1435,1.816,1436,2.536,1437,1.816,1438,1.816,1439,1.816,1440,1.559,1441,1.816,1442,1.816,1443,1.816,1444,1.816,1445,1.816,1446,4.305,1447,3.736,1448,2.955,1449,1.816,1450,1.816,1451,1.816,1452,4.305,1453,1.816,1454,1.816,1455,1.816,1456,1.816,1457,1.816,1458,1.816,1459,1.816,1460,1.816,1461,1.816,1462,1.816,1463,1.816,1464,1.816,1465,1.816,1466,1.816,1467,2.992,1468,1.816,1469,4.305,1470,4.305,1471,1.816,1472,2.955,1473,1.816,1474,1.816,1475,1.816,1476,1.559,1477,1.816,1478,1.559,1479,1.816,1480,1.816,1481,1.816,1482,2.955,1483,2.955,1484,2.955,1485,1.816,1486,2.955,1487,5.078,1488,2.955,1489,2.955,1490,4.305,1491,2.955,1492,4.305,1493,2.955,1494,4.305,1495,2.955,1496,4.305,1497,4.305,1498,4.305,1499,2.955,1500,2.955,1501,4.305,1502,2.955,1503,2.955,1504,2.955,1505,2.955,1506,2.955,1507,2.955,1508,5.078,1509,2.955,1510,2.955,1511,2.955,1512,2.955,1513,2.955]],["title/interceptors/SanitizeUrlInterceptor.html",[116,2.345,320,2.029]],["body/interceptors/SanitizeUrlInterceptor.html",[3,0.257,4,0.257,8,0.228,16,1.633,23,0.35,26,1.045,28,0.756,30,0.8,31,0.02,33,0.415,41,0.513,42,0.449,43,0.257,44,0.318,57,0.449,99,0.015,100,0.015,116,3.864,127,2.122,180,2.779,210,0.845,211,0.845,240,2.7,243,1.29,244,1.553,254,1.042,268,3.63,321,3.123,325,2.626,326,3.864,328,3.864,329,4.384,330,4.384,338,3.123,339,3.864,391,2.947,568,3.736,644,4.192,675,3.123,1514,5.187,1515,4.885,1516,4.885,1517,4.885,1518,4.885,1519,4.885,1520,4.885,1521,6.563,1522,4.885,1523,4.885,1524,4.885]],["title/injectables/SettingsStorageService.html",[243,0.783,743,2.549]],["body/injectables/SettingsStorageService.html",[3,0.135,4,0.135,8,0.12,10,0.866,20,1.058,23,0.184,26,0.672,28,0.973,30,1.074,31,0.02,32,1.871,33,0.5,34,1.156,36,1.428,41,0.201,42,0.236,43,0.135,44,0.168,57,0.541,60,1.78,85,1.455,99,0.01,100,0.01,166,1.058,179,1.438,193,3.05,210,1.018,211,1.018,213,4.662,216,1.118,238,3.016,242,3.721,243,0.829,247,1.118,248,1.902,249,1.944,254,1.194,292,2.891,341,2.045,354,1.254,421,1.788,422,3.333,424,3.986,425,4.317,426,3.333,427,3.333,428,1.893,433,2.207,434,5.629,435,3.479,436,3.623,437,3.333,439,4.809,441,3.833,442,3.167,445,2.207,462,2.207,479,2.207,480,2.207,481,2.207,739,4.015,740,4.015,743,2.699,747,3.333,751,2.207,753,5.165,754,3.255,755,5.363,756,2.207,758,2.207,760,2.207,768,2.207,770,2.207,851,4.809,913,2.207,1281,4.809,1525,4.922,1526,3.884,1527,3.884,1528,3.884,1529,4.473,1530,2.572,1531,3.884,1532,2.572,1533,3.884,1534,2.572,1535,2.572,1536,2.572,1537,1.967,1538,1.967,1539,3.884,1540,2.572,1541,2.572,1542,2.572,1543,2.572,1544,2.572]],["title/interfaces/ShapeData.html",[702,1.226,1243,2.175]],["body/interfaces/ShapeData.html",[3,0.255,4,0.255,8,0.226,10,0.75,23,0.347,24,1.568,31,0.019,33,0.629,34,1.212,35,1.704,41,0.379,43,0.36,57,0.628,85,1.425,99,0.015,100,0.015,217,2.228,220,2.474,249,1.395,341,1.969,423,5.161,702,1.62,704,2.68,1004,3.845,1020,4.18,1025,3.845,1082,3.845,1121,4.158,1125,4.495,1126,4.371,1127,4.158,1243,3.877,1300,5.229,1545,3.706,1546,3.706,1547,6.014]],["title/components/SideBarComponent.html",[0,0.505,86,1.11]],["body/components/SideBarComponent.html",[0,0.922,1,1.254,2,1.914,3,0.218,4,0.218,5,1.534,6,1.534,7,1.534,8,0.193,10,0.641,11,2.501,18,1.385,19,2.521,21,2.502,23,0.297,24,1.419,28,0.641,31,0.019,35,1.457,36,1.136,41,0.426,42,0.381,43,0.218,44,0.27,51,1.534,52,2.014,53,1.914,54,1.193,55,2.388,56,1.534,57,0.593,58,1.534,59,1.254,60,1.838,61,2.014,62,1.193,63,1.534,64,1.193,65,1.193,66,1.534,67,1.254,68,1.385,69,1.534,70,1.254,71,1.457,72,1.254,73,1.534,74,1.193,75,1.534,76,1.254,77,1.534,78,1.254,79,2.249,80,1.136,81,1.318,82,2.014,83,1.254,84,1.534,85,0.84,86,1.952,87,2.481,88,1.534,89,1.193,90,1.318,91,1.028,92,1.385,93,1.318,94,1.193,95,1.534,96,1.193,97,1.457,98,1.534,99,0.014,100,0.014,148,3.782,499,3.227,512,3.354,754,4.048,1548,4.162,1549,3.557,1550,5.442,1551,4.144,1552,5.442,1553,5.442,1554,5.442,1555,6.453]],["title/classes/StaticLoader.html",[44,0.239,152,2.549]],["body/classes/StaticLoader.html",[3,0.233,4,0.233,8,0.207,10,0.88,16,1.9,23,0.317,26,0.983,28,0.686,30,0.725,31,0.02,33,0.376,34,1.027,36,1.557,41,0.548,43,0.233,44,0.289,57,0.407,99,0.014,100,0.014,101,1.728,134,5.385,136,2.16,137,2.16,152,3.95,154,3.721,162,3.389,174,2.833,175,3.803,203,4.347,210,0.766,211,0.766,240,2.581,244,1.409,248,1.34,250,3.08,254,0.946,257,3.95,341,1.971,435,2.451,594,3.08,685,3.634,754,2.451,776,4.361,809,4.601,1341,3.95,1350,4.868,1422,4.347,1556,4.347,1557,3.389,1558,5.684,1559,5.684,1560,5.684,1561,4.431,1562,5.684,1563,4.878,1564,4.431,1565,4.878,1566,4.431,1567,4.431,1568,3.803,1569,3.389,1570,5.385,1571,3.803,1572,3.803,1573,4.431,1574,5.684,1575,4.431,1576,4.431,1577,4.431,1578,4.431,1579,4.431]],["title/injectables/UserService.html",[243,0.783,1580,2.805]],["body/injectables/UserService.html",[3,0.194,4,0.194,8,0.172,10,0.779,20,1.519,23,0.264,26,0.871,28,0.953,30,0.825,31,0.02,33,0.487,34,1.205,41,0.532,42,0.339,43,0.194,44,0.24,57,0.463,99,0.013,100,0.013,127,1.604,143,2.36,179,2.122,193,2.611,195,2.823,204,1.571,210,0.871,211,0.871,216,1.773,218,3.193,219,2.611,220,2.533,240,2.652,243,1.075,244,1.174,247,1.604,248,1.117,249,1.651,254,1.224,265,1.367,317,3.168,343,1.367,350,1.914,354,1.8,358,2.823,361,2.566,362,3.937,364,4.121,366,2.36,368,4.71,371,4.71,382,2.786,385,2.36,391,2.456,393,2.36,396,2.189,403,2.986,405,4.28,408,2.986,425,3.665,432,4.48,453,2.358,517,2.566,539,2.36,607,2.36,630,3.852,794,3.852,927,3.22,1295,2.566,1580,3.852,1581,2.823,1582,5.037,1583,5.733,1584,6.159,1585,3.692,1586,3.692,1587,6.159,1588,6.446,1589,3.692,1590,5.733,1591,3.692,1592,3.692,1593,3.168,1594,3.692,1595,3.168,1596,3.692,1597,3.168,1598,3.692,1599,3.168,1600,3.692,1601,5.037,1602,3.692,1603,3.692,1604,2.823,1605,3.168,1606,5.037,1607,3.168,1608,3.692,1609,3.692,1610,3.692,1611,4.323,1612,5.037,1613,5.037,1614,3.692,1615,3.692,1616,3.692,1617,3.692,1618,3.692]],["title/components/WaterUsageForecastsComponent.html",[0,0.505,89,1.056]],["body/components/WaterUsageForecastsComponent.html",[0,0.866,1,1.042,2,1.689,3,0.181,4,0.181,5,1.276,6,1.276,7,1.276,8,0.161,10,0.533,11,2.29,16,1.606,17,2.696,18,1.152,19,2.47,21,2.208,23,0.247,24,1.253,26,0.831,27,3.546,28,0.926,30,0.564,31,0.019,32,1.527,33,0.47,34,0.786,35,1.212,36,0.944,41,0.376,42,0.317,43,0.181,44,0.224,45,1.906,51,1.276,52,1.778,53,1.689,54,0.992,55,2.214,56,1.276,57,0.578,58,1.276,59,1.042,60,1.042,61,1.778,62,0.992,63,1.276,64,0.992,65,0.992,66,1.276,67,1.042,68,1.152,69,1.276,70,1.042,71,1.212,72,1.042,73,1.276,74,0.992,75,1.276,76,1.042,77,1.276,78,1.042,79,2.328,80,1.831,81,2.071,82,1.778,83,1.042,84,2.214,85,1.32,86,1.042,87,1.276,88,1.276,89,1.722,90,2.125,91,1.827,92,2.102,93,1.096,94,0.992,95,1.276,96,0.992,97,1.212,98,1.276,99,0.012,100,0.012,171,1.418,204,0.944,210,0.956,211,0.956,220,1.976,221,2.848,249,1.592,254,0.735,264,2.043,277,2.957,325,2.087,341,0.992,343,1.276,442,1.787,474,2.957,499,2.848,515,2.342,519,2.203,668,2.957,669,4.574,675,2.203,676,2.636,702,1.606,705,2.733,745,2.696,816,2.636,1027,2.636,1326,4.122,1529,2.957,1619,4.021,1620,2.957,1621,4.803,1622,4.803,1623,4.803,1624,5.529,1625,4.803,1626,3.446,1627,3.446,1628,3.446,1629,3.446,1630,3.446,1631,3.446,1632,4.803,1633,3.446]],["title/modules/WaterUsageForecastsModule.html",[101,1.431,1634,2.549]],["body/modules/WaterUsageForecastsModule.html",[3,0.238,4,0.238,8,0.211,31,0.019,41,0.567,42,0.416,43,0.238,44,0.295,78,2.131,81,1.833,83,2.131,85,1.169,89,2.147,90,1.44,91,1.573,99,0.015,100,0.015,103,1.968,104,2.988,111,3.897,117,3.189,118,2.506,119,2.348,121,3.685,123,3.418,128,3.418,135,4.006,136,2.209,137,2.209,138,2.083,169,4.947,171,1.863,188,3.685,655,4.177,660,4.947,661,3.464,705,1.968,1314,3.464,1362,3.464,1619,2.896,1634,5.245,1635,3.888,1636,3.888,1637,4.53,1638,3.888,1639,4.53,1640,4.53,1641,4.53,1642,5.765,1643,4.53]],["title/injectables/WaterUsageForecastsService.html",[243,0.783,1376,2.549]],["body/injectables/WaterUsageForecastsService.html",[3,0.212,4,0.212,8,0.188,10,0.623,20,1.657,23,0.288,26,0.924,28,0.826,30,0.659,31,0.02,33,0.542,34,1.117,41,0.544,42,0.37,43,0.212,44,0.262,57,0.491,85,1.083,90,1.698,91,1.754,92,1.346,99,0.014,100,0.014,127,1.75,138,1.852,166,1.657,171,1.657,179,1.491,204,1.463,208,4.128,210,0.924,211,0.924,216,1.538,218,2.769,220,2.197,240,2.625,243,1.14,244,1.281,247,1.75,249,1.538,254,0.86,265,1.977,269,2.228,341,1.725,350,2.088,354,1.964,361,2.799,362,4.079,364,3.414,381,3.712,382,2.954,384,2.228,391,1.964,396,2.388,403,2.388,408,2.388,409,2.388,515,2.604,705,2.604,708,3.414,710,2.228,712,4.614,904,2.388,927,2.575,1250,2.575,1295,2.799,1296,3.08,1297,3.08,1376,3.712,1384,4.88,1436,5.142,1619,3.831,1644,3.08,1645,5.341,1646,5.992,1647,4.028,1648,4.028,1649,5.992,1650,5.992,1651,5.992,1652,5.992,1653,4.028,1654,4.028,1655,4.028,1656,4.028,1657,4.028,1658,4.028]],["title/interfaces/WisdomInterface.html",[702,1.226,1659,2.549]],["body/interfaces/WisdomInterface.html",[0,1.017,3,0.243,4,0.243,8,0.215,10,0.713,13,5.763,23,0.33,24,1.519,31,0.019,33,0.571,34,1.158,37,3.455,43,0.243,57,0.423,99,0.015,100,0.015,101,2.492,103,2.777,163,3.523,180,3.253,432,4.917,499,3.455,678,3.954,701,3.954,702,2.136,704,2.549,709,3.535,745,3.274,790,4.05,808,4.456,814,4.05,854,5,1029,4.456,1044,5,1350,4.917,1467,4.05,1569,4.456,1659,4.441,1660,3.954,1661,4.607,1662,4.607,1663,5.763,1664,5.827,1665,5]],["title/modules/WisdomModule.html",[101,1.431,111,2.029]],["body/modules/WisdomModule.html",[3,0.246,4,0.246,8,0.218,31,0.019,41,0.555,42,0.43,43,0.246,44,0.305,67,2.266,68,1.564,76,2.266,94,2.157,99,0.015,100,0.015,103,2.033,104,3.05,111,4.176,117,3.254,118,2.588,119,2.425,121,3.761,123,2.774,128,3.488,135,4.089,136,2.281,137,2.281,188,3.761,655,4.274,786,3.578,1666,4.015,1667,4.015,1668,4.015,1669,4.678,1670,4.678,1671,4.678,1672,4.678,1673,4.678,1674,4.678]],["title/coverage.html",[1675,4.304]],["body/coverage.html",[0,0.953,1,0.793,8,0.122,9,2.25,31,0.02,33,0.223,44,0.257,54,1.134,59,0.793,62,0.755,64,0.755,65,0.755,67,0.793,70,0.793,72,0.793,74,0.755,76,0.793,78,0.793,81,1.253,83,0.793,85,0.799,86,0.793,89,0.755,91,1.683,94,0.755,96,0.755,99,0.01,100,0.01,112,1.676,113,1.676,114,1.676,115,1.676,116,1.676,143,1.676,148,1.822,152,1.822,172,1.676,174,1.676,176,1.676,189,2.739,191,2.25,206,1.45,207,1.555,243,1.35,265,0.971,292,2.594,320,3.121,322,3.013,342,2.005,355,3.62,384,1.45,392,2.005,405,1.822,420,4.315,421,4.396,468,2.005,470,2.005,472,2.005,473,2.005,497,2.25,498,3.013,539,1.676,546,1.822,566,4.578,567,2.25,568,3.013,572,3.62,574,2.005,582,1.676,585,2.25,586,2.25,624,2.25,631,2.005,663,2.25,686,2.25,698,2.005,699,2.25,702,1.981,703,1.676,705,2.811,706,3.026,707,3.29,710,1.45,727,1.555,732,2.25,743,1.822,754,1.45,785,2.25,786,2.005,787,2.25,806,2.25,807,2.25,821,2.25,833,2.25,840,1.555,873,5.805,894,2.25,899,2.25,904,1.555,915,2.25,950,2.25,999,2.005,1018,1.676,1091,2.005,1228,1.822,1229,3.921,1243,1.555,1249,3.658,1250,2.519,1252,1.822,1253,1.822,1313,2.25,1314,2.005,1315,3.013,1335,2.25,1336,2.25,1341,2.739,1361,2.25,1362,2.005,1376,1.822,1407,2.005,1408,2.005,1514,2.25,1525,3.62,1537,2.005,1538,2.005,1545,2.005,1546,2.005,1548,2.005,1549,2.25,1556,3.013,1557,3.62,1580,2.005,1581,3.62,1604,2.005,1619,3.026,1620,2.25,1644,3.013,1659,3.29,1660,2.25,1675,2.25,1676,2.622,1677,2.25,1678,2.622,1679,3.382,1680,7.424,1681,7.408,1682,5.642,1683,3.94,1684,3.94,1685,3.94,1686,4.517,1687,3.382,1688,2.25,1689,5.263,1690,2.25,1691,2.25,1692,6.325,1693,3.94,1694,3.94,1695,2.622,1696,2.622,1697,2.622,1698,2.622,1699,5.263,1700,3.013,1701,2.25,1702,2.25,1703,4.062,1704,2.622,1705,2.622,1706,3.94,1707,2.622,1708,2.622,1709,2.622,1710,4.734,1711,5.263,1712,2.622,1713,2.622,1714,2.25,1715,3.382,1716,3.382,1717,3.382,1718,2.25,1719,3.382,1720,2.622,1721,2.622,1722,2.622,1723,2.25,1724,2.622,1725,2.622]],["title/dependencies.html",[104,2.288,1726,3.059]],["body/dependencies.html",[31,0.02,42,0.473,47,3.574,99,0.016,100,0.016,104,2.666,130,3.933,132,5.353,133,4.335,136,2.507,137,2.507,171,2.115,180,2.364,244,1.635,386,4.413,589,5.353,661,3.933,1082,3.288,1247,3.933,1593,4.413,1727,5.143,1728,7.422,1729,5.143,1730,5.143,1731,5.143,1732,5.143,1733,5.143,1734,5.143,1735,5.143,1736,5.143,1737,5.143,1738,5.143,1739,5.143,1740,5.143,1741,5.143,1742,5.143,1743,5.143,1744,5.143,1745,5.143,1746,5.143,1747,5.143,1748,5.143]],["title/miscellaneous/enumerations.html",[1749,1.586,1750,3.788]],["body/miscellaneous/enumerations.html",[23,0.389,31,0.019,36,2.037,91,1.347,99,0.016,100,0.016,225,4.928,705,2.359,706,3.471,713,4.119,720,4.478,721,4.478,722,4.478,1007,3.82,1117,5.53,1384,4.928,1700,4.152,1749,2.815,1750,4.659,1751,5.429,1752,6.444,1753,4.659,1754,6.444]],["title/miscellaneous/functions.html",[1749,1.586,1755,3.788]],["body/miscellaneous/functions.html",[10,0.891,23,0.324,30,1.153,31,0.019,33,0.585,34,1.092,57,0.633,80,1.578,85,0.917,99,0.015,100,0.015,210,1.191,211,1.191,216,1.824,217,2.079,228,3.458,292,2.079,380,2.344,442,2.344,453,2.943,510,4.002,512,3.358,546,4.002,688,2.681,709,3.185,725,3.143,927,2.891,1007,3.756,1061,3.88,1344,3.88,1407,4.403,1408,4.403,1467,4.002,1607,3.88,1700,3.458,1701,4.941,1702,4.941,1703,3.88,1749,2.344,1753,4.941,1755,3.88,1756,6.335,1757,4.522,1758,4.522,1759,4.522,1760,4.522,1761,4.522,1762,4.522,1763,4.522,1764,4.522,1765,4.522,1766,4.522,1767,4.522,1768,4.522,1769,4.522,1770,4.522,1771,5.758,1772,6.335,1773,4.522,1774,4.522,1775,4.522,1776,4.522,1777,4.522,1778,4.522,1779,4.522,1780,3.88,1781,4.522,1782,4.522,1783,4.522,1784,4.522]],["title/index.html",[23,0.263,1785,3.148]],["body/index.html",[1,2.061,2,1.302,31,0.019,59,2.061,62,1.653,64,1.962,65,1.653,67,2.061,70,2.061,72,1.737,74,1.653,76,2.061,78,1.737,83,1.737,86,1.737,89,1.962,93,1.177,94,1.962,96,1.653,99,0.013,100,0.013,102,5.312,103,1.609,104,2.617,105,3.178,106,3.178,107,3.178,108,3.178,109,3.178,110,3.671,111,4.074,112,3.671,113,3.671,114,3.671,115,3.671,116,3.671,117,2.792,118,2.048,119,1.92,170,2.367,190,2.832,354,1.805,594,2.574,655,4.319,656,3.178,657,3.178,658,3.178,691,4.736,692,3.178,693,3.178,695,3.178,704,2.048,1478,4.928,1634,5.063,1635,3.178,1636,3.178,1638,3.178,1666,3.178,1667,3.178,1668,3.178,1785,3.178,1786,5.047,1787,3.703,1788,3.703,1789,3.703]],["title/modules.html",[103,2.179]],["body/modules.html",[31,0.017,99,0.017,100,0.017,102,3.886,103,2.429,110,3.574,111,3.093,133,5.083,257,3.886,655,3.315,691,3.886,1634,3.886,1790,7.314,1791,7.314,1792,7.409,1793,5.591]],["title/routes.html",[170,3.206]],["body/routes.html",[31,0.017,99,0.017,100,0.017,170,3.83]],["title/miscellaneous/typealiases.html",[1749,1.586,1794,4.414]],["body/miscellaneous/typealiases.html",[23,0.249,31,0.016,33,0.629,34,1.033,57,0.552,60,2.066,85,1.217,99,0.012,100,0.012,148,2.416,180,2.222,182,2.983,193,3.804,217,2.222,234,2.222,237,4.147,269,1.923,306,2.061,325,1.51,341,1.001,387,4.147,389,4.147,441,1.802,529,2.658,544,1.695,709,1.923,731,4.976,745,1.695,754,1.923,796,3.695,814,2.416,968,4.147,970,4.147,999,2.658,1003,4.147,1004,3.089,1025,3.551,1029,2.658,1039,2.983,1082,3.089,1089,4.147,1125,3.089,1126,3.838,1128,2.983,1129,2.983,1130,2.983,1131,2.983,1132,2.983,1237,2.658,1243,2.061,1256,2.416,1476,2.983,1545,2.658,1546,4.248,1548,2.658,1595,4.147,1597,4.147,1599,4.147,1611,2.983,1677,2.983,1749,1.802,1795,3.476,1796,4.832,1797,3.476,1798,4.832,1799,3.476,1800,4.832,1801,3.476,1802,4.832,1803,5.555,1804,3.476,1805,4.832,1806,3.476,1807,4.832,1808,3.476,1809,4.832,1810,3.476,1811,6.309,1812,6.699,1813,6.831,1814,4.832,1815,3.476,1816,4.832,1817,3.476,1818,4.832,1819,3.476,1820,4.832,1821,3.476,1822,3.476,1823,3.476,1824,3.476,1825,3.476,1826,4.832,1827,3.476,1828,3.476,1829,3.476,1830,4.147,1831,6.309,1832,5.555,1833,4.832,1834,4.832,1835,5.555,1836,3.476,1837,3.476,1838,3.476,1839,3.476,1840,5.555,1841,4.832,1842,2.983,1843,3.476,1844,3.476,1845,5.555,1846,4.832,1847,3.476,1848,3.476,1849,4.832,1850,6.003,1851,3.476,1852,3.476,1853,3.476,1854,2.983,1855,4.832,1856,3.476,1857,3.476,1858,3.476,1859,3.476,1860,3.476,1861,2.983,1862,3.476,1863,3.476,1864,3.476,1865,6.003,1866,5.555,1867,3.476,1868,3.476,1869,3.476,1870,3.476,1871,3.476,1872,3.476,1873,3.476,1874,3.476,1875,3.476,1876,3.476,1877,3.476,1878,3.476,1879,3.476,1880,3.476,1881,3.476,1882,3.476,1883,3.476,1884,3.476,1885,3.476,1886,3.476,1887,3.476]],["title/miscellaneous/variables.html",[1749,1.586,1888,3.788]],["body/miscellaneous/variables.html",[23,0.152,31,0.02,32,0.676,33,0.602,34,1.086,35,2.554,36,1.99,37,1.989,60,1.256,64,0.612,68,0.711,80,0.919,81,1.066,89,0.612,90,1.879,91,1.626,92,1.575,99,0.009,100,0.009,101,1.619,143,3.013,154,1.989,162,3.604,166,2.241,180,1.542,193,1.739,197,1.627,198,3.279,199,1.627,201,2.331,216,0.612,217,2.717,219,2.659,235,1.826,251,1.627,254,0.716,258,2.144,264,1.261,265,2.111,269,1.177,292,1.542,322,1.627,323,3.176,324,1.826,325,0.924,335,2.565,341,1.642,342,2.565,350,1.739,355,1.627,358,2.565,365,1.627,366,2.144,380,1.103,382,1.177,384,1.855,385,1.36,391,2.657,392,2.565,393,3.484,394,1.826,395,1.261,396,3.041,397,1.826,398,1.627,399,2.878,400,2.565,401,2.878,402,1.826,403,2.794,404,1.826,405,2.331,407,1.826,408,1.989,409,1.261,410,1.826,420,1.627,421,4.108,432,3.276,435,1.177,441,1.739,451,1.826,452,1.826,453,0.875,468,2.565,469,1.826,470,2.565,471,1.826,472,2.565,473,2.565,503,1.478,517,1.478,527,1.478,539,2.144,572,4.652,573,5.072,574,2.565,582,3.279,592,1.826,605,2.358,631,2.565,638,2.878,688,3.041,702,1.121,705,1.457,745,1.037,753,3.604,754,3.014,755,2.565,796,3.176,809,1.478,852,1.826,871,1.261,879,3.604,891,1.826,904,1.989,922,1.826,963,1.826,1002,3.563,1012,2.878,1032,1.826,1037,1.478,1070,4.045,1080,1.826,1082,2.654,1091,3.922,1229,1.478,1231,1.627,1249,3.276,1250,3.013,1251,1.627,1252,2.331,1253,2.331,1256,1.478,1267,1.627,1269,1.627,1341,3.276,1350,2.331,1422,3.604,1440,1.826,1467,2.886,1525,1.627,1537,2.565,1538,2.565,1556,1.627,1557,3.604,1563,1.826,1565,1.826,1568,1.826,1569,1.627,1570,4.045,1571,1.826,1572,1.826,1581,1.627,1604,2.565,1605,1.826,1619,1.36,1644,2.565,1659,3.787,1663,2.878,1665,1.826,1679,3.563,1686,4.045,1687,4.045,1688,2.878,1690,1.826,1691,2.878,1714,1.826,1715,1.826,1716,5.072,1717,1.826,1718,1.826,1719,4.045,1723,1.826,1749,1.103,1780,1.826,1830,2.878,1842,1.826,1854,1.826,1861,1.826,1888,1.826,1889,4.713,1890,2.127,1891,4.152,1892,3.354,1893,3.354,1894,3.354,1895,3.354,1896,2.127,1897,2.127,1898,3.354,1899,2.127,1900,2.127,1901,4.713,1902,3.354,1903,2.127,1904,2.127,1905,3.354,1906,3.354,1907,3.354,1908,4.152,1909,4.152,1910,2.127,1911,2.127,1912,2.127,1913,2.127,1914,2.127,1915,2.127,1916,3.354,1917,3.354,1918,2.127,1919,2.127,1920,2.127,1921,2.127,1922,2.127,1923,2.127,1924,2.127,1925,2.127,1926,3.354,1927,2.127,1928,3.354,1929,2.127,1930,2.127,1931,4.152,1932,2.127,1933,3.354,1934,2.127,1935,2.127,1936,2.127,1937,2.127,1938,2.127,1939,2.127,1940,2.127,1941,2.127,1942,2.127,1943,2.127,1944,2.127,1945,2.127,1946,2.127,1947,2.127,1948,3.354,1949,3.354,1950,2.127,1951,2.127,1952,2.127,1953,2.127,1954,2.127,1955,2.127,1956,2.127,1957,2.127,1958,4.713,1959,2.127,1960,2.127,1961,2.127,1962,2.127,1963,3.354]]],"invertedIndex":[["",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"components/BarChartComponent.html":{},"interceptors/BaseUrlInterceptor.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"modules/ChartModule.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"modules/ExampleModule.html":{},"injectables/ExampleService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"classes/ModuleProvider.html":{},"components/ResultDataViewComponent.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"interfaces/ShapeData.html":{},"components/SideBarComponent.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterUsageForecastsComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{},"interfaces/WisdomInterface.html":{},"modules/WisdomModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":566,"title":{},"body":{"components/BarChartComponent.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"components/ResultDataViewComponent.html":{},"coverage.html":{}}}],["0.1.0",{"_index":1734,"title":{},"body":{"dependencies.html":{}}}],["0.11.4",{"_index":1748,"title":{},"body":{"dependencies.html":{}}}],["0.3s",{"_index":868,"title":{},"body":{"components/LoaderComponent.html":{}}}],["0.6s",{"_index":870,"title":{},"body":{"components/LoaderComponent.html":{}}}],["0.7s",{"_index":867,"title":{},"body":{"components/LoaderComponent.html":{}}}],["0.8",{"_index":876,"title":{},"body":{"components/LoaderComponent.html":{}}}],["0.8s",{"_index":882,"title":{},"body":{"components/LoaderComponent.html":{}}}],["0.9.3",{"_index":1731,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1692,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1720,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1713,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1711,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1709,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1710,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1712,"title":{},"body":{"coverage.html":{}}}],["0s",{"_index":865,"title":{},"body":{"components/LoaderComponent.html":{}}}],["1",{"_index":871,"title":{},"body":{"components/LoaderComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"components/ResultDataViewComponent.html":{},"miscellaneous/variables.html":{}}}],["1.0.1",{"_index":1743,"title":{},"body":{"dependencies.html":{}}}],["1.4.0",{"_index":1740,"title":{},"body":{"dependencies.html":{}}}],["1.4s",{"_index":864,"title":{},"body":{"components/LoaderComponent.html":{}}}],["1.5",{"_index":1461,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["1.7.1",{"_index":1742,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1681,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1722,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1694,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":873,"title":{},"body":{"components/LoaderComponent.html":{},"components/MapComponent.html":{},"coverage.html":{}}}],["10px",{"_index":878,"title":{},"body":{"components/LoaderComponent.html":{}}}],["12345",{"_index":1490,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["13.2.2",{"_index":1728,"title":{},"body":{"dependencies.html":{}}}],["14",{"_index":1787,"title":{},"body":{"index.html":{}}}],["14.0.0",{"_index":1730,"title":{},"body":{"dependencies.html":{}}}],["15px",{"_index":874,"title":{},"body":{"components/LoaderComponent.html":{}}}],["1f5aec",{"_index":1053,"title":{},"body":{"components/MapComponent.html":{}}}],["1s",{"_index":858,"title":{},"body":{"components/LoaderComponent.html":{}}}],["2",{"_index":1478,"title":{},"body":{"components/ResultDataViewComponent.html":{},"index.html":{}}}],["2.3.1",{"_index":1746,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1689,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":1705,"title":{},"body":{"coverage.html":{}}}],["2/5",{"_index":1708,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1693,"title":{},"body":{"coverage.html":{}}}],["2000",{"_index":884,"title":{},"body":{"components/LoaderComponent.html":{}}}],["22/25",{"_index":1696,"title":{},"body":{"coverage.html":{}}}],["3.7.1",{"_index":1736,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":1699,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":1698,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":1721,"title":{},"body":{"coverage.html":{}}}],["39;01&#39",{"_index":1113,"title":{},"body":{"components/MapComponent.html":{}}}],["39;034030000000&#39",{"_index":1114,"title":{},"body":{"components/MapComponent.html":{}}}],["39;all",{"_index":1105,"title":{},"body":{"components/MapComponent.html":{}}}],["39;only",{"_index":1109,"title":{},"body":{"components/MapComponent.html":{}}}],["39;show",{"_index":1116,"title":{},"body":{"components/MapComponent.html":{}}}],["4",{"_index":1789,"title":{},"body":{"index.html":{}}}],["4/4",{"_index":1706,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":1707,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":316,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["401",{"_index":279,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/LoginComponent.html":{}}}],["409",{"_index":1618,"title":{},"body":{"injectables/UserService.html":{}}}],["5/5",{"_index":1682,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":877,"title":{},"body":{"components/LoaderComponent.html":{}}}],["500px",{"_index":1074,"title":{},"body":{"components/MapComponent.html":{}}}],["53.1434501",{"_index":1067,"title":{},"body":{"components/MapComponent.html":{}}}],["5443ba",{"_index":1442,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["56px",{"_index":886,"title":{},"body":{"components/LoaderComponent.html":{}}}],["6",{"_index":1786,"title":{},"body":{"index.html":{}}}],["6/6",{"_index":1683,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":1704,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1098,"title":{},"body":{"components/MapComponent.html":{}}}],["7.0.1",{"_index":1741,"title":{},"body":{"dependencies.html":{}}}],["7.5.4",{"_index":1744,"title":{},"body":{"dependencies.html":{}}}],["7/9",{"_index":1685,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":1697,"title":{},"body":{"coverage.html":{}}}],["77",{"_index":1684,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1788,"title":{},"body":{"index.html":{}}}],["8.2145521",{"_index":1068,"title":{},"body":{"components/MapComponent.html":{}}}],["88",{"_index":1695,"title":{},"body":{"coverage.html":{}}}],["_displaytexts",{"_index":916,"title":{},"body":{"injectables/LoaderService.html":{}}}],["_loading",{"_index":917,"title":{},"body":{"injectables/LoaderService.html":{}}}],["a0a0a0",{"_index":1942,"title":{},"body":{"miscellaneous/variables.html":{}}}],["a9c940",{"_index":1443,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["access",{"_index":197,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthStorageService.html":{},"miscellaneous/variables.html":{}}}],["access_token_key",{"_index":468,"title":{},"body":{"injectables/AuthStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["accessors",{"_index":428,"title":{},"body":{"injectables/AuthStorageService.html":{},"components/BarChartComponent.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/FrameComponent.html":{},"components/LineChartComponent.html":{},"injectables/LoaderService.html":{},"components/MapComponent.html":{},"components/ResultDataViewComponent.html":{},"injectables/SettingsStorageService.html":{}}}],["accesstoken",{"_index":429,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["accesstoken(token",{"_index":482,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["accumulations",{"_index":711,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{}}}],["action",{"_index":1843,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["activatedroute",{"_index":669,"title":{},"body":{"components/ErrorComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsComponent.html":{}}}],["activatedroutesnapshot",{"_index":224,"title":{},"body":{"guards/AuthGuard.html":{},"guards/LoaderGuard.html":{}}}],["active",{"_index":593,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["actual_component",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/BarChartComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterUsageForecastsComponent.html":{}}}],["actually",{"_index":1030,"title":{},"body":{"components/MapComponent.html":{}}}],["add",{"_index":764,"title":{},"body":{"components/FrameComponent.html":{}}}],["addloader",{"_index":920,"title":{},"body":{"injectables/LoaderService.html":{}}}],["addloader(toresolve",{"_index":923,"title":{},"body":{"injectables/LoaderService.html":{}}}],["adds",{"_index":793,"title":{},"body":{"components/IonIconComponent.html":{}}}],["administration",{"_index":1754,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["afterviewinit",{"_index":501,"title":{},"body":{"components/BarChartComponent.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"components/MapComponent.html":{}}}],["agriculture",{"_index":1432,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["alias",{"_index":1128,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/typealiases.html":{}}}],["aliases",{"_index":1795,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":1928,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allow",{"_index":792,"title":{},"body":{"components/IonIconComponent.html":{}}}],["allowed",{"_index":230,"title":{},"body":{"guards/AuthGuard.html":{}}}],["already",{"_index":1237,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{},"miscellaneous/typealiases.html":{}}}],["always",{"_index":397,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["amounts",{"_index":724,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{}}}],["angular",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/IonIconComponent.html":{}}}],["angular/animations",{"_index":1727,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":661,"title":{},"body":{"modules/ChartModule.html":{},"modules/WaterUsageForecastsModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interceptors/BaseUrlInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"interceptors/LoaderInterceptor.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/UserService.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["angular/compiler",{"_index":1593,"title":{},"body":{"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/core",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"components/BarChartComponent.html":{},"interceptors/BaseUrlInterceptor.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"modules/ChartModule.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"modules/ExampleModule.html":{},"injectables/ExampleService.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"components/ResultDataViewComponent.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"components/SideBarComponent.html":{},"injectables/UserService.html":{},"components/WaterUsageForecastsComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{},"modules/WisdomModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":171,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/ErrorComponent.html":{},"components/FrameComponent.html":{},"guards/LoaderGuard.html":{},"components/LoginComponent.html":{},"classes/ModuleProvider.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{},"dependencies.html":{}}}],["animation",{"_index":856,"title":{},"body":{"components/LoaderComponent.html":{}}}],["annotation",{"_index":1739,"title":{},"body":{"dependencies.html":{}}}],["any).options.padding",{"_index":1175,"title":{},"body":{"components/MapComponent.html":{}}}],["api",{"_index":582,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["api.ts",{"_index":1719,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["api_url",{"_index":1250,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/WaterUsageForecastsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apiurl",{"_index":1907,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BarChartComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterUsageForecastsComponent.html":{}}}],["app.component",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":22,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BarChartComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterUsageForecastsComponent.html":{},"coverage.html":{},"index.html":{}}}],["application",{"_index":734,"title":{},"body":{"components/FrameComponent.html":{}}}],["application/json",{"_index":1295,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/UserService.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["application/x",{"_index":407,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["appmodule",{"_index":102,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{}}}],["approutingmodule",{"_index":110,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["areacomponents",{"_index":1364,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["arg0",{"_index":1918,"title":{},"body":{"miscellaneous/variables.html":{}}}],["array",{"_index":1028,"title":{},"body":{"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["array.from(this.selectedshapes[layerkey",{"_index":1226,"title":{},"body":{"components/MapComponent.html":{}}}],["arrays",{"_index":1858,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["async",{"_index":1270,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["asynchronously",{"_index":1266,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["attention",{"_index":1040,"title":{},"body":{"components/MapComponent.html":{}}}],["auth",{"_index":219,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"components/FrameComponent.html":{},"components/LoginComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["auth.service",{"_index":246,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["auth/auth",{"_index":763,"title":{},"body":{"components/FrameComponent.html":{}}}],["auth/auth.guard",{"_index":173,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/ModuleProvider.html":{}}}],["auth/auth.interceptor",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/auth.service",{"_index":762,"title":{},"body":{"components/FrameComponent.html":{}}}],["auth/login/login.component",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["auth_api",{"_index":1604,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth_url",{"_index":392,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authentication",{"_index":334,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["authguard",{"_index":172,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"classes/ModuleProvider.html":{},"coverage.html":{}}}],["authinterceptor",{"_index":112,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"coverage.html":{},"index.html":{}}}],["authorization",{"_index":324,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"miscellaneous/variables.html":{}}}],["authorized",{"_index":1871,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["authrequest",{"_index":344,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["authservice",{"_index":207,"title":{"injectables/AuthService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/FrameComponent.html":{},"components/LoginComponent.html":{},"coverage.html":{}}}],["authstorage",{"_index":212,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/FrameComponent.html":{},"components/LoginComponent.html":{}}}],["authstorageservice",{"_index":206,"title":{"injectables/AuthStorageService.html":{}},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthStorageService.html":{},"components/FrameComponent.html":{},"components/LoginComponent.html":{},"coverage.html":{}}}],["authstorageservice.getstorage(access_token_key",{"_index":484,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["authstorageservice.getstorage(expires_in_key",{"_index":489,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["authstorageservice.getstorage(refresh_token_key",{"_index":492,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["authstorageservice.getstorage(scopes_key",{"_index":496,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["authstorageservice.setstorage(`${unixtime",{"_index":486,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["authstorageservice.setstorage(scopes",{"_index":494,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["authstorageservice.setstorage(token",{"_index":483,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["available",{"_index":257,"title":{},"body":{"guards/AuthGuard.html":{},"classes/ModuleProvider.html":{},"classes/StaticLoader.html":{},"modules.html":{}}}],["avoid",{"_index":293,"title":{},"body":{"guards/AuthGuard.html":{}}}],["await",{"_index":1166,"title":{},"body":{"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["ba4c43",{"_index":1439,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["back",{"_index":684,"title":{},"body":{"components/ErrorComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["backgroundcolor",{"_index":1464,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["bad",{"_index":1873,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["bar",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/BarChartComponent.html":{},"modules/ChartModule.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"injectables/SettingsStorageService.html":{},"components/SideBarComponent.html":{},"components/WaterUsageForecastsComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["bar'},{'name",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/BarChartComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterUsageForecastsComponent.html":{}}}],["bar.component",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["bar.component.html",{"_index":1550,"title":{},"body":{"components/SideBarComponent.html":{}}}],["bar.component.ts",{"_index":1549,"title":{},"body":{"components/SideBarComponent.html":{},"coverage.html":{}}}],["bar.component.ts:13",{"_index":1551,"title":{},"body":{"components/SideBarComponent.html":{}}}],["bar/side",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"components/SideBarComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["barchartcomponent",{"_index":59,"title":{"components/BarChartComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BarChartComponent.html":{},"modules/ChartModule.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterUsageForecastsComponent.html":{},"coverage.html":{},"index.html":{}}}],["base",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"interceptors/BaseUrlInterceptor.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["baseurl",{"_index":1716,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["baseurlinterceptor",{"_index":113,"title":{"interceptors/BaseUrlInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/BaseUrlInterceptor.html":{},"coverage.html":{},"index.html":{}}}],["basic",{"_index":664,"title":{},"body":{"components/ErrorComponent.html":{}}}],["bcd9e0",{"_index":1437,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["bearer",{"_index":333,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["behaviorsubject",{"_index":1076,"title":{},"body":{"components/MapComponent.html":{}}}],["beta.1",{"_index":1735,"title":{},"body":{"dependencies.html":{}}}],["better",{"_index":289,"title":{},"body":{"guards/AuthGuard.html":{}}}],["beware",{"_index":1778,"title":{},"body":{"miscellaneous/functions.html":{}}}],["blue",{"_index":1454,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["body",{"_index":1613,"title":{},"body":{"injectables/UserService.html":{}}}],["body.roles",{"_index":1615,"title":{},"body":{"injectables/UserService.html":{}}}],["body.scopes",{"_index":1614,"title":{},"body":{"injectables/UserService.html":{}}}],["boolean",{"_index":242,"title":{},"body":{"guards/AuthGuard.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/FrameComponent.html":{},"guards/LoaderGuard.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"components/ResultDataViewComponent.html":{},"injectables/SettingsStorageService.html":{}}}],["bootstrap",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["bordercolor",{"_index":1452,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["borderskipped",{"_index":1462,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["borderwidth",{"_index":1460,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["both",{"_index":1945,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bounce",{"_index":857,"title":{},"body":{"components/LoaderComponent.html":{}}}],["break",{"_index":993,"title":{},"body":{"components/LoginComponent.html":{},"components/ResultDataViewComponent.html":{}}}],["bring",{"_index":750,"title":{},"body":{"components/FrameComponent.html":{}}}],["browse",{"_index":1792,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"dependencies.html":{},"modules.html":{}}}],["browserify",{"_index":386,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["browsermodule",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["bulma",{"_index":589,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{},"dependencies.html":{}}}],["bulma/bulma",{"_index":1670,"title":{},"body":{"modules/WisdomModule.html":{}}}],["bulmaistoggleabledirective",{"_index":94,"title":{"directives/BulmaIsToggleableDirective.html":{}},"body":{"components/AppComponent.html":{},"components/BarChartComponent.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterUsageForecastsComponent.html":{},"modules/WisdomModule.html":{},"coverage.html":{},"index.html":{}}}],["businesses",{"_index":1436,"title":{},"body":{"components/ResultDataViewComponent.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["button",{"_index":1933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["button.style.backgroundimage",{"_index":1934,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cache",{"_index":1269,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{},"miscellaneous/variables.html":{}}}],["cache.interceptor",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["cache.ts",{"_index":1688,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["cached",{"_index":1235,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["cachedkeys",{"_index":1277,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["cacheheaders",{"_index":635,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["cacheinterceptor",{"_index":114,"title":{"interceptors/CacheInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/CacheInterceptor.html":{},"coverage.html":{},"index.html":{}}}],["calc(100vh",{"_index":885,"title":{},"body":{"components/LoaderComponent.html":{}}}],["calendar",{"_index":1956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["call",{"_index":527,"title":{},"body":{"components/BarChartComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["callback",{"_index":1917,"title":{},"body":{"miscellaneous/variables.html":{}}}],["can't",{"_index":259,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canactivate",{"_index":181,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"guards/LoaderGuard.html":{},"classes/ModuleProvider.html":{}}}],["canactivate(route",{"_index":223,"title":{},"body":{"guards/AuthGuard.html":{},"guards/LoaderGuard.html":{}}}],["captured",{"_index":1914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["case",{"_index":985,"title":{},"body":{"components/LoginComponent.html":{},"components/ResultDataViewComponent.html":{}}}],["catch(console.error",{"_index":1424,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["catch(e",{"_index":774,"title":{},"body":{"components/FrameComponent.html":{}}}],["causing",{"_index":1776,"title":{},"body":{"miscellaneous/functions.html":{}}}],["center",{"_index":1002,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/variables.html":{}}}],["centercontent",{"_index":1926,"title":{},"body":{"miscellaneous/variables.html":{}}}],["change",{"_index":1628,"title":{},"body":{"components/WaterUsageForecastsComponent.html":{}}}],["changed",{"_index":526,"title":{},"body":{"components/BarChartComponent.html":{},"components/LineChartComponent.html":{}}}],["changes",{"_index":528,"title":{},"body":{"components/BarChartComponent.html":{},"components/LineChartComponent.html":{}}}],["chart",{"_index":503,"title":{},"body":{"components/BarChartComponent.html":{},"components/LineChartComponent.html":{},"components/ResultDataViewComponent.html":{},"miscellaneous/variables.html":{}}}],["chart'},{'name",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/BarChartComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterUsageForecastsComponent.html":{}}}],["chart(ctx",{"_index":557,"title":{},"body":{"components/BarChartComponent.html":{},"components/LineChartComponent.html":{}}}],["chart.component",{"_index":662,"title":{},"body":{"modules/ChartModule.html":{}}}],["chart.component.ts",{"_index":498,"title":{},"body":{"components/BarChartComponent.html":{},"components/LineChartComponent.html":{},"coverage.html":{}}}],["chart.component.ts:19",{"_index":511,"title":{},"body":{"components/BarChartComponent.html":{}}}],["chart.component.ts:20",{"_index":822,"title":{},"body":{"components/LineChartComponent.html":{}}}],["chart.component.ts:24",{"_index":535,"title":{},"body":{"components/BarChartComponent.html":{}}}],["chart.component.ts:25",{"_index":828,"title":{},"body":{"components/LineChartComponent.html":{}}}],["chart.component.ts:27",{"_index":514,"title":{},"body":{"components/BarChartComponent.html":{}}}],["chart.component.ts:28",{"_index":823,"title":{},"body":{"components/LineChartComponent.html":{}}}],["chart.component.ts:30",{"_index":516,"title":{},"body":{"components/BarChartComponent.html":{}}}],["chart.component.ts:31",{"_index":824,"title":{},"body":{"components/LineChartComponent.html":{}}}],["chart.component.ts:33",{"_index":540,"title":{},"body":{"components/BarChartComponent.html":{}}}],["chart.component.ts:34",{"_index":830,"title":{},"body":{"components/LineChartComponent.html":{}}}],["chart.component.ts:37",{"_index":538,"title":{},"body":{"components/BarChartComponent.html":{}}}],["chart.component.ts:38",{"_index":829,"title":{},"body":{"components/LineChartComponent.html":{}}}],["chart.component.ts:40",{"_index":530,"title":{},"body":{"components/BarChartComponent.html":{}}}],["chart.component.ts:41",{"_index":827,"title":{},"body":{"components/LineChartComponent.html":{}}}],["chart.component.ts:43",{"_index":518,"title":{},"body":{"components/BarChartComponent.html":{}}}],["chart.component.ts:44",{"_index":825,"title":{},"body":{"components/LineChartComponent.html":{}}}],["chart.component.ts:61",{"_index":525,"title":{},"body":{"components/BarChartComponent.html":{}}}],["chart.component.ts:62",{"_index":826,"title":{},"body":{"components/LineChartComponent.html":{}}}],["chart.getdatasetmeta(item.datasetindex",{"_index":1483,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["chart.getdatasetmeta(item.datasetindex).hidden",{"_index":1482,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["chart.js",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/BarChartComponent.html":{},"components/LineChartComponent.html":{},"dependencies.html":{}}}],["chart.js/auto",{"_index":545,"title":{},"body":{"components/BarChartComponent.html":{},"components/LineChartComponent.html":{},"components/ResultDataViewComponent.html":{}}}],["chart.update",{"_index":1485,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["chart/chart.module",{"_index":1672,"title":{},"body":{"modules/WisdomModule.html":{}}}],["chartdata",{"_index":513,"title":{},"body":{"components/BarChartComponent.html":{},"components/LineChartComponent.html":{},"components/ResultDataViewComponent.html":{}}}],["chartelement",{"_index":504,"title":{},"body":{"components/BarChartComponent.html":{},"components/LineChartComponent.html":{}}}],["chartevent",{"_index":1381,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["chartjs",{"_index":1737,"title":{},"body":{"dependencies.html":{}}}],["chartlegendfilter",{"_index":1370,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["chartlegendfilter(item",{"_index":1377,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["chartlegendonclick",{"_index":1371,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["chartlegendonclick(event",{"_index":1380,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["chartmodule",{"_index":655,"title":{"modules/ChartModule.html":{}},"body":{"modules/ChartModule.html":{},"modules/WaterUsageForecastsModule.html":{},"modules/WisdomModule.html":{},"index.html":{},"modules.html":{}}}],["chartoptions",{"_index":537,"title":{},"body":{"components/BarChartComponent.html":{},"components/LineChartComponent.html":{}}}],["charts",{"_index":500,"title":{},"body":{"components/BarChartComponent.html":{},"modules/ChartModule.html":{}}}],["check",{"_index":264,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"components/WaterUsageForecastsComponent.html":{},"miscellaneous/variables.html":{}}}],["checking",{"_index":192,"title":{},"body":{"guards/AuthGuard.html":{}}}],["checks",{"_index":233,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["child(1",{"_index":862,"title":{},"body":{"components/LoaderComponent.html":{}}}],["child(2",{"_index":866,"title":{},"body":{"components/LoaderComponent.html":{}}}],["child(3",{"_index":869,"title":{},"body":{"components/LoaderComponent.html":{}}}],["children",{"_index":182,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/typealiases.html":{}}}],["class",{"_index":44,"title":{"classes/ModuleProvider.html":{},"classes/StaticLoader.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"components/BarChartComponent.html":{},"interceptors/BaseUrlInterceptor.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"modules/ChartModule.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"modules/ExampleModule.html":{},"injectables/ExampleService.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"classes/ModuleProvider.html":{},"components/ResultDataViewComponent.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"components/SideBarComponent.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterUsageForecastsComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{},"modules/WisdomModule.html":{},"coverage.html":{}}}],["classes",{"_index":594,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{},"classes/ModuleProvider.html":{},"classes/StaticLoader.html":{},"index.html":{}}}],["classes.trim().split(/\\s",{"_index":618,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["clear",{"_index":424,"title":{},"body":{"injectables/AuthStorageService.html":{},"components/MapComponent.html":{},"injectables/SettingsStorageService.html":{}}}],["clearloading",{"_index":921,"title":{},"body":{"injectables/LoaderService.html":{}}}],["clears",{"_index":296,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthStorageService.html":{}}}],["cli",{"_index":1594,"title":{},"body":{"injectables/UserService.html":{}}}],["click",{"_index":597,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{},"directives/LangSelectorDirective.html":{}}}],["clicked",{"_index":602,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["clicking",{"_index":590,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{},"directives/LangSelectorDirective.html":{}}}],["clicklangselect",{"_index":810,"title":{},"body":{"directives/LangSelectorDirective.html":{}}}],["client",{"_index":1260,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["closed",{"_index":478,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["cluster_appmodule",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_bootstrap",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_declarations",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_imports",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_providers",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_chartmodule",{"_index":656,"title":{},"body":{"modules/ChartModule.html":{},"index.html":{}}}],["cluster_chartmodule_declarations",{"_index":657,"title":{},"body":{"modules/ChartModule.html":{},"index.html":{}}}],["cluster_chartmodule_exports",{"_index":658,"title":{},"body":{"modules/ChartModule.html":{},"index.html":{}}}],["cluster_examplemodule",{"_index":692,"title":{},"body":{"modules/ExampleModule.html":{},"index.html":{}}}],["cluster_examplemodule_declarations",{"_index":693,"title":{},"body":{"modules/ExampleModule.html":{},"index.html":{}}}],["cluster_examplemodule_exports",{"_index":695,"title":{},"body":{"modules/ExampleModule.html":{},"index.html":{}}}],["cluster_examplemodule_imports",{"_index":694,"title":{},"body":{"modules/ExampleModule.html":{}}}],["cluster_waterusageforecastsmodule",{"_index":1635,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{},"index.html":{}}}],["cluster_waterusageforecastsmodule_declarations",{"_index":1636,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{},"index.html":{}}}],["cluster_waterusageforecastsmodule_exports",{"_index":1638,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{},"index.html":{}}}],["cluster_waterusageforecastsmodule_imports",{"_index":1637,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{}}}],["cluster_wisdommodule",{"_index":1666,"title":{},"body":{"modules/WisdomModule.html":{},"index.html":{}}}],["cluster_wisdommodule_declarations",{"_index":1667,"title":{},"body":{"modules/WisdomModule.html":{},"index.html":{}}}],["cluster_wisdommodule_exports",{"_index":1668,"title":{},"body":{"modules/WisdomModule.html":{},"index.html":{}}}],["code",{"_index":294,"title":{},"body":{"guards/AuthGuard.html":{},"components/ErrorComponent.html":{},"components/MapComponent.html":{}}}],["codes",{"_index":318,"title":{},"body":{"guards/AuthGuard.html":{},"components/ErrorComponent.html":{}}}],["collectedlang",{"_index":1357,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["color",{"_index":1192,"title":{},"body":{"components/MapComponent.html":{}}}],["colormap",{"_index":1431,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["column",{"_index":892,"title":{},"body":{"components/LoaderComponent.html":{}}}],["common",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"interceptors/BaseUrlInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"modules/ExampleModule.html":{},"interceptors/LoaderInterceptor.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["commonenvironment",{"_index":1905,"title":{},"body":{"miscellaneous/variables.html":{}}}],["commonmodule",{"_index":660,"title":{},"body":{"modules/ChartModule.html":{},"modules/WaterUsageForecastsModule.html":{}}}],["complaining",{"_index":800,"title":{},"body":{"components/IonIconComponent.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/BarChartComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterUsageForecastsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/BarChartComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"classes/ModuleProvider.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterUsageForecastsComponent.html":{},"interfaces/WisdomInterface.html":{},"coverage.html":{}}}],["component[1",{"_index":1513,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["component_template",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/BarChartComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterUsageForecastsComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/BarChartComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterUsageForecastsComponent.html":{},"index.html":{}}}],["concept",{"_index":1951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config",{"_index":1131,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/typealiases.html":{}}}],["consists",{"_index":1857,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["console.error(e",{"_index":775,"title":{},"body":{"components/FrameComponent.html":{},"components/LoginComponent.html":{}}}],["console.error(error",{"_index":987,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log(\"init",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log(\"successfully",{"_index":981,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log([event",{"_index":1480,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["console.log(errresponse",{"_index":280,"title":{},"body":{"guards/AuthGuard.html":{}}}],["const",{"_index":179,"title":{},"body":{"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"components/BarChartComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"components/ResultDataViewComponent.html":{},"injectables/SettingsStorageService.html":{},"injectables/UserService.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["constant",{"_index":1948,"title":{},"body":{"miscellaneous/variables.html":{}}}],["constructing",{"_index":1347,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["constructor",{"_index":204,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/BarChartComponent.html":{},"components/ErrorComponent.html":{},"components/FrameComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"classes/ModuleProvider.html":{},"components/ResultDataViewComponent.html":{},"injectables/UserService.html":{},"components/WaterUsageForecastsComponent.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["constructor(authservice",{"_index":741,"title":{},"body":{"components/FrameComponent.html":{},"components/LoginComponent.html":{}}}],["constructor(authstorage",{"_index":205,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{}}}],["constructor(http",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MapService.html":{},"injectables/UserService.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["constructor(private",{"_index":343,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/BarChartComponent.html":{},"components/ErrorComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/UserService.html":{},"components/WaterUsageForecastsComponent.html":{}}}],["constructor(route",{"_index":668,"title":{},"body":{"components/ErrorComponent.html":{},"components/WaterUsageForecastsComponent.html":{}}}],["constructor(service",{"_index":839,"title":{},"body":{"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"components/MapComponent.html":{},"components/ResultDataViewComponent.html":{}}}],["constructor(translate",{"_index":509,"title":{},"body":{"components/BarChartComponent.html":{},"components/LineChartComponent.html":{}}}],["constructor(translateservice",{"_index":811,"title":{},"body":{"directives/LangSelectorDirective.html":{}}}],["consumerareadata",{"_index":1365,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["consumergroup",{"_index":712,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["consumergroupdata",{"_index":1366,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["container",{"_index":879,"title":{},"body":{"components/LoaderComponent.html":{},"components/MapComponent.html":{},"miscellaneous/variables.html":{}}}],["container.addeventlistener(\"click",{"_index":1932,"title":{},"body":{"miscellaneous/variables.html":{}}}],["containing",{"_index":214,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/ChartModule.html":{},"components/LoginComponent.html":{}}}],["content",{"_index":396,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/UserService.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/variables.html":{}}}],["context",{"_index":409,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/LoaderInterceptor.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/variables.html":{}}}],["context/use",{"_index":1249,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["control",{"_index":1091,"title":{},"body":{"components/MapComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["coordinates",{"_index":1022,"title":{},"body":{"components/MapComponent.html":{}}}],["core",{"_index":1963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["core.frame.account",{"_index":779,"title":{},"body":{"components/FrameComponent.html":{}}}],["core.frame.administration",{"_index":781,"title":{},"body":{"components/FrameComponent.html":{}}}],["core.frame.logout",{"_index":780,"title":{},"body":{"components/FrameComponent.html":{}}}],["core.frame.permissions",{"_index":783,"title":{},"body":{"components/FrameComponent.html":{}}}],["core.frame.roles",{"_index":784,"title":{},"body":{"components/FrameComponent.html":{}}}],["core.frame.usermanagement",{"_index":782,"title":{},"body":{"components/FrameComponent.html":{}}}],["core.login.forgotpassword",{"_index":997,"title":{},"body":{"components/LoginComponent.html":{}}}],["core.login.login",{"_index":998,"title":{},"body":{"components/LoginComponent.html":{}}}],["core.login.password",{"_index":996,"title":{},"body":{"components/LoginComponent.html":{}}}],["core.login.username",{"_index":995,"title":{},"body":{"components/LoginComponent.html":{}}}],["correct",{"_index":676,"title":{},"body":{"components/ErrorComponent.html":{},"components/IonIconComponent.html":{},"components/WaterUsageForecastsComponent.html":{}}}],["coverage",{"_index":1675,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":521,"title":{},"body":{"components/BarChartComponent.html":{},"components/LineChartComponent.html":{}}}],["created",{"_index":1881,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["createuser",{"_index":1583,"title":{},"body":{"injectables/UserService.html":{}}}],["createuser(firstname",{"_index":1586,"title":{},"body":{"injectables/UserService.html":{}}}],["ctx",{"_index":554,"title":{},"body":{"components/BarChartComponent.html":{},"components/LineChartComponent.html":{}}}],["current",{"_index":234,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"directives/LangSelectorDirective.html":{},"miscellaneous/typealiases.html":{}}}],["currently",{"_index":607,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{},"directives/LangSelectorDirective.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"injectables/UserService.html":{}}}],["d35a0c",{"_index":1048,"title":{},"body":{"components/MapComponent.html":{}}}],["dark",{"_index":1733,"title":{},"body":{"dependencies.html":{}}}],["data",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthStorageService.html":{},"components/BarChartComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"classes/ModuleProvider.html":{},"components/ResultDataViewComponent.html":{},"injectables/SettingsStorageService.html":{},"interfaces/ShapeData.html":{},"components/SideBarComponent.html":{},"components/WaterUsageForecastsComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["data.areas",{"_index":1511,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["data.branches",{"_index":1512,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["data.consumer",{"_index":1509,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["data.datasets.length",{"_index":1477,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["data.ts",{"_index":1546,"title":{},"body":{"interfaces/ShapeData.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["datasets",{"_index":559,"title":{},"body":{"components/BarChartComponent.html":{},"components/LineChartComponent.html":{},"components/ResultDataViewComponent.html":{}}}],["date",{"_index":452,"title":{},"body":{"injectables/AuthStorageService.html":{},"miscellaneous/variables.html":{}}}],["db",{"_index":1231,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{},"miscellaneous/variables.html":{}}}],["db.createobjectstore(\"queries",{"_index":1264,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["db.createobjectstore(\"shapes",{"_index":1265,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["db_name",{"_index":1252,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dbschema",{"_index":1233,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["de_de",{"_index":1570,"title":{},"body":{"classes/StaticLoader.html":{},"miscellaneous/variables.html":{}}}],["de_delang",{"_index":1563,"title":{},"body":{"classes/StaticLoader.html":{},"miscellaneous/variables.html":{}}}],["deciding",{"_index":229,"title":{},"body":{"guards/AuthGuard.html":{}}}],["declarations",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"modules/ChartModule.html":{},"modules/ExampleModule.html":{},"modules/WaterUsageForecastsModule.html":{},"modules/WisdomModule.html":{}}}],["decorators",{"_index":533,"title":{},"body":{"components/BarChartComponent.html":{},"directives/BulmaIsToggleableDirective.html":{},"directives/LangSelectorDirective.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{}}}],["default",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ErrorComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"components/ResultDataViewComponent.html":{},"interfaces/ShapeData.html":{},"components/SideBarComponent.html":{},"components/WaterUsageForecastsComponent.html":{},"miscellaneous/variables.html":{}}}],["defaultlanguage",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["defaults",{"_index":1070,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"components/BarChartComponent.html":{},"interceptors/BaseUrlInterceptor.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ErrorComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"classes/ModuleProvider.html":{},"components/ResultDataViewComponent.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"components/SideBarComponent.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterUsageForecastsComponent.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["delay",{"_index":863,"title":{},"body":{"components/LoaderComponent.html":{}}}],["deleted",{"_index":1838,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["deleteusersid200",{"_index":1796,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["deleteusersid403",{"_index":1798,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["deleteusersid404",{"_index":1800,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["demo.uol.de",{"_index":1904,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dependencies",{"_index":104,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ChartModule.html":{},"modules/ExampleModule.html":{},"modules/WaterUsageForecastsModule.html":{},"modules/WisdomModule.html":{},"dependencies.html":{},"index.html":{}}}],["depletes",{"_index":295,"title":{},"body":{"guards/AuthGuard.html":{}}}],["describes",{"_index":1854,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["description",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"components/BarChartComponent.html":{},"interceptors/BaseUrlInterceptor.html":{},"directives/BulmaIsToggleableDirective.html":{},"modules/ChartModule.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"modules/ExampleModule.html":{},"injectables/ExampleService.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"classes/ModuleProvider.html":{},"injectables/SettingsStorageService.html":{},"interfaces/ShapeData.html":{},"components/SideBarComponent.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterUsageForecastsComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"interfaces/WisdomInterface.html":{},"miscellaneous/functions.html":{}}}],["determine",{"_index":1958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deutsch",{"_index":777,"title":{},"body":{"components/FrameComponent.html":{}}}],["dev",{"_index":1908,"title":{},"body":{"miscellaneous/variables.html":{}}}],["didfinish",{"_index":1367,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["digit",{"_index":1760,"title":{},"body":{"miscellaneous/functions.html":{}}}],["direction",{"_index":1198,"title":{},"body":{"components/MapComponent.html":{}}}],["directive",{"_index":54,"title":{"directives/BulmaIsToggleableDirective.html":{},"directives/LangSelectorDirective.html":{}},"body":{"components/AppComponent.html":{},"components/BarChartComponent.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterUsageForecastsComponent.html":{},"coverage.html":{}}}],["directives",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/BarChartComponent.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterUsageForecastsComponent.html":{},"index.html":{}}}],["directly",{"_index":1032,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/variables.html":{}}}],["display",{"_index":515,"title":{},"body":{"components/BarChartComponent.html":{},"components/ErrorComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"components/MapComponent.html":{},"components/WaterUsageForecastsComponent.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["displayed",{"_index":808,"title":{},"body":{"directives/LangSelectorDirective.html":{},"components/MapComponent.html":{},"interfaces/WisdomInterface.html":{}}}],["displaying",{"_index":499,"title":{},"body":{"components/BarChartComponent.html":{},"components/LineChartComponent.html":{},"components/MapComponent.html":{},"components/SideBarComponent.html":{},"components/WaterUsageForecastsComponent.html":{},"interfaces/WisdomInterface.html":{}}}],["displaylayer",{"_index":1183,"title":{},"body":{"components/MapComponent.html":{}}}],["displayname",{"_index":728,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/MapComponent.html":{}}}],["displaytext",{"_index":924,"title":{},"body":{"injectables/LoaderService.html":{}}}],["displaytexts",{"_index":837,"title":{},"body":{"components/LoaderComponent.html":{},"injectables/LoaderService.html":{}}}],["displaytextsubject",{"_index":918,"title":{},"body":{"injectables/LoaderService.html":{}}}],["district",{"_index":1117,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/enumerations.html":{}}}],["div",{"_index":891,"title":{},"body":{"components/LoaderComponent.html":{},"miscellaneous/variables.html":{}}}],["divided",{"_index":495,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["doc",{"_index":474,"title":{},"body":{"injectables/AuthStorageService.html":{},"components/WaterUsageForecastsComponent.html":{}}}],["docs",{"_index":1043,"title":{},"body":{"components/MapComponent.html":{}}}],["documentation",{"_index":1676,"title":{},"body":{"coverage.html":{}}}],["doesn't",{"_index":1345,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/BarChartComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterUsageForecastsComponent.html":{}}}],["dot",{"_index":1762,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dynamic",{"_index":1729,"title":{},"body":{"dependencies.html":{}}}],["e02abf",{"_index":1445,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["ease",{"_index":860,"title":{},"body":{"components/LoaderComponent.html":{}}}],["ein",{"_index":1494,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["eine",{"_index":1487,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["element",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/BarChartComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterUsageForecastsComponent.html":{}}}],["elementclasses",{"_index":598,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["elementclasses(classes",{"_index":616,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["elementref",{"_index":532,"title":{},"body":{"components/BarChartComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{}}}],["elements",{"_index":1094,"title":{},"body":{"components/MapComponent.html":{}}}],["emit",{"_index":1062,"title":{},"body":{"components/MapComponent.html":{}}}],["emitselection",{"_index":1011,"title":{},"body":{"components/MapComponent.html":{}}}],["emitted",{"_index":1026,"title":{},"body":{"components/MapComponent.html":{}}}],["empty",{"_index":1037,"title":{},"body":{"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"miscellaneous/variables.html":{}}}],["en_us",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"classes/StaticLoader.html":{},"miscellaneous/variables.html":{}}}],["en_us\"].sidebar",{"_index":1575,"title":{},"body":{"classes/StaticLoader.html":{}}}],["en_us\"].sidebar[key",{"_index":1577,"title":{},"body":{"classes/StaticLoader.html":{}}}],["en_uslang",{"_index":1565,"title":{},"body":{"classes/StaticLoader.html":{},"miscellaneous/variables.html":{}}}],["end",{"_index":725,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"miscellaneous/functions.html":{}}}],["endyear",{"_index":729,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{}}}],["enforce",{"_index":1129,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/typealiases.html":{}}}],["english",{"_index":778,"title":{},"body":{"components/FrameComponent.html":{}}}],["entries",{"_index":1860,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["entries.ts",{"_index":1813,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["entry",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"interfaces/WisdomInterface.html":{}}}],["entry[0",{"_index":1555,"title":{},"body":{"components/SideBarComponent.html":{}}}],["entrycomponent",{"_index":1663,"title":{},"body":{"interfaces/WisdomInterface.html":{},"miscellaneous/variables.html":{}}}],["enum",{"_index":1088,"title":{},"body":{"components/MapComponent.html":{}}}],["enumerations",{"_index":1750,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":572,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apiurl",{"_index":580,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{}}}],["environment.baseurl",{"_index":578,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{}}}],["environments/environment",{"_index":575,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{}}}],["equation",{"_index":717,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{}}}],["err",{"_index":911,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["error",{"_index":275,"title":{},"body":{"guards/AuthGuard.html":{},"components/ErrorComponent.html":{},"components/LoginComponent.html":{}}}],["error'},{'name",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/BarChartComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterUsageForecastsComponent.html":{}}}],["error(err",{"_index":910,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["error.component.html",{"_index":667,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error/404?message=not%20found",{"_index":186,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["error/:code",{"_index":184,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["error/error.component",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["errorcomponent",{"_index":62,"title":{"components/ErrorComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BarChartComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterUsageForecastsComponent.html":{},"coverage.html":{},"index.html":{}}}],["errors",{"_index":288,"title":{},"body":{"guards/AuthGuard.html":{}}}],["errresponse",{"_index":276,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["errresponse.error",{"_index":986,"title":{},"body":{"components/LoginComponent.html":{}}}],["errresponse.status",{"_index":278,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["errresponse.statustext",{"_index":285,"title":{},"body":{"guards/AuthGuard.html":{}}}],["errurl",{"_index":281,"title":{},"body":{"guards/AuthGuard.html":{}}}],["errurl.queryparams",{"_index":283,"title":{},"body":{"guards/AuthGuard.html":{}}}],["etag",{"_index":648,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["etagmap",{"_index":625,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["event",{"_index":353,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"components/ResultDataViewComponent.html":{}}}],["event.headers.get(\"etag",{"_index":649,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["event.headers.get(\"last",{"_index":652,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["eventemitter",{"_index":1058,"title":{},"body":{"components/MapComponent.html":{}}}],["everything",{"_index":1038,"title":{},"body":{"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["exactly",{"_index":1111,"title":{},"body":{"components/MapComponent.html":{}}}],["example",{"_index":688,"title":{},"body":{"components/ExampleComponent.html":{},"modules/ExampleModule.html":{},"injectables/ExampleService.html":{},"components/MapComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["example.component",{"_index":697,"title":{},"body":{"modules/ExampleModule.html":{}}}],["example.component.html",{"_index":689,"title":{},"body":{"components/ExampleComponent.html":{}}}],["example.example.key",{"_index":690,"title":{},"body":{"components/ExampleComponent.html":{}}}],["examplecomponent",{"_index":64,"title":{"components/ExampleComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BarChartComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"modules/ExampleModule.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterUsageForecastsComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["examplemodule",{"_index":691,"title":{"modules/ExampleModule.html":{}},"body":{"modules/ExampleModule.html":{},"index.html":{},"modules.html":{}}}],["exampleservice",{"_index":698,"title":{"injectables/ExampleService.html":{}},"body":{"injectables/ExampleService.html":{},"coverage.html":{}}}],["except",{"_index":736,"title":{},"body":{"components/FrameComponent.html":{}}}],["executed",{"_index":601,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["exist",{"_index":1845,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["exists",{"_index":1884,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["expiration",{"_index":451,"title":{},"body":{"injectables/AuthStorageService.html":{},"miscellaneous/variables.html":{}}}],["expires",{"_index":471,"title":{},"body":{"injectables/AuthStorageService.html":{},"miscellaneous/variables.html":{}}}],["expires_in_key",{"_index":470,"title":{},"body":{"injectables/AuthStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["expiresin",{"_index":430,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["expiresin(unixtime",{"_index":485,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["explanation",{"_index":1957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["export",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"components/BarChartComponent.html":{},"interceptors/BaseUrlInterceptor.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"modules/ChartModule.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"modules/ExampleModule.html":{},"injectables/ExampleService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"classes/ModuleProvider.html":{},"components/ResultDataViewComponent.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"interfaces/ShapeData.html":{},"components/SideBarComponent.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterUsageForecastsComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{},"interfaces/WisdomInterface.html":{},"modules/WisdomModule.html":{}}}],["exported",{"_index":701,"title":{},"body":{"injectables/ExampleService.html":{},"interfaces/WisdomInterface.html":{}}}],["exports",{"_index":188,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ChartModule.html":{},"modules/ExampleModule.html":{},"modules/WaterUsageForecastsModule.html":{},"modules/WisdomModule.html":{}}}],["extends",{"_index":1232,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["extension",{"_index":1937,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extract",{"_index":1629,"title":{},"body":{"components/WaterUsageForecastsComponent.html":{}}}],["f",{"_index":964,"title":{},"body":{"components/LoginComponent.html":{}}}],["f.valid",{"_index":973,"title":{},"body":{"components/LoginComponent.html":{}}}],["f.value",{"_index":974,"title":{},"body":{"components/LoginComponent.html":{}}}],["false",{"_index":605,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{},"components/FrameComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"components/ResultDataViewComponent.html":{},"miscellaneous/variables.html":{}}}],["farming_forestry_fishing_industry",{"_index":1651,"title":{},"body":{"injectables/WaterUsageForecastsService.html":{}}}],["feature",{"_index":1195,"title":{},"body":{"components/MapComponent.html":{}}}],["feature.properties.key",{"_index":1200,"title":{},"body":{"components/MapComponent.html":{}}}],["fetch",{"_index":1254,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["fetchdata",{"_index":1372,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["fetchdata(key",{"_index":1383,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["fetched",{"_index":1163,"title":{},"body":{"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["fetched[layerkey",{"_index":1165,"title":{},"body":{"components/MapComponent.html":{}}}],["fetchforecastdata",{"_index":1646,"title":{},"body":{"injectables/WaterUsageForecastsService.html":{}}}],["fetchforecastdata(key",{"_index":1648,"title":{},"body":{"injectables/WaterUsageForecastsService.html":{}}}],["fetching",{"_index":1298,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["fetchlayerdata",{"_index":1271,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["fetchlayerdata(resolution",{"_index":1333,"title":{},"body":{"injectables/MapService.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"components/BarChartComponent.html":{},"interceptors/BaseUrlInterceptor.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"modules/ChartModule.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"modules/ExampleModule.html":{},"injectables/ExampleService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"classes/ModuleProvider.html":{},"components/ResultDataViewComponent.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"interfaces/ShapeData.html":{},"components/SideBarComponent.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterUsageForecastsComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{},"interfaces/WisdomInterface.html":{},"modules/WisdomModule.html":{},"coverage.html":{}}}],["find",{"_index":801,"title":{},"body":{"components/IonIconComponent.html":{}}}],["first",{"_index":1859,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["firstname",{"_index":1590,"title":{},"body":{"injectables/UserService.html":{}}}],["firstvaluefrom",{"_index":1248,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["firstvaluefrom(this.http.get(`${api_url",{"_index":1294,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["fisheries",{"_index":1434,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["fixme",{"_index":1601,"title":{},"body":{"injectables/UserService.html":{}}}],["flat",{"_index":1472,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["flex",{"_index":1927,"title":{},"body":{"miscellaneous/variables.html":{}}}],["float",{"_index":718,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{}}}],["fo",{"_index":469,"title":{},"body":{"injectables/AuthStorageService.html":{},"miscellaneous/variables.html":{}}}],["follow",{"_index":1863,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["following",{"_index":1029,"title":{},"body":{"components/MapComponent.html":{},"interfaces/WisdomInterface.html":{},"miscellaneous/typealiases.html":{}}}],["force",{"_index":1268,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["forecast",{"_index":708,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/ResultDataViewComponent.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["forecastentry",{"_index":703,"title":{"interfaces/ForecastEntry.html":{}},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"coverage.html":{}}}],["forecastmodel",{"_index":1649,"title":{},"body":{"injectables/WaterUsageForecastsService.html":{}}}],["forecastresponse",{"_index":710,"title":{"interfaces/ForecastResponse.html":{}},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/ResultDataViewComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"coverage.html":{}}}],["forecastresponse[\"accumulations",{"_index":1430,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["forecastresponse[\"partials\"][0][\"consumergroup",{"_index":715,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{}}}],["forecastresponse[\"partials\"][0][\"referenceusages",{"_index":726,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{}}}],["forecasts",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/BarChartComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterUsageForecastsComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/variables.html":{}}}],["forecasts.component",{"_index":1640,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{}}}],["forecasts.component.html",{"_index":1623,"title":{},"body":{"components/WaterUsageForecastsComponent.html":{}}}],["forecasts.component.ts",{"_index":1620,"title":{},"body":{"components/WaterUsageForecastsComponent.html":{},"coverage.html":{}}}],["forecasts.component.ts:16",{"_index":1627,"title":{},"body":{"components/WaterUsageForecastsComponent.html":{}}}],["forecasts.component.ts:18",{"_index":1625,"title":{},"body":{"components/WaterUsageForecastsComponent.html":{}}}],["forecasts.component.ts:22",{"_index":1626,"title":{},"body":{"components/WaterUsageForecastsComponent.html":{}}}],["forecasts.display.loading",{"_index":1658,"title":{},"body":{"injectables/WaterUsageForecastsService.html":{}}}],["forecasts.label.name",{"_index":1955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forecasts.map",{"_index":1330,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["forecasts.module.ts",{"_index":1639,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{}}}],["forecasts.parameter",{"_index":1503,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["forecasts.parameter.linear",{"_index":1504,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["forecasts.parameter.logarithmic",{"_index":1505,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["forecasts.parameter.polynomial",{"_index":1506,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["forecasts.result",{"_index":1508,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["forecasts.service",{"_index":1405,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["forecasts.service.ts",{"_index":1644,"title":{},"body":{"injectables/WaterUsageForecastsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["forecasts.service.ts:18",{"_index":1647,"title":{},"body":{"injectables/WaterUsageForecastsService.html":{}}}],["forecasts.service.ts:25",{"_index":1653,"title":{},"body":{"injectables/WaterUsageForecastsService.html":{}}}],["forecasts/src/lib/forecast",{"_index":706,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["forecasts/src/lib/views/map",{"_index":1313,"title":{},"body":{"components/MapSelectViewComponent.html":{},"coverage.html":{}}}],["forecasts/src/lib/views/result",{"_index":1361,"title":{},"body":{"components/ResultDataViewComponent.html":{},"coverage.html":{}}}],["forecasts/src/lib/water",{"_index":1619,"title":{},"body":{"components/WaterUsageForecastsComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["forecasts/src/public",{"_index":1723,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["forecasttype",{"_index":1384,"title":{},"body":{"components/ResultDataViewComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/enumerations.html":{}}}],["forecasttype.linear",{"_index":1416,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["forecastusage",{"_index":727,"title":{"interfaces/ForecastUsage.html":{}},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/ResultDataViewComponent.html":{},"coverage.html":{}}}],["forestry",{"_index":1433,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["form",{"_index":400,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["formsmodule",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["frame",{"_index":737,"title":{},"body":{"components/FrameComponent.html":{}}}],["frame'},{'name",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/BarChartComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterUsageForecastsComponent.html":{}}}],["frame.component.html",{"_index":738,"title":{},"body":{"components/FrameComponent.html":{}}}],["frame/frame.component",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["frame/loader/loader.component",{"_index":156,"title":{},"body":{"modules/AppModule.html":{}}}],["frame/loader/loader.guard",{"_index":177,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/ModuleProvider.html":{}}}],["frame/loader/loader.interceptor",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["frame/side",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["framecomponent",{"_index":65,"title":{"components/FrameComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BarChartComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterUsageForecastsComponent.html":{},"coverage.html":{},"index.html":{}}}],["framing",{"_index":733,"title":{},"body":{"components/FrameComponent.html":{}}}],["fromobject",{"_index":414,"title":{},"body":{"injectables/AuthService.html":{}}}],["full",{"_index":665,"title":{},"body":{"components/ErrorComponent.html":{}}}],["full_res",{"_index":1104,"title":{},"body":{"components/MapComponent.html":{}}}],["function",{"_index":292,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthStorageService.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/ResultDataViewComponent.html":{},"injectables/SettingsStorageService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["functions",{"_index":1755,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":199,"title":{},"body":{"guards/AuthGuard.html":{},"components/FrameComponent.html":{},"miscellaneous/variables.html":{}}}],["gemeinde",{"_index":1498,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["generated",{"_index":531,"title":{},"body":{"components/BarChartComponent.html":{},"components/LineChartComponent.html":{}}}],["geo",{"_index":1020,"title":{},"body":{"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"interfaces/ShapeData.html":{}}}],["geodata",{"_index":1251,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{},"miscellaneous/variables.html":{}}}],["geojson",{"_index":1125,"title":{},"body":{"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"interfaces/ShapeData.html":{},"miscellaneous/typealiases.html":{}}}],["geojsonlayer",{"_index":1189,"title":{},"body":{"components/MapComponent.html":{}}}],["geojsonlayer.adddata(object.assign(shape.geojson",{"_index":1211,"title":{},"body":{"components/MapComponent.html":{}}}],["geojsonlayer.addto(map",{"_index":1214,"title":{},"body":{"components/MapComponent.html":{}}}],["geojsonobject",{"_index":1126,"title":{},"body":{"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"interfaces/ShapeData.html":{},"miscellaneous/typealiases.html":{}}}],["getaccesstoken",{"_index":444,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["getboolstorage",{"_index":1526,"title":{},"body":{"injectables/SettingsStorageService.html":{}}}],["getboolstorage(key",{"_index":1528,"title":{},"body":{"injectables/SettingsStorageService.html":{}}}],["getdisplaytexts",{"_index":934,"title":{},"body":{"injectables/LoaderService.html":{}}}],["getelementclasses",{"_index":608,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["getexpiresin",{"_index":449,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["gethidesidebar",{"_index":751,"title":{},"body":{"components/FrameComponent.html":{},"injectables/SettingsStorageService.html":{}}}],["gethideuserbar",{"_index":758,"title":{},"body":{"components/FrameComponent.html":{},"injectables/SettingsStorageService.html":{}}}],["getloading",{"_index":936,"title":{},"body":{"injectables/LoaderService.html":{}}}],["getmethod",{"_index":1400,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["getoptions",{"_index":539,"title":{},"body":{"components/BarChartComponent.html":{},"components/LineChartComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getrefreshtoken",{"_index":459,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["getscopes",{"_index":463,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["getstorage",{"_index":426,"title":{},"body":{"injectables/AuthStorageService.html":{},"injectables/SettingsStorageService.html":{}}}],["getstorage(key",{"_index":437,"title":{},"body":{"injectables/AuthStorageService.html":{},"injectables/SettingsStorageService.html":{}}}],["getter",{"_index":475,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["gettranslation",{"_index":1559,"title":{},"body":{"classes/StaticLoader.html":{}}}],["gettranslation(lang",{"_index":1560,"title":{},"body":{"classes/StaticLoader.html":{}}}],["getusers",{"_index":1584,"title":{},"body":{"injectables/UserService.html":{}}}],["getusers200",{"_index":1595,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["getusersid200",{"_index":1805,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["getusersid404",{"_index":1807,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["getusersme200",{"_index":1809,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["give",{"_index":1039,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/typealiases.html":{}}}],["given",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{},"directives/LangSelectorDirective.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"classes/ModuleProvider.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["globalthis.localstorage.getitem(\"lang",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["globalthis.localstorage.setitem(\"lang",{"_index":820,"title":{},"body":{"directives/LangSelectorDirective.html":{}}}],["globalthis.sessionstorage.getitem(key",{"_index":481,"title":{},"body":{"injectables/AuthStorageService.html":{},"injectables/SettingsStorageService.html":{}}}],["globalthis.sessionstorage.removeitem(key",{"_index":479,"title":{},"body":{"injectables/AuthStorageService.html":{},"injectables/SettingsStorageService.html":{}}}],["globalthis.sessionstorage.setitem(key",{"_index":480,"title":{},"body":{"injectables/AuthStorageService.html":{},"injectables/SettingsStorageService.html":{}}}],["go",{"_index":272,"title":{},"body":{"guards/AuthGuard.html":{}}}],["gracefully",{"_index":319,"title":{},"body":{"guards/AuthGuard.html":{}}}],["grant_type",{"_index":415,"title":{},"body":{"injectables/AuthService.html":{}}}],["graph",{"_index":1793,"title":{},"body":{"modules.html":{}}}],["green",{"_index":1435,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["grid",{"_index":887,"title":{},"body":{"components/LoaderComponent.html":{}}}],["groups",{"_index":1510,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["gt",{"_index":1766,"title":{},"body":{"miscellaneous/functions.html":{}}}],["gt;&lt;/map&gt",{"_index":1120,"title":{},"body":{"components/MapComponent.html":{}}}],["guard",{"_index":189,"title":{"guards/AuthGuard.html":{},"guards/LoaderGuard.html":{}},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["guards",{"_index":190,"title":{},"body":{"guards/AuthGuard.html":{},"guards/LoaderGuard.html":{},"index.html":{}}}],["handle",{"_index":286,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{}}}],["handler",{"_index":336,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/BaseUrlInterceptor.html":{}}}],["handling",{"_index":356,"title":{},"body":{"injectables/AuthService.html":{}}}],["header",{"_index":347,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["headers",{"_index":350,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interceptors/CacheInterceptor.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/UserService.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/variables.html":{}}}],["height",{"_index":881,"title":{},"body":{"components/LoaderComponent.html":{},"components/MapComponent.html":{}}}],["height=&quot;70vh&quot",{"_index":1102,"title":{},"body":{"components/MapComponent.html":{}}}],["here",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/ExampleComponent.html":{},"components/IonIconComponent.html":{},"components/MapComponent.html":{}}}],["hex",{"_index":1050,"title":{},"body":{"components/MapComponent.html":{}}}],["hide",{"_index":753,"title":{},"body":{"components/FrameComponent.html":{},"injectables/SettingsStorageService.html":{},"miscellaneous/variables.html":{}}}],["hide_sidebar_key",{"_index":1537,"title":{},"body":{"injectables/SettingsStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["hide_user_bar_key",{"_index":1538,"title":{},"body":{"injectables/SettingsStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["hidesidebar",{"_index":739,"title":{},"body":{"components/FrameComponent.html":{},"injectables/SettingsStorageService.html":{}}}],["hidesidebar(setting",{"_index":768,"title":{},"body":{"components/FrameComponent.html":{},"injectables/SettingsStorageService.html":{}}}],["hideuserbar",{"_index":740,"title":{},"body":{"components/FrameComponent.html":{},"injectables/SettingsStorageService.html":{}}}],["hideuserbar(setting",{"_index":770,"title":{},"body":{"components/FrameComponent.html":{},"injectables/SettingsStorageService.html":{}}}],["holds",{"_index":1093,"title":{},"body":{"components/MapComponent.html":{}}}],["host",{"_index":536,"title":{},"body":{"components/BarChartComponent.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/LineChartComponent.html":{}}}],["hostbinding",{"_index":611,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["hostbinding(\"class",{"_index":614,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["hostlistener",{"_index":612,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{},"directives/LangSelectorDirective.html":{}}}],["hostlistener(\"click",{"_index":619,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{},"directives/LangSelectorDirective.html":{}}}],["hostlistener('click",{"_index":603,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{},"directives/LangSelectorDirective.html":{}}}],["hostlisteners",{"_index":596,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{},"directives/LangSelectorDirective.html":{}}}],["household",{"_index":1438,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["households_and_small_businesses",{"_index":1650,"title":{},"body":{"injectables/WaterUsageForecastsService.html":{}}}],["html",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/BarChartComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterUsageForecastsComponent.html":{}}}],["http",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/UserService.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["http_interceptors",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/UserService.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["httpclientmodule",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["httpcontext",{"_index":381,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["httpcontext().set(use_api_url",{"_index":410,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["httpcontexttoken",{"_index":573,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{},"miscellaneous/variables.html":{}}}],["httperrorresponse",{"_index":902,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["httpevent",{"_index":338,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/BaseUrlInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"interceptors/LoaderInterceptor.html":{},"interceptors/SanitizeUrlInterceptor.html":{}}}],["httphandler",{"_index":330,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/BaseUrlInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"interceptors/LoaderInterceptor.html":{},"interceptors/SanitizeUrlInterceptor.html":{}}}],["httpheaders",{"_index":382,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/CacheInterceptor.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/UserService.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/variables.html":{}}}],["httpinterceptor",{"_index":339,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/BaseUrlInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"interceptors/LoaderInterceptor.html":{},"interceptors/SanitizeUrlInterceptor.html":{}}}],["httpoptions",{"_index":405,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["httpparams",{"_index":383,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["httpparams({fromobject",{"_index":417,"title":{},"body":{"injectables/AuthService.html":{}}}],["httprequest",{"_index":329,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/BaseUrlInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"interceptors/LoaderInterceptor.html":{},"interceptors/SanitizeUrlInterceptor.html":{}}}],["httpresponse",{"_index":630,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/UserService.html":{}}}],["httpresponsebase",{"_index":903,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["https://bulma.io/documentation/components/menu",{"_index":766,"title":{},"body":{"components/FrameComponent.html":{}}}],["https://github.com/microsoft/tsdoc/issues/308",{"_index":477,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["https://ionic.io/ionicons",{"_index":804,"title":{},"body":{"components/IonIconComponent.html":{}}}],["https://tile.openstreetmap.org/{z}/{x}/{y}.png",{"_index":1095,"title":{},"body":{"components/MapComponent.html":{}}}],["https://wisdom",{"_index":1903,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://wisdom04.vlba.uni",{"_index":1045,"title":{},"body":{"components/MapComponent.html":{}}}],["i18n/lang",{"_index":150,"title":{},"body":{"modules/AppModule.html":{}}}],["i18n/static",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["icon",{"_index":796,"title":{},"body":{"components/IonIconComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["icon'},{'name",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/BarChartComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterUsageForecastsComponent.html":{}}}],["icon.component",{"_index":1673,"title":{},"body":{"modules/WisdomModule.html":{}}}],["icon.component.ts",{"_index":787,"title":{},"body":{"components/IonIconComponent.html":{},"coverage.html":{}}}],["icon.component.ts:22",{"_index":797,"title":{},"body":{"components/IonIconComponent.html":{}}}],["icon.setattribute(\"name",{"_index":1936,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon.setattribute(\"size",{"_index":1939,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon.style.color",{"_index":1941,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon.style.pointerevents",{"_index":1935,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon/ion",{"_index":786,"title":{},"body":{"components/IonIconComponent.html":{},"modules/WisdomModule.html":{},"coverage.html":{}}}],["icons",{"_index":788,"title":{},"body":{"components/IonIconComponent.html":{}}}],["idb",{"_index":1247,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{},"dependencies.html":{}}}],["idb.get(\"queries",{"_index":1278,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["idb.transaction(\"shapes",{"_index":1280,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["idb.transaction([\"queries",{"_index":1304,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["identifier",{"_index":1677,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["identify",{"_index":1236,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["ignore",{"_index":250,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"classes/StaticLoader.html":{}}}],["implement",{"_index":1031,"title":{},"body":{"components/MapComponent.html":{}}}],["implementation",{"_index":1609,"title":{},"body":{"injectables/UserService.html":{}}}],["implementing",{"_index":1662,"title":{},"body":{"interfaces/WisdomInterface.html":{}}}],["implements",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/BarChartComponent.html":{},"interceptors/BaseUrlInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"components/ErrorComponent.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"components/MapComponent.html":{},"components/ResultDataViewComponent.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"classes/StaticLoader.html":{},"components/WaterUsageForecastsComponent.html":{}}}],["import",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"components/BarChartComponent.html":{},"interceptors/BaseUrlInterceptor.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"modules/ChartModule.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"modules/ExampleModule.html":{},"injectables/ExampleService.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"classes/ModuleProvider.html":{},"components/ResultDataViewComponent.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"interfaces/ShapeData.html":{},"components/SideBarComponent.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterUsageForecastsComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{},"modules/WisdomModule.html":{}}}],["imported",{"_index":1325,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["imports",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ChartModule.html":{},"modules/ExampleModule.html":{},"modules/WaterUsageForecastsModule.html":{},"modules/WisdomModule.html":{}}}],["incorrect",{"_index":1602,"title":{},"body":{"injectables/UserService.html":{}}}],["index",{"_index":23,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"components/BarChartComponent.html":{},"interceptors/BaseUrlInterceptor.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ErrorComponent.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"classes/ModuleProvider.html":{},"components/ResultDataViewComponent.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"interfaces/ShapeData.html":{},"components/SideBarComponent.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterUsageForecastsComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"interfaces/WisdomInterface.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexed",{"_index":1242,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["indexeddb",{"_index":1255,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["infinite",{"_index":859,"title":{},"body":{"components/LoaderComponent.html":{}}}],["infinity",{"_index":1448,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"components/BarChartComponent.html":{},"interceptors/BaseUrlInterceptor.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"modules/ChartModule.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"modules/ExampleModule.html":{},"injectables/ExampleService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"classes/ModuleProvider.html":{},"components/ResultDataViewComponent.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"interfaces/ShapeData.html":{},"components/SideBarComponent.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterUsageForecastsComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{},"interfaces/WisdomInterface.html":{},"modules/WisdomModule.html":{}}}],["information",{"_index":1849,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["informationen",{"_index":1486,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["init",{"_index":672,"title":{},"body":{"components/ErrorComponent.html":{},"components/MapComponent.html":{}}}],["initialize",{"_index":1923,"title":{},"body":{"miscellaneous/variables.html":{}}}],["initialized",{"_index":520,"title":{},"body":{"components/BarChartComponent.html":{},"components/LineChartComponent.html":{}}}],["inject",{"_index":323,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/IonIconComponent.html":{},"miscellaneous/variables.html":{}}}],["injectable",{"_index":243,"title":{"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"injectables/ExampleService.html":{},"injectables/LoaderService.html":{},"injectables/MapService.html":{},"injectables/SettingsStorageService.html":{},"injectables/UserService.html":{},"injectables/WaterUsageForecastsService.html":{}},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"injectables/ExampleService.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"injectables/UserService.html":{},"injectables/WaterUsageForecastsService.html":{},"coverage.html":{}}}],["injectables",{"_index":354,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"injectables/ExampleService.html":{},"injectables/LoaderService.html":{},"injectables/MapService.html":{},"injectables/SettingsStorageService.html":{},"injectables/UserService.html":{},"injectables/WaterUsageForecastsService.html":{},"index.html":{}}}],["injected",{"_index":335,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/MapComponent.html":{},"miscellaneous/variables.html":{}}}],["injects",{"_index":332,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["inner",{"_index":1066,"title":{},"body":{"components/MapComponent.html":{}}}],["input",{"_index":544,"title":{},"body":{"components/BarChartComponent.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/ErrorComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"miscellaneous/typealiases.html":{}}}],["input(\"center",{"_index":1138,"title":{},"body":{"components/MapComponent.html":{}}}],["input(\"class",{"_index":613,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["input(\"data",{"_index":549,"title":{},"body":{"components/BarChartComponent.html":{},"components/LineChartComponent.html":{}}}],["input(\"height",{"_index":1134,"title":{},"body":{"components/MapComponent.html":{}}}],["input(\"layers",{"_index":1144,"title":{},"body":{"components/MapComponent.html":{}}}],["input(\"options",{"_index":550,"title":{},"body":{"components/BarChartComponent.html":{},"components/LineChartComponent.html":{}}}],["input(\"selectedcolor",{"_index":1143,"title":{},"body":{"components/MapComponent.html":{}}}],["input(\"selectlang",{"_index":817,"title":{},"body":{"directives/LangSelectorDirective.html":{}}}],["input(\"tileurl",{"_index":1136,"title":{},"body":{"components/MapComponent.html":{}}}],["input(\"unselectedcolor",{"_index":1142,"title":{},"body":{"components/MapComponent.html":{}}}],["input(\"zoom",{"_index":1140,"title":{},"body":{"components/MapComponent.html":{}}}],["inputcenter",{"_index":1139,"title":{},"body":{"components/MapComponent.html":{}}}],["inputheight",{"_index":1135,"title":{},"body":{"components/MapComponent.html":{}}}],["inputlayers",{"_index":1017,"title":{},"body":{"components/MapComponent.html":{}}}],["inputlayers(layerconfig",{"_index":1145,"title":{},"body":{"components/MapComponent.html":{}}}],["inputs",{"_index":508,"title":{},"body":{"components/BarChartComponent.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LineChartComponent.html":{},"components/MapComponent.html":{}}}],["inputtileurl",{"_index":1137,"title":{},"body":{"components/MapComponent.html":{}}}],["inputzoom",{"_index":1141,"title":{},"body":{"components/MapComponent.html":{}}}],["instanceof",{"_index":647,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"interceptors/LoaderInterceptor.html":{}}}],["instant",{"_index":1775,"title":{},"body":{"miscellaneous/functions.html":{}}}],["instead",{"_index":402,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["institution",{"_index":1441,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["insufficient",{"_index":1840,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["interact",{"_index":218,"title":{},"body":{"guards/AuthGuard.html":{},"components/FrameComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/UserService.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["interaction",{"_index":358,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["intercept",{"_index":326,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/BaseUrlInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"interceptors/LoaderInterceptor.html":{},"interceptors/SanitizeUrlInterceptor.html":{}}}],["intercept(request",{"_index":328,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/BaseUrlInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"interceptors/LoaderInterceptor.html":{},"interceptors/SanitizeUrlInterceptor.html":{}}}],["interceptor",{"_index":320,"title":{"interceptors/AuthInterceptor.html":{},"interceptors/BaseUrlInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"interceptors/LoaderInterceptor.html":{},"interceptors/SanitizeUrlInterceptor.html":{}},"body":{"interceptors/AuthInterceptor.html":{},"coverage.html":{}}}],["interceptors",{"_index":321,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/BaseUrlInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"interceptors/LoaderInterceptor.html":{},"interceptors/SanitizeUrlInterceptor.html":{}}}],["interface",{"_index":702,"title":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"interfaces/MapDB.html":{},"interfaces/ShapeData.html":{},"interfaces/WisdomInterface.html":{}},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"interfaces/ShapeData.html":{},"components/WaterUsageForecastsComponent.html":{},"interfaces/WisdomInterface.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["interfaces",{"_index":704,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"interfaces/MapDB.html":{},"interfaces/ShapeData.html":{},"interfaces/WisdomInterface.html":{},"index.html":{}}}],["internal",{"_index":439,"title":{},"body":{"injectables/AuthStorageService.html":{},"components/ResultDataViewComponent.html":{},"injectables/SettingsStorageService.html":{}}}],["internally",{"_index":1061,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/functions.html":{}}}],["intersection",{"_index":1034,"title":{},"body":{"components/MapComponent.html":{}}}],["invalid",{"_index":277,"title":{},"body":{"guards/AuthGuard.html":{},"components/WaterUsageForecastsComponent.html":{}}}],["invert",{"_index":1124,"title":{},"body":{"components/MapComponent.html":{}}}],["invertselection",{"_index":1916,"title":{},"body":{"miscellaneous/variables.html":{}}}],["invertselection(options",{"_index":1943,"title":{},"body":{"miscellaneous/variables.html":{}}}],["invertselectioncontrol",{"_index":1181,"title":{},"body":{"components/MapComponent.html":{}}}],["invertselectioncontrol.addto(map",{"_index":1224,"title":{},"body":{"components/MapComponent.html":{}}}],["ion",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/BarChartComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterUsageForecastsComponent.html":{},"modules/WisdomModule.html":{},"miscellaneous/variables.html":{}}}],["ionic.io/ioniconshttps",{"_index":1862,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ioniconcomponent",{"_index":67,"title":{"components/IonIconComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BarChartComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterUsageForecastsComponent.html":{},"modules/WisdomModule.html":{},"coverage.html":{},"index.html":{}}}],["ionicons",{"_index":789,"title":{},"body":{"components/IonIconComponent.html":{}}}],["isactive",{"_index":595,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["isloading",{"_index":838,"title":{},"body":{"components/LoaderComponent.html":{}}}],["issue",{"_index":965,"title":{},"body":{"components/LoginComponent.html":{}}}],["item",{"_index":851,"title":{},"body":{"components/LoaderComponent.html":{},"components/ResultDataViewComponent.html":{},"injectables/SettingsStorageService.html":{}}}],["item.linewidth",{"_index":1479,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["item:nth",{"_index":861,"title":{},"body":{"components/LoaderComponent.html":{}}}],["items",{"_index":1929,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iterate",{"_index":1779,"title":{},"body":{"miscellaneous/functions.html":{}}}],["join",{"_index":385,"title":{},"body":{"injectables/AuthService.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/MapComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["join(auth_api",{"_index":1617,"title":{},"body":{"injectables/UserService.html":{}}}],["join(auth_url",{"_index":412,"title":{},"body":{"injectables/AuthService.html":{}}}],["js",{"_index":795,"title":{},"body":{"components/IonIconComponent.html":{}}}],["json",{"_index":403,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/UserService.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/variables.html":{}}}],["justify",{"_index":1930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["k",{"_index":1293,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["k.split",{"_index":1162,"title":{},"body":{"components/MapComponent.html":{}}}],["k.substring(0",{"_index":1292,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["key",{"_index":341,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthStorageService.html":{},"interceptors/CacheInterceptor.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"directives/LangSelectorDirective.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"classes/ModuleProvider.html":{},"components/ResultDataViewComponent.html":{},"injectables/SettingsStorageService.html":{},"interfaces/ShapeData.html":{},"classes/StaticLoader.html":{},"components/WaterUsageForecastsComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["key.length",{"_index":1631,"title":{},"body":{"components/WaterUsageForecastsComponent.html":{}}}],["key[0",{"_index":1238,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["key].flat",{"_index":1633,"title":{},"body":{"components/WaterUsageForecastsComponent.html":{}}}],["keyframes",{"_index":872,"title":{},"body":{"components/LoaderComponent.html":{}}}],["keys",{"_index":745,"title":{},"body":{"components/FrameComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"components/WaterUsageForecastsComponent.html":{},"interfaces/WisdomInterface.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["keys.length",{"_index":1289,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["keys.map(k",{"_index":1291,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["keys?.map(k",{"_index":1161,"title":{},"body":{"components/MapComponent.html":{}}}],["kombination",{"_index":989,"title":{},"body":{"components/LoginComponent.html":{}}}],["korrekt",{"_index":991,"title":{},"body":{"components/LoginComponent.html":{}}}],["l",{"_index":1121,"title":{},"body":{"components/MapComponent.html":{},"interfaces/ShapeData.html":{}}}],["l.control.extend",{"_index":1921,"title":{},"body":{"miscellaneous/variables.html":{}}}],["l.control.layers",{"_index":1179,"title":{},"body":{"components/MapComponent.html":{}}}],["l.controloptions",{"_index":1920,"title":{},"body":{"miscellaneous/variables.html":{}}}],["l.domutil.create",{"_index":1931,"title":{},"body":{"miscellaneous/variables.html":{}}}],["l.geojson(undefined",{"_index":1190,"title":{},"body":{"components/MapComponent.html":{}}}],["l.layer",{"_index":1186,"title":{},"body":{"components/MapComponent.html":{}}}],["l.map",{"_index":1080,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/variables.html":{}}}],["l.map(nativemapelement",{"_index":1170,"title":{},"body":{"components/MapComponent.html":{}}}],["l.path",{"_index":1201,"title":{},"body":{"components/MapComponent.html":{}}}],["l.tilelayer(this.tileurl).addto(map",{"_index":1176,"title":{},"body":{"components/MapComponent.html":{}}}],["l.util.setoptions(this",{"_index":1924,"title":{},"body":{"miscellaneous/variables.html":{}}}],["label",{"_index":1455,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["label[0",{"_index":1554,"title":{},"body":{"components/SideBarComponent.html":{}}}],["labels",{"_index":1476,"title":{},"body":{"components/ResultDataViewComponent.html":{},"miscellaneous/typealiases.html":{}}}],["landkreis",{"_index":1497,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["lang",{"_index":776,"title":{},"body":{"components/FrameComponent.html":{},"directives/LangSelectorDirective.html":{},"classes/ModuleProvider.html":{},"classes/StaticLoader.html":{}}}],["langs",{"_index":1341,"title":{},"body":{"classes/ModuleProvider.html":{},"classes/StaticLoader.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["langs(lang",{"_index":1348,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["langs/de_de",{"_index":1564,"title":{},"body":{"classes/StaticLoader.html":{}}}],["langs/en_us",{"_index":1566,"title":{},"body":{"classes/StaticLoader.html":{}}}],["langs[lang",{"_index":1574,"title":{},"body":{"classes/StaticLoader.html":{}}}],["langselectordirective",{"_index":96,"title":{"directives/LangSelectorDirective.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BarChartComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterUsageForecastsComponent.html":{},"coverage.html":{},"index.html":{}}}],["language",{"_index":809,"title":{},"body":{"directives/LangSelectorDirective.html":{},"classes/ModuleProvider.html":{},"classes/StaticLoader.html":{},"miscellaneous/variables.html":{}}}],["languages",{"_index":1568,"title":{},"body":{"classes/StaticLoader.html":{},"miscellaneous/variables.html":{}}}],["large",{"_index":1940,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lastmodified",{"_index":651,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["lastmodifiedmap",{"_index":626,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["lastname",{"_index":1587,"title":{},"body":{"injectables/UserService.html":{}}}],["later",{"_index":1196,"title":{},"body":{"components/MapComponent.html":{}}}],["latitude",{"_index":1072,"title":{},"body":{"components/MapComponent.html":{}}}],["layer",{"_index":1025,"title":{},"body":{"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"interfaces/ShapeData.html":{},"miscellaneous/typealiases.html":{}}}],["layer.bindtooltip(feature.properties.name",{"_index":1197,"title":{},"body":{"components/MapComponent.html":{}}}],["layer.fire(\"click",{"_index":1223,"title":{},"body":{"components/MapComponent.html":{}}}],["layer.on(\"click",{"_index":1199,"title":{},"body":{"components/MapComponent.html":{}}}],["layerconfig",{"_index":1003,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/typealiases.html":{}}}],["layerdata",{"_index":1004,"title":{},"body":{"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"interfaces/ShapeData.html":{},"miscellaneous/typealiases.html":{}}}],["layerkey",{"_index":1089,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/typealiases.html":{}}}],["layername",{"_index":1225,"title":{},"body":{"components/MapComponent.html":{}}}],["layernames",{"_index":1005,"title":{},"body":{"components/MapComponent.html":{}}}],["layers",{"_index":1012,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/variables.html":{}}}],["layers.push(layer",{"_index":1210,"title":{},"body":{"components/MapComponent.html":{}}}],["layers]=&quot",{"_index":1103,"title":{},"body":{"components/MapComponent.html":{}}}],["layerscontrol",{"_index":1178,"title":{},"body":{"components/MapComponent.html":{}}}],["layerscontrol.addbaselayer(geojsonlayer",{"_index":1216,"title":{},"body":{"components/MapComponent.html":{}}}],["layerscontrol.addto(map",{"_index":1220,"title":{},"body":{"components/MapComponent.html":{}}}],["lazily",{"_index":1258,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["leaflet",{"_index":1082,"title":{},"body":{"components/MapComponent.html":{},"interfaces/ShapeData.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["legend",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/BarChartComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterUsageForecastsComponent.html":{}}}],["legend.chart",{"_index":1481,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["legend.legenditems.length).hidden",{"_index":1484,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["legenditem",{"_index":1378,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["length",{"_index":1782,"title":{},"body":{"miscellaneous/functions.html":{}}}],["level",{"_index":1057,"title":{},"body":{"components/MapComponent.html":{}}}],["lib",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/BarChartComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterUsageForecastsComponent.html":{}}}],["line",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/BarChartComponent.html":{},"modules/ChartModule.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterUsageForecastsComponent.html":{}}}],["linear",{"_index":721,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"miscellaneous/enumerations.html":{}}}],["linechartcomponent",{"_index":70,"title":{"components/LineChartComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BarChartComponent.html":{},"modules/ChartModule.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterUsageForecastsComponent.html":{},"coverage.html":{},"index.html":{}}}],["link",{"_index":805,"title":{},"body":{"components/IonIconComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["literal",{"_index":731,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"miscellaneous/typealiases.html":{}}}],["load",{"_index":1552,"title":{},"body":{"components/SideBarComponent.html":{}}}],["loader",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"components/LoaderComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"classes/StaticLoader.html":{},"miscellaneous/variables.html":{}}}],["loader'},{'name",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/BarChartComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterUsageForecastsComponent.html":{}}}],["loader.component.html",{"_index":836,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader.component.scss",{"_index":835,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader.service",{"_index":845,"title":{},"body":{"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{}}}],["loader.ts",{"_index":1557,"title":{},"body":{"classes/StaticLoader.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loader.ts:32",{"_index":1561,"title":{},"body":{"classes/StaticLoader.html":{}}}],["loadercomponent",{"_index":72,"title":{"components/LoaderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BarChartComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterUsageForecastsComponent.html":{},"coverage.html":{},"index.html":{}}}],["loaderguard",{"_index":176,"title":{"guards/LoaderGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/LoaderGuard.html":{},"classes/ModuleProvider.html":{},"coverage.html":{}}}],["loaderinterceptor",{"_index":115,"title":{"interceptors/LoaderInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/LoaderInterceptor.html":{},"coverage.html":{},"index.html":{}}}],["loaderservice",{"_index":840,"title":{"injectables/LoaderService.html":{}},"body":{"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"coverage.html":{}}}],["loading",{"_index":922,"title":{},"body":{"injectables/LoaderService.html":{},"miscellaneous/variables.html":{}}}],["localhost:8090/auth",{"_index":1605,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["location",{"_index":1913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["log",{"_index":749,"title":{},"body":{"components/FrameComponent.html":{}}}],["logarithmic",{"_index":720,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"miscellaneous/enumerations.html":{}}}],["logged",{"_index":260,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["login",{"_index":183,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/FrameComponent.html":{},"components/LoginComponent.html":{}}}],["login'},{'name",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/BarChartComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterUsageForecastsComponent.html":{}}}],["login(username",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.component.html",{"_index":951,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":74,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BarChartComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterUsageForecastsComponent.html":{},"coverage.html":{},"index.html":{}}}],["loginhasissue",{"_index":952,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginurltree",{"_index":255,"title":{},"body":{"guards/AuthGuard.html":{}}}],["logout",{"_index":359,"title":{},"body":{"injectables/AuthService.html":{},"components/FrameComponent.html":{}}}],["logout(token",{"_index":372,"title":{},"body":{"injectables/AuthService.html":{}}}],["logs",{"_index":370,"title":{},"body":{"injectables/AuthService.html":{}}}],["longer",{"_index":1961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["longitude",{"_index":1071,"title":{},"body":{"components/MapComponent.html":{}}}],["look",{"_index":1267,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{},"miscellaneous/variables.html":{}}}],["lt;map",{"_index":1101,"title":{},"body":{"components/MapComponent.html":{}}}],["lx",{"_index":1123,"title":{},"body":{"components/MapComponent.html":{}}}],["lx.control.invertselection",{"_index":1222,"title":{},"body":{"components/MapComponent.html":{}}}],["m",{"_index":1404,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["made",{"_index":529,"title":{},"body":{"components/BarChartComponent.html":{},"components/LineChartComponent.html":{},"miscellaneous/typealiases.html":{}}}],["main",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{}}}],["make",{"_index":1180,"title":{},"body":{"components/MapComponent.html":{}}}],["making",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{},"directives/BulmaIsToggleableDirective.html":{},"miscellaneous/variables.html":{}}}],["management",{"_index":1582,"title":{},"body":{"injectables/UserService.html":{}}}],["map",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/BarChartComponent.html":{},"interceptors/CacheInterceptor.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterUsageForecastsComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["map'},{'name",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/BarChartComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterUsageForecastsComponent.html":{}}}],["map(el",{"_index":1469,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["map(rawshape",{"_index":1299,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["map(str",{"_index":1172,"title":{},"body":{"components/MapComponent.html":{}}}],["map.component.css",{"_index":1001,"title":{},"body":{"components/MapComponent.html":{}}}],["map.getrenderer(map",{"_index":1174,"title":{},"body":{"components/MapComponent.html":{}}}],["map.on(\"baselayerchange",{"_index":1218,"title":{},"body":{"components/MapComponent.html":{}}}],["map.removecontrol(invertselectioncontrol",{"_index":1221,"title":{},"body":{"components/MapComponent.html":{}}}],["map.removecontrol(layerscontrol",{"_index":1185,"title":{},"body":{"components/MapComponent.html":{}}}],["map.service",{"_index":1122,"title":{},"body":{"components/MapComponent.html":{}}}],["map/map.component",{"_index":1674,"title":{},"body":{"modules/WisdomModule.html":{}}}],["mapcomponent",{"_index":76,"title":{"components/MapComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BarChartComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterUsageForecastsComponent.html":{},"modules/WisdomModule.html":{},"coverage.html":{},"index.html":{}}}],["mapcomponent.inputlayers",{"_index":1132,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/typealiases.html":{}}}],["mapcomponent.resolution",{"_index":1322,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["mapdb",{"_index":1228,"title":{"interfaces/MapDB.html":{}},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{},"coverage.html":{}}}],["mapelement",{"_index":1006,"title":{},"body":{"components/MapComponent.html":{}}}],["maps",{"_index":1000,"title":{},"body":{"components/MapComponent.html":{}}}],["mapselection",{"_index":1318,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["mapselection(selection",{"_index":1319,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["mapselectviewcomponent",{"_index":78,"title":{"components/MapSelectViewComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BarChartComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterUsageForecastsComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"coverage.html":{},"index.html":{}}}],["mapservice",{"_index":1018,"title":{"injectables/MapService.html":{}},"body":{"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"coverage.html":{}}}],["mapusage(el",{"_index":1470,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["mapusage(usage",{"_index":1449,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["match",{"_index":639,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["matching",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"components/BarChartComponent.html":{},"interceptors/BaseUrlInterceptor.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"modules/ChartModule.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"modules/ExampleModule.html":{},"injectables/ExampleService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"classes/ModuleProvider.html":{},"components/ResultDataViewComponent.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"interfaces/ShapeData.html":{},"components/SideBarComponent.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterUsageForecastsComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{},"interfaces/WisdomInterface.html":{},"modules/WisdomModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.max(usage.endyear",{"_index":1451,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["math.min(usage.startyear",{"_index":1450,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["maxyear",{"_index":1447,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["meaning",{"_index":1130,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/typealiases.html":{}}}],["message",{"_index":284,"title":{},"body":{"guards/AuthGuard.html":{},"components/ErrorComponent.html":{},"components/LoginComponent.html":{}}}],["metadata",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/BarChartComponent.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterUsageForecastsComponent.html":{}}}],["method",{"_index":228,"title":{},"body":{"guards/AuthGuard.html":{},"components/ResultDataViewComponent.html":{},"miscellaneous/functions.html":{}}}],["method(m",{"_index":1418,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["methode",{"_index":1502,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["methods",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"components/BarChartComponent.html":{},"interceptors/BaseUrlInterceptor.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ErrorComponent.html":{},"components/FrameComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"classes/ModuleProvider.html":{},"components/ResultDataViewComponent.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterUsageForecastsComponent.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["middle",{"_index":1463,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["minimalistic",{"_index":687,"title":{},"body":{"components/ExampleComponent.html":{},"modules/ExampleModule.html":{}}}],["minyear",{"_index":1446,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["miscellaneous",{"_index":1749,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":1529,"title":{},"body":{"injectables/SettingsStorageService.html":{},"components/WaterUsageForecastsComponent.html":{}}}],["mixed",{"_index":1115,"title":{},"body":{"components/MapComponent.html":{}}}],["mode",{"_index":1909,"title":{},"body":{"miscellaneous/variables.html":{}}}],["model",{"_index":719,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{}}}],["modified",{"_index":653,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["modified_since",{"_index":642,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["module",{"_index":101,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ChartModule.html":{},"modules/ExampleModule.html":{},"modules/WaterUsageForecastsModule.html":{},"modules/WisdomModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/ChartModule.html":{},"modules/ExampleModule.html":{},"classes/ModuleProvider.html":{},"classes/StaticLoader.html":{},"interfaces/WisdomInterface.html":{},"miscellaneous/variables.html":{}}}],["module.ts",{"_index":1340,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["module.wisdominterface.entrycomponent",{"_index":1356,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["module.wisdominterface.path",{"_index":1355,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["module.wisdominterface.translations[lang",{"_index":1359,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["modulelang",{"_index":1358,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["moduleprovider",{"_index":174,"title":{"classes/ModuleProvider.html":{}},"body":{"modules/AppRoutingModule.html":{},"classes/ModuleProvider.html":{},"classes/StaticLoader.html":{},"coverage.html":{}}}],["moduleprovider.langs(\"de_de",{"_index":1571,"title":{},"body":{"classes/StaticLoader.html":{},"miscellaneous/variables.html":{}}}],["moduleprovider.langs(\"en_us",{"_index":1572,"title":{},"body":{"classes/StaticLoader.html":{},"miscellaneous/variables.html":{}}}],["moduleprovider.routes",{"_index":178,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["modules",{"_index":103,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ChartModule.html":{},"modules/ExampleModule.html":{},"classes/ModuleProvider.html":{},"modules/WaterUsageForecastsModule.html":{},"interfaces/WisdomInterface.html":{},"modules/WisdomModule.html":{},"index.html":{},"modules.html":{}}}],["mouseevent",{"_index":1919,"title":{},"body":{"miscellaneous/variables.html":{}}}],["moved",{"_index":1603,"title":{},"body":{"injectables/UserService.html":{}}}],["multi",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["municipal",{"_index":713,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/MapComponent.html":{},"miscellaneous/enumerations.html":{}}}],["name",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"components/BarChartComponent.html":{},"interceptors/BaseUrlInterceptor.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"classes/ModuleProvider.html":{},"components/ResultDataViewComponent.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"interfaces/ShapeData.html":{},"components/SideBarComponent.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterUsageForecastsComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"interfaces/WisdomInterface.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["names",{"_index":802,"title":{},"body":{"components/IonIconComponent.html":{}}}],["namespace",{"_index":1665,"title":{},"body":{"interfaces/WisdomInterface.html":{},"miscellaneous/variables.html":{}}}],["nan",{"_index":488,"title":{},"body":{"injectables/AuthStorageService.html":{},"components/ErrorComponent.html":{}}}],["nativemapelement",{"_index":1168,"title":{},"body":{"components/MapComponent.html":{}}}],["navigate",{"_index":231,"title":{},"body":{"guards/AuthGuard.html":{}}}],["necessary",{"_index":222,"title":{},"body":{"guards/AuthGuard.html":{},"components/IonIconComponent.html":{}}}],["need",{"_index":1346,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["needed",{"_index":798,"title":{},"body":{"components/IonIconComponent.html":{}}}],["needs",{"_index":195,"title":{},"body":{"guards/AuthGuard.html":{},"components/MapComponent.html":{},"injectables/UserService.html":{}}}],["nested",{"_index":1855,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["nesting",{"_index":765,"title":{},"body":{"components/FrameComponent.html":{}}}],["new",{"_index":265,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/BarChartComponent.html":{},"interceptors/CacheInterceptor.html":{},"components/LineChartComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/UserService.html":{},"injectables/WaterUsageForecastsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newurl",{"_index":1521,"title":{},"body":{"interceptors/SanitizeUrlInterceptor.html":{}}}],["next",{"_index":268,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/BaseUrlInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"interceptors/LoaderInterceptor.html":{},"components/LoginComponent.html":{},"interceptors/SanitizeUrlInterceptor.html":{}}}],["next(value",{"_index":908,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["next.handle",{"_index":581,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{}}}],["next.handle(authrequest).pipe(tap(event",{"_index":352,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["next.handle(request",{"_index":633,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"interceptors/LoaderInterceptor.html":{}}}],["next.handle(request.clone",{"_index":644,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"interceptors/SanitizeUrlInterceptor.html":{}}}],["ngafterviewinit",{"_index":506,"title":{},"body":{"components/BarChartComponent.html":{},"components/LineChartComponent.html":{},"components/MapComponent.html":{}}}],["ngform",{"_index":958,"title":{},"body":{"components/LoginComponent.html":{}}}],["ngmodule",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ChartModule.html":{},"modules/ExampleModule.html":{},"modules/WaterUsageForecastsModule.html":{},"modules/WisdomModule.html":{}}}],["ngonchanges",{"_index":507,"title":{},"body":{"components/BarChartComponent.html":{},"components/LineChartComponent.html":{}}}],["ngonchanges(changes",{"_index":523,"title":{},"body":{"components/BarChartComponent.html":{},"components/LineChartComponent.html":{}}}],["ngondestroy",{"_index":1373,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["ngoninit",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/LoaderComponent.html":{},"components/MapComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsComponent.html":{}}}],["ngx",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"components/BarChartComponent.html":{},"modules/ExampleModule.html":{},"directives/LangSelectorDirective.html":{},"components/LineChartComponent.html":{},"classes/StaticLoader.html":{},"modules/WaterUsageForecastsModule.html":{},"modules/WisdomModule.html":{},"dependencies.html":{}}}],["nicht",{"_index":990,"title":{},"body":{"components/LoginComponent.html":{}}}],["node",{"_index":591,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["non",{"_index":287,"title":{},"body":{"guards/AuthGuard.html":{}}}],["none",{"_index":638,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"miscellaneous/variables.html":{}}}],["now",{"_index":1944,"title":{},"body":{"miscellaneous/variables.html":{}}}],["null",{"_index":441,"title":{},"body":{"injectables/AuthStorageService.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"components/ResultDataViewComponent.html":{},"injectables/SettingsStorageService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["nullable",{"_index":1853,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["nullish",{"_index":448,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["nullstring",{"_index":1811,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["num",{"_index":1763,"title":{},"body":{"miscellaneous/functions.html":{}}}],["number",{"_index":453,"title":{},"body":{"injectables/AuthStorageService.html":{},"components/ErrorComponent.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"components/ResultDataViewComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["nutskey",{"_index":1300,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{},"interfaces/ShapeData.html":{}}}],["o",{"_index":542,"title":{},"body":{"components/BarChartComponent.html":{},"components/LineChartComponent.html":{}}}],["oauth",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{}}}],["oauth/check_token",{"_index":416,"title":{},"body":{"injectables/AuthService.html":{}}}],["oauth/revoke",{"_index":419,"title":{},"body":{"injectables/AuthService.html":{}}}],["oauth/token",{"_index":413,"title":{},"body":{"injectables/AuthService.html":{}}}],["obj",{"_index":1771,"title":{},"body":{"miscellaneous/functions.html":{}}}],["object",{"_index":1467,"title":{},"body":{"components/ResultDataViewComponent.html":{},"interfaces/WisdomInterface.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["object.assign",{"_index":1422,"title":{},"body":{"components/ResultDataViewComponent.html":{},"classes/StaticLoader.html":{},"miscellaneous/variables.html":{}}}],["object.assign(collectedlang",{"_index":1360,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["object.entries(config",{"_index":1157,"title":{},"body":{"components/MapComponent.html":{}}}],["object.entries(layerdata",{"_index":1187,"title":{},"body":{"components/MapComponent.html":{}}}],["object.entries(requests",{"_index":1164,"title":{},"body":{"components/MapComponent.html":{}}}],["object.entries(sidebarlangs",{"_index":1573,"title":{},"body":{"classes/StaticLoader.html":{}}}],["object.entries(values",{"_index":1576,"title":{},"body":{"classes/StaticLoader.html":{}}}],["object.keys(layerdata).length",{"_index":1219,"title":{},"body":{"components/MapComponent.html":{}}}],["object.values(modules",{"_index":1353,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["observable",{"_index":240,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interceptors/BaseUrlInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["observable(subscriber",{"_index":266,"title":{},"body":{"guards/AuthGuard.html":{}}}],["observable.pipe(tap",{"_index":907,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["of(langs[lang",{"_index":1579,"title":{},"body":{"classes/StaticLoader.html":{}}}],["official",{"_index":803,"title":{},"body":{"components/IonIconComponent.html":{}}}],["old",{"_index":202,"title":{},"body":{"guards/AuthGuard.html":{}}}],["oldenburg",{"_index":1073,"title":{},"body":{"components/MapComponent.html":{}}}],["oldenburg.de/repos/service",{"_index":1046,"title":{},"body":{"components/MapComponent.html":{}}}],["omit",{"_index":1850,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["onadd",{"_index":1925,"title":{},"body":{"miscellaneous/variables.html":{}}}],["onchanges",{"_index":502,"title":{},"body":{"components/BarChartComponent.html":{},"components/LineChartComponent.html":{}}}],["ondestroy",{"_index":1363,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["one",{"_index":203,"title":{},"body":{"guards/AuthGuard.html":{},"components/MapComponent.html":{},"classes/StaticLoader.html":{}}}],["oneachfeature",{"_index":1194,"title":{},"body":{"components/MapComponent.html":{}}}],["oninit",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsComponent.html":{}}}],["only_keys",{"_index":1108,"title":{},"body":{"components/MapComponent.html":{}}}],["onsubmit",{"_index":954,"title":{},"body":{"components/LoginComponent.html":{}}}],["onsubmit(f",{"_index":957,"title":{},"body":{"components/LoginComponent.html":{}}}],["oowv",{"_index":1492,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["opacity",{"_index":875,"title":{},"body":{"components/LoaderComponent.html":{}}}],["opendb",{"_index":1246,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["opendb(db_name",{"_index":1262,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["operate",{"_index":337,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["operations",{"_index":1283,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["operations.push(querystore.put(shapekeys",{"_index":1312,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["operations.push(shapestore.put(shape",{"_index":1308,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["operations.push(store.get(key).then(shape",{"_index":1284,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["operations.push(tx.done",{"_index":1286,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["optional",{"_index":211,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"components/BarChartComponent.html":{},"interceptors/BaseUrlInterceptor.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ErrorComponent.html":{},"components/FrameComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"classes/ModuleProvider.html":{},"components/ResultDataViewComponent.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterUsageForecastsComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":393,"title":{},"body":{"injectables/AuthService.html":{},"components/BarChartComponent.html":{},"components/LineChartComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["options(o",{"_index":551,"title":{},"body":{"components/BarChartComponent.html":{},"components/LineChartComponent.html":{}}}],["original",{"_index":1911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["osm",{"_index":1097,"title":{},"body":{"components/MapComponent.html":{}}}],["oss",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/FrameComponent.html":{},"components/LoginComponent.html":{}}}],["out",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"modules/ChartModule.html":{},"modules/ExampleModule.html":{},"components/FrameComponent.html":{},"components/LoaderComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"modules/WisdomModule.html":{},"index.html":{}}}],["output",{"_index":831,"title":{},"body":{"components/LineChartComponent.html":{},"components/MapComponent.html":{}}}],["outputs",{"_index":1015,"title":{},"body":{"components/MapComponent.html":{}}}],["overflow",{"_index":888,"title":{},"body":{"components/LoaderComponent.html":{}}}],["overview",{"_index":1785,"title":{"index.html":{}},"body":{"index.html":{}}}],["package",{"_index":1726,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":239,"title":{},"body":{"guards/AuthGuard.html":{},"components/FrameComponent.html":{},"components/LoginComponent.html":{}}}],["param",{"_index":248,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"components/BarChartComponent.html":{},"interceptors/BaseUrlInterceptor.html":{},"components/ErrorComponent.html":{},"components/FrameComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"classes/ModuleProvider.html":{},"injectables/SettingsStorageService.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{}}}],["parameter",{"_index":1499,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["parameters",{"_index":210,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"components/BarChartComponent.html":{},"interceptors/BaseUrlInterceptor.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ErrorComponent.html":{},"components/FrameComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"classes/ModuleProvider.html":{},"components/ResultDataViewComponent.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterUsageForecastsComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/functions.html":{}}}],["parameters[0",{"_index":1127,"title":{},"body":{"components/MapComponent.html":{},"interfaces/ShapeData.html":{}}}],["parameters[1",{"_index":1606,"title":{},"body":{"injectables/UserService.html":{}}}],["parameters[2",{"_index":406,"title":{},"body":{"injectables/AuthService.html":{}}}],["params",{"_index":674,"title":{},"body":{"components/ErrorComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["params.appendall({key",{"_index":1290,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["params.set(\"resolution",{"_index":1288,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["params['code",{"_index":681,"title":{},"body":{"components/ErrorComponent.html":{}}}],["parsefloat(str",{"_index":1173,"title":{},"body":{"components/MapComponent.html":{}}}],["parseint(expiresin",{"_index":490,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["parseint(this.inputzoom",{"_index":1155,"title":{},"body":{"components/MapComponent.html":{}}}],["partial",{"_index":1887,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["partials",{"_index":714,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{}}}],["passed",{"_index":517,"title":{},"body":{"components/BarChartComponent.html":{},"components/LineChartComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["password",{"_index":368,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["password).subscribe",{"_index":976,"title":{},"body":{"components/LoginComponent.html":{}}}],["passwordinput",{"_index":953,"title":{},"body":{"components/LoginComponent.html":{}}}],["patchusers204",{"_index":1814,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["patchusers403",{"_index":1816,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["patchusers404",{"_index":1818,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["patchusersme200",{"_index":1820,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["path",{"_index":180,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/MapComponent.html":{},"classes/ModuleProvider.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"interfaces/WisdomInterface.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["path.bringtoback",{"_index":1204,"title":{},"body":{"components/MapComponent.html":{}}}],["path.bringtofront",{"_index":1207,"title":{},"body":{"components/MapComponent.html":{}}}],["path.replace(/\\/+/g",{"_index":1520,"title":{},"body":{"interceptors/SanitizeUrlInterceptor.html":{}}}],["path.setstyle({color",{"_index":1203,"title":{},"body":{"components/MapComponent.html":{}}}],["pathwithparams",{"_index":1517,"title":{},"body":{"interceptors/SanitizeUrlInterceptor.html":{}}}],["pathwithparams.split",{"_index":1519,"title":{},"body":{"interceptors/SanitizeUrlInterceptor.html":{}}}],["per",{"_index":251,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["pipe(takewhile",{"_index":1411,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["pipe(tap(event",{"_index":646,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["plugin",{"_index":1738,"title":{},"body":{"dependencies.html":{}}}],["plugins",{"_index":48,"title":{},"body":{"components/AppComponent.html":{}}}],["point",{"_index":14,"title":{},"body":{"components/AppComponent.html":{}}}],["polynomial",{"_index":722,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"miscellaneous/enumerations.html":{}}}],["position",{"_index":852,"title":{},"body":{"components/LoaderComponent.html":{},"miscellaneous/variables.html":{}}}],["possible",{"_index":237,"title":{},"body":{"guards/AuthGuard.html":{},"miscellaneous/typealiases.html":{}}}],["post",{"_index":394,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["postleitzahl",{"_index":1489,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["postoauthtoken200",{"_index":387,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/typealiases.html":{}}}],["postoauthtoken400",{"_index":968,"title":{},"body":{"components/LoginComponent.html":{},"miscellaneous/typealiases.html":{}}}],["postoauthtoken401",{"_index":970,"title":{},"body":{"components/LoginComponent.html":{},"miscellaneous/typealiases.html":{}}}],["postrevoke200",{"_index":389,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/typealiases.html":{}}}],["postrevoke403",{"_index":1826,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["prefers",{"_index":1732,"title":{},"body":{"dependencies.html":{}}}],["prepare",{"_index":1272,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["prepend",{"_index":569,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{}}}],["prepends",{"_index":571,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{}}}],["prependurl",{"_index":576,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{}}}],["present",{"_index":302,"title":{},"body":{"guards/AuthGuard.html":{}}}],["presentation",{"_index":1758,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pretty",{"_index":1607,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["prettyprintnum",{"_index":1407,"title":{},"body":{"components/ResultDataViewComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["prettyprintnum(12345678",{"_index":1765,"title":{},"body":{"miscellaneous/functions.html":{}}}],["prettyprintnum(num",{"_index":1757,"title":{},"body":{"miscellaneous/functions.html":{}}}],["print",{"_index":1764,"title":{},"body":{"miscellaneous/functions.html":{}}}],["private",{"_index":249,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthStorageService.html":{},"components/BarChartComponent.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/FrameComponent.html":{},"components/LineChartComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"classes/ModuleProvider.html":{},"components/ResultDataViewComponent.html":{},"injectables/SettingsStorageService.html":{},"interfaces/ShapeData.html":{},"injectables/UserService.html":{},"components/WaterUsageForecastsComponent.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["privileges",{"_index":1841,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["prod",{"_index":1946,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":1906,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prognosemodell",{"_index":1500,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["promise",{"_index":897,"title":{},"body":{"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"components/ResultDataViewComponent.html":{}}}],["promise(resolve",{"_index":906,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["promise.all(operations",{"_index":1287,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["promise.allsettled(this.promises",{"_index":944,"title":{},"body":{"injectables/LoaderService.html":{}}}],["promises",{"_index":919,"title":{},"body":{"injectables/LoaderService.html":{}}}],["proof",{"_index":1950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["properly",{"_index":1041,"title":{},"body":{"components/MapComponent.html":{}}}],["properties",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/BarChartComponent.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ErrorComponent.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"components/ResultDataViewComponent.html":{},"interfaces/ShapeData.html":{},"components/SideBarComponent.html":{},"components/WaterUsageForecastsComponent.html":{},"interfaces/WisdomInterface.html":{}}}],["protocol",{"_index":1516,"title":{},"body":{"interceptors/SanitizeUrlInterceptor.html":{}}}],["protocol}://${path",{"_index":1522,"title":{},"body":{"interceptors/SanitizeUrlInterceptor.html":{}}}],["provide",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"classes/ModuleProvider.html":{},"interfaces/WisdomInterface.html":{}}}],["provided",{"_index":1622,"title":{},"body":{"components/WaterUsageForecastsComponent.html":{}}}],["providedin",{"_index":247,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"injectables/ExampleService.html":{},"guards/LoaderGuard.html":{},"injectables/LoaderService.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/SettingsStorageService.html":{},"injectables/UserService.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["provider",{"_index":175,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/StaticLoader.html":{}}}],["provider.ts",{"_index":1336,"title":{},"body":{"classes/ModuleProvider.html":{},"coverage.html":{}}}],["provider.ts:13",{"_index":1342,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["provider.ts:24",{"_index":1351,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["provider.ts:40",{"_index":1349,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["providers",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["provides",{"_index":1569,"title":{},"body":{"classes/StaticLoader.html":{},"interfaces/WisdomInterface.html":{},"miscellaneous/variables.html":{}}}],["providing",{"_index":1645,"title":{},"body":{"injectables/WaterUsageForecastsService.html":{}}}],["proxy",{"_index":1915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":1440,"title":{},"body":{"components/ResultDataViewComponent.html":{},"miscellaneous/variables.html":{}}}],["public_institutions",{"_index":1652,"title":{},"body":{"injectables/WaterUsageForecastsService.html":{}}}],["pure",{"_index":1343,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["putusers201",{"_index":1597,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["putusers409",{"_index":1599,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["puzzle",{"_index":1938,"title":{},"body":{"miscellaneous/variables.html":{}}}],["queries",{"_index":1234,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["query",{"_index":675,"title":{},"body":{"components/ErrorComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"components/WaterUsageForecastsComponent.html":{}}}],["query.join",{"_index":1524,"title":{},"body":{"interceptors/SanitizeUrlInterceptor.html":{}}}],["query.length",{"_index":1523,"title":{},"body":{"interceptors/SanitizeUrlInterceptor.html":{}}}],["querykey",{"_index":1276,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["queryparams",{"_index":1421,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["querystore",{"_index":1310,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["quot",{"_index":1119,"title":{},"body":{"components/MapComponent.html":{}}}],["quot;12.345.678&quot",{"_index":1767,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rawoptions",{"_index":505,"title":{},"body":{"components/BarChartComponent.html":{},"components/LineChartComponent.html":{}}}],["rawshape",{"_index":1303,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["rawshape.geojson",{"_index":1302,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["rawshape.nuts_key",{"_index":1301,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["re",{"_index":1417,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["readonly",{"_index":1259,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["reads",{"_index":1338,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["readwrite",{"_index":1305,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["ready",{"_index":271,"title":{},"body":{"guards/AuthGuard.html":{}}}],["received",{"_index":423,"title":{},"body":{"injectables/AuthStorageService.html":{},"interfaces/ShapeData.html":{}}}],["reconstruct",{"_index":1245,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["record",{"_index":709,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/MapComponent.html":{},"interfaces/WisdomInterface.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["red",{"_index":1453,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["redirectto",{"_index":185,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reexport",{"_index":1087,"title":{},"body":{"components/MapComponent.html":{}}}],["reexported",{"_index":1337,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["ref",{"_index":1085,"title":{},"body":{"components/MapComponent.html":{}}}],["reference",{"_index":395,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/ResultDataViewComponent.html":{},"miscellaneous/variables.html":{}}}],["referenceusages",{"_index":716,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{}}}],["refresh",{"_index":201,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"miscellaneous/variables.html":{}}}],["refresh(token",{"_index":375,"title":{},"body":{"injectables/AuthService.html":{}}}],["refresh_token",{"_index":418,"title":{},"body":{"injectables/AuthService.html":{}}}],["refresh_token_key",{"_index":472,"title":{},"body":{"injectables/AuthStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["refresherrresponse",{"_index":313,"title":{},"body":{"guards/AuthGuard.html":{}}}],["refresherrresponse.status",{"_index":315,"title":{},"body":{"guards/AuthGuard.html":{}}}],["refreshes",{"_index":377,"title":{},"body":{"injectables/AuthService.html":{}}}],["refreshing",{"_index":236,"title":{},"body":{"guards/AuthGuard.html":{}}}],["refreshresponse",{"_index":305,"title":{},"body":{"guards/AuthGuard.html":{}}}],["refreshresponse.access_token",{"_index":307,"title":{},"body":{"guards/AuthGuard.html":{}}}],["refreshresponse.expires_in",{"_index":312,"title":{},"body":{"guards/AuthGuard.html":{}}}],["refreshresponse.refresh_token",{"_index":308,"title":{},"body":{"guards/AuthGuard.html":{}}}],["refreshresponse.scope",{"_index":310,"title":{},"body":{"guards/AuthGuard.html":{}}}],["refreshtoken",{"_index":431,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["refreshtoken(token",{"_index":491,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["region",{"_index":1496,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["regionalschlüssel",{"_index":1491,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["register",{"_index":46,"title":{},"body":{"components/AppComponent.html":{}}}],["regression",{"_index":1501,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["regressionmethod",{"_index":1368,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["relative",{"_index":853,"title":{},"body":{"components/LoaderComponent.html":{}}}],["relativeto",{"_index":1419,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["removing",{"_index":349,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["render",{"_index":522,"title":{},"body":{"components/BarChartComponent.html":{},"components/IonIconComponent.html":{},"components/LineChartComponent.html":{}}}],["renders",{"_index":1064,"title":{},"body":{"components/MapComponent.html":{}}}],["replaceurl",{"_index":773,"title":{},"body":{"components/FrameComponent.html":{},"components/LoginComponent.html":{}}}],["reply",{"_index":263,"title":{},"body":{"guards/AuthGuard.html":{}}}],["represent",{"_index":1547,"title":{},"body":{"interfaces/ShapeData.html":{}}}],["representation",{"_index":1886,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["represents",{"_index":1239,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["request",{"_index":325,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interceptors/BaseUrlInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"interceptors/LoaderInterceptor.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"components/WaterUsageForecastsComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["request.clone",{"_index":345,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["request.clone({url",{"_index":583,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{}}}],["request.context.get(use_api_url",{"_index":579,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{}}}],["request.context.get(use_base_url",{"_index":577,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{}}}],["request.context.get(use_cache",{"_index":632,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["request.context.get(use_loader",{"_index":905,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["request.headers",{"_index":645,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["request.headers.set(\"if",{"_index":637,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["request.headers.set(token_header_key",{"_index":351,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["request.url",{"_index":584,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{}}}],["request.urlwithparams",{"_index":634,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["requested",{"_index":232,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["requests",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/BaseUrlInterceptor.html":{},"components/MapComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["requests[layerkey",{"_index":1159,"title":{},"body":{"components/MapComponent.html":{}}}],["required",{"_index":1664,"title":{},"body":{"interfaces/WisdomInterface.html":{}}}],["res",{"_index":1784,"title":{},"body":{"miscellaneous/functions.html":{}}}],["reset",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"modules/ChartModule.html":{},"modules/ExampleModule.html":{},"components/MapComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"modules/WisdomModule.html":{},"index.html":{}}}],["resolution",{"_index":1007,"title":{},"body":{"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["resolution&#39",{"_index":1106,"title":{},"body":{"components/MapComponent.html":{}}}],["resolution.district",{"_index":1118,"title":{},"body":{"components/MapComponent.html":{}}}],["resolution.municipal",{"_index":1107,"title":{},"body":{"components/MapComponent.html":{}}}],["resolution.tokeylength(resolution",{"_index":1275,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["resolutionnum",{"_index":1274,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["resolve(err",{"_index":912,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["resolve(value",{"_index":909,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["resolving",{"_index":1035,"title":{},"body":{"components/MapComponent.html":{}}}],["respond",{"_index":1042,"title":{},"body":{"components/MapComponent.html":{}}}],["response",{"_index":269,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/ResultDataViewComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["response.access_token",{"_index":977,"title":{},"body":{"components/LoginComponent.html":{}}}],["response.expires_in",{"_index":980,"title":{},"body":{"components/LoginComponent.html":{}}}],["response.refresh_token",{"_index":978,"title":{},"body":{"components/LoginComponent.html":{}}}],["response.scope",{"_index":979,"title":{},"body":{"components/LoginComponent.html":{}}}],["response.ts",{"_index":707,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"coverage.html":{}}}],["response_types/login/postoauthtoken200",{"_index":388,"title":{},"body":{"injectables/AuthService.html":{}}}],["response_types/login/postoauthtoken400",{"_index":969,"title":{},"body":{"components/LoginComponent.html":{}}}],["response_types/login/postoauthtoken401",{"_index":971,"title":{},"body":{"components/LoginComponent.html":{}}}],["response_types/login/postrevoke200",{"_index":390,"title":{},"body":{"injectables/AuthService.html":{}}}],["response_types/users/getusers200",{"_index":1596,"title":{},"body":{"injectables/UserService.html":{}}}],["response_types/users/putusers201",{"_index":1598,"title":{},"body":{"injectables/UserService.html":{}}}],["response_types/users/putusers409",{"_index":1600,"title":{},"body":{"injectables/UserService.html":{}}}],["responsetype",{"_index":408,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/UserService.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/variables.html":{}}}],["rest",{"_index":1240,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["rest/main/api/get",{"_index":1047,"title":{},"body":{"components/MapComponent.html":{}}}],["result",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/BarChartComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterUsageForecastsComponent.html":{}}}],["resultdataviewcomponent",{"_index":83,"title":{"components/ResultDataViewComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BarChartComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterUsageForecastsComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"coverage.html":{},"index.html":{}}}],["results",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"components/BarChartComponent.html":{},"interceptors/BaseUrlInterceptor.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"modules/ChartModule.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"modules/ExampleModule.html":{},"injectables/ExampleService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"classes/ModuleProvider.html":{},"components/ResultDataViewComponent.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"interfaces/ShapeData.html":{},"components/SideBarComponent.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterUsageForecastsComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{},"interfaces/WisdomInterface.html":{},"modules/WisdomModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieved",{"_index":1257,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["return",{"_index":254,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"components/BarChartComponent.html":{},"interceptors/BaseUrlInterceptor.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/FrameComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LineChartComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"classes/ModuleProvider.html":{},"components/ResultDataViewComponent.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterUsageForecastsComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":1241,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["returns",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"components/BarChartComponent.html":{},"interceptors/BaseUrlInterceptor.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ErrorComponent.html":{},"components/FrameComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"classes/ModuleProvider.html":{},"components/ResultDataViewComponent.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterUsageForecastsComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/functions.html":{}}}],["returntologin",{"_index":298,"title":{},"body":{"guards/AuthGuard.html":{}}}],["revokes",{"_index":374,"title":{},"body":{"injectables/AuthService.html":{}}}],["revoking",{"_index":746,"title":{},"body":{"components/FrameComponent.html":{}}}],["rocket",{"_index":1952,"title":{},"body":{"miscellaneous/variables.html":{}}}],["roles",{"_index":1588,"title":{},"body":{"injectables/UserService.html":{}}}],["root",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"injectables/ExampleService.html":{},"guards/LoaderGuard.html":{},"injectables/LoaderService.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/SettingsStorageService.html":{},"injectables/UserService.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["root'},{'name",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/BarChartComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterUsageForecastsComponent.html":{}}}],["route",{"_index":221,"title":{},"body":{"guards/AuthGuard.html":{},"components/ErrorComponent.html":{},"components/FrameComponent.html":{},"guards/LoaderGuard.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsComponent.html":{}}}],["route.url[0]?.path",{"_index":253,"title":{},"body":{"guards/AuthGuard.html":{}}}],["routed",{"_index":962,"title":{},"body":{"components/LoginComponent.html":{}}}],["router",{"_index":208,"title":{},"body":{"guards/AuthGuard.html":{},"components/ErrorComponent.html":{},"components/FrameComponent.html":{},"components/LoginComponent.html":{},"components/ResultDataViewComponent.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["routermodule",{"_index":169,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/WaterUsageForecastsModule.html":{}}}],["routermodule.forroot(routes",{"_index":187,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":226,"title":{},"body":{"guards/AuthGuard.html":{},"guards/LoaderGuard.html":{}}}],["routes",{"_index":170,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"classes/ModuleProvider.html":{},"index.html":{},"routes.html":{}}}],["routes.push",{"_index":1354,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["routing",{"_index":956,"title":{},"body":{"components/LoginComponent.html":{}}}],["routing.module",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":168,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":893,"title":{},"body":{"components/LoaderComponent.html":{}}}],["run",{"_index":1842,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["rxjs",{"_index":244,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interceptors/BaseUrlInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"components/ResultDataViewComponent.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"injectables/WaterUsageForecastsService.html":{},"dependencies.html":{}}}],["same",{"_index":1883,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["sanitize",{"_index":158,"title":{},"body":{"modules/AppModule.html":{}}}],["sanitizeurlinterceptor",{"_index":116,"title":{"interceptors/SanitizeUrlInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"coverage.html":{},"index.html":{}}}],["schema",{"_index":1230,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["schema_v",{"_index":1253,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["scope",{"_index":1879,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["scopes",{"_index":432,"title":{},"body":{"injectables/AuthStorageService.html":{},"injectables/UserService.html":{},"interfaces/WisdomInterface.html":{},"miscellaneous/variables.html":{}}}],["scopes(scopes",{"_index":493,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["scopes_key",{"_index":473,"title":{},"body":{"injectables/AuthStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["screen",{"_index":666,"title":{},"body":{"components/ErrorComponent.html":{}}}],["scroll",{"_index":890,"title":{},"body":{"components/LoaderComponent.html":{}}}],["se",{"_index":252,"title":{},"body":{"guards/AuthGuard.html":{}}}],["see",{"_index":1044,"title":{},"body":{"components/MapComponent.html":{},"interfaces/WisdomInterface.html":{}}}],["select",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/BarChartComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterUsageForecastsComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["select.get",{"_index":1331,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["selected",{"_index":1016,"title":{},"body":{"components/MapComponent.html":{}}}],["selectedcolor",{"_index":1013,"title":{},"body":{"components/MapComponent.html":{}}}],["selectedlayer",{"_index":1008,"title":{},"body":{"components/MapComponent.html":{}}}],["selectedshapes",{"_index":1009,"title":{},"body":{"components/MapComponent.html":{}}}],["selectedshapes.add(key",{"_index":1208,"title":{},"body":{"components/MapComponent.html":{}}}],["selectedshapes.delete(key",{"_index":1205,"title":{},"body":{"components/MapComponent.html":{}}}],["selectedshapes.has(key",{"_index":1202,"title":{},"body":{"components/MapComponent.html":{}}}],["selectedview",{"_index":1624,"title":{},"body":{"components/WaterUsageForecastsComponent.html":{}}}],["selection",{"_index":1027,"title":{},"body":{"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/WaterUsageForecastsComponent.html":{}}}],["selection.keys",{"_index":1327,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["selection.keys.length",{"_index":1329,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["selection.ts",{"_index":1691,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectionready",{"_index":1317,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["selectlang",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/BarChartComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterUsageForecastsComponent.html":{}}}],["selector",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/BarChartComponent.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterUsageForecastsComponent.html":{}}}],["selector.directive",{"_index":151,"title":{},"body":{"modules/AppModule.html":{}}}],["selector.directive.ts",{"_index":807,"title":{},"body":{"directives/LangSelectorDirective.html":{},"coverage.html":{}}}],["selector.directive.ts:17",{"_index":813,"title":{},"body":{"directives/LangSelectorDirective.html":{}}}],["selector.directive.ts:24",{"_index":815,"title":{},"body":{"directives/LangSelectorDirective.html":{}}}],["selector.directive.ts:8",{"_index":812,"title":{},"body":{"directives/LangSelectorDirective.html":{}}}],["send",{"_index":314,"title":{},"body":{"guards/AuthGuard.html":{}}}],["sends",{"_index":297,"title":{},"body":{"guards/AuthGuard.html":{}}}],["sent",{"_index":1959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["separated",{"_index":1761,"title":{},"body":{"miscellaneous/functions.html":{}}}],["server",{"_index":220,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"components/FrameComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"interfaces/ShapeData.html":{},"injectables/UserService.html":{},"components/WaterUsageForecastsComponent.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["service",{"_index":216,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"injectables/ExampleService.html":{},"components/FrameComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"components/ResultDataViewComponent.html":{},"injectables/SettingsStorageService.html":{},"injectables/UserService.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["session",{"_index":434,"title":{},"body":{"injectables/AuthStorageService.html":{},"injectables/SettingsStorageService.html":{}}}],["set",{"_index":238,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthStorageService.html":{},"components/BarChartComponent.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/FrameComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LineChartComponent.html":{},"components/MapComponent.html":{},"components/ResultDataViewComponent.html":{},"injectables/SettingsStorageService.html":{}}}],["set(use_api_url",{"_index":1296,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["set(use_loader",{"_index":1297,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["setaccesstoken(token",{"_index":446,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["setboolstorage",{"_index":1527,"title":{},"body":{"injectables/SettingsStorageService.html":{}}}],["setboolstorage(key",{"_index":1531,"title":{},"body":{"injectables/SettingsStorageService.html":{}}}],["setelementclasses(classes",{"_index":609,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["setexpiresin(unixtime",{"_index":454,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["sethidesidebar(setting",{"_index":756,"title":{},"body":{"components/FrameComponent.html":{},"injectables/SettingsStorageService.html":{}}}],["sethideuserbar(setting",{"_index":760,"title":{},"body":{"components/FrameComponent.html":{},"injectables/SettingsStorageService.html":{}}}],["setinputlayers(layerconfig",{"_index":1100,"title":{},"body":{"components/MapComponent.html":{}}}],["setmethod(m",{"_index":1402,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["setoptions(o",{"_index":541,"title":{},"body":{"components/BarChartComponent.html":{},"components/LineChartComponent.html":{}}}],["setrefreshtoken(token",{"_index":461,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["sets",{"_index":467,"title":{},"body":{"injectables/AuthStorageService.html":{},"components/MapComponent.html":{}}}],["setscopes(scopes",{"_index":465,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["setstorage",{"_index":427,"title":{},"body":{"injectables/AuthStorageService.html":{},"injectables/SettingsStorageService.html":{}}}],["setstorage(data",{"_index":440,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["setstorage(key",{"_index":1533,"title":{},"body":{"injectables/SettingsStorageService.html":{}}}],["setter",{"_index":476,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["settimeout",{"_index":565,"title":{},"body":{"components/BarChartComponent.html":{},"components/LineChartComponent.html":{}}}],["setting",{"_index":755,"title":{},"body":{"components/FrameComponent.html":{},"injectables/SettingsStorageService.html":{},"miscellaneous/variables.html":{}}}],["settings",{"_index":747,"title":{},"body":{"components/FrameComponent.html":{},"injectables/SettingsStorageService.html":{}}}],["settingsstorage",{"_index":742,"title":{},"body":{"components/FrameComponent.html":{}}}],["settingsstorageservice",{"_index":743,"title":{"injectables/SettingsStorageService.html":{}},"body":{"components/FrameComponent.html":{},"injectables/SettingsStorageService.html":{},"coverage.html":{}}}],["settingsstorageservice.getboolstorage(hide_sidebar_key",{"_index":1542,"title":{},"body":{"injectables/SettingsStorageService.html":{}}}],["settingsstorageservice.getboolstorage(hide_user_bar_key",{"_index":1544,"title":{},"body":{"injectables/SettingsStorageService.html":{}}}],["settingsstorageservice.getstorage(key",{"_index":1540,"title":{},"body":{"injectables/SettingsStorageService.html":{}}}],["settingsstorageservice.setboolstorage(hide_sidebar_key",{"_index":1541,"title":{},"body":{"injectables/SettingsStorageService.html":{}}}],["settingsstorageservice.setboolstorage(hide_user_bar_key",{"_index":1543,"title":{},"body":{"injectables/SettingsStorageService.html":{}}}],["settingsstorageservice.setstorage(key",{"_index":1539,"title":{},"body":{"injectables/SettingsStorageService.html":{}}}],["shape",{"_index":1033,"title":{},"body":{"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["shape.key",{"_index":1213,"title":{},"body":{"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["shape.name",{"_index":1212,"title":{},"body":{"components/MapComponent.html":{}}}],["shapedata",{"_index":1243,"title":{"interfaces/ShapeData.html":{}},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{},"interfaces/ShapeData.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["shapekeys",{"_index":1307,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["shapekeys.push(shape.key",{"_index":1309,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["shapes",{"_index":1036,"title":{},"body":{"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["shapes.push(shape",{"_index":1285,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["shapestore",{"_index":1306,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["show",{"_index":1110,"title":{},"body":{"components/MapComponent.html":{}}}],["shown",{"_index":963,"title":{},"body":{"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["side",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/BarChartComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterUsageForecastsComponent.html":{}}}],["sidebar",{"_index":754,"title":{},"body":{"components/FrameComponent.html":{},"injectables/SettingsStorageService.html":{},"components/SideBarComponent.html":{},"classes/StaticLoader.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["sidebar.ts",{"_index":1679,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["sidebar.water",{"_index":1954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sidebarcomponent",{"_index":86,"title":{"components/SideBarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BarChartComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterUsageForecastsComponent.html":{},"coverage.html":{},"index.html":{}}}],["sidebarentries",{"_index":1830,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["sidebarentry",{"_index":1831,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["sidebarentrylvl1",{"_index":1832,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["sidebarentrylvl2",{"_index":1833,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["sidebarentrylvl3",{"_index":1834,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["sidebarlabel",{"_index":1835,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["sidebarlangs",{"_index":1567,"title":{},"body":{"classes/StaticLoader.html":{}}}],["signed",{"_index":194,"title":{},"body":{"guards/AuthGuard.html":{}}}],["simple",{"_index":1558,"title":{},"body":{"classes/StaticLoader.html":{}}}],["simplechanges",{"_index":524,"title":{},"body":{"components/BarChartComponent.html":{},"components/LineChartComponent.html":{}}}],["simply",{"_index":1244,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["site",{"_index":735,"title":{},"body":{"components/FrameComponent.html":{}}}],["small",{"_index":291,"title":{},"body":{"guards/AuthGuard.html":{},"components/ResultDataViewComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"components/BarChartComponent.html":{},"interceptors/BaseUrlInterceptor.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"modules/ChartModule.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"modules/ExampleModule.html":{},"injectables/ExampleService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"classes/ModuleProvider.html":{},"components/ResultDataViewComponent.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"interfaces/ShapeData.html":{},"components/SideBarComponent.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterUsageForecastsComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{},"interfaces/WisdomInterface.html":{},"modules/WisdomModule.html":{}}}],["sparkles",{"_index":1953,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specific",{"_index":1562,"title":{},"body":{"classes/StaticLoader.html":{}}}],["split",{"_index":1171,"title":{},"body":{"components/MapComponent.html":{}}}],["split(\"is",{"_index":623,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["stadt",{"_index":1488,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["standard",{"_index":1877,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["start",{"_index":685,"title":{},"body":{"components/ErrorComponent.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"classes/StaticLoader.html":{}}}],["startyear",{"_index":730,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{}}}],["state",{"_index":225,"title":{},"body":{"guards/AuthGuard.html":{},"guards/LoaderGuard.html":{},"miscellaneous/enumerations.html":{}}}],["statements",{"_index":1678,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":425,"title":{},"body":{"injectables/AuthStorageService.html":{},"components/MapComponent.html":{},"classes/ModuleProvider.html":{},"injectables/SettingsStorageService.html":{},"injectables/UserService.html":{}}}],["staticloader",{"_index":152,"title":{"classes/StaticLoader.html":{}},"body":{"modules/AppModule.html":{},"classes/StaticLoader.html":{},"coverage.html":{}}}],["status",{"_index":317,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/UserService.html":{}}}],["still",{"_index":235,"title":{},"body":{"guards/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["stops",{"_index":799,"title":{},"body":{"components/IonIconComponent.html":{}}}],["storage",{"_index":213,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthStorageService.html":{},"components/FrameComponent.html":{},"injectables/SettingsStorageService.html":{}}}],["storage.service",{"_index":245,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/FrameComponent.html":{},"components/LoginComponent.html":{}}}],["storage.service.ts",{"_index":421,"title":{},"body":{"injectables/AuthStorageService.html":{},"injectables/SettingsStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["storage.service.ts:104",{"_index":464,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["storage.service.ts:21",{"_index":433,"title":{},"body":{"injectables/AuthStorageService.html":{},"injectables/SettingsStorageService.html":{}}}],["storage.service.ts:31",{"_index":1530,"title":{},"body":{"injectables/SettingsStorageService.html":{}}}],["storage.service.ts:33",{"_index":443,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["storage.service.ts:38",{"_index":438,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["storage.service.ts:42",{"_index":1532,"title":{},"body":{"injectables/SettingsStorageService.html":{}}}],["storage.service.ts:46",{"_index":447,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["storage.service.ts:54",{"_index":445,"title":{},"body":{"injectables/AuthStorageService.html":{},"injectables/SettingsStorageService.html":{}}}],["storage.service.ts:62",{"_index":455,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["storage.service.ts:64",{"_index":1535,"title":{},"body":{"injectables/SettingsStorageService.html":{}}}],["storage.service.ts:68",{"_index":1534,"title":{},"body":{"injectables/SettingsStorageService.html":{}}}],["storage.service.ts:70",{"_index":450,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["storage.service.ts:76",{"_index":1536,"title":{},"body":{"injectables/SettingsStorageService.html":{}}}],["storage.service.ts:80",{"_index":462,"title":{},"body":{"injectables/AuthStorageService.html":{},"injectables/SettingsStorageService.html":{}}}],["storage.service.ts:88",{"_index":460,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["storage.service.ts:96",{"_index":466,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["store",{"_index":1281,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/SettingsStorageService.html":{}}}],["stored",{"_index":436,"title":{},"body":{"injectables/AuthStorageService.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/SettingsStorageService.html":{}}}],["storing",{"_index":422,"title":{},"body":{"injectables/AuthStorageService.html":{},"injectables/SettingsStorageService.html":{}}}],["str",{"_index":1769,"title":{},"body":{"miscellaneous/functions.html":{}}}],["string",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/ErrorComponent.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoaderComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"classes/ModuleProvider.html":{},"components/ResultDataViewComponent.html":{},"injectables/SettingsStorageService.html":{},"interfaces/ShapeData.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterUsageForecastsComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"interfaces/WisdomInterface.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["strings",{"_index":1773,"title":{},"body":{"miscellaneous/functions.html":{}}}],["stringtocolor",{"_index":1408,"title":{},"body":{"components/ResultDataViewComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["stringtocolor(str",{"_index":1768,"title":{},"body":{"miscellaneous/functions.html":{}}}],["stringtocolor(usage.displayname",{"_index":1465,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["structure",{"_index":1856,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["style",{"_index":1191,"title":{},"body":{"components/MapComponent.html":{}}}],["styles",{"_index":832,"title":{},"body":{"components/LoaderComponent.html":{},"components/MapComponent.html":{}}}],["styleurls",{"_index":834,"title":{},"body":{"components/LoaderComponent.html":{},"components/MapComponent.html":{}}}],["subject",{"_index":930,"title":{},"body":{"injectables/LoaderService.html":{}}}],["submits",{"_index":960,"title":{},"body":{"components/LoginComponent.html":{}}}],["subscribe(({key",{"_index":1413,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["subscribe(data",{"_index":1427,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["subscribequery",{"_index":1369,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["subscriber.complete",{"_index":274,"title":{},"body":{"guards/AuthGuard.html":{}}}],["subscriber.next(errurl",{"_index":290,"title":{},"body":{"guards/AuthGuard.html":{}}}],["subscriber.next(loginurltree",{"_index":300,"title":{},"body":{"guards/AuthGuard.html":{}}}],["subscriber.next(true",{"_index":273,"title":{},"body":{"guards/AuthGuard.html":{}}}],["subscribes",{"_index":673,"title":{},"body":{"components/ErrorComponent.html":{}}}],["successful",{"_index":961,"title":{},"body":{"components/LoginComponent.html":{}}}],["successfully",{"_index":1865,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["such",{"_index":1661,"title":{},"body":{"interfaces/WisdomInterface.html":{}}}],["support",{"_index":1790,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1791,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":984,"title":{},"body":{"components/LoginComponent.html":{},"components/ResultDataViewComponent.html":{}}}],["sync",{"_index":1777,"title":{},"body":{"miscellaneous/functions.html":{}}}],["system",{"_index":1846,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["t",{"_index":1772,"title":{},"body":{"miscellaneous/functions.html":{}}}],["table",{"_index":1725,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1724,"title":{},"body":{"coverage.html":{}}}],["takewhile",{"_index":1406,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["tap",{"_index":340,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"interceptors/LoaderInterceptor.html":{}}}],["teilgebeit",{"_index":1495,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["teilgebiet",{"_index":1493,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/BarChartComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterUsageForecastsComponent.html":{}}}],["templateurl",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterUsageForecastsComponent.html":{}}}],["text",{"_index":850,"title":{},"body":{"components/LoaderComponent.html":{}}}],["therefore",{"_index":1256,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["these&#39",{"_index":1112,"title":{},"body":{"components/MapComponent.html":{}}}],["things",{"_index":587,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["third",{"_index":1759,"title":{},"body":{"miscellaneous/functions.html":{}}}],["this._displaytexts.clear",{"_index":948,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this._displaytexts.delete(toresolve",{"_index":946,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this._displaytexts.set(toresolve",{"_index":941,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this._loading.asobservable",{"_index":939,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this._loading.next(false",{"_index":945,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this._loading.next(true",{"_index":943,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.authservice.login(username",{"_index":975,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.logout(this.authstorage.accesstoken!).subscribe",{"_index":771,"title":{},"body":{"components/FrameComponent.html":{}}}],["this.authservice.refresh(this.authstorage.refreshtoken).subscribe",{"_index":304,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.authservice.validate(token!).subscribe",{"_index":267,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.authstorage.accesstoken",{"_index":261,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/LoginComponent.html":{}}}],["this.authstorage.clear",{"_index":299,"title":{},"body":{"guards/AuthGuard.html":{},"components/FrameComponent.html":{}}}],["this.authstorage.expiresin",{"_index":311,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["this.authstorage.refreshtoken",{"_index":301,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["this.authstorage.scopes",{"_index":309,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["this.center",{"_index":1152,"title":{},"body":{"components/MapComponent.html":{}}}],["this.chart",{"_index":556,"title":{},"body":{"components/BarChartComponent.html":{},"components/LineChartComponent.html":{}}}],["this.chart!.options",{"_index":562,"title":{},"body":{"components/BarChartComponent.html":{},"components/LineChartComponent.html":{}}}],["this.chart!.update",{"_index":563,"title":{},"body":{"components/BarChartComponent.html":{},"components/LineChartComponent.html":{}}}],["this.chart.data",{"_index":564,"title":{},"body":{"components/BarChartComponent.html":{},"components/LineChartComponent.html":{}}}],["this.chartelement.nativeelement.getcontext(\"2d",{"_index":555,"title":{},"body":{"components/BarChartComponent.html":{},"components/LineChartComponent.html":{}}}],["this.classes",{"_index":617,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["this.classes.join",{"_index":615,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["this.classes.push(\"is",{"_index":621,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["this.code",{"_index":680,"title":{},"body":{"components/ErrorComponent.html":{}}}],["this.consumerareadata",{"_index":1473,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["this.consumergroupdata",{"_index":1466,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["this.data",{"_index":558,"title":{},"body":{"components/BarChartComponent.html":{},"components/LineChartComponent.html":{}}}],["this.displaytexts",{"_index":849,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.displaytextsubject.asobservable",{"_index":938,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.displaytextsubject.next",{"_index":949,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.displaytextsubject.next(array.from(this._displaytexts.values",{"_index":942,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.elementclasses",{"_index":622,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["this.emitselection",{"_index":1209,"title":{},"body":{"components/MapComponent.html":{}}}],["this.etagmap.get(key",{"_index":640,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["this.etagmap.has(key",{"_index":636,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["this.etagmap.set(key",{"_index":650,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["this.fetchdata(key",{"_index":1415,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["this.height",{"_index":1148,"title":{},"body":{"components/MapComponent.html":{}}}],["this.http.get(join(auth_api",{"_index":1610,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(url.tostring",{"_index":1657,"title":{},"body":{"injectables/WaterUsageForecastsService.html":{}}}],["this.http.post",{"_index":411,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.put",{"_index":1616,"title":{},"body":{"injectables/UserService.html":{}}}],["this.idb",{"_index":1261,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["this.inputcenter",{"_index":1151,"title":{},"body":{"components/MapComponent.html":{}}}],["this.inputheight",{"_index":1147,"title":{},"body":{"components/MapComponent.html":{}}}],["this.inputtileurl",{"_index":1149,"title":{},"body":{"components/MapComponent.html":{}}}],["this.inputzoom",{"_index":1153,"title":{},"body":{"components/MapComponent.html":{}}}],["this.isactive",{"_index":620,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["this.isloading",{"_index":847,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.key",{"_index":1414,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["this.keys",{"_index":1326,"title":{},"body":{"components/MapSelectViewComponent.html":{},"components/WaterUsageForecastsComponent.html":{}}}],["this.lang",{"_index":818,"title":{},"body":{"directives/LangSelectorDirective.html":{}}}],["this.lastmodifiedmap.get(key",{"_index":643,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["this.lastmodifiedmap.has(key",{"_index":641,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["this.lastmodifiedmap.set(key",{"_index":654,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["this.layerconfig.next(layerconfig",{"_index":1146,"title":{},"body":{"components/MapComponent.html":{}}}],["this.layerconfig.subscribe(async",{"_index":1156,"title":{},"body":{"components/MapComponent.html":{}}}],["this.layerdata.next(fetched",{"_index":1167,"title":{},"body":{"components/MapComponent.html":{}}}],["this.layerdata.subscribe(layerdata",{"_index":1182,"title":{},"body":{"components/MapComponent.html":{}}}],["this.layernames[key",{"_index":1217,"title":{},"body":{"components/MapComponent.html":{}}}],["this.layernames[layerkey",{"_index":1158,"title":{},"body":{"components/MapComponent.html":{}}}],["this.loginhasissue",{"_index":988,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.map",{"_index":1177,"title":{},"body":{"components/MapComponent.html":{}}}],["this.mapelement.nativeelement",{"_index":1169,"title":{},"body":{"components/MapComponent.html":{}}}],["this.message",{"_index":683,"title":{},"body":{"components/ErrorComponent.html":{}}}],["this.options",{"_index":560,"title":{},"body":{"components/BarChartComponent.html":{},"components/LineChartComponent.html":{}}}],["this.passwordinput?.nativeelement.select",{"_index":992,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.promises",{"_index":947,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.promises.push(toresolve",{"_index":940,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.rawoptions",{"_index":552,"title":{},"body":{"components/BarChartComponent.html":{},"components/LineChartComponent.html":{}}}],["this.route",{"_index":1420,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["this.route.params.subscribe(params",{"_index":679,"title":{},"body":{"components/ErrorComponent.html":{}}}],["this.route.queryparams",{"_index":1410,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["this.route.queryparams.subscribe(({key",{"_index":1630,"title":{},"body":{"components/WaterUsageForecastsComponent.html":{}}}],["this.route.queryparams.subscribe(({message",{"_index":682,"title":{},"body":{"components/ErrorComponent.html":{}}}],["this.route.snapshot.queryparams",{"_index":1423,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["this.route.snapshot.queryparams[\"method",{"_index":1425,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["this.router.navigate",{"_index":982,"title":{},"body":{"components/LoginComponent.html":{},"components/ResultDataViewComponent.html":{}}}],["this.router.navigate([\"login",{"_index":772,"title":{},"body":{"components/FrameComponent.html":{}}}],["this.router.parseurl(\"/login",{"_index":256,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.router.parseurl(`${api_url}/${forecastmodel",{"_index":1654,"title":{},"body":{"injectables/WaterUsageForecastsService.html":{}}}],["this.router.parseurl(`error/${errresponse.status",{"_index":282,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.selected.emit",{"_index":1227,"title":{},"body":{"components/MapComponent.html":{}}}],["this.selectedcolor",{"_index":1206,"title":{},"body":{"components/MapComponent.html":{}}}],["this.selectedlayer",{"_index":1215,"title":{},"body":{"components/MapComponent.html":{}}}],["this.selectedshapes",{"_index":1184,"title":{},"body":{"components/MapComponent.html":{}}}],["this.selectedshapes[key",{"_index":1188,"title":{},"body":{"components/MapComponent.html":{}}}],["this.selectedview",{"_index":1632,"title":{},"body":{"components/WaterUsageForecastsComponent.html":{}}}],["this.selectionready",{"_index":1328,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["this.service.addloader(promise",{"_index":914,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["this.service.clearloading",{"_index":898,"title":{},"body":{"guards/LoaderGuard.html":{}}}],["this.service.displaytexts.subscribe(values",{"_index":848,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.service.fetchforecastdata(key",{"_index":1426,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["this.service.fetchlayerdata",{"_index":1160,"title":{},"body":{"components/MapComponent.html":{}}}],["this.service.loading.subscribe(value",{"_index":846,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.settingsstorage.hidesidebar",{"_index":767,"title":{},"body":{"components/FrameComponent.html":{}}}],["this.settingsstorage.hideuserbar",{"_index":769,"title":{},"body":{"components/FrameComponent.html":{}}}],["this.subscribequery",{"_index":1412,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["this.tileurl",{"_index":1150,"title":{},"body":{"components/MapComponent.html":{}}}],["this.translate.onlangchange.subscribe",{"_index":561,"title":{},"body":{"components/BarChartComponent.html":{},"components/LineChartComponent.html":{}}}],["this.translateservice.use(this.lang",{"_index":819,"title":{},"body":{"directives/LangSelectorDirective.html":{}}}],["this.unselectedcolor",{"_index":1193,"title":{},"body":{"components/MapComponent.html":{}}}],["this.updateareacomponents(data.partials",{"_index":1429,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["this.updategraphs(data.accumulations",{"_index":1428,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["this.zoom",{"_index":1154,"title":{},"body":{"components/MapComponent.html":{}}}],["though",{"_index":404,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["through",{"_index":1780,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["throw",{"_index":994,"title":{},"body":{"components/LoginComponent.html":{}}}],["tick",{"_index":1409,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["tile",{"_index":1052,"title":{},"body":{"components/MapComponent.html":{}}}],["tileurl",{"_index":1010,"title":{},"body":{"components/MapComponent.html":{}}}],["time",{"_index":458,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["times",{"_index":1962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["timestamp",{"_index":487,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["title",{"_index":25,"title":{},"body":{"components/AppComponent.html":{}}}],["todo",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthStorageService.html":{},"components/FrameComponent.html":{},"components/MapComponent.html":{},"components/WaterUsageForecastsComponent.html":{}}}],["toenum",{"_index":1701,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["toenum(length",{"_index":1781,"title":{},"body":{"miscellaneous/functions.html":{}}}],["toggle",{"_index":592,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{},"miscellaneous/variables.html":{}}}],["toggleable",{"_index":588,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["toggleable'},{'name",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/BarChartComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterUsageForecastsComponent.html":{}}}],["toggleable.directive",{"_index":1671,"title":{},"body":{"modules/WisdomModule.html":{}}}],["toggleable.directive.ts",{"_index":586,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{},"coverage.html":{}}}],["toggleable.directive.ts:20",{"_index":606,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["toggleable.directive.ts:22",{"_index":604,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["toggleable.directive.ts:27",{"_index":599,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["toggleable.directive.ts:31",{"_index":610,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["toggleable.directive.ts:41",{"_index":600,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["token",{"_index":198,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"miscellaneous/variables.html":{}}}],["token_header_key",{"_index":342,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tokens",{"_index":215,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/LoginComponent.html":{}}}],["tokeylength",{"_index":1702,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["tokeylength(res",{"_index":1783,"title":{},"body":{"miscellaneous/functions.html":{}}}],["top",{"_index":854,"title":{},"body":{"components/LoaderComponent.html":{},"interfaces/WisdomInterface.html":{}}}],["topright",{"_index":1922,"title":{},"body":{"miscellaneous/variables.html":{}}}],["toresolve",{"_index":926,"title":{},"body":{"injectables/LoaderService.html":{}}}],["tourism",{"_index":1444,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["transition",{"_index":880,"title":{},"body":{"components/LoaderComponent.html":{}}}],["translate",{"_index":512,"title":{},"body":{"components/BarChartComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"miscellaneous/functions.html":{}}}],["translate/core",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"components/BarChartComponent.html":{},"modules/ExampleModule.html":{},"directives/LangSelectorDirective.html":{},"components/LineChartComponent.html":{},"classes/StaticLoader.html":{},"modules/WaterUsageForecastsModule.html":{},"modules/WisdomModule.html":{},"dependencies.html":{}}}],["translated",{"_index":1861,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["translateloader",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"classes/StaticLoader.html":{}}}],["translatemodule",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"modules/ExampleModule.html":{},"modules/WaterUsageForecastsModule.html":{},"modules/WisdomModule.html":{}}}],["translatemodule.forroot",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["translateobject",{"_index":546,"title":{},"body":{"components/BarChartComponent.html":{},"components/LineChartComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["translateobject(service",{"_index":1770,"title":{},"body":{"miscellaneous/functions.html":{}}}],["translateobject(this.translate",{"_index":553,"title":{},"body":{"components/BarChartComponent.html":{},"components/LineChartComponent.html":{}}}],["translateservice",{"_index":510,"title":{},"body":{"components/BarChartComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LineChartComponent.html":{},"miscellaneous/functions.html":{}}}],["translation",{"_index":814,"title":{},"body":{"directives/LangSelectorDirective.html":{},"components/MapComponent.html":{},"interfaces/WisdomInterface.html":{},"miscellaneous/typealiases.html":{}}}],["translations",{"_index":1350,"title":{},"body":{"classes/ModuleProvider.html":{},"classes/StaticLoader.html":{},"interfaces/WisdomInterface.html":{},"miscellaneous/variables.html":{}}}],["translator",{"_index":1949,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/BarChartComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterUsageForecastsComponent.html":{}}}],["tries",{"_index":200,"title":{},"body":{"guards/AuthGuard.html":{}}}],["trimmedkeys",{"_index":1273,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["true",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/FrameComponent.html":{},"guards/LoaderGuard.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"components/ResultDataViewComponent.html":{},"injectables/SettingsStorageService.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/variables.html":{}}}],["true}).catch(e",{"_index":983,"title":{},"body":{"components/LoginComponent.html":{}}}],["try",{"_index":303,"title":{},"body":{"guards/AuthGuard.html":{}}}],["ts",{"_index":1578,"title":{},"body":{"classes/StaticLoader.html":{}}}],["tslib",{"_index":1745,"title":{},"body":{"dependencies.html":{}}}],["tx",{"_index":1279,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["tx.objectstore(\"queries",{"_index":1311,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["tx.objectstore(\"shapes",{"_index":1282,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["type",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"components/BarChartComponent.html":{},"interceptors/BaseUrlInterceptor.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ErrorComponent.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"classes/ModuleProvider.html":{},"components/ResultDataViewComponent.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"interfaces/ShapeData.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterUsageForecastsComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"interfaces/WisdomInterface.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type.ts",{"_index":1752,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["typealiases",{"_index":1794,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":913,"title":{},"body":{"interceptors/LoaderInterceptor.html":{},"injectables/SettingsStorageService.html":{}}}],["unauthorized",{"_index":1875,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["undefined",{"_index":442,"title":{},"body":{"injectables/AuthStorageService.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/SettingsStorageService.html":{},"components/WaterUsageForecastsComponent.html":{},"miscellaneous/functions.html":{}}}],["under",{"_index":678,"title":{},"body":{"components/ErrorComponent.html":{},"interfaces/WisdomInterface.html":{}}}],["unix",{"_index":457,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["unixtime",{"_index":456,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["unselected",{"_index":1055,"title":{},"body":{"components/MapComponent.html":{}}}],["unselectedcolor",{"_index":1014,"title":{},"body":{"components/MapComponent.html":{}}}],["unused",{"_index":700,"title":{},"body":{"injectables/ExampleService.html":{}}}],["update",{"_index":306,"title":{},"body":{"guards/AuthGuard.html":{},"components/BarChartComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LineChartComponent.html":{},"components/MapComponent.html":{},"miscellaneous/typealiases.html":{}}}],["updateareacomponents",{"_index":1374,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["updateareacomponents(forecast",{"_index":1388,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["updated",{"_index":1866,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["updategraphs",{"_index":1375,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["updategraphs(forecast",{"_index":1390,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["updates",{"_index":346,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"directives/LangSelectorDirective.html":{}}}],["upgrade(db",{"_index":1263,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["upon",{"_index":816,"title":{},"body":{"directives/LangSelectorDirective.html":{},"components/LoginComponent.html":{},"components/WaterUsageForecastsComponent.html":{}}}],["url",{"_index":391,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/BaseUrlInterceptor.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/UserService.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/variables.html":{}}}],["url.interceptor",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["url.interceptor.ts",{"_index":568,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"coverage.html":{}}}],["url.interceptor.ts:13",{"_index":1515,"title":{},"body":{"interceptors/SanitizeUrlInterceptor.html":{}}}],["url.interceptor.ts:23",{"_index":570,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{}}}],["url.queryparams[\"consumergroup",{"_index":1655,"title":{},"body":{"injectables/WaterUsageForecastsService.html":{}}}],["url.queryparams[\"key",{"_index":1656,"title":{},"body":{"injectables/WaterUsageForecastsService.html":{}}}],["url.split",{"_index":1518,"title":{},"body":{"interceptors/SanitizeUrlInterceptor.html":{}}}],["url.ts",{"_index":1687,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["urlencoded",{"_index":401,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["urltree",{"_index":241,"title":{},"body":{"guards/AuthGuard.html":{},"guards/LoaderGuard.html":{}}}],["usage",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/BarChartComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterUsageForecastsComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["usage.displayname",{"_index":1456,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["usage.startyear",{"_index":1458,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["usage.usages.map((val",{"_index":1457,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["usages",{"_index":723,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{}}}],["use",{"_index":258,"title":{},"body":{"guards/AuthGuard.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/MapComponent.html":{},"miscellaneous/variables.html":{}}}],["use_api_url",{"_index":384,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/BaseUrlInterceptor.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/WaterUsageForecastsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["use_base_url",{"_index":574,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["use_cache",{"_index":631,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["use_loader",{"_index":904,"title":{},"body":{"interceptors/LoaderInterceptor.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/WaterUsageForecastsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["useclass",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":217,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/BaseUrlInterceptor.html":{},"components/IonIconComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"interfaces/ShapeData.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["useful",{"_index":1960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":193,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/FrameComponent.html":{},"components/LoginComponent.html":{},"injectables/SettingsStorageService.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["username",{"_index":371,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["users",{"_index":1611,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["userservice",{"_index":1580,"title":{"injectables/UserService.html":{}},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["userservice.httpoptions",{"_index":1612,"title":{},"body":{"injectables/UserService.html":{}}}],["uses",{"_index":790,"title":{},"body":{"components/IonIconComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"interfaces/WisdomInterface.html":{}}}],["using",{"_index":1774,"title":{},"body":{"miscellaneous/functions.html":{}}}],["util",{"_index":547,"title":{},"body":{"components/BarChartComponent.html":{},"components/LineChartComponent.html":{}}}],["utility",{"_index":1344,"title":{},"body":{"classes/ModuleProvider.html":{},"miscellaneous/functions.html":{}}}],["val",{"_index":1459,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["valid",{"_index":196,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["validate",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{}}}],["validate(token",{"_index":378,"title":{},"body":{"injectables/AuthService.html":{}}}],["value",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthStorageService.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ErrorComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"components/ResultDataViewComponent.html":{},"injectables/SettingsStorageService.html":{},"components/SideBarComponent.html":{},"classes/StaticLoader.html":{},"components/WaterUsageForecastsComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":435,"title":{},"body":{"injectables/AuthStorageService.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"injectables/SettingsStorageService.html":{},"classes/StaticLoader.html":{},"miscellaneous/variables.html":{}}}],["values(forecast.consumergroup.forecast",{"_index":1471,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["values(forecast.consumergroup.reference",{"_index":1468,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["values(forecast.municipal.forecast",{"_index":1475,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["values(forecast.municipal.reference",{"_index":1474,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["var",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/BarChartComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterUsageForecastsComponent.html":{}}}],["variable",{"_index":1680,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1888,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["via",{"_index":794,"title":{},"body":{"components/IonIconComponent.html":{},"components/MapComponent.html":{},"injectables/UserService.html":{}}}],["view",{"_index":519,"title":{},"body":{"components/BarChartComponent.html":{},"components/LineChartComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsComponent.html":{}}}],["view'},{'name",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"components/BarChartComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterUsageForecastsComponent.html":{}}}],["view.component",{"_index":1642,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{}}}],["view.component.html",{"_index":1316,"title":{},"body":{"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{}}}],["view.component.ts",{"_index":1315,"title":{},"body":{"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"coverage.html":{}}}],["view.component.ts:11",{"_index":1323,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["view.component.ts:128",{"_index":1389,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view.component.ts:13",{"_index":1321,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["view.component.ts:136",{"_index":1379,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view.component.ts:142",{"_index":1382,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view.component.ts:15",{"_index":1324,"title":{},"body":{"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{}}}],["view.component.ts:17",{"_index":1320,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["view.component.ts:23",{"_index":1398,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view.component.ts:24",{"_index":1395,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view.component.ts:26",{"_index":1394,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view.component.ts:27",{"_index":1393,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view.component.ts:28",{"_index":1392,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view.component.ts:30",{"_index":1396,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view.component.ts:31",{"_index":1399,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view.component.ts:33",{"_index":1387,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view.component.ts:43",{"_index":1386,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view.component.ts:48",{"_index":1397,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view.component.ts:49",{"_index":1403,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view.component.ts:59",{"_index":1401,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view.component.ts:63",{"_index":1385,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view.component.ts:71",{"_index":1391,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view/map",{"_index":1314,"title":{},"body":{"components/MapSelectViewComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"coverage.html":{}}}],["view/result",{"_index":1362,"title":{},"body":{"components/ResultDataViewComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"coverage.html":{}}}],["viewchild",{"_index":543,"title":{},"body":{"components/BarChartComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{}}}],["viewchild(\"chart",{"_index":548,"title":{},"body":{"components/BarChartComponent.html":{},"components/LineChartComponent.html":{}}}],["viewchild(\"map",{"_index":1133,"title":{},"body":{"components/MapComponent.html":{}}}],["viewchild(\"passwordinput",{"_index":972,"title":{},"body":{"components/LoginComponent.html":{}}}],["viewchild('chart",{"_index":534,"title":{},"body":{"components/BarChartComponent.html":{},"components/LineChartComponent.html":{}}}],["viewchild('map",{"_index":1083,"title":{},"body":{"components/MapComponent.html":{}}}],["viewchild('passwordinput",{"_index":966,"title":{},"body":{"components/LoginComponent.html":{}}}],["views/map",{"_index":1641,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{}}}],["views/result",{"_index":1643,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{}}}],["void",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthStorageService.html":{},"components/BarChartComponent.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/ErrorComponent.html":{},"components/FrameComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"injectables/SettingsStorageService.html":{},"components/WaterUsageForecastsComponent.html":{},"miscellaneous/variables.html":{}}}],["wait",{"_index":262,"title":{},"body":{"guards/AuthGuard.html":{}}}],["want",{"_index":1352,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["wasserverbrauch",{"_index":1947,"title":{},"body":{"miscellaneous/variables.html":{}}}],["water",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/BarChartComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterUsageForecastsComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/variables.html":{}}}],["waterusageforecastscomponent",{"_index":89,"title":{"components/WaterUsageForecastsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BarChartComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LineChartComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterUsageForecastsComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["waterusageforecastsmodule",{"_index":1634,"title":{"modules/WaterUsageForecastsModule.html":{}},"body":{"modules/WaterUsageForecastsModule.html":{},"index.html":{},"modules.html":{}}}],["waterusageforecastsservice",{"_index":1376,"title":{"injectables/WaterUsageForecastsService.html":{}},"body":{"components/ResultDataViewComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"coverage.html":{}}}],["webcomponents",{"_index":791,"title":{},"body":{"components/IonIconComponent.html":{}}}],["webkit",{"_index":855,"title":{},"body":{"components/LoaderComponent.html":{}}}],["website",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/IonIconComponent.html":{}}}],["well",{"_index":1621,"title":{},"body":{"components/WaterUsageForecastsComponent.html":{}}}],["window",{"_index":1912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["window.location.origin",{"_index":1910,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wisdom",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/FrameComponent.html":{},"components/LoginComponent.html":{},"classes/ModuleProvider.html":{},"interfaces/WisdomInterface.html":{},"miscellaneous/variables.html":{}}}],["wisdom_modules/.../auth",{"_index":1889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wisdom_modules/.../auth.interceptor.ts",{"_index":1900,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wisdom_modules/.../auth.service.ts",{"_index":1893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wisdom_modules/.../deleteusersid200.ts",{"_index":1797,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../deleteusersid403.ts",{"_index":1799,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../deleteusersid404.ts",{"_index":1801,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../environment.common.ts",{"_index":1897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wisdom_modules/.../environment.prod.ts",{"_index":1894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wisdom_modules/.../environment.ts",{"_index":1895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wisdom_modules/.../forecast",{"_index":1751,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["wisdom_modules/.../getusers200.ts",{"_index":1804,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../getusersid200.ts",{"_index":1806,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../getusersid404.ts",{"_index":1808,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../getusersme200.ts",{"_index":1810,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../invert",{"_index":1896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wisdom_modules/.../layer",{"_index":1802,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../map.component.ts",{"_index":1803,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../map.service.ts",{"_index":1891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wisdom_modules/.../patchusers204.ts",{"_index":1815,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../patchusers403.ts",{"_index":1817,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../patchusers404.ts",{"_index":1819,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../patchusersme200.ts",{"_index":1821,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../postoauthtoken200.ts",{"_index":1822,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../postoauthtoken400.ts",{"_index":1823,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../postoauthtoken401.ts",{"_index":1824,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../postrevoke200.ts",{"_index":1825,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../postrevoke403.ts",{"_index":1827,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../public",{"_index":1902,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wisdom_modules/.../putusers201.ts",{"_index":1828,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../putusers409.ts",{"_index":1829,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../resolution.ts",{"_index":1753,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["wisdom_modules/.../settings",{"_index":1898,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wisdom_modules/.../side",{"_index":1812,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../static",{"_index":1899,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wisdom_modules/.../use",{"_index":1901,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wisdom_modules/.../user.service.ts",{"_index":1892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wisdom_modules/.../user.ts",{"_index":1836,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../util.ts",{"_index":1756,"title":{},"body":{"miscellaneous/functions.html":{}}}],["wisdom_modules/.../water",{"_index":1890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wisdom_modules/common/src/lib/bulma/bulma",{"_index":585,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{},"coverage.html":{}}}],["wisdom_modules/common/src/lib/chart/bar",{"_index":497,"title":{},"body":{"components/BarChartComponent.html":{},"coverage.html":{}}}],["wisdom_modules/common/src/lib/chart/chart.module.ts",{"_index":659,"title":{},"body":{"modules/ChartModule.html":{}}}],["wisdom_modules/common/src/lib/chart/line",{"_index":821,"title":{},"body":{"components/LineChartComponent.html":{},"coverage.html":{}}}],["wisdom_modules/common/src/lib/http",{"_index":1686,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["wisdom_modules/common/src/lib/ion",{"_index":785,"title":{},"body":{"components/IonIconComponent.html":{},"coverage.html":{}}}],["wisdom_modules/common/src/lib/map/invert",{"_index":1690,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["wisdom_modules/common/src/lib/map/layer",{"_index":1545,"title":{},"body":{"interfaces/ShapeData.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts",{"_index":999,"title":{},"body":{"components/MapComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:125",{"_index":1024,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:128",{"_index":1077,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:129",{"_index":1078,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:130",{"_index":1079,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:133",{"_index":1081,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:140",{"_index":1092,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:146",{"_index":1090,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:149",{"_index":1059,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:153",{"_index":1019,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:164",{"_index":1065,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:194",{"_index":1063,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:284",{"_index":1060,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:50",{"_index":1086,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:53",{"_index":1084,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:56",{"_index":1023,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:58",{"_index":1075,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:61",{"_index":1051,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:63",{"_index":1096,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:66",{"_index":1021,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:68",{"_index":1069,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:71",{"_index":1056,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:73",{"_index":1099,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:76",{"_index":1054,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:78",{"_index":1049,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.service.ts",{"_index":1229,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["wisdom_modules/common/src/lib/map/map.service.ts:62",{"_index":1332,"title":{},"body":{"injectables/MapService.html":{}}}],["wisdom_modules/common/src/lib/map/map.service.ts:85",{"_index":1334,"title":{},"body":{"injectables/MapService.html":{}}}],["wisdom_modules/common/src/lib/map/resolution.ts",{"_index":1700,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["wisdom_modules/common/src/lib/util.ts",{"_index":1703,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["wisdom_modules/common/src/lib/wisdom.module.ts",{"_index":1669,"title":{},"body":{"modules/WisdomModule.html":{}}}],["wisdom_modules/common/src/wisdominterface.ts",{"_index":1660,"title":{},"body":{"interfaces/WisdomInterface.html":{},"coverage.html":{}}}],["wisdom_modules/core/src/app/app",{"_index":167,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["wisdom_modules/core/src/app/app.component.ts",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["wisdom_modules/core/src/app/app.component.ts:10",{"_index":39,"title":{},"body":{"components/AppComponent.html":{}}}],["wisdom_modules/core/src/app/app.component.ts:12",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["wisdom_modules/core/src/app/app.module.ts",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["wisdom_modules/core/src/app/auth/auth",{"_index":420,"title":{},"body":{"injectables/AuthStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["wisdom_modules/core/src/app/auth/auth.guard.ts",{"_index":191,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["wisdom_modules/core/src/app/auth/auth.guard.ts:23",{"_index":209,"title":{},"body":{"guards/AuthGuard.html":{}}}],["wisdom_modules/core/src/app/auth/auth.guard.ts:47",{"_index":227,"title":{},"body":{"guards/AuthGuard.html":{}}}],["wisdom_modules/core/src/app/auth/auth.interceptor.ts",{"_index":322,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["wisdom_modules/core/src/app/auth/auth.interceptor.ts:17",{"_index":327,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["wisdom_modules/core/src/app/auth/auth.interceptor.ts:30",{"_index":331,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["wisdom_modules/core/src/app/auth/auth.service.ts",{"_index":355,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["wisdom_modules/core/src/app/auth/auth.service.ts:38",{"_index":363,"title":{},"body":{"injectables/AuthService.html":{}}}],["wisdom_modules/core/src/app/auth/auth.service.ts:51",{"_index":369,"title":{},"body":{"injectables/AuthService.html":{}}}],["wisdom_modules/core/src/app/auth/auth.service.ts:69",{"_index":379,"title":{},"body":{"injectables/AuthService.html":{}}}],["wisdom_modules/core/src/app/auth/auth.service.ts:81",{"_index":376,"title":{},"body":{"injectables/AuthService.html":{}}}],["wisdom_modules/core/src/app/auth/auth.service.ts:98",{"_index":373,"title":{},"body":{"injectables/AuthService.html":{}}}],["wisdom_modules/core/src/app/auth/login/login.component.ts",{"_index":950,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["wisdom_modules/core/src/app/auth/login/login.component.ts:18",{"_index":967,"title":{},"body":{"components/LoginComponent.html":{}}}],["wisdom_modules/core/src/app/auth/login/login.component.ts:21",{"_index":955,"title":{},"body":{"components/LoginComponent.html":{}}}],["wisdom_modules/core/src/app/auth/login/login.component.ts:43",{"_index":959,"title":{},"body":{"components/LoginComponent.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/login/postoauthtoken200.ts",{"_index":1870,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/login/postoauthtoken400.ts",{"_index":1872,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/login/postoauthtoken401.ts",{"_index":1874,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/login/postrevoke200.ts",{"_index":1876,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/login/postrevoke403.ts",{"_index":1878,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/users/deleteusersid200.ts",{"_index":1837,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/users/deleteusersid403.ts",{"_index":1839,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/users/deleteusersid404.ts",{"_index":1844,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/users/getusers200.ts",{"_index":1847,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/users/getusersid200.ts",{"_index":1848,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/users/getusersid404.ts",{"_index":1851,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/users/getusersme200.ts",{"_index":1852,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/users/patchusers204.ts",{"_index":1864,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/users/patchusers403.ts",{"_index":1867,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/users/patchusers404.ts",{"_index":1868,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/users/patchusersme200.ts",{"_index":1869,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/users/putusers201.ts",{"_index":1880,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/users/putusers409.ts",{"_index":1882,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/types/user.ts",{"_index":1885,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/user.service.ts",{"_index":1581,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["wisdom_modules/core/src/app/auth/user.service.ts:25",{"_index":1585,"title":{},"body":{"injectables/UserService.html":{}}}],["wisdom_modules/core/src/app/auth/user.service.ts:33",{"_index":1592,"title":{},"body":{"injectables/UserService.html":{}}}],["wisdom_modules/core/src/app/auth/user.service.ts:42",{"_index":1591,"title":{},"body":{"injectables/UserService.html":{}}}],["wisdom_modules/core/src/app/auth/user.service.ts:47",{"_index":1589,"title":{},"body":{"injectables/UserService.html":{}}}],["wisdom_modules/core/src/app/base",{"_index":567,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{},"coverage.html":{}}}],["wisdom_modules/core/src/app/cache.interceptor.ts",{"_index":624,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"coverage.html":{}}}],["wisdom_modules/core/src/app/cache.interceptor.ts:14",{"_index":628,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["wisdom_modules/core/src/app/cache.interceptor.ts:15",{"_index":629,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["wisdom_modules/core/src/app/cache.interceptor.ts:17",{"_index":627,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["wisdom_modules/core/src/app/error/error.component.ts",{"_index":663,"title":{},"body":{"components/ErrorComponent.html":{},"coverage.html":{}}}],["wisdom_modules/core/src/app/error/error.component.ts:12",{"_index":677,"title":{},"body":{"components/ErrorComponent.html":{}}}],["wisdom_modules/core/src/app/error/error.component.ts:14",{"_index":670,"title":{},"body":{"components/ErrorComponent.html":{}}}],["wisdom_modules/core/src/app/error/error.component.ts:26",{"_index":671,"title":{},"body":{"components/ErrorComponent.html":{}}}],["wisdom_modules/core/src/app/frame/frame.component.ts",{"_index":732,"title":{},"body":{"components/FrameComponent.html":{},"coverage.html":{}}}],["wisdom_modules/core/src/app/frame/frame.component.ts:19",{"_index":744,"title":{},"body":{"components/FrameComponent.html":{}}}],["wisdom_modules/core/src/app/frame/frame.component.ts:36",{"_index":752,"title":{},"body":{"components/FrameComponent.html":{}}}],["wisdom_modules/core/src/app/frame/frame.component.ts:40",{"_index":757,"title":{},"body":{"components/FrameComponent.html":{}}}],["wisdom_modules/core/src/app/frame/frame.component.ts:45",{"_index":759,"title":{},"body":{"components/FrameComponent.html":{}}}],["wisdom_modules/core/src/app/frame/frame.component.ts:49",{"_index":761,"title":{},"body":{"components/FrameComponent.html":{}}}],["wisdom_modules/core/src/app/frame/frame.component.ts:54",{"_index":748,"title":{},"body":{"components/FrameComponent.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.component.ts",{"_index":833,"title":{},"body":{"components/LoaderComponent.html":{},"coverage.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.component.ts:13",{"_index":844,"title":{},"body":{"components/LoaderComponent.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.component.ts:14",{"_index":843,"title":{},"body":{"components/LoaderComponent.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.component.ts:16",{"_index":842,"title":{},"body":{"components/LoaderComponent.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.component.ts:9",{"_index":841,"title":{},"body":{"components/LoaderComponent.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.guard.ts",{"_index":894,"title":{},"body":{"guards/LoaderGuard.html":{},"coverage.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.guard.ts:13",{"_index":896,"title":{},"body":{"guards/LoaderGuard.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.guard.ts:9",{"_index":895,"title":{},"body":{"guards/LoaderGuard.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.interceptor.ts",{"_index":899,"title":{},"body":{"interceptors/LoaderInterceptor.html":{},"coverage.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.interceptor.ts:15",{"_index":900,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.interceptor.ts:19",{"_index":901,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.service.ts",{"_index":915,"title":{},"body":{"injectables/LoaderService.html":{},"coverage.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.service.ts:10",{"_index":929,"title":{},"body":{"injectables/LoaderService.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.service.ts:11",{"_index":932,"title":{},"body":{"injectables/LoaderService.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.service.ts:12",{"_index":935,"title":{},"body":{"injectables/LoaderService.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.service.ts:16",{"_index":931,"title":{},"body":{"injectables/LoaderService.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.service.ts:17",{"_index":937,"title":{},"body":{"injectables/LoaderService.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.service.ts:21",{"_index":925,"title":{},"body":{"injectables/LoaderService.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.service.ts:38",{"_index":928,"title":{},"body":{"injectables/LoaderService.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.service.ts:9",{"_index":933,"title":{},"body":{"injectables/LoaderService.html":{}}}],["wisdom_modules/core/src/app/frame/side",{"_index":1548,"title":{},"body":{"components/SideBarComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/i18n/lang",{"_index":806,"title":{},"body":{"directives/LangSelectorDirective.html":{},"coverage.html":{}}}],["wisdom_modules/core/src/app/i18n/static",{"_index":1556,"title":{},"body":{"classes/StaticLoader.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["wisdom_modules/core/src/app/module",{"_index":1335,"title":{},"body":{"classes/ModuleProvider.html":{},"coverage.html":{}}}],["wisdom_modules/core/src/app/sanitize",{"_index":1514,"title":{},"body":{"interceptors/SanitizeUrlInterceptor.html":{},"coverage.html":{}}}],["wisdom_modules/core/src/app/settings",{"_index":1525,"title":{},"body":{"injectables/SettingsStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["wisdom_modules/core/src/environments/environment.common.ts",{"_index":1714,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["wisdom_modules/core/src/environments/environment.prod.ts",{"_index":1715,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["wisdom_modules/core/src/environments/environment.ts",{"_index":1717,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["wisdom_modules/example/src/lib/example.component.ts",{"_index":686,"title":{},"body":{"components/ExampleComponent.html":{},"coverage.html":{}}}],["wisdom_modules/example/src/lib/example.module.ts",{"_index":696,"title":{},"body":{"modules/ExampleModule.html":{}}}],["wisdom_modules/example/src/lib/example.service.ts",{"_index":699,"title":{},"body":{"injectables/ExampleService.html":{},"coverage.html":{}}}],["wisdom_modules/example/src/public",{"_index":1718,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["wisdom_modules/water",{"_index":705,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["wisdominterface",{"_index":1659,"title":{"interfaces/WisdomInterface.html":{}},"body":{"interfaces/WisdomInterface.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["wisdommodule",{"_index":111,"title":{"modules/WisdomModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ExampleModule.html":{},"modules/WaterUsageForecastsModule.html":{},"modules/WisdomModule.html":{},"index.html":{},"modules.html":{}}}],["without",{"_index":348,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/MapComponent.html":{}}}],["workspace",{"_index":1553,"title":{},"body":{"components/SideBarComponent.html":{}}}],["workspace's",{"_index":1339,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["wrong",{"_index":1608,"title":{},"body":{"injectables/UserService.html":{}}}],["www",{"_index":399,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["x",{"_index":398,"title":{},"body":{"injectables/AuthService.html":{},"components/ResultDataViewComponent.html":{},"miscellaneous/variables.html":{}}}],["y",{"_index":889,"title":{},"body":{"components/LoaderComponent.html":{},"components/ResultDataViewComponent.html":{}}}],["yes",{"_index":927,"title":{},"body":{"injectables/LoaderService.html":{},"injectables/MapService.html":{},"injectables/UserService.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/functions.html":{}}}],["you're",{"_index":270,"title":{},"body":{"guards/AuthGuard.html":{}}}],["z",{"_index":883,"title":{},"body":{"components/LoaderComponent.html":{}}}],["zeitraum",{"_index":1507,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["zone.js",{"_index":1747,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"modules/ChartModule.html":{},"modules/ExampleModule.html":{},"components/MapComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"modules/WisdomModule.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    wisdom_modules/core/src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component of the app, the main entry point for angular.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/app.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"WISdoM-OSS\"\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/core/src/app/app.component.ts:10\n                        \n                    \n\n            \n                \n                    The title of the website.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from \"@angular/core\";\n\n/** Component of the app, the main entry point for angular. */\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\"\n})\nexport class AppComponent implements OnInit {\n  /** The title of the website. */\n  title = \"WISdoM-OSS\";\n\n  ngOnInit(): void {\n    // TODO: register chart.js plugins here\n    console.log(\"init app\");\n  }\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BarChartComponent', 'selector': 'bar-chart'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'ExampleComponent', 'selector': ''},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IonIconComponent', 'selector': 'ion-icon'},{'name': 'LineChartComponent', 'selector': 'line-chart'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'map'},{'name': 'MapSelectViewComponent', 'selector': 'lib-map-select-view'},{'name': 'ResultDataViewComponent', 'selector': 'lib-result-data-view'},{'name': 'SideBarComponent', 'selector': 'app-side-bar'},{'name': 'WaterUsageForecastsComponent', 'selector': 'lib-water-usage-forecasts'}];\n    var DIRECTIVES = [{'name': 'BulmaIsToggleableDirective', 'selector': '.is-toggleable'},{'name': 'LangSelectorDirective', 'selector': '[selectLang]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nErrorComponent\n\nErrorComponent\n\nAppModule -->\n\nErrorComponent->AppModule\n\n\n\n\n\nFrameComponent\n\nFrameComponent\n\nAppModule -->\n\nFrameComponent->AppModule\n\n\n\n\n\nLangSelectorDirective\n\nLangSelectorDirective\n\nAppModule -->\n\nLangSelectorDirective->AppModule\n\n\n\n\n\nLoaderComponent\n\nLoaderComponent\n\nAppModule -->\n\nLoaderComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nSideBarComponent\n\nSideBarComponent\n\nAppModule -->\n\nSideBarComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nWisdomModule\n\nWisdomModule\n\nAppModule -->\n\nWisdomModule->AppModule\n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nAppModule -->\n\nAuthInterceptor->AppModule\n\n\n\n\n\nBaseUrlInterceptor\n\nBaseUrlInterceptor\n\nAppModule -->\n\nBaseUrlInterceptor->AppModule\n\n\n\n\n\nCacheInterceptor\n\nCacheInterceptor\n\nAppModule -->\n\nCacheInterceptor->AppModule\n\n\n\n\n\nLoaderInterceptor\n\nLoaderInterceptor\n\nAppModule -->\n\nLoaderInterceptor->AppModule\n\n\n\n\n\nSanitizeUrlInterceptor\n\nSanitizeUrlInterceptor\n\nAppModule -->\n\nSanitizeUrlInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            wisdom_modules/core/src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            ErrorComponent\n                        \n                        \n                            FrameComponent\n                        \n                        \n                            LangSelectorDirective\n                        \n                        \n                            LoaderComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            SideBarComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AuthInterceptor\n                        \n                        \n                            BaseUrlInterceptor\n                        \n                        \n                            CacheInterceptor\n                        \n                        \n                            LoaderInterceptor\n                        \n                        \n                            SanitizeUrlInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            WisdomModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {HttpClientModule, HTTP_INTERCEPTORS} from \"@angular/common/http\";\nimport {NgModule} from \"@angular/core\";\nimport {FormsModule} from \"@angular/forms\";\nimport {BrowserModule} from \"@angular/platform-browser\";\nimport {TranslateLoader, TranslateModule} from \"@ngx-translate/core\";\nimport {WisdomModule} from \"common\";\n\nimport {AppRoutingModule} from \"./app-routing.module\";\nimport {AppComponent} from \"./app.component\";\nimport {LoginComponent} from \"./auth/login/login.component\";\nimport {AuthInterceptor} from \"./auth/auth.interceptor\";\nimport {BaseUrlInterceptor} from \"./base-url.interceptor\";\nimport {ErrorComponent} from \"./error/error.component\";\nimport {FrameComponent} from \"./frame/frame.component\";\nimport {SideBarComponent} from \"./frame/side-bar/side-bar.component\";\nimport {LangSelectorDirective} from \"./i18n/lang-selector.directive\";\nimport {StaticLoader} from \"./i18n/static-loader\";\nimport {CacheInterceptor} from \"./cache.interceptor\";\nimport { LoaderComponent } from './frame/loader/loader.component';\nimport {LoaderInterceptor} from \"./frame/loader/loader.interceptor\";\nimport {SanitizeUrlInterceptor} from \"./sanitize-url.interceptor\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    FrameComponent,\n    LangSelectorDirective,\n    SideBarComponent,\n    ErrorComponent,\n    LoaderComponent\n  ],\n  imports: [\n    WisdomModule,\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    TranslateModule.forRoot({\n      defaultLanguage: globalThis.localStorage.getItem(\"lang\") || \"en_US\",\n      loader: {\n        provide: TranslateLoader,\n        useClass: StaticLoader\n      }\n    })\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: LoaderInterceptor,\n      multi: true\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: BaseUrlInterceptor,\n      multi: true\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: CacheInterceptor,\n      multi: true\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: SanitizeUrlInterceptor,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            wisdom_modules/core/src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from \"@angular/core\";\nimport {RouterModule, Routes} from \"@angular/router\";\n\nimport {LoginComponent} from \"./auth/login/login.component\";\nimport {AuthGuard} from \"./auth/auth.guard\";\nimport {FrameComponent} from \"./frame/frame.component\";\nimport {ModuleProvider} from \"./module-provider\";\nimport {ErrorComponent} from \"./error/error.component\";\nimport {LoaderGuard} from \"./frame/loader/loader.guard\";\n\nModuleProvider.routes();\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: FrameComponent,\n    canActivate: [AuthGuard, LoaderGuard],\n    children: \"ModuleProvider.routes()\"\n  },\n  {path: \"login\", component: LoginComponent, canActivate: [LoaderGuard]},\n  {path: \"error/:code\", component: ErrorComponent},\n  {path: \"**\", redirectTo: \"error/404?message=Not%20Found\"}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                wisdom_modules/core/src/app/auth/auth.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard checking if the user is signed in, it needs to have a valid access\ntoken to browser further.\nAlso tries to refresh the token if the old one is not valid.\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authStorage: AuthStorageService, authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/core/src/app/auth/auth.guard.ts:23\n                            \n                        \n\n                \n                    \n                            Constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authStorage\n                                                  \n                                                        \n                                                                        AuthStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The storage containing the tokens\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The service used to interact with the auth server\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The router to route to the login if necessary\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/auth/auth.guard.ts:47\n                \n            \n\n\n            \n                \n                    Method deciding if a user is allowed to navigate to the requested route.\nThis one checks if the current token is still valid.\nIf the token is not valid it tries to refresh the token.\nIf no refreshing is the possible the route will be set to the login page.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | UrlTree | boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {Injectable} from \"@angular/core\";\nimport {\n  CanActivate,\n  Router,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree\n} from \"@angular/router\";\nimport {Observable} from \"rxjs\";\n\nimport {AuthStorageService} from \"./auth-storage.service\";\nimport {AuthService} from \"./auth.service\";\n\n/**\n * Guard checking if the user is signed in, it needs to have a valid access\n * token to browser further.\n *\n * Also tries to refresh the token if the old one is not valid.\n */\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AuthGuard implements CanActivate {\n\n  /**\n   * Constructor.\n   * @param authStorage The storage containing the tokens\n   * @param authService The service used to interact with the auth server\n   * @param router The router to route to the login if necessary\n   */\n  constructor(\n    private authStorage: AuthStorageService,\n    private authService: AuthService,\n    private router: Router\n  ) {}\n\n  /**\n   * Method deciding if a user is allowed to navigate to the requested route.\n   *\n   * This one checks if the current token is still valid.\n   * If the token is not valid it tries to refresh the token.\n   * If no refreshing is the possible the route will be set to the login page.\n   *\n   * @param route\n   * @param state\n   */\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable | UrlTree | boolean {\n    // ignore login path per se\n    if (route.url[0]?.path === \"login\") return true;\n    let loginUrlTree = this.router.parseUrl(\"/login\");\n\n    // if no token is available the use can't be logged in\n    let token = this.authStorage.accessToken;\n    if (!token) return loginUrlTree;\n\n    // wait for the server to reply with a token check\n    return new Observable(subscriber => {\n      this.authService.validate(token!).subscribe({\n        next: response => {\n          // token is valid, you're ready to go\n          subscriber.next(true);\n          subscriber.complete();\n        },\n\n        error: errResponse => {\n          // token is invalid\n          if (errResponse.status !== 401) {\n            console.log(errResponse);\n            let errUrl = this.router.parseUrl(`error/${errResponse.status}`);\n            errUrl.queryParams = {message: errResponse.statusText};\n            // TODO: handle non 401 errors better than this component\n            subscriber.next(errUrl);\n            subscriber.complete();\n            return;\n          }\n\n          /**\n           * Small function to avoid code depletes.\n           * Clears the auth storage and sends the user to the login page.\n           */\n          let returnToLogin = () => {\n            this.authStorage.clear();\n            subscriber.next(loginUrlTree);\n            subscriber.complete();\n          };\n\n          if (this.authStorage.refreshToken) {\n            // if a refresh token is present, try to refresh\n            this.authService.refresh(this.authStorage.refreshToken).subscribe({\n              next: refreshResponse => {\n                // refresh token was valid, update with new data\n                this.authStorage.accessToken = refreshResponse.access_token;\n                this.authStorage.refreshToken = refreshResponse.refresh_token;\n                this.authStorage.scopes = refreshResponse.scope;\n                this.authStorage.expiresIn = refreshResponse.expires_in;\n                subscriber.next(true);\n                subscriber.complete();\n                return;\n              },\n\n              error: refreshErrResponse => {\n                // token is no valid, send the user to the login page\n                if (refreshErrResponse.status === 400) return returnToLogin();\n                // TODO: handle non-400 status codes gracefully\n              }\n            });\n            return;\n          }\n\n          return returnToLogin();\n        }\n      });\n    });\n  }\n\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AuthInterceptor.html":{"url":"interceptors/AuthInterceptor.html","title":"interceptor - AuthInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  AuthInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/core/src/app/auth/auth.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                Interceptor to inject the authorization token into every request.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authStorage: AuthStorageService)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/core/src/app/auth/auth.interceptor.ts:17\n                            \n                        \n\n                \n                    \n                            Constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authStorage\n                                                  \n                                                        \n                                                                        AuthStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The storage containing the tokens to inject\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/auth/auth.interceptor.ts:30\n                \n            \n\n\n            \n                \n                    Injects the token as Bearer authentication into a HttpRequest\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The request the token should be injected in\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The next handler to operate on the request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest\n} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\nimport {Observable, tap} from \"rxjs\";\n\nimport {AuthStorageService} from \"./auth-storage.service\";\n\n/** Key for the token. */\nconst TOKEN_HEADER_KEY = \"Authorization\";\n\n/** Interceptor to inject the authorization token into every request. */\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  /**\n   * Constructor.\n   * @param authStorage The storage containing the tokens to inject\n   */\n  constructor(private authStorage: AuthStorageService) {}\n\n  /**\n   * Injects the token as Bearer authentication into a HttpRequest\n   * @param request The request the token should be injected in\n   * @param next The next handler to operate on the request\n   */\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    let authRequest = request;\n    const token = this.authStorage.accessToken;\n    if (token) {\n      authRequest = request.clone({\n        // this updates the header without removing every other header\n        headers: request.headers.set(TOKEN_HEADER_KEY, \"Bearer \" + token)\n      });\n    }\n    return next.handle(authRequest).pipe(tap(event => {\n      // TODO: handle if the event is 401\n    }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/core/src/app/auth/auth.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service handling the OAuth interaction.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                refresh\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/core/src/app/auth/auth.service.ts:38\n                            \n                        \n\n                \n                    \n                            Constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                For making requests with the auth server\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/auth/auth.service.ts:51\n                \n            \n\n\n            \n                \n                    Logs the user in.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Username of the user\n\n                                    \n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Password of the user\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout(token: string)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/auth/auth.service.ts:98\n                \n            \n\n\n            \n                \n                    Revokes the token.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Token of the user\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refresh\n                        \n                    \n                \n            \n            \n                \nrefresh(token: string)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/auth/auth.service.ts:81\n                \n            \n\n\n            \n                \n                    Refreshes the current token.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Refresh token\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(token: string)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/auth/auth.service.ts:69\n                \n            \n\n\n            \n                \n                    Checks if the given token is valid.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Token to check\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpClient,\n  HttpContext,\n  HttpHeaders,\n  HttpParams\n} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\nimport {USE_API_URL} from \"common\";\nimport {join} from \"path-browserify\";\nimport {Observable} from \"rxjs\";\n\nimport PostOAuthToken200 from \"./response_types/login/PostOAuthToken200\";\nimport PostRevoke200 from \"./response_types/login/PostRevoke200\";\n\n/** Url for the interaction. */\nconst AUTH_URL = \"auth\";\n\n/**\n * Options for the post request in the service.\n * As per reference the content type is always \"x-www-form-urlencoded\" instead\n * of \"json\".\n * The response is a json though.\n */\nconst httpOptions: Parameters[2] = {\n  headers: new HttpHeaders({\n    \"Content-Type\": \"application/x-www-form-urlencoded\"\n  }),\n  responseType: \"json\",\n  context: new HttpContext().set(USE_API_URL, true)\n}\n\n/**\n * Service handling the OAuth interaction.\n */\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AuthService {\n\n  /**\n   * Constructor.\n   * @param http For making requests with the auth server\n   */\n  constructor(private http: HttpClient) {}\n\n  /**\n   * Logs the user in.\n   * @param username Username of the user\n   * @param password Password of the user\n   */\n  login(username: string, password: string) {\n    return this.http.post(\n      join(AUTH_URL, \"oauth/token\"),\n      new HttpParams({\n        fromObject: {\n          grant_type: \"password\",\n          username,\n          password\n        }\n      }),\n      httpOptions\n    ) as Observable;\n  }\n\n  /**\n   * Checks if the given token is valid.\n   * @param token Token to check\n   */\n  validate(token: string) {\n    return this.http.post(\n      join(AUTH_URL, \"oauth/check_token\"),\n      new HttpParams({fromObject: {token}}),\n      httpOptions\n    );\n  }\n\n  /**\n   * Refreshes the current token.\n   * @param token Refresh token\n   */\n  refresh(token: string) {\n    return this.http.post(\n      join(AUTH_URL, \"oauth/token\"),\n      new HttpParams({\n        fromObject: {\n          grant_type: \"refresh_token\",\n          refresh_token: token\n        }\n      }),\n      httpOptions\n    ) as Observable;\n  }\n\n  /**\n   * Revokes the token.\n   * @param token Token of the user\n   */\n  logout(token: string) {\n    return this.http.post(\n      join(AUTH_URL, \"oauth/revoke\"),\n      new HttpParams({fromObject: {\n        token\n      }}),\n      httpOptions\n    ) as Observable;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthStorageService.html":{"url":"injectables/AuthStorageService.html","title":"injectable - AuthStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/core/src/app/auth/auth-storage.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Class for storing the data received from the auth server.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                    Private\n                                    Static\n                                getStorage\n                            \n                            \n                                    Private\n                                    Static\n                                setStorage\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    accessToken\n                                \n                                \n                                    expiresIn\n                                \n                                \n                                    refreshToken\n                                \n                                \n                                    scopes\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/auth/auth-storage.service.ts:21\n                \n            \n\n\n            \n                \n                    Clears the session storage from the values stored by this service.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        getStorage\n                        \n                    \n                \n            \n            \n                \n                    \n                    getStorage(key: string)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/auth/auth-storage.service.ts:38\n                \n            \n\n\n            \n                \n                    Internal function to get session storage values.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        setStorage\n                        \n                    \n                \n            \n            \n                \n                    \n                    setStorage(data: string | null | undefined, key: string)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/auth/auth-storage.service.ts:33\n                \n            \n\n\n            \n                \n                    Internal function to set session storage values.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            string | null | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        accessToken\n                    \n                \n\n                \n                    \n                        getaccessToken()\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/auth/auth-storage.service.ts:54\n                                \n                            \n                    \n                        \n                                Get the access token.\n\n\n                                \n                                \n                        \n                    \n\n                \n                    \n                        setaccessToken(token: string | null | undefined)\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/auth/auth-storage.service.ts:46\n                                \n                            \n                    \n                        \n                                Set the access token.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            token\n                                                    \n                                                            \n                                                                        string | null | undefined\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    May be a nullish value or the token\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        expiresIn\n                    \n                \n\n                \n                    \n                        getexpiresIn()\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/auth/auth-storage.service.ts:70\n                                \n                            \n                    \n                        \n                                Returns the expiration date.\n\n\n                                \n                                \n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n                \n                    \n                        setexpiresIn(unixTime: number | string | null | undefined)\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/auth/auth-storage.service.ts:62\n                                \n                            \n                    \n                        \n                                Set the expiration date.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            unixTime\n                                                    \n                                                            \n                                                                        number | string | null | undefined\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    May be a nullish value or the unix time as number or string\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        refreshToken\n                    \n                \n\n                \n                    \n                        getrefreshToken()\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/auth/auth-storage.service.ts:88\n                                \n                            \n                    \n                        \n                                Get the refresh token.\n\n\n                                \n                                \n                        \n                    \n\n                \n                    \n                        setrefreshToken(token: string | null | undefined)\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/auth/auth-storage.service.ts:80\n                                \n                            \n                    \n                        \n                                Set the refresh token.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            token\n                                                    \n                                                            \n                                                                        string | null | undefined\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    May be a nullish value or the token\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        scopes\n                    \n                \n\n                \n                    \n                        getscopes()\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/auth/auth-storage.service.ts:104\n                                \n                            \n                    \n                        \n                                Get the scopes.\n\n\n                                \n                                \n                        \n                    \n\n                \n                    \n                        setscopes(scopes: string | null | undefined)\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/auth/auth-storage.service.ts:96\n                                \n                            \n                    \n                        \n                                Sets the scopes.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            scopes\n                                                    \n                                                            \n                                                                        string | null | undefined\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    May be a nullish value or the scopes\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\n\n/** Key for the access token. */\nconst ACCESS_TOKEN_KEY = \"auth-token\";\n/** Key fo the expiration date. */\nconst EXPIRES_IN_KEY = \"auth-expires-in\";\n/** Key for the refresh token. */\nconst REFRESH_TOKEN_KEY = \"auth-refresh-token\";\n/** Key for the scopes. */\nconst SCOPES_KEY = \"auth-scopes\";\n\n/** Class for storing the data received from the auth server. */\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AuthStorageService {\n\n  // TODO: doc the getter and setter when https://github.com/microsoft/tsdoc/issues/308 is closed\n\n  /** Clears the session storage from the values stored by this service. */\n  clear(): void {\n    for (let key of [\n      ACCESS_TOKEN_KEY,\n      REFRESH_TOKEN_KEY,\n      EXPIRES_IN_KEY,\n      SCOPES_KEY\n    ]) {\n      globalThis.sessionStorage.removeItem(key);\n    }\n  }\n\n  /** Internal function to set session storage values. */\n  private static setStorage(data: string | null | undefined, key: string) {\n    if (data) globalThis.sessionStorage.setItem(key, data);\n    else globalThis.sessionStorage.removeItem(key);\n  }\n  /** Internal function to get session storage values. */\n  private static getStorage(key: string) {\n    return globalThis.sessionStorage.getItem(key);\n  }\n\n  /**\n   * Set the access token.\n   * @param token May be a nullish value or the token\n   */\n  set accessToken(token: string | null | undefined) {\n    AuthStorageService.setStorage(token, ACCESS_TOKEN_KEY);\n  }\n\n  /**\n   * Get the access token.\n   * @returns A nullish value or the token\n   */\n  get accessToken() {\n    return AuthStorageService.getStorage(ACCESS_TOKEN_KEY);\n  }\n\n  /**\n   * Set the expiration date.\n   * @param unixTime May be a nullish value or the unix time as number or string\n   */\n  set expiresIn(unixTime: number | string | null | undefined) {\n    AuthStorageService.setStorage(`${unixTime}`, EXPIRES_IN_KEY);\n  }\n\n  /**\n   * Returns the expiration date.\n   * @returns The date is unix timestamp or NaN\n   */\n  get expiresIn(): number {\n    let expiresIn = AuthStorageService.getStorage(EXPIRES_IN_KEY);\n    if (expiresIn) return parseInt(expiresIn);\n    return NaN;\n  }\n\n  /**\n   * Set the refresh token.\n   * @param token May be a nullish value or the token\n   */\n  set refreshToken(token: string | null | undefined) {\n    AuthStorageService.setStorage(token, REFRESH_TOKEN_KEY);\n  }\n\n  /**\n   * Get the refresh token.\n   * @returns A nullish value or the token\n   */\n  get refreshToken() {\n    return AuthStorageService.getStorage(REFRESH_TOKEN_KEY);\n  }\n\n  /**\n   * Sets the scopes.\n   * @param scopes May be a nullish value or the scopes\n   */\n  set scopes(scopes: string | null | undefined) {\n    AuthStorageService.setStorage(scopes, SCOPES_KEY);\n  }\n\n  /**\n   * Get the scopes.\n   * @returns The scopes divided by \" \" or a nullish value\n   */\n  get scopes() {\n    return AuthStorageService.getStorage(SCOPES_KEY);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BarChartComponent.html":{"url":"components/BarChartComponent.html","title":"component - BarChartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BarChartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    wisdom_modules/common/src/lib/chart/bar-chart.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for displaying bar charts with chart.js\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                bar-chart\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                chart\n                            \n                            \n                                    Private\n                                chartElement\n                            \n                            \n                                    Private\n                                    Optional\n                                rawOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    options\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/common/src/lib/chart/bar-chart.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :     ChartData\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/chart/bar-chart.component.ts:27\n                            \n                        \n                \n                    \n                        The data to display with the chart.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/chart/bar-chart.component.ts:30\n                            \n                        \n                \n                    \n                        Options passed to the chart.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/common/src/lib/chart/bar-chart.component.ts:43\n                \n            \n\n\n            \n                \n                    After the view is initialized this will create the chart and render it.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/common/src/lib/chart/bar-chart.component.ts:61\n                \n            \n\n\n            \n                \n                    When the data is changed on the chart, it will call an update.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Changes made to the chart\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        chart\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Chart\n\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/chart/bar-chart.component.ts:40\n                        \n                    \n\n            \n                \n                    The chart generated by chart.js.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        chartElement\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('chart')\n                        \n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/chart/bar-chart.component.ts:24\n                        \n                    \n\n            \n                \n                    The host element of the chart.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        rawOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ChartOptions\n\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/chart/bar-chart.component.ts:37\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n\n                \n                    \n                        getoptions()\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/common/src/lib/chart/bar-chart.component.ts:33\n                                \n                            \n\n                \n                    \n                        setoptions(o: ChartOptions)\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/common/src/lib/chart/bar-chart.component.ts:30\n                                \n                            \n                    \n                        \n                                Options passed to the chart.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            o\n                                                    \n                                                            \n                                                                        ChartOptions\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n  OnChanges,\n  SimpleChanges,\n  ViewChild,\n  Component,\n  AfterViewInit,\n  Input,\n  ElementRef\n} from \"@angular/core\";\nimport Chart, {ChartData, ChartOptions} from \"chart.js/auto\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {translateObject} from \"../util\";\n\n/** Component for displaying bar charts with chart.js */\n@Component({\n  selector: \"bar-chart\",\n  template: \"\"\n})\nexport class BarChartComponent implements AfterViewInit, OnChanges {\n\n  constructor(private translate: TranslateService) {}\n\n  /** The host element of the chart. */\n  @ViewChild(\"chart\") private chartElement!: ElementRef;\n\n  /** The data to display with the chart. */\n  @Input(\"data\") data?: ChartData;\n\n  /** Options passed to the chart. */\n  @Input(\"options\") set options(o: ChartOptions) {\n    this.rawOptions = o;\n  };\n  get options(): ChartOptions {\n    if (!this.rawOptions) return {};\n    return translateObject(this.translate, this.rawOptions);\n  }\n  private rawOptions?: ChartOptions;\n\n  /** The chart generated by chart.js. */\n  chart?: Chart;\n\n  /** After the view is initialized this will create the chart and render it. */\n  ngAfterViewInit(): void {\n    const ctx = this.chartElement.nativeElement.getContext(\"2d\")!;\n    this.chart = new Chart(ctx, {\n      type: \"bar\",\n      data: this.data ?? {datasets: []},\n      options: this.options\n    });\n    this.translate.onLangChange.subscribe(() => {\n      if (!this.options) return;\n      this.chart!.options = this.options;\n      this.chart!.update();\n    });\n  }\n\n  /**\n   * When the data is changed on the chart, it will call an update.\n   * @param changes Changes made to the chart\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if (this.data && this.chart) {\n      this.chart.data = this.data;\n      setTimeout(() => this.chart!.update(), 0);\n    }\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BarChartComponent', 'selector': 'bar-chart'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'ExampleComponent', 'selector': ''},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IonIconComponent', 'selector': 'ion-icon'},{'name': 'LineChartComponent', 'selector': 'line-chart'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'map'},{'name': 'MapSelectViewComponent', 'selector': 'lib-map-select-view'},{'name': 'ResultDataViewComponent', 'selector': 'lib-result-data-view'},{'name': 'SideBarComponent', 'selector': 'app-side-bar'},{'name': 'WaterUsageForecastsComponent', 'selector': 'lib-water-usage-forecasts'}];\n    var DIRECTIVES = [{'name': 'BulmaIsToggleableDirective', 'selector': '.is-toggleable'},{'name': 'LangSelectorDirective', 'selector': '[selectLang]'}];\n    var ACTUAL_COMPONENT = {'name': 'BarChartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/BaseUrlInterceptor.html":{"url":"interceptors/BaseUrlInterceptor.html","title":"interceptor - BaseUrlInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  BaseUrlInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/core/src/app/base-url.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                Class used to prepend the base url to requests.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/base-url.interceptor.ts:23\n                \n            \n\n\n            \n                \n                    Prepends the base url from the environment to request url\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Request to prepend the url\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The next handler\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n  HttpContextToken\n} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\nimport {USE_BASE_URL, USE_API_URL} from \"common\";\nimport {Observable} from \"rxjs\";\n\nimport {environment} from \"../environments/environment\";\n\n/** Class used to prepend the base url to requests. */\n@Injectable()\nexport class BaseUrlInterceptor implements HttpInterceptor {\n\n  /**\n   * Prepends the base url from the environment to request url\n   * @param request Request to prepend the url\n   * @param next The next handler\n   */\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    let prependUrl = \"\";\n    if (request.context.get(USE_BASE_URL)) prependUrl = environment.baseUrl;\n    if (request.context.get(USE_API_URL)) prependUrl = environment.apiUrl;\n    return next.handle(\n      // prepend the api url with the base url from the environment\n      request.clone({url: prependUrl +  request.url})\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/BulmaIsToggleableDirective.html":{"url":"directives/BulmaIsToggleableDirective.html","title":"directive - BulmaIsToggleableDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  BulmaIsToggleableDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/common/src/lib/bulma/bulma-is-toggleable.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                Directive for making things toggleable with bulma.\nClicking on the node that has this directive will toggle the \"is-active\"\nclass.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        .is-toggleable\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                classes\n                            \n                            \n                                    Private\n                                isActive\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    elementClasses\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        class\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/bulma/bulma-is-toggleable.directive.ts:27\n                            \n                        \n                \n                    \n                        The classes of the host node.\n\n                    \n                \n            \n        \n\n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            click\n                        \n                        \n                    \n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/common/src/lib/bulma/bulma-is-toggleable.directive.ts:41\n                \n            \n\n\n            \n                \n                    Function to be executed when the host is clicked.\nWill toggle the \"is-active\" class on the host node.\n\n\n                \n            \n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toggle\n                        \n                    \n                \n            \n            \n                \ntoggle()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('click')\n                \n            \n\n            \n                \n                    Defined in wisdom_modules/common/src/lib/bulma/bulma-is-toggleable.directive.ts:41\n                \n            \n\n\n            \n                \n                    Function to be executed when the host is clicked.\nWill toggle the \"is-active\" class on the host node.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        classes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/bulma/bulma-is-toggleable.directive.ts:22\n                        \n                    \n\n            \n                \n                    The classes of the host node.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/bulma/bulma-is-toggleable.directive.ts:20\n                        \n                    \n\n            \n                \n                    Is the host currently active.\n\n                \n            \n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        elementClasses\n                    \n                \n\n                \n                    \n                        getelementClasses()\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/common/src/lib/bulma/bulma-is-toggleable.directive.ts:27\n                                \n                            \n                    \n                        \n                                The classes of the host node.\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        setelementClasses(classes: string)\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/common/src/lib/bulma/bulma-is-toggleable.directive.ts:31\n                                \n                            \n                    \n                        \n                                Set the classes of the host node.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            classes\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import {\n  HostBinding,\n  Directive,\n  Input,\n  HostListener\n} from \"@angular/core\";\n\n/**\n * Directive for making things toggleable with bulma.\n *\n * Clicking on the node that has this directive will toggle the \"is-active\"\n * class.\n */\n@Directive({\n  selector: \".is-toggleable\"\n})\nexport class BulmaIsToggleableDirective {\n\n  /** Is the host currently active. */\n  private isActive: boolean = false;\n  /** The classes of the host node. */\n  private classes: string[] = [];\n\n  /** The classes of the host node. */\n  @Input(\"class\")\n  @HostBinding(\"class\")\n  get elementClasses(): string {\n    return this.classes.join(\" \");\n  }\n  /** Set the classes of the host node. */\n  set elementClasses(classes: string) {\n    this.classes = classes.trim().split(/\\s+/);\n  }\n\n  /**\n   * Function to be executed when the host is clicked.\n   *\n   * Will toggle the \"is-active\" class on the host node.\n   */\n  @HostListener(\"click\")\n  toggle() {\n    this.isActive = !this.isActive;\n    if (this.isActive) this.classes.push(\"is-active\")\n    else {\n      this.elementClasses = this.elementClasses\n        .split(\"is-active\")\n        .join(\"\");\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/CacheInterceptor.html":{"url":"interceptors/CacheInterceptor.html","title":"interceptor - CacheInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  CacheInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/core/src/app/cache.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                eTagMap\n                            \n                            \n                                    Private\n                                lastModifiedMap\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/cache.interceptor.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        eTagMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/core/src/app/cache.interceptor.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        lastModifiedMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/core/src/app/cache.interceptor.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor, HttpHeaders, HttpResponse\n} from '@angular/common/http';\nimport {Observable, tap} from 'rxjs';\nimport {USE_CACHE} from \"common\";\n\n@Injectable()\nexport class CacheInterceptor implements HttpInterceptor {\n\n  private eTagMap: Map = new Map();\n  private lastModifiedMap: Map = new Map();\n\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n    if (!request.context.get(USE_CACHE)) return next.handle(request);\n    let key = request.urlWithParams;\n    let cacheHeaders = new HttpHeaders();\n    if (this.eTagMap.has(key)) {\n      request.headers.set(\"If-None-Match\", this.eTagMap.get(key)!);\n    }\n    if (this.lastModifiedMap.has(key)) {\n      request.headers.set(\"If-Modified_Since\", this.lastModifiedMap.get(key)!);\n    }\n    return next.handle(request.clone({\n      headers: request.headers\n    })).pipe(tap(event => {\n      if (!(event instanceof HttpResponse)) return;\n      let eTag = event.headers.get(\"ETag\");\n      if (eTag) this.eTagMap.set(key, eTag);\n      let lastModified = event.headers.get(\"Last-Modified\");\n      if (lastModified) this.lastModifiedMap.set(key, lastModified);\n    }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ChartModule.html":{"url":"modules/ChartModule.html","title":"module - ChartModule","body":"\n                   \n\n\n\n\n    Modules\n    ChartModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ChartModule\n\n\n\ncluster_ChartModule_declarations\n\n\n\ncluster_ChartModule_exports\n\n\n\n\nBarChartComponent\n\nBarChartComponent\n\n\n\nChartModule\n\nChartModule\n\nChartModule -->\n\nBarChartComponent->ChartModule\n\n\n\n\n\nLineChartComponent\n\nLineChartComponent\n\nChartModule -->\n\nLineChartComponent->ChartModule\n\n\n\n\n\nBarChartComponent \n\nBarChartComponent \n\nBarChartComponent  -->\n\nChartModule->BarChartComponent \n\n\n\n\n\nLineChartComponent \n\nLineChartComponent \n\nLineChartComponent  -->\n\nChartModule->LineChartComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            wisdom_modules/common/src/lib/chart/chart.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module containing the charts.\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BarChartComponent\n                        \n                        \n                            LineChartComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BarChartComponent\n                        \n                        \n                            LineChartComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {CommonModule} from \"@angular/common\";\nimport {NgModule} from \"@angular/core\";\n\nimport {BarChartComponent} from \"./bar-chart.component\";\nimport {LineChartComponent} from \"./line-chart.component\";\n\n/** Module containing the charts. */\n@NgModule({\n  declarations: [\n    BarChartComponent,\n    LineChartComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    BarChartComponent,\n    LineChartComponent\n  ]\n})\nexport class ChartModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorComponent.html":{"url":"components/ErrorComponent.html","title":"component - ErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    wisdom_modules/core/src/app/error/error.component.ts\n\n\n\n    \n        Description\n    \n    \n        Basic error component to display error codes on the full screen.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-error\n            \n\n\n\n\n            \n                templateUrl\n                ./error.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                            \n                                    Optional\n                                message\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/core/src/app/error/error.component.ts:14\n                            \n                        \n\n                \n                    \n                            Constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The current route\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/error/error.component.ts:26\n                \n            \n\n\n            \n                \n                    On init this subscribes to the params and the query params to display a\ncorrect message on the screen.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : NaN\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/core/src/app/error/error.component.ts:12\n                        \n                    \n\n            \n                \n                    The code to display.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/core/src/app/error/error.component.ts:14\n                        \n                    \n\n            \n                \n                    The message under the code.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit, Input} from \"@angular/core\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\n\n/** Basic error component to display error codes on the full screen. */\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html'\n})\nexport class ErrorComponent implements OnInit {\n\n  /** The code to display. */\n  code: number = NaN;\n  /** The message under the code. */\n  message?: string;\n\n  /**\n   * Constructor.\n   * @param route The current route\n   */\n  constructor(private route: ActivatedRoute) {}\n\n  /**\n   * On init this subscribes to the params and the query params to display a\n   * correct message on the screen.\n   */\n  ngOnInit(): void {\n    this.route.params.subscribe(params => {\n      this.code = params['code'];\n    });\n    this.route.queryParams.subscribe(({message}) => {\n      this.message = message;\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      {{code}}\n      {{message}}\n      \n        \n          \n            \n          \n          Back to the Start.\n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{code}}      {{message}}                                                        Back to the Start.                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BarChartComponent', 'selector': 'bar-chart'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'ExampleComponent', 'selector': ''},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IonIconComponent', 'selector': 'ion-icon'},{'name': 'LineChartComponent', 'selector': 'line-chart'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'map'},{'name': 'MapSelectViewComponent', 'selector': 'lib-map-select-view'},{'name': 'ResultDataViewComponent', 'selector': 'lib-result-data-view'},{'name': 'SideBarComponent', 'selector': 'app-side-bar'},{'name': 'WaterUsageForecastsComponent', 'selector': 'lib-water-usage-forecasts'}];\n    var DIRECTIVES = [{'name': 'BulmaIsToggleableDirective', 'selector': '.is-toggleable'},{'name': 'LangSelectorDirective', 'selector': '[selectLang]'}];\n    var ACTUAL_COMPONENT = {'name': 'ErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ExampleComponent.html":{"url":"components/ExampleComponent.html","title":"component - ExampleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ExampleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    wisdom_modules/example/src/lib/example.component.ts\n\n\n\n    \n        Description\n    \n    \n        Minimalistic example Component.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                templateUrl\n                example.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import {Component, OnInit} from \"@angular/core\";\n\n/** Minimalistic example Component. */\n@Component({\n  templateUrl: \"example.component.html\"\n})\nexport class ExampleComponent {\n\n}\n\n    \n\n    \n        \n\n  \n    Example here\n  \n  \n    \n      \n    \n  \n  \n    \n      {{\"example.example.key\" | translate}}\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Example here                                {{\"example.example.key\" | translate}}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BarChartComponent', 'selector': 'bar-chart'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'ExampleComponent', 'selector': ''},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IonIconComponent', 'selector': 'ion-icon'},{'name': 'LineChartComponent', 'selector': 'line-chart'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'map'},{'name': 'MapSelectViewComponent', 'selector': 'lib-map-select-view'},{'name': 'ResultDataViewComponent', 'selector': 'lib-result-data-view'},{'name': 'SideBarComponent', 'selector': 'app-side-bar'},{'name': 'WaterUsageForecastsComponent', 'selector': 'lib-water-usage-forecasts'}];\n    var DIRECTIVES = [{'name': 'BulmaIsToggleableDirective', 'selector': '.is-toggleable'},{'name': 'LangSelectorDirective', 'selector': '[selectLang]'}];\n    var ACTUAL_COMPONENT = {'name': 'ExampleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ExampleModule.html":{"url":"modules/ExampleModule.html","title":"module - ExampleModule","body":"\n                   \n\n\n\n\n    Modules\n    ExampleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ExampleModule\n\n\n\ncluster_ExampleModule_declarations\n\n\n\ncluster_ExampleModule_imports\n\n\n\ncluster_ExampleModule_exports\n\n\n\n\nExampleComponent\n\nExampleComponent\n\n\n\nExampleModule\n\nExampleModule\n\nExampleModule -->\n\nExampleComponent->ExampleModule\n\n\n\n\n\nExampleComponent \n\nExampleComponent \n\nExampleComponent  -->\n\nExampleModule->ExampleComponent \n\n\n\n\n\nWisdomModule\n\nWisdomModule\n\nExampleModule -->\n\nWisdomModule->ExampleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            wisdom_modules/example/src/lib/example.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Minimalistic example module.\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ExampleComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            WisdomModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ExampleComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from \"@angular/core\";\nimport {TranslateModule} from \"@ngx-translate/core\";\nimport {WisdomModule} from \"common\";\n\nimport {ExampleComponent} from \"./example.component\";\n\n/** Minimalistic example module. */\n@NgModule({\n  declarations: [\n    ExampleComponent\n  ],\n  imports: [\n    WisdomModule,\n    TranslateModule\n  ],\n  exports: [\n    ExampleComponent\n  ]\n})\nexport class ExampleModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExampleService.html":{"url":"injectables/ExampleService.html","title":"injectable - ExampleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ExampleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/example/src/lib/example.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Unused but exported service as example.\n\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\n\n/** Unused but exported service as example. */\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ExampleService {\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ForecastEntry.html":{"url":"interfaces/ForecastEntry.html","title":"interface - ForecastEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ForecastEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/water-usage-forecasts/src/lib/forecast-response.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            forecast\n                                        \n                                \n                                \n                                        \n                                            reference\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        forecast\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        forecast:         Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Record\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reference\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reference:         Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Record\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ForecastResponse {\n  accumulations: {\n    consumerGroup: ForecastEntry,\n    municipal: ForecastEntry\n  },\n  partials: {\n    consumerGroup: {\n      key: string,\n      name: string\n    },\n    municipal: ForecastResponse[\"partials\"][0][\"consumerGroup\"],\n    referenceUsages: {\n      equation: string,\n      float: number,\n      model: \"logarithmic\" | \"linear\" | \"polynomial\",\n      usages: {\n        amounts: number[],\n        end: number,\n        start: number\n      }\n    },\n    forecast: ForecastResponse[\"partials\"][0][\"referenceUsages\"]\n  }[]\n}\n\nexport interface ForecastEntry {\n  forecast: Record,\n  reference: Record\n}\n\nexport interface ForecastUsage {\n  displayName: string,\n  endYear: number,\n  startYear: number,\n  usages: number[]\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ForecastResponse.html":{"url":"interfaces/ForecastResponse.html","title":"interface - ForecastResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ForecastResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/water-usage-forecasts/src/lib/forecast-response.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accumulations\n                                        \n                                \n                                \n                                        \n                                            partials\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accumulations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accumulations:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        partials\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        partials:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ForecastResponse {\n  accumulations: {\n    consumerGroup: ForecastEntry,\n    municipal: ForecastEntry\n  },\n  partials: {\n    consumerGroup: {\n      key: string,\n      name: string\n    },\n    municipal: ForecastResponse[\"partials\"][0][\"consumerGroup\"],\n    referenceUsages: {\n      equation: string,\n      float: number,\n      model: \"logarithmic\" | \"linear\" | \"polynomial\",\n      usages: {\n        amounts: number[],\n        end: number,\n        start: number\n      }\n    },\n    forecast: ForecastResponse[\"partials\"][0][\"referenceUsages\"]\n  }[]\n}\n\nexport interface ForecastEntry {\n  forecast: Record,\n  reference: Record\n}\n\nexport interface ForecastUsage {\n  displayName: string,\n  endYear: number,\n  startYear: number,\n  usages: number[]\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ForecastUsage.html":{"url":"interfaces/ForecastUsage.html","title":"interface - ForecastUsage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ForecastUsage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/water-usage-forecasts/src/lib/forecast-response.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            displayName\n                                        \n                                \n                                \n                                        \n                                            endYear\n                                        \n                                \n                                \n                                        \n                                            startYear\n                                        \n                                \n                                \n                                        \n                                            usages\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endYear\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        endYear:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startYear\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startYear:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        usages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        usages:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ForecastResponse {\n  accumulations: {\n    consumerGroup: ForecastEntry,\n    municipal: ForecastEntry\n  },\n  partials: {\n    consumerGroup: {\n      key: string,\n      name: string\n    },\n    municipal: ForecastResponse[\"partials\"][0][\"consumerGroup\"],\n    referenceUsages: {\n      equation: string,\n      float: number,\n      model: \"logarithmic\" | \"linear\" | \"polynomial\",\n      usages: {\n        amounts: number[],\n        end: number,\n        start: number\n      }\n    },\n    forecast: ForecastResponse[\"partials\"][0][\"referenceUsages\"]\n  }[]\n}\n\nexport interface ForecastEntry {\n  forecast: Record,\n  reference: Record\n}\n\nexport interface ForecastUsage {\n  displayName: string,\n  endYear: number,\n  startYear: number,\n  usages: number[]\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FrameComponent.html":{"url":"components/FrameComponent.html","title":"component - FrameComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FrameComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    wisdom_modules/core/src/app/frame/frame.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component framing the application.\nEvery site except the login page will display this frame.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-frame\n            \n\n\n\n\n            \n                templateUrl\n                ./frame.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hideSidebar\n                                \n                                \n                                    hideUserBar\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, authStorage: AuthStorageService, router: Router, settingsStorage: SettingsStorageService)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/core/src/app/frame/frame.component.ts:19\n                            \n                        \n\n                \n                    \n                            Constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to interact with the auth server\n\n                                                        \n                                                \n                                                \n                                                        authStorage\n                                                  \n                                                        \n                                                                        AuthStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Storage of the keys for revoking\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router to route the user on logout\n\n                                                        \n                                                \n                                                \n                                                        settingsStorage\n                                                  \n                                                        \n                                                                        SettingsStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Storage of the settings\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/frame/frame.component.ts:54\n                \n            \n\n\n            \n                \n                    Log the user out and bring the user to the login page.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hideSidebar\n                    \n                \n\n                \n                    \n                        gethideSidebar()\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/frame/frame.component.ts:36\n                                \n                            \n                    \n                        \n                                Get hide sidebar setting.\n\n\n                        \n                    \n\n                \n                    \n                        sethideSidebar(setting: boolean)\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/frame/frame.component.ts:40\n                                \n                            \n                    \n                        \n                                Set hide sidebar setting.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            setting\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        hideUserBar\n                    \n                \n\n                \n                    \n                        gethideUserBar()\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/frame/frame.component.ts:45\n                                \n                            \n                    \n                        \n                                Get hide user bar setting.\n\n\n                        \n                    \n\n                \n                    \n                        sethideUserBar(setting: boolean)\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/frame/frame.component.ts:49\n                                \n                            \n                    \n                        \n                                Set hide user bar setting.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            setting\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {Component, OnInit} from \"@angular/core\";\nimport {Router} from \"@angular/router\";\n\nimport {AuthService} from \"../auth/auth.service\";\nimport {AuthStorageService} from \"../auth/auth-storage.service\";\nimport {SettingsStorageService} from \"../settings-storage.service\";\n\n// TODO: add further nesting - https://bulma.io/documentation/components/menu/\n\n/**\n * Component framing the application.\n *\n * Every site except the login page will display this frame.\n */\n@Component({\n  selector: \"app-frame\",\n  templateUrl: \"./frame.component.html\"\n})\nexport class FrameComponent {\n\n  /**\n   * Constructor.\n   * @param authService Service to interact with the auth server\n   * @param authStorage Storage of the keys for revoking\n   * @param router Router to route the user on logout\n   * @param settingsStorage Storage of the settings\n   */\n  constructor(\n    private authService: AuthService,\n    private authStorage: AuthStorageService,\n    private router: Router,\n    private settingsStorage: SettingsStorageService\n  ) {}\n\n  /** Get hide sidebar setting. */\n  get hideSidebar() {\n    return this.settingsStorage.hideSidebar || false;\n  }\n  /** Set hide sidebar setting. */\n  set hideSidebar(setting: boolean) {\n    this.settingsStorage.hideSidebar = setting;\n  }\n\n  /** Get hide user bar setting. */\n  get hideUserBar() {\n    return this.settingsStorage.hideUserBar || false;\n  }\n  /** Set hide user bar setting. */\n  set hideUserBar(setting: boolean) {\n    this.settingsStorage.hideUserBar = setting;\n  }\n\n  /** Log the user out and bring the user to the login page. */\n  logout() {\n    this.authService.logout(this.authStorage.accessToken!).subscribe(() => {\n      this.authStorage.clear();\n      this.router.navigate([\"login\"], {replaceUrl: true})\n        .catch(e => console.error(e));\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n  \n\n\n  \n    \n      \n        \n      \n        \n        \n          \n        \n        \n          WISdoM-OSS\n        \n      \n      \n        \n      \n      \n        \n          \n            \n              \n                \n              \n            \n          \n        \n        \n          \n            \n              \n                \n              \n              \n            {{\"lang\" | translate}}\n          \n            \n            \n              \n                \n              \n                \n                  \n                \n                \n                  Deutsch\n                \n              \n                \n              \n              \n                \n              \n                \n                  \n                \n                \n                  English\n                \n              \n                \n              \n            \n          \n          \n            \n              \n                \n                  \n                \n              \n            \n          \n        \n      \n    \n    \n      \n        \n      \n      \n        \n          \n            \n              \n            \n          \n        \n      \n      \n        \n          {{\"core.frame.account\" | translate}}\n          \n            \n              \n            \n              \n                \n              \n              \n                {{\"core.frame.logout\" | translate}}\n              \n            \n              \n            \n          \n          {{\"core.frame.administration\" | translate}}\n          \n            \n              \n            \n              \n                \n              \n              \n                {{\"core.frame.userManagement\" | translate}}\n              \n            \n              \n            \n            \n              \n            \n              \n                \n              \n              \n                {{\"core.frame.permissions\" | translate}}\n              \n            \n              \n            \n            \n              \n            \n              \n                \n              \n              \n                {{\"core.frame.roles\" | translate}}\n              \n            \n              \n            \n          \n          \n            \n              \n              \n            \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                WISdoM-OSS                                                                                                                                                                                                                                                    {{\"lang\" | translate}}                                                                                                                                                                  Deutsch                                                                                                                                                                                            English                                                                                                                                                                                                                                                                                                                                                                    {{\"core.frame.account\" | translate}}                                                                                                                          {{\"core.frame.logout\" | translate}}                                                                        {{\"core.frame.administration\" | translate}}                                                                                                                          {{\"core.frame.userManagement\" | translate}}                                                                                                                                                                    {{\"core.frame.permissions\" | translate}}                                                                                                                                                                    {{\"core.frame.roles\" | translate}}                                                                                                                                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BarChartComponent', 'selector': 'bar-chart'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'ExampleComponent', 'selector': ''},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IonIconComponent', 'selector': 'ion-icon'},{'name': 'LineChartComponent', 'selector': 'line-chart'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'map'},{'name': 'MapSelectViewComponent', 'selector': 'lib-map-select-view'},{'name': 'ResultDataViewComponent', 'selector': 'lib-result-data-view'},{'name': 'SideBarComponent', 'selector': 'app-side-bar'},{'name': 'WaterUsageForecastsComponent', 'selector': 'lib-water-usage-forecasts'}];\n    var DIRECTIVES = [{'name': 'BulmaIsToggleableDirective', 'selector': '.is-toggleable'},{'name': 'LangSelectorDirective', 'selector': '[selectLang]'}];\n    var ACTUAL_COMPONENT = {'name': 'FrameComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IonIconComponent.html":{"url":"components/IonIconComponent.html","title":"component - IonIconComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IonIconComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    wisdom_modules/common/src/lib/ion-icon/ion-icon.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component is used to inject the icons from IonIcons.\nIonIcons uses WebComponents to display the icons.\nTo allow to use them here, this component adds the icons via js.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ion-icon\n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/ion-icon/ion-icon.component.ts:22\n                            \n                        \n                \n                    \n                        The name of the icon.\nIs not used by angular but needed to render the correct icon and necessary\nso that angular stops complaining.\nYou can find the names at the official website\nhttps://ionic.io/ionicons.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import {Component, Input} from \"@angular/core\";\n\n/**\n * This component is used to inject the icons from IonIcons.\n * IonIcons uses WebComponents to display the icons.\n * To allow to use them here, this component adds the icons via js.\n */\n@Component({\n  selector: \"ion-icon\",\n  template: \"\"\n})\nexport class IonIconComponent {\n\n  /**\n   * The name of the icon.\n   * Is not used by angular but needed to render the correct icon and necessary\n   * so that angular stops complaining.\n   *\n   * You can find the names at the official website\n   * {@link https://ionic.io/ionicons}.\n   */\n  @Input() name: string | undefined;\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BarChartComponent', 'selector': 'bar-chart'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'ExampleComponent', 'selector': ''},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IonIconComponent', 'selector': 'ion-icon'},{'name': 'LineChartComponent', 'selector': 'line-chart'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'map'},{'name': 'MapSelectViewComponent', 'selector': 'lib-map-select-view'},{'name': 'ResultDataViewComponent', 'selector': 'lib-result-data-view'},{'name': 'SideBarComponent', 'selector': 'app-side-bar'},{'name': 'WaterUsageForecastsComponent', 'selector': 'lib-water-usage-forecasts'}];\n    var DIRECTIVES = [{'name': 'BulmaIsToggleableDirective', 'selector': '.is-toggleable'},{'name': 'LangSelectorDirective', 'selector': '[selectLang]'}];\n    var ACTUAL_COMPONENT = {'name': 'IonIconComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/LangSelectorDirective.html":{"url":"directives/LangSelectorDirective.html","title":"directive - LangSelectorDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  LangSelectorDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/core/src/app/i18n/lang-selector.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                Directive to set the currently displayed language.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selectLang]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clickLangSelect\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectLang\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/core/src/app/i18n/lang-selector.directive.ts:8\n                            \n                        \n\n                \n                    \n                            Constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to update the current language\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        selectLang\n                    \n                \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/core/src/app/i18n/lang-selector.directive.ts:17\n                            \n                        \n                \n                    \n                        The language key that the translation service should use.\n\n                    \n                \n            \n        \n\n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            click\n                        \n                        \n                    \n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/i18n/lang-selector.directive.ts:24\n                \n            \n\n\n            \n                \n                    Upon clicking on the element with this directive the lang of the\ntranslation service updates with the given language key.\n\n\n                \n            \n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clickLangSelect\n                        \n                    \n                \n            \n            \n                \nclickLangSelect()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('click')\n                \n            \n\n            \n                \n                    Defined in wisdom_modules/core/src/app/i18n/lang-selector.directive.ts:24\n                \n            \n\n\n            \n                \n                    Upon clicking on the element with this directive the lang of the\ntranslation service updates with the given language key.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import {Directive, Input, HostListener} from \"@angular/core\";\nimport {TranslateService} from \"@ngx-translate/core\";\n\n/** Directive to set the currently displayed language. */\n@Directive({\n  selector: \"[selectLang]\"\n})\nexport class LangSelectorDirective {\n\n  /**\n   * Constructor.\n   * @param translateService Service to update the current language\n   */\n  constructor(private translateService: TranslateService) {}\n\n  /** The language key that the translation service should use. */\n  @Input(\"selectLang\") lang: string | undefined;\n\n  /**\n   * Upon clicking on the element with this directive the lang of the\n   * translation service updates with the given language key.\n   */\n  @HostListener(\"click\")\n  clickLangSelect() {\n    if (!this.lang) return;\n    this.translateService.use(this.lang);\n    globalThis.localStorage.setItem(\"lang\", this.lang);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LineChartComponent.html":{"url":"components/LineChartComponent.html","title":"component - LineChartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LineChartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    wisdom_modules/common/src/lib/chart/line-chart.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for displaying bar line with chart.js\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                line-chart\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                chart\n                            \n                            \n                                    Private\n                                chartElement\n                            \n                            \n                                    Private\n                                    Optional\n                                rawOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    options\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/common/src/lib/chart/line-chart.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :     ChartData\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/chart/line-chart.component.ts:28\n                            \n                        \n                \n                    \n                        The data to display with the chart.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/chart/line-chart.component.ts:31\n                            \n                        \n                \n                    \n                        Options passed to the chart.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/common/src/lib/chart/line-chart.component.ts:44\n                \n            \n\n\n            \n                \n                    After the view is initialized this will create the chart and render it.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/common/src/lib/chart/line-chart.component.ts:62\n                \n            \n\n\n            \n                \n                    When the data is changed on the chart, it will call an update.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Changes made to the chart\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        chart\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Chart\n\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/chart/line-chart.component.ts:41\n                        \n                    \n\n            \n                \n                    The chart generated by chart.js.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        chartElement\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('chart')\n                        \n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/chart/line-chart.component.ts:25\n                        \n                    \n\n            \n                \n                    The host element of the chart.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        rawOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ChartOptions\n\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/chart/line-chart.component.ts:38\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n\n                \n                    \n                        getoptions()\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/common/src/lib/chart/line-chart.component.ts:34\n                                \n                            \n\n                \n                    \n                        setoptions(o: ChartOptions)\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/common/src/lib/chart/line-chart.component.ts:31\n                                \n                            \n                    \n                        \n                                Options passed to the chart.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            o\n                                                    \n                                                            \n                                                                        ChartOptions\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n  OnChanges,\n  SimpleChanges,\n  ViewChild,\n  Component,\n  AfterViewInit,\n  Input,\n  Output,\n  ElementRef\n} from \"@angular/core\";\nimport Chart, {ChartData, ChartOptions} from \"chart.js/auto\";\nimport {translateObject} from \"../util\";\nimport {TranslateService} from \"@ngx-translate/core\";\n\n/** Component for displaying bar line with chart.js */\n@Component({\n  selector: \"line-chart\",\n  template: \"\"\n})\nexport class LineChartComponent implements AfterViewInit, OnChanges {\n\n  constructor(private translate: TranslateService) {}\n\n  /** The host element of the chart. */\n  @ViewChild(\"chart\") private chartElement!: ElementRef;\n\n  /** The data to display with the chart. */\n  @Input(\"data\") data?: ChartData;\n\n  /** Options passed to the chart. */\n  @Input(\"options\") set options(o: ChartOptions) {\n    this.rawOptions = o;\n  };\n  get options(): ChartOptions {\n    if (!this.rawOptions) return {};\n    return translateObject(this.translate, this.rawOptions);\n  }\n  private rawOptions?: ChartOptions;\n\n  /** The chart generated by chart.js. */\n  chart?: Chart;\n\n  /** After the view is initialized this will create the chart and render it. */\n  ngAfterViewInit(): void {\n    const ctx = this.chartElement.nativeElement.getContext(\"2d\")!;\n    this.chart = new Chart(ctx, {\n      type: \"line\",\n      data: this.data ?? {datasets: []},\n      options: this.options\n    });\n    this.translate.onLangChange.subscribe(() => {\n      if (!this.options) return;\n      this.chart!.options = this.options;\n      this.chart!.update();\n    });\n  }\n\n  /**\n   * When the data is changed on the chart, it will call an update.\n   * @param changes Changes made to the chart\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if (this.data && this.chart) {\n      this.chart.data = this.data;\n      setTimeout(() => this.chart!.update(), 0);\n    }\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BarChartComponent', 'selector': 'bar-chart'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'ExampleComponent', 'selector': ''},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IonIconComponent', 'selector': 'ion-icon'},{'name': 'LineChartComponent', 'selector': 'line-chart'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'map'},{'name': 'MapSelectViewComponent', 'selector': 'lib-map-select-view'},{'name': 'ResultDataViewComponent', 'selector': 'lib-result-data-view'},{'name': 'SideBarComponent', 'selector': 'app-side-bar'},{'name': 'WaterUsageForecastsComponent', 'selector': 'lib-water-usage-forecasts'}];\n    var DIRECTIVES = [{'name': 'BulmaIsToggleableDirective', 'selector': '.is-toggleable'},{'name': 'LangSelectorDirective', 'selector': '[selectLang]'}];\n    var ACTUAL_COMPONENT = {'name': 'LineChartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoaderComponent.html":{"url":"components/LoaderComponent.html","title":"component - LoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    wisdom_modules/core/src/app/frame/loader/loader.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-loader\n            \n\n            \n                styleUrls\n                ./loader.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./loader.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                displayTexts\n                            \n                            \n                                isLoading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: LoaderService)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/core/src/app/frame/loader/loader.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        LoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/frame/loader/loader.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        displayTexts\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/core/src/app/frame/loader/loader.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/core/src/app/frame/loader/loader.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component, OnInit} from '@angular/core';\nimport {LoaderService} from \"./loader.service\";\n\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.scss']\n})\nexport class LoaderComponent implements OnInit {\n\n  constructor(private service: LoaderService) {}\n\n  isLoading = false;\n  displayTexts: string[] = [];\n\n  ngOnInit(): void {\n    this.service.loading.subscribe(value => this.isLoading = value);\n    this.service.displayTexts.subscribe(values => this.displayTexts = values);\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n      \n        \n          \n        \n              \n          \n        \n              \n          \n        \n      \n      \n      {{text | translate}}\n    \n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./loader.component.scss\n                \n                .item {\n  position: relative;\n  top: 0;\n  -webkit-animation: bounce 1s infinite ease-in-out;\n  animation: bounce 1s infinite ease-in-out;\n}\n\n.item:nth-child(1) {\n  -webkit-animation-delay: -1.4s;\n  animation-delay: 0s - 1s;\n}\n.item:nth-child(2) {\n  -webkit-animation-delay: -0.7s;\n  animation-delay: 0.3s - 1s;\n}\n.item:nth-child(3) {\n  -webkit-animation-delay: -0s;\n  animation-delay: 0.6s - 1;\n}\n\n\n@-webkit-keyframes bounce {\n  0%, 100% {\n    top: -15px;\n    opacity: 0.8;\n  }\n  50% {\n    top: 15px;\n    opacity: 1;\n  }\n}\n\n@keyframes bounce {\n  0%, 100% {\n    top: -10px;\n    opacity: 0.8;\n  }\n  50% {\n    top: 10px;\n    opacity: 1;\n  }\n}\n\n.loader-container {\n  transition: height 0.8s ease;\n  z-index: 2000;\n}\n\n.main-container {\n  height: calc(100vh - 56px);\n  display: grid;\n  overflow-y: scroll;\n}\n\n.main-container > div {\n  grid-column: 1;\n  grid-row: 1;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                            {{text | translate}}              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BarChartComponent', 'selector': 'bar-chart'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'ExampleComponent', 'selector': ''},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IonIconComponent', 'selector': 'ion-icon'},{'name': 'LineChartComponent', 'selector': 'line-chart'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'map'},{'name': 'MapSelectViewComponent', 'selector': 'lib-map-select-view'},{'name': 'ResultDataViewComponent', 'selector': 'lib-result-data-view'},{'name': 'SideBarComponent', 'selector': 'app-side-bar'},{'name': 'WaterUsageForecastsComponent', 'selector': 'lib-water-usage-forecasts'}];\n    var DIRECTIVES = [{'name': 'BulmaIsToggleableDirective', 'selector': '.is-toggleable'},{'name': 'LangSelectorDirective', 'selector': '[selectLang]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/LoaderGuard.html":{"url":"guards/LoaderGuard.html","title":"guard - LoaderGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    LoaderGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                wisdom_modules/core/src/app/frame/loader/loader.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(service: LoaderService)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/core/src/app/frame/loader/loader.guard.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        LoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/frame/loader/loader.guard.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport {LoaderService} from \"./loader.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderGuard implements CanActivate {\n\n  constructor(private service: LoaderService) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean | UrlTree {\n    this.service.clearLoading();\n    return true;\n  }\n\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/LoaderInterceptor.html":{"url":"interceptors/LoaderInterceptor.html","title":"interceptor - LoaderInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  LoaderInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/core/src/app/frame/loader/loader.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(service: LoaderService)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/core/src/app/frame/loader/loader.interceptor.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        LoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/frame/loader/loader.interceptor.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {\n  HttpErrorResponse,\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest, HttpResponse,\n  HttpResponseBase\n} from '@angular/common/http';\nimport {Observable, tap} from 'rxjs';\nimport {LoaderService} from \"./loader.service\";\nimport {USE_LOADER} from \"common\";\n\n@Injectable()\nexport class LoaderInterceptor implements HttpInterceptor {\n\n  constructor(private service: LoaderService) {}\n\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n    let context = request.context.get(USE_LOADER);\n    if (!context) return next.handle(request);\n    let observable = next.handle(request);\n    let promise = new Promise(resolve => {\n      observable = observable.pipe(tap({\n        next(value) {\n          if (value instanceof HttpResponse) {\n            return resolve(value);\n          }\n        },\n        error(err) {\n          if (err instanceof HttpErrorResponse) {\n            return resolve(err);\n          }\n        }\n      }))\n    });\n    if (typeof context == \"string\") this.service.addLoader(promise, context);\n    else this.service.addLoader(promise);\n    return observable;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoaderService.html":{"url":"injectables/LoaderService.html","title":"injectable - LoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/core/src/app/frame/loader/loader.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _displayTexts\n                            \n                            \n                                    Private\n                                _loading\n                            \n                            \n                                    Private\n                                displayTextSubject\n                            \n                            \n                                    Private\n                                promises\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addLoader\n                            \n                            \n                                clearLoading\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    displayTexts\n                                \n                                \n                                    loading\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addLoader\n                        \n                    \n                \n            \n            \n                \naddLoader(toResolve: Promise, displayText?: string)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/frame/loader/loader.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    toResolve\n                                    \n                                            Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    displayText\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearLoading\n                        \n                    \n                \n            \n            \n                \nclearLoading()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/frame/loader/loader.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _displayTexts\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map | string>\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/core/src/app/frame/loader/loader.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/core/src/app/frame/loader/loader.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        displayTextSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/core/src/app/frame/loader/loader.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        promises\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Promise[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/core/src/app/frame/loader/loader.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        displayTexts\n                    \n                \n\n                \n                    \n                        getdisplayTexts()\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/frame/loader/loader.service.ts:12\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        loading\n                    \n                \n\n                \n                    \n                        getloading()\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/frame/loader/loader.service.ts:17\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {Observable, Subject} from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderService {\n\n  private promises: Promise[] = [];\n  private _displayTexts: Map, string> = new Map();\n  private displayTextSubject = new Subject();\n  get displayTexts(): Observable {\n    return this.displayTextSubject.asObservable();\n  }\n\n  private _loading = new Subject();\n  get loading(): Observable {\n    return this._loading.asObservable();\n  }\n\n  addLoader(toResolve: Promise, displayText?: string) {\n    this.promises.push(toResolve);\n    if (displayText) {\n      this._displayTexts.set(toResolve, displayText);\n      this.displayTextSubject.next(Array.from(this._displayTexts.values()));\n    }\n    this._loading.next(true);\n    toResolve\n      .then(() => Promise.allSettled(this.promises))\n      .then(() => this._loading.next(false))\n      .then(() => {\n        this._displayTexts.delete(toResolve);\n        this.displayTextSubject.next(Array.from(this._displayTexts.values()));\n      })\n      .then(() => this.promises = []);\n  }\n\n  clearLoading() {\n    this.promises = [];\n    this._displayTexts.clear();\n    this.displayTextSubject.next([]);\n    this._loading.next(false);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    wisdom_modules/core/src/app/auth/login/login.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for the login page.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loginHasIssue\n                            \n                            \n                                passwordInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, authStorage: AuthStorageService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/core/src/app/auth/login/login.component.ts:21\n                            \n                        \n\n                \n                    \n                            Constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to interact with the auth server\n\n                                                        \n                                                \n                                                \n                                                        authStorage\n                                                  \n                                                        \n                                                                        AuthStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service containing the tokens\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router for routing the user after login\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit(f: NgForm)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/auth/login/login.component.ts:43\n                \n            \n\n\n            \n                \n                    Function to call when the user submits the login.\nUpon successful login the user will be routed to the main page.\nUpon error the error message will be shown.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    f\n                                    \n                                                NgForm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The values of the login form\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loginHasIssue\n                        \n                    \n                \n            \n                \n                    \n                        Type :      | string\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/core/src/app/auth/login/login.component.ts:21\n                        \n                    \n\n            \n                \n                    Has the login currently some issue.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('passwordInput')\n                        \n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/core/src/app/auth/login/login.component.ts:18\n                        \n                    \n\n            \n                \n                    The password input html element.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {ViewChild, Component, OnInit, ElementRef} from \"@angular/core\";\nimport {NgForm} from \"@angular/forms\";\nimport {Router} from \"@angular/router\";\n\nimport {AuthService} from \"../auth.service\";\nimport {AuthStorageService} from \"../auth-storage.service\";\nimport PostOAuthToken400 from \"../response_types/login/PostOAuthToken400\";\nimport PostOAuthToken401 from \"../response_types/login/PostOAuthToken401\";\n\n/** Component for the login page. */\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"./login.component.html\"\n})\nexport class LoginComponent {\n\n  /** The password input html element. */\n  @ViewChild(\"passwordInput\") passwordInput!: ElementRef;\n\n  /** Has the login currently some issue. */\n  loginHasIssue: false | string = false;\n\n  /**\n   * Constructor.\n   * @param authService Service to interact with the auth server\n   * @param authStorage Service containing the tokens\n   * @param router Router for routing the user after login\n   */\n  constructor(\n    private authService: AuthService,\n    private authStorage: AuthStorageService,\n    private router: Router\n  ) {}\n\n  /**\n   * Function to call when the user submits the login.\n   *\n   * Upon successful login the user will be routed to the main page.\n   *\n   * Upon error the error message will be shown.\n   * @param f The values of the login form\n   */\n  onSubmit(f: NgForm): void {\n    const valid = f.valid;\n    const {username, password} = f.value;\n    this.authService.login(username, password).subscribe({\n      next: response => {\n        this.authStorage.accessToken = response.access_token;\n        this.authStorage.refreshToken = response.refresh_token;\n        this.authStorage.scopes = response.scope;\n        this.authStorage.expiresIn = response.expires_in;\n        console.log(\"successfully logged in\");\n        this.router.navigate([\"\"], {replaceUrl: true}).catch(e => console.error(e));\n      },\n      error: errResponse => {\n        let error;\n        switch (errResponse.status) {\n          case 400:\n            error = errResponse.error as PostOAuthToken400;\n            console.error(error);\n            this.loginHasIssue = \"Kombination is nicht korrekt.\";\n            this.passwordInput?.nativeElement.select();\n            break;\n          case 401:\n            error = errResponse.error as PostOAuthToken401;\n            console.error(error);\n            throw errResponse;\n          default:\n            throw errResponse;\n        }\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n        \n          \n            WISdoM OSS\n            \n              \n                {{\"core.login.username\" | translate}}\n                \n                  \n                  \n                    \n                  \n                  \n                    \n                  \n                \n              \n              \n                {{\"core.login.password\" | translate}}\n                \n                  \n                  \n                    \n                  \n                  \n                    \n                  \n                \n              \n              \n                {{\"core.login.forgotPassword\" | translate}}\n              \n              \n                {{loginHasIssue}}\n              \n              \n                \n                  \n                    {{\"core.login.login\" | translate}}\n                  \n                \n              \n            \n          \n        \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                  WISdoM OSS                                          {{\"core.login.username\" | translate}}                                                                                                                                                                                                              {{\"core.login.password\" | translate}}                                                                                                                                                                                                              {{\"core.login.forgotPassword\" | translate}}                                            {{loginHasIssue}}                                                                                  {{\"core.login.login\" | translate}}                                                                                                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BarChartComponent', 'selector': 'bar-chart'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'ExampleComponent', 'selector': ''},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IonIconComponent', 'selector': 'ion-icon'},{'name': 'LineChartComponent', 'selector': 'line-chart'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'map'},{'name': 'MapSelectViewComponent', 'selector': 'lib-map-select-view'},{'name': 'ResultDataViewComponent', 'selector': 'lib-result-data-view'},{'name': 'SideBarComponent', 'selector': 'app-side-bar'},{'name': 'WaterUsageForecastsComponent', 'selector': 'lib-water-usage-forecasts'}];\n    var DIRECTIVES = [{'name': 'BulmaIsToggleableDirective', 'selector': '.is-toggleable'},{'name': 'LangSelectorDirective', 'selector': '[selectLang]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MapComponent.html":{"url":"components/MapComponent.html","title":"component - MapComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MapComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    wisdom_modules/common/src/lib/map/map.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for displaying maps.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                map\n            \n\n            \n                styleUrls\n                ./map.component.css\n            \n\n\n            \n                template\n                \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                center\n                            \n                            \n                                height\n                            \n                            \n                                    Private\n                                layerConfig\n                            \n                            \n                                    Private\n                                layerData\n                            \n                            \n                                    Private\n                                layerNames\n                            \n                            \n                                    Optional\n                                map\n                            \n                            \n                                    Private\n                                mapElement\n                            \n                            \n                                    Static\n                                Resolution\n                            \n                            \n                                    Private\n                                    Optional\n                                selectedLayer\n                            \n                            \n                                    Private\n                                selectedShapes\n                            \n                            \n                                tileUrl\n                            \n                            \n                                zoom\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                emitSelection\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                center\n                            \n                            \n                                height\n                            \n                            \n                                layers\n                            \n                            \n                                selectedColor\n                            \n                            \n                                tileUrl\n                            \n                            \n                                unselectedColor\n                            \n                            \n                                zoom\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    inputLayers\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: MapService)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/common/src/lib/map/map.component.ts:153\n                            \n                        \n\n                \n                    \n                            Constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        MapService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to interact with the server for geo data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        center\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/map/map.component.ts:66\n                            \n                        \n                \n                    \n                        Input for the center coordinates of the map.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/map/map.component.ts:56\n                            \n                        \n                \n                    \n                        Input for the height of the map.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        layers\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/map/map.component.ts:125\n                            \n                        \n                \n                    \n                        Input for the layers that should be displayed.\nThe key of the record is layer key and is also emitted on the selection.\nThe value of the record is an array and the values of that should be the\nfollowing:\n\n  \n    The name of the layer, this will be only used to display a name of\n    the layer (may also be a translation key).\n    // TODO: actually implement translation here\n  \n  \n    This should be the resolution to display the layer at, this may also\nbe\n    null to display the keys directly without any shape intersection\n    resolving.\n  \n  \n    These should be the keys used to display the shapes from.\n    If the given keys are empty or null, this will display everything from\n    the give resolution.\n  \n\n\nAttention: The service needs at least one of the resolution or the\nkeys\nto properly respond.\n// TODO: update link when geo data docs update\nSee https://wisdom04.vlba.uni-oldenburg.de/repos/service-geo-data-rest/main/api/get-layer\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedColor\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"#d35a0c\"\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/map/map.component.ts:78\n                            \n                        \n                \n                    \n                        Input for a hex code selected shapes.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        tileUrl\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/map/map.component.ts:61\n                            \n                        \n                \n                    \n                        Input for the tile url of the map.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        unselectedColor\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"#1f5aec\"\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/map/map.component.ts:76\n                            \n                        \n                \n                    \n                        Input for a hex code for unselected shapes.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        zoom\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/map/map.component.ts:71\n                            \n                        \n                \n                    \n                        Input for the map zoom level.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/map/map.component.ts:149\n                            \n                        \n                \n                    \n                        Outputs the currently selected shapes.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        emitSelection\n                        \n                    \n                \n            \n            \n                \n                    \n                    emitSelection()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/common/src/lib/map/map.component.ts:284\n                \n            \n\n\n            \n                \n                    Internally used function to emit the currently selected shapes via the\nselected output.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/common/src/lib/map/map.component.ts:194\n                \n            \n\n\n            \n                \n                    Renders the map with the given input values.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/common/src/lib/map/map.component.ts:164\n                \n            \n\n\n            \n                \n                    While init this sets the input values to the inner, private values.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        center\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"53.1434501, 8.2145521\"\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/map/map.component.ts:68\n                        \n                    \n\n            \n                \n                    Center of the map, defaults to longitude and latitude of Oldenburg.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"500px\"\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/map/map.component.ts:58\n                        \n                    \n\n            \n                \n                    Height of map, defaults to 500px.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        layerConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject({})\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/map/map.component.ts:128\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        layerData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject>\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject({})\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/map/map.component.ts:129\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        layerNames\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Record\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/map/map.component.ts:130\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        map\n                        \n                    \n                \n            \n                \n                    \n                        Type :     L.Map\n\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/map/map.component.ts:133\n                        \n                    \n\n            \n                \n                    The leaflet map that is displayed here.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        mapElement\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('map')\n                        \n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/map/map.component.ts:53\n                        \n                    \n\n            \n                \n                    The ref to the map html element.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        Resolution\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Resolution\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/map/map.component.ts:50\n                        \n                    \n\n            \n                \n                    Reexport of the Resolution enum.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        selectedLayer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LayerKey\n\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/map/map.component.ts:146\n                        \n                    \n\n            \n                \n                    The currently selected layer in the map control.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        selectedShapes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Record>\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/map/map.component.ts:140\n                        \n                    \n\n            \n                \n                    Internally holds all elements that are currently selected.\nThe set holds all keys of shapes currently selected.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tileUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"https://tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/map/map.component.ts:63\n                        \n                    \n\n            \n                \n                    Tile url of the map, defaults to the osm.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        zoom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 7\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/map/map.component.ts:73\n                        \n                    \n\n            \n                \n                    Zoom level of the map, defaults to 7.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        inputLayers\n                    \n                \n\n\n                \n                    \n                        setinputLayers(layerConfig: LayerConfig)\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/common/src/lib/map/map.component.ts:125\n                                \n                            \n                    \n                        \n                                Input for the layers that should be displayed.\nThe key of the record is layer key and is also emitted on the selection.\nThe value of the record is an array and the values of that should be the\nfollowing:\n\n  \n    The name of the layer, this will be only used to display a name of\n    the layer (may also be a translation key).\n    // TODO: actually implement translation here\n  \n  \n    This should be the resolution to display the layer at, this may also\nbe\n    null to display the keys directly without any shape intersection\n    resolving.\n  \n  \n    These should be the keys used to display the shapes from.\n    If the given keys are empty or null, this will display everything from\n    the give resolution.\n  \n\n\nAttention: The service needs at least one of the resolution or the\nkeys\nto properly respond.\n// TODO: update link when geo data docs update\nSee https://wisdom04.vlba.uni-oldenburg.de/repos/service-geo-data-rest/main/api/get-layer\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            layerConfig\n                                                    \n                                                            \n                                                                            LayerConfig\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                        Example :\n                                            \n                                                &lt;map\n  height=&quot;70vh&quot;\n  [layers]=&quot;{\n    full_res: [&#39;All of municipal resolution&#39;, Resolution.MUNICIPAL, null],\n    only_keys: [&#39;Only show exactly these&#39;, null, [&#39;01&#39;, &#39;034030000000&#39;]],\n    mixed: [&#39;Show district resolution&#39;, Resolution.DISTRICT, [&#39;01&#39;,\n  &#39;034030000000&#39;]]\n  }&quot;\n&gt;&lt;/map&gt;\n\n// TODO: update link when geo data docs update\n                                            \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n  ViewChild,\n  Component,\n  EventEmitter,\n  OnInit,\n  AfterViewInit,\n  Input,\n  Output,\n  ElementRef\n} from \"@angular/core\";\nimport {BehaviorSubject} from \"rxjs\";\n\nimport * as L from \"leaflet\";\n\nimport {MapService} from \"./map.service\";\nimport LayerData from \"./layer-data\";\nimport {Resolution} from \"./resolution\";\n\nimport * as LX from \"./invert-selection\";\n\n/**\n * GeoJSON data type used by Leaflet.\n * @private\n */\ntype GeoJsonObject = Parameters[0];\n\n/** Type alias to enforce the meaning of the layer keys. */\ntype LayerKey = string;\n\n/** A layer config for the input of {@link MapComponent.inputLayers}. */\ntype LayerConfig = Record;\n\n/**\n * Component for displaying maps.\n */\n@Component({\n  selector: \"map\",\n  template: `\n    \n      \n    \n  `,\n  styleUrls: [\n    \"./map.component.css\"\n  ]\n})\nexport class MapComponent implements OnInit, AfterViewInit {\n\n  /** Reexport of the {@link Resolution} enum. */\n  static Resolution = Resolution;\n\n  /** The ref to the map html element. */\n  @ViewChild(\"map\") private mapElement!: ElementRef;\n\n  /** Input for the height of the map. */\n  @Input(\"height\") inputHeight?: string;\n  /** Height of map, defaults to 500px. */\n  height = \"500px\";\n\n  /** Input for the tile url of the map. */\n  @Input(\"tileUrl\") inputTileUrl?: string;\n  /** Tile url of the map, defaults to the osm. */\n  tileUrl = \"https://tile.openstreetmap.org/{z}/{x}/{y}.png\";\n\n  /** Input for the center coordinates of the map. */\n  @Input(\"center\") inputCenter?: string;\n  /** Center of the map, defaults to longitude and latitude of Oldenburg. */\n  center = \"53.1434501, 8.2145521\";\n\n  /** Input for the map zoom level. */\n  @Input(\"zoom\") inputZoom?: string;\n  /** Zoom level of the map, defaults to 7. */\n  zoom = 7;\n\n  /** Input for a hex code for unselected shapes. */\n  @Input(\"unselectedColor\") unselectedColor = \"#1f5aec\";\n  /** Input for a hex code selected shapes. */\n  @Input(\"selectedColor\") selectedColor = \"#d35a0c\";\n\n  /**\n   * Input for the layers that should be displayed.\n   *\n   * The key of the record is layer key and is also emitted on the selection.\n   * The value of the record is an array and the values of that should be the\n   * following:\n   * \n   *   \n   *     The name of the layer, this will be only used to display a name of\n   *     the layer (may also be a translation key).\n   *     // TODO: actually implement translation here\n   *   \n   *   \n   *     This should be the resolution to display the layer at, this may also\n   * be\n   *     null to display the keys directly without any shape intersection\n   *     resolving.\n   *   \n   *   \n   *     These should be the keys used to display the shapes from.\n   *     If the given keys are empty or null, this will display everything from\n   *     the give resolution.\n   *   \n   * \n   *\n   * **Attention**: The service needs at least one of the resolution or the\n   * keys\n   * to properly respond.\n   *\n   * @example\n   * ```html\n   * \n   * ```\n   * // TODO: update link when geo data docs update\n   * @see https://wisdom04.vlba.uni-oldenburg.de/repos/service-geo-data-rest/main/api/get-layer\n   */\n  @Input(\"layers\")\n  set inputLayers(layerConfig: LayerConfig) {\n    this.layerConfig.next(layerConfig);\n  };\n  private layerConfig: BehaviorSubject = new BehaviorSubject({});\n  private layerData: BehaviorSubject> = new BehaviorSubject({});\n  private layerNames: Record = {};\n\n  /** The leaflet map that is displayed here. */\n  map?: L.Map;\n\n  /**\n   * Internally holds all elements that are currently selected.\n   *\n   * The set holds all keys of shapes currently selected.\n   */\n  private selectedShapes: Record> = {};\n\n  /**\n   * The currently selected layer in the map control.\n   * @private\n   */\n  private selectedLayer?: LayerKey;\n\n  /** Outputs the currently selected shapes. */\n  @Output() selected = new EventEmitter();\n\n  /**\n   * Constructor.\n   * @param service Service to interact with the server for geo data\n   */\n  constructor(private service: MapService) {}\n\n  /**\n   * While init this sets the input values to the inner, private values.\n   */\n  ngOnInit(): void {\n    if (this.inputHeight) this.height = this.inputHeight;\n    if (this.inputTileUrl) this.tileUrl = this.inputTileUrl;\n    if (this.inputCenter) this.center = this.inputCenter;\n    if (this.inputZoom) this.zoom = parseInt(this.inputZoom);\n\n    this.layerConfig.subscribe(async config => {\n      let layerData = {};\n      let requests: Record> = {};\n      for (\n        let [layerKey, [displayName, resolution, keys]]\n        of Object.entries(config)\n      ) {\n        this.layerNames[layerKey] = displayName;\n        requests[layerKey] = this.service.fetchLayerData(\n          resolution,\n          keys?.map(k => k.split(\" \").join(\"\"))\n        );\n      }\n      let fetched: Record = {};\n      for (let [layerKey, data] of Object.entries(requests)) {\n        fetched[layerKey] = await data;\n      }\n      this.layerData.next(fetched);\n    });\n  }\n\n  /**\n   * Renders the map with the given input values.\n   */\n  ngAfterViewInit(): void {\n    const nativeMapElement = this.mapElement.nativeElement;\n\n    const map = L.map(nativeMapElement, {\n      center: this.center\n        .split(\", \")\n        .map(str => parseFloat(str)) as [number, number],\n      zoom: this.zoom\n    });\n    map.getRenderer(map as any).options.padding = 100;\n\n    L.tileLayer(this.tileUrl).addTo(map);\n\n    this.map = map;\n    let layersControl: L.Control.Layers;\n    // TODO: make a clear type from this\n    let invertSelectionControl: any;\n\n    this.layerData.subscribe(layerData => {\n      let displayLayer = true;\n\n      // reset selected data\n      this.selectedShapes = {};\n\n      if (layersControl) map.removeControl(layersControl);\n      layersControl = L.control.layers();\n      let layers: L.Layer[] = [];\n\n      // update map with new layer data\n      for (let [key, data] of Object.entries(layerData)) {\n        let selectedShapes = this.selectedShapes[key] = new Set();\n        // use for every layer a new geoJSON layer\n        let geoJsonLayer = L.geoJSON(undefined, {\n          style: {color: this.unselectedColor},\n          onEachFeature: (feature, layer) => {\n            // used properties are injected later into the feature\n            layer.bindTooltip(feature.properties.name, {direction: \"center\"});\n            layer.on(\"click\", () => {\n              let [key, path] = [feature.properties.key, layer as L.Path];\n              if (selectedShapes.has(key)) {\n                path.setStyle({color: this.unselectedColor});\n                path.bringToBack();\n                selectedShapes.delete(key);\n              }\n              else {\n                path.setStyle({color: this.selectedColor});\n                path.bringToFront();\n                selectedShapes.add(key);\n              }\n              this.emitSelection();\n            });\n            layers.push(layer);\n          }\n        });\n        for (let shape of data) {\n          geoJsonLayer.addData(Object.assign(shape.geoJson, {properties: {\n            name: shape.name,\n            key: shape.key\n          }}));\n          if (displayLayer) {\n            geoJsonLayer.addTo(map);\n            displayLayer = false;\n            this.selectedLayer = key;\n          }\n        }\n        layersControl.addBaseLayer(geoJsonLayer, this.layerNames[key]);\n        map.on(\"baselayerchange\", ({layer}) => {\n          if (layer = geoJsonLayer) {\n            this.selectedLayer = key;\n            this.emitSelection();\n          }\n        })\n      }\n      if (Object.keys(layerData).length > 1) layersControl.addTo(map);\n\n      if (invertSelectionControl) map.removeControl(invertSelectionControl);\n      invertSelectionControl = LX.control.invertSelection(() => {\n        for (let layer of layers) {\n          layer.fire(\"click\");\n        }\n      });\n      invertSelectionControl.addTo(map);\n    });\n  }\n\n  /**\n   * Internally used function to emit the currently selected shapes via the\n   * {@link selected} output.\n   * @private\n   */\n  private emitSelection(): void {\n    let layerKey = this.selectedLayer!;\n    let layerName = this.layerNames[layerKey]!;\n    let keys = Array.from(this.selectedShapes[layerKey]);\n    this.selected.emit({\n      layer: layerKey,\n      name: layerName,\n      keys\n    });\n  }\n}\n\n    \n\n\n    \n                \n                    ./map.component.css\n                \n                .map-container {}\n\n.map {\n  height: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BarChartComponent', 'selector': 'bar-chart'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'ExampleComponent', 'selector': ''},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IonIconComponent', 'selector': 'ion-icon'},{'name': 'LineChartComponent', 'selector': 'line-chart'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'map'},{'name': 'MapSelectViewComponent', 'selector': 'lib-map-select-view'},{'name': 'ResultDataViewComponent', 'selector': 'lib-result-data-view'},{'name': 'SideBarComponent', 'selector': 'app-side-bar'},{'name': 'WaterUsageForecastsComponent', 'selector': 'lib-water-usage-forecasts'}];\n    var DIRECTIVES = [{'name': 'BulmaIsToggleableDirective', 'selector': '.is-toggleable'},{'name': 'LangSelectorDirective', 'selector': '[selectLang]'}];\n    var ACTUAL_COMPONENT = {'name': 'MapComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MapDB.html":{"url":"interfaces/MapDB.html","title":"interface - MapDB","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MapDB\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/common/src/lib/map/map.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The schema the map db uses.\n\n            \n\n            \n                Extends\n            \n            \n                    DBSchema\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            queries\n                                        \n                                \n                                \n                                        \n                                            shapes\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        queries\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        queries:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    All cached queries, used to identify if a query is already in the db.\nThe key[0] represents the resolution of the query, a -1 represents no\nresolution.\nThe rest are the given keys.\nThe value is an array of all the keys the query returned.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shapes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        shapes:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    All shapes in the indexed db.\nThe key is the key of the shape.\nThe value is some ShapeData.\nSince LayerData is simply an array of ShapeData, this may\nbe used to reconstruct some layer data.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  HttpClient,\n  HttpContext,\n  HttpHeaders,\n  HttpParams\n} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\nimport {openDB, DBSchema} from \"idb\";\nimport {firstValueFrom} from \"rxjs\";\n\nimport {Resolution} from \"./resolution\";\nimport {LayerData, ShapeData, GeoJsonObject} from \"./layer-data\";\nimport {USE_API_URL} from \"../http-context/use-api-url\";\nimport {USE_LOADER} from \"../http-context/use-loader\";\n\nconst API_URL = \"geodata\";\nconst DB_NAME = \"map-db\";\nconst SCHEMA_V = 1;\n\n/** The schema the map db uses. */\ninterface MapDB extends DBSchema {\n  /**\n   * All cached queries, used to identify if a query is already in the db.\n   *\n   * The key[0] represents the resolution of the query, a -1 represents no\n   * resolution.\n   * The rest are the given keys.\n   *\n   * The value is an array of all the keys the query returned.\n   */\n  queries: {\n    key: [number, ...string[]],\n    value: string[]\n  },\n\n  /**\n   * All shapes in the indexed db.\n   *\n   * The key is the key of the shape.\n   *\n   * The value is some {@link ShapeData}.\n   * Since {@link LayerData} is simply an array of {@link ShapeData}, this may\n   * be used to reconstruct some layer data.\n   */\n  shapes: {\n    key: string,\n    value: ShapeData\n  }\n}\n\n/**\n * Service to interact with the geo data api to fetch map data.\n *\n * Fetched map data is cached in the indexedDB and therefore only retrieved\n * lazily.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MapService {\n\n  private readonly idb;\n\n  /**\n   * Constructor.\n   * @param http Client to request geo data\n   */\n  constructor(private http: HttpClient) {\n    this.idb = openDB(DB_NAME, SCHEMA_V, {\n      upgrade(db) {\n        db.createObjectStore(\"queries\");\n        db.createObjectStore(\"shapes\");\n      }\n    });\n  }\n\n  /**\n   * Asynchronously fetch the map from the geo data rest api.\n   *\n   * Will only fetch data if not already stored in the indexedDB.\n   * @param resolution The resolution the of the shapes returned by the service\n   * @param keys The keys given to look for shapes\n   * @param force If true, this will ignore the cache and request everything\n   */\n  async fetchLayerData(\n    resolution: Resolution | null | undefined,\n    keys?: string[] | null,\n    force: boolean = false\n  ): Promise {\n    // prepare db and keys\n    let idb = await this.idb;\n    let trimmedKeys = keys ?? [];\n    let resolutionNum = resolution ? Resolution.toKeyLength(resolution) : -1;\n    let queryKey = [resolutionNum, ...trimmedKeys] as [number, ...string[]];\n\n    // check for cached keys or ignore if is force is true\n    let cachedKeys = force ? undefined : await idb.get(\"queries\", queryKey);\n    if (cachedKeys) {\n      let tx = idb.transaction(\"shapes\", \"readonly\");\n      let store = tx.objectStore(\"shapes\");\n      let shapes: ShapeData[] = [];\n      let operations = [];\n      for (let key of cachedKeys) {\n        operations.push(store.get(key).then(shape => {\n          if (shape) shapes.push(shape);\n        }));\n      }\n      operations.push(tx.done);\n      await Promise.all(operations);\n      return shapes;\n    }\n\n    // if cachedKeys was empty, request data from the server\n    let params = new HttpParams();\n    if (resolution) params = params.set(\"resolution\", resolution);\n    if (keys && keys.length) params = params.appendAll({key: keys.map(k => {\n      if (resolution) return k.substring(0, resolutionNum);\n      return k;\n    })});\n\n    let layerData: LayerData = (await firstValueFrom(this.http.get(`${API_URL}/`, {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\"\n      }),\n      params,\n      responseType: \"json\",\n      context: new HttpContext()\n        .set(USE_API_URL, true)\n        .set(USE_LOADER, \"fetching map data\")\n    })) ?? []).map(rawShape => ({\n      nutsKey: rawShape.nuts_key,\n      geoJson: rawShape.geojson,\n      ...rawShape\n    }));\n\n    // store the requested data back into the db\n    let tx = idb.transaction([\"queries\", \"shapes\"], \"readwrite\");\n    let operations = [];\n    let shapeStore = tx.objectStore(\"shapes\");\n    let shapeKeys = [];\n    for (let shape of layerData) {\n      operations.push(shapeStore.put(shape, shape.key));\n      shapeKeys.push(shape.key);\n    }\n    let queryStore = tx.objectStore(\"queries\");\n    operations.push(queryStore.put(shapeKeys, queryKey));\n    await Promise.all(operations);\n\n    return layerData;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MapSelectViewComponent.html":{"url":"components/MapSelectViewComponent.html","title":"component - MapSelectViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MapSelectViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    wisdom_modules/water-usage-forecasts/src/lib/views/map-select-view/map-select-view.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-map-select-view\n            \n\n\n\n\n            \n                templateUrl\n                ./map-select-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                keys\n                            \n                            \n                                Resolution\n                            \n                            \n                                selectionReady\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                mapSelection\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        mapSelection\n                        \n                    \n                \n            \n            \n                \nmapSelection(selection: literal type)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/water-usage-forecasts/src/lib/views/map-select-view/map-select-view.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    selection\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        keys\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/map-select-view/map-select-view.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Resolution\n                        \n                    \n                \n            \n                \n                    \n                        Default value : MapComponent.Resolution\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/map-select-view/map-select-view.component.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectionReady\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/map-select-view/map-select-view.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component} from \"@angular/core\";\nimport {MapComponent} from \"common\";\n\n@Component({\n  selector: 'lib-map-select-view',\n  templateUrl: './map-select-view.component.html'\n})\nexport class MapSelectViewComponent {\n\n  // imported resolution from the map component\n  Resolution = MapComponent.Resolution;\n\n  keys?: string[];\n\n  selectionReady = false;\n\n  mapSelection(\n    selection: {keys: string[]}\n  ) {\n    this.keys = selection.keys;\n    this.selectionReady = !!selection.keys.length;\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n  \n\n\n  \n    \n      \n        \n      \n      water-usage-forecasts.map-select.get-results\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        water-usage-forecasts.map-select.get-results      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BarChartComponent', 'selector': 'bar-chart'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'ExampleComponent', 'selector': ''},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IonIconComponent', 'selector': 'ion-icon'},{'name': 'LineChartComponent', 'selector': 'line-chart'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'map'},{'name': 'MapSelectViewComponent', 'selector': 'lib-map-select-view'},{'name': 'ResultDataViewComponent', 'selector': 'lib-result-data-view'},{'name': 'SideBarComponent', 'selector': 'app-side-bar'},{'name': 'WaterUsageForecastsComponent', 'selector': 'lib-water-usage-forecasts'}];\n    var DIRECTIVES = [{'name': 'BulmaIsToggleableDirective', 'selector': '.is-toggleable'},{'name': 'LangSelectorDirective', 'selector': '[selectLang]'}];\n    var ACTUAL_COMPONENT = {'name': 'MapSelectViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MapService.html":{"url":"injectables/MapService.html","title":"injectable - MapService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MapService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/common/src/lib/map/map.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service to interact with the geo data api to fetch map data.\nFetched map data is cached in the indexedDB and therefore only retrieved\nlazily.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                idb\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                fetchLayerData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/common/src/lib/map/map.service.ts:62\n                            \n                        \n\n                \n                    \n                            Constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Client to request geo data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        fetchLayerData\n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchLayerData(resolution: Resolution | null | undefined, keys?: string[] | null, force: boolean)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/common/src/lib/map/map.service.ts:85\n                \n            \n\n\n            \n                \n                    Asynchronously fetch the map from the geo data rest api.\nWill only fetch data if not already stored in the indexedDB.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    resolution\n                                    \n                                                Resolution | null | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The resolution the of the shapes returned by the service\n\n                                    \n                                \n                                \n                                    keys\n                                    \n                                            string[] | null\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The keys given to look for shapes\n\n                                    \n                                \n                                \n                                    force\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                    \n                                        If true, this will ignore the cache and request everything\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        idb\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/map/map.service.ts:62\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpClient,\n  HttpContext,\n  HttpHeaders,\n  HttpParams\n} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\nimport {openDB, DBSchema} from \"idb\";\nimport {firstValueFrom} from \"rxjs\";\n\nimport {Resolution} from \"./resolution\";\nimport {LayerData, ShapeData, GeoJsonObject} from \"./layer-data\";\nimport {USE_API_URL} from \"../http-context/use-api-url\";\nimport {USE_LOADER} from \"../http-context/use-loader\";\n\nconst API_URL = \"geodata\";\nconst DB_NAME = \"map-db\";\nconst SCHEMA_V = 1;\n\n/** The schema the map db uses. */\ninterface MapDB extends DBSchema {\n  /**\n   * All cached queries, used to identify if a query is already in the db.\n   *\n   * The key[0] represents the resolution of the query, a -1 represents no\n   * resolution.\n   * The rest are the given keys.\n   *\n   * The value is an array of all the keys the query returned.\n   */\n  queries: {\n    key: [number, ...string[]],\n    value: string[]\n  },\n\n  /**\n   * All shapes in the indexed db.\n   *\n   * The key is the key of the shape.\n   *\n   * The value is some {@link ShapeData}.\n   * Since {@link LayerData} is simply an array of {@link ShapeData}, this may\n   * be used to reconstruct some layer data.\n   */\n  shapes: {\n    key: string,\n    value: ShapeData\n  }\n}\n\n/**\n * Service to interact with the geo data api to fetch map data.\n *\n * Fetched map data is cached in the indexedDB and therefore only retrieved\n * lazily.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MapService {\n\n  private readonly idb;\n\n  /**\n   * Constructor.\n   * @param http Client to request geo data\n   */\n  constructor(private http: HttpClient) {\n    this.idb = openDB(DB_NAME, SCHEMA_V, {\n      upgrade(db) {\n        db.createObjectStore(\"queries\");\n        db.createObjectStore(\"shapes\");\n      }\n    });\n  }\n\n  /**\n   * Asynchronously fetch the map from the geo data rest api.\n   *\n   * Will only fetch data if not already stored in the indexedDB.\n   * @param resolution The resolution the of the shapes returned by the service\n   * @param keys The keys given to look for shapes\n   * @param force If true, this will ignore the cache and request everything\n   */\n  async fetchLayerData(\n    resolution: Resolution | null | undefined,\n    keys?: string[] | null,\n    force: boolean = false\n  ): Promise {\n    // prepare db and keys\n    let idb = await this.idb;\n    let trimmedKeys = keys ?? [];\n    let resolutionNum = resolution ? Resolution.toKeyLength(resolution) : -1;\n    let queryKey = [resolutionNum, ...trimmedKeys] as [number, ...string[]];\n\n    // check for cached keys or ignore if is force is true\n    let cachedKeys = force ? undefined : await idb.get(\"queries\", queryKey);\n    if (cachedKeys) {\n      let tx = idb.transaction(\"shapes\", \"readonly\");\n      let store = tx.objectStore(\"shapes\");\n      let shapes: ShapeData[] = [];\n      let operations = [];\n      for (let key of cachedKeys) {\n        operations.push(store.get(key).then(shape => {\n          if (shape) shapes.push(shape);\n        }));\n      }\n      operations.push(tx.done);\n      await Promise.all(operations);\n      return shapes;\n    }\n\n    // if cachedKeys was empty, request data from the server\n    let params = new HttpParams();\n    if (resolution) params = params.set(\"resolution\", resolution);\n    if (keys && keys.length) params = params.appendAll({key: keys.map(k => {\n      if (resolution) return k.substring(0, resolutionNum);\n      return k;\n    })});\n\n    let layerData: LayerData = (await firstValueFrom(this.http.get(`${API_URL}/`, {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\"\n      }),\n      params,\n      responseType: \"json\",\n      context: new HttpContext()\n        .set(USE_API_URL, true)\n        .set(USE_LOADER, \"fetching map data\")\n    })) ?? []).map(rawShape => ({\n      nutsKey: rawShape.nuts_key,\n      geoJson: rawShape.geojson,\n      ...rawShape\n    }));\n\n    // store the requested data back into the db\n    let tx = idb.transaction([\"queries\", \"shapes\"], \"readwrite\");\n    let operations = [];\n    let shapeStore = tx.objectStore(\"shapes\");\n    let shapeKeys = [];\n    for (let shape of layerData) {\n      operations.push(shapeStore.put(shape, shape.key));\n      shapeKeys.push(shape.key);\n    }\n    let queryStore = tx.objectStore(\"queries\");\n    operations.push(queryStore.put(shapeKeys, queryKey));\n    await Promise.all(operations);\n\n    return layerData;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ModuleProvider.html":{"url":"classes/ModuleProvider.html","title":"class - ModuleProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ModuleProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/core/src/app/module-provider.ts\n        \n\n\n            \n                Description\n            \n            \n                Class to provide data from the reexported wisdom modules.\nReads its data from the workspace's \"module.ts\".\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                langs\n                            \n                            \n                                    Static\n                                routes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Private\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/core/src/app/module-provider.ts:13\n                            \n                        \n\n                \n                    \n                            This class is a pure utility class and doesn't need constructing.\n\n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        langs\n                        \n                    \n                \n            \n            \n                \n                    \n                    langs(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/module-provider.ts:40\n                \n            \n\n\n            \n                \n                    Get the translations from the wisdom modules given a language key.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The language key for the translations\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        routes\n                        \n                    \n                \n            \n            \n                \n                    \n                    routes()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/module-provider.ts:24\n                \n            \n\n\n            \n                \n                    Get the routes the wisdom modules want to be available at.\n\n\n                    \n                        Returns :         Routes\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Routes} from \"@angular/router\";\n\nimport {AuthGuard} from \"./auth/auth.guard\";\n\nimport * as modules from \"../../../../modules\";\nimport {LoaderGuard} from \"./frame/loader/loader.guard\";\n\n/**\n * Class to provide data from the reexported wisdom modules.\n *\n * Reads its data from the workspace's \"module.ts\".\n */\nexport class ModuleProvider {\n\n  /**\n   * This class is a pure utility class and doesn't need constructing.\n   * @private\n   */\n  private constructor() {}\n\n  /**\n   * Get the routes the wisdom modules want to be available at.\n   */\n  static routes(): Routes {\n    let routes: Routes = [];\n    for (let module of Object.values(modules)) {\n      routes.push({\n        path: module.wisdomInterface.path,\n        component: module.wisdomInterface.entryComponent,\n        canActivate: [AuthGuard, LoaderGuard]\n      });\n    }\n    return routes;\n  }\n\n  /**\n   * Get the translations from the wisdom modules given a language key.\n   * @param lang The language key for the translations\n   */\n  static langs(lang: string) {\n    let collectedLang = {};\n    for (let module of Object.values(modules)) {\n      let moduleLang = module.wisdomInterface.translations[lang];\n      if (moduleLang) {\n        Object.assign(collectedLang, moduleLang);\n      }\n    }\n    return collectedLang;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResultDataViewComponent.html":{"url":"components/ResultDataViewComponent.html","title":"component - ResultDataViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ResultDataViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    wisdom_modules/water-usage-forecasts/src/lib/views/result-data-view/result-data-view.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-result-data-view\n            \n\n\n\n\n            \n                templateUrl\n                ./result-data-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                areaComponents\n                            \n                            \n                                consumerAreaData\n                            \n                            \n                                consumerGroupData\n                            \n                            \n                                didFinish\n                            \n                            \n                                    Private\n                                key\n                            \n                            \n                                regressionMethod\n                            \n                            \n                                    Optional\n                                response\n                            \n                            \n                                    Private\n                                subscribeQuery\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                chartLegendFilter\n                            \n                            \n                                chartLegendOnClick\n                            \n                            \n                                    Private\n                                fetchData\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                updateAreaComponents\n                            \n                            \n                                    Private\n                                updateGraphs\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    method\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: WaterUsageForecastsService, route: ActivatedRoute, router: Router)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/result-data-view/result-data-view.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        WaterUsageForecastsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        chartLegendFilter\n                        \n                    \n                \n            \n            \n                \nchartLegendFilter(item: LegendItem, data: ChartData)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/water-usage-forecasts/src/lib/views/result-data-view/result-data-view.component.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                            LegendItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                            ChartData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartLegendOnClick\n                        \n                    \n                \n            \n            \n                \nchartLegendOnClick(event: ChartEvent, item: LegendItem, legend: any)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/water-usage-forecasts/src/lib/views/result-data-view/result-data-view.component.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            ChartEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    item\n                                    \n                                            LegendItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    legend\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        fetchData\n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchData(key: string | string[], method: ForecastType)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/water-usage-forecasts/src/lib/views/result-data-view/result-data-view.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                            string | string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    method\n                                    \n                                                ForecastType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/water-usage-forecasts/src/lib/views/result-data-view/result-data-view.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/water-usage-forecasts/src/lib/views/result-data-view/result-data-view.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateAreaComponents\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAreaComponents(forecast)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/water-usage-forecasts/src/lib/views/result-data-view/result-data-view.component.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    forecast\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateGraphs\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateGraphs(forecast)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/water-usage-forecasts/src/lib/views/result-data-view/result-data-view.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    forecast\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        areaComponents\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/result-data-view/result-data-view.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        consumerAreaData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/result-data-view/result-data-view.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        consumerGroupData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/result-data-view/result-data-view.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        didFinish\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/result-data-view/result-data-view.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | string[]\n\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/result-data-view/result-data-view.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        regressionMethod\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ForecastType\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/result-data-view/result-data-view.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        response\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Promise\n\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/result-data-view/result-data-view.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscribeQuery\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/result-data-view/result-data-view.component.ts:31\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        method\n                    \n                \n\n                \n                    \n                        getmethod()\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/water-usage-forecasts/src/lib/views/result-data-view/result-data-view.component.ts:59\n                                \n                            \n\n                \n                    \n                        setmethod(m: ForecastType)\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/water-usage-forecasts/src/lib/views/result-data-view/result-data-view.component.ts:49\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            m\n                                                    \n                                                            \n                                                                            ForecastType\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from \"@angular/core\";\n\nimport {ForecastType} from \"../../forecast-type\";\nimport {WaterUsageForecastsService} from \"../../water-usage-forecasts.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {ForecastResponse, ForecastUsage} from \"../../forecast-response\";\nimport {takeWhile} from \"rxjs\";\nimport {prettyPrintNum, stringToColor} from \"common\";\nimport {ChartData, ChartEvent, LegendItem, Tick} from \"chart.js/auto\";\n\n@Component({\n  selector: 'lib-result-data-view',\n  templateUrl: './result-data-view.component.html'\n})\nexport class ResultDataViewComponent implements OnInit, OnDestroy {\n\n  constructor(\n    private service: WaterUsageForecastsService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {}\n\n  response?: Promise;\n  didFinish = false;\n\n  consumerGroupData: any = null;\n  consumerAreaData: any = null;\n  areaComponents?: [string, string][];\n\n  private key!: string | string[];\n  private subscribeQuery = true;\n\n  ngOnInit(): void {\n    this.route.queryParams\n      .pipe(takeWhile(() => this.subscribeQuery))\n      .subscribe(({key, method}) => {\n        if (!key) return;\n        this.key = key;\n        this.fetchData(key, method ?? ForecastType.LINEAR);\n      })\n  }\n\n  ngOnDestroy(): void {\n    this.subscribeQuery = false;\n  }\n\n  /** @internal just a re-export of the type */\n  regressionMethod = ForecastType;\n  set method(m: ForecastType) {\n     this.router.navigate([], {\n       relativeTo: this.route,\n       queryParams: Object.assign(\n         {},\n         this.route.snapshot.queryParams,\n         {method: m}\n       )\n     }).catch(console.error);\n  }\n  get method() {\n    return this.route.snapshot.queryParams[\"method\"] ?? ForecastType.LINEAR;\n  }\n\n  private fetchData(key: string | string[], method: ForecastType): void {\n    this.service.fetchForecastData(key, method)\n      .subscribe(data => {\n        this.updateGraphs(data.accumulations);\n        this.updateAreaComponents(data.partials);\n      });\n  }\n\n  private updateGraphs(forecast: ForecastResponse[\"accumulations\"]): void {\n    const colorMap = {\n      \"Agriculture, Forestry, Fisheries\": \"green\",\n      \"Businesses\": \"#bcd9e0\",\n      \"Household\": \"#ba4c43\",\n      \"Public Institution\": \"#5443ba\",\n      \"Small Businesses\": \"#a9c940\",\n      \"Tourism\": \"#e02abf\"\n    }\n    let [minYear, maxYear] = [Infinity, -Infinity];\n    function mapUsage(usage: ForecastUsage, type: \"forecast\" | \"reference\") {\n      minYear = Math.min(usage.startYear, minYear);\n      maxYear = Math.max(usage.endYear, maxYear);\n      let borderColor = \"\";\n      switch (type) {\n        case \"forecast\":\n          borderColor = \"red\";\n          break;\n        case \"reference\":\n          borderColor = \"blue\";\n          break;\n      }\n      return {\n        label: usage.displayName,\n        data: usage.usages.map((val, i) => ({x: i + usage.startYear, y: val})),\n        borderWidth: 1.5,\n        borderSkipped: \"middle\",\n        borderColor,\n        backgroundColor: stringToColor(usage.displayName, colorMap)\n      }\n    }\n    this.consumerGroupData = {\n      datasets: [\n        Object\n          .values(forecast.consumerGroup.reference)\n          .map(el => mapUsage(el, \"reference\")),\n        Object\n          .values(forecast.consumerGroup.forecast)\n          .map(el => mapUsage(el, \"forecast\"))\n      ].flat()\n    }\n    this.consumerAreaData = {\n      datasets: [\n        Object\n          .values(forecast.municipal.reference)\n          .map(el => mapUsage(el, \"reference\")),\n        Object\n          .values(forecast.municipal.forecast)\n          .map(el => mapUsage(el, \"forecast\"))\n      ].flat()\n    }\n    let labels: number[] = [];\n    for (let y = minYear; y = data.datasets.length / 2) return false;\n    item.lineWidth = 0;\n    return true;\n  }\n  chartLegendOnClick(event: ChartEvent, item: LegendItem, legend: any) {\n    console.log([event, item, legend]);\n    let chart = legend.chart;\n    chart.getDatasetMeta(item.datasetIndex).hidden =\n      !chart.getDatasetMeta(item.datasetIndex).hidden;\n    chart.getDatasetMeta(item.datasetIndex + legend.legendItems.length).hidden =\n      !chart.getDatasetMeta(item.datasetIndex + legend.legendItems.length).hidden;\n    chart.update();\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        Informationen\n      \n      \n        \n          \n            Name:\n            Eine Stadt\n          \n          \n            Postleitzahl:\n            12345\n          \n          \n            Regionalschlüssel:\n            12345\n          \n          \n            OOWV Teilgebiet:\n            Ein Teilgebeit\n          \n          \n            OOWV Region:\n            Eine Region\n          \n          \n            Landkreis:\n            Ein Landkreis\n          \n          \n            Gemeinde:\n            Eine Gemeinde\n          \n        \n      \n    \n  \n  \n    \n      \n        Parameter\n      \n      \n        \n          Prognosemodell\n          \n            \n              \n                Regression\n                \n              \n            \n              \n            \n            \n              \n                Regression\n              \n            \n          \n        \n        \n          Methode\n          \n            \n              \n                \n                  {{\"water-usage-forecasts.parameter.\" + method | translate}}\n                \n                \n              \n            \n              \n            \n            \n              \n                \n                  {{\"water-usage-forecasts.parameter.linear\" | translate}}\n                \n                \n                  {{\"water-usage-forecasts.parameter.logarithmic\" | translate}}\n                \n                \n                  {{\"water-usage-forecasts.parameter.polynomial\" | translate}}\n                \n              \n            \n          \n        \n        \n          Zeitraum\n\n        \n        -->\n      \n    \n  \n\n\n\n  \n    \n  \n\n\n\n  \n    \n      water-usage-forecasts.result-data.consumer-groups\n    \n  \n  \n    \n  \n\n\n\n  \n    \n      water-usage-forecasts.result-data.areas\n    \n  \n  \n    \n  \n\n\n 1\">\n  \n    \n      water-usage-forecasts.result-data.branches\n    \n  \n  \n    \n      \n        {{component[1]}}\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Informationen                                          Name:            Eine Stadt                                Postleitzahl:            12345                                Regionalschlüssel:            12345                                OOWV Teilgebiet:            Ein Teilgebeit                                OOWV Region:            Eine Region                                Landkreis:            Ein Landkreis                                Gemeinde:            Eine Gemeinde                                                  Parameter                              Prognosemodell                                                    Regression                                                                                                              Regression                                                              Methode                                                                      {{\"water-usage-forecasts.parameter.\" + method | translate}}                                                                                                                                                {{\"water-usage-forecasts.parameter.linear\" | translate}}                                                  {{\"water-usage-forecasts.parameter.logarithmic\" | translate}}                                                  {{\"water-usage-forecasts.parameter.polynomial\" | translate}}                                                                              Zeitraum                -->                                water-usage-forecasts.result-data.consumer-groups                          water-usage-forecasts.result-data.areas               1\">            water-usage-forecasts.result-data.branches                          {{component[1]}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BarChartComponent', 'selector': 'bar-chart'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'ExampleComponent', 'selector': ''},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IonIconComponent', 'selector': 'ion-icon'},{'name': 'LineChartComponent', 'selector': 'line-chart'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'map'},{'name': 'MapSelectViewComponent', 'selector': 'lib-map-select-view'},{'name': 'ResultDataViewComponent', 'selector': 'lib-result-data-view'},{'name': 'SideBarComponent', 'selector': 'app-side-bar'},{'name': 'WaterUsageForecastsComponent', 'selector': 'lib-water-usage-forecasts'}];\n    var DIRECTIVES = [{'name': 'BulmaIsToggleableDirective', 'selector': '.is-toggleable'},{'name': 'LangSelectorDirective', 'selector': '[selectLang]'}];\n    var ACTUAL_COMPONENT = {'name': 'ResultDataViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/SanitizeUrlInterceptor.html":{"url":"interceptors/SanitizeUrlInterceptor.html","title":"interceptor - SanitizeUrlInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  SanitizeUrlInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/core/src/app/sanitize-url.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/sanitize-url.interceptor.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class SanitizeUrlInterceptor implements HttpInterceptor {\n\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n    let {url} = request;\n    let [protocol, pathWithParams] = url.split(\"://\");\n    let [path, ...query] = pathWithParams.split(\"?\");\n    path = path.replace(/\\/+/g, \"/\");\n    let newUrl = `${protocol}://${path}`;\n    if (query.length) {\n      newUrl += `?${query.join(\"?\")}`;\n    }\n    return next.handle(request.clone({\n      url: newUrl\n    }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SettingsStorageService.html":{"url":"injectables/SettingsStorageService.html","title":"injectable - SettingsStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SettingsStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/core/src/app/settings-storage.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Storage service for storing settings in the session storage.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                getBoolStorage\n                            \n                            \n                                    Private\n                                    Static\n                                getStorage\n                            \n                            \n                                    Private\n                                    Static\n                                setBoolStorage\n                            \n                            \n                                    Private\n                                    Static\n                                setStorage\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hideSidebar\n                                \n                                \n                                    hideUserBar\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        getBoolStorage\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBoolStorage(key: string)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/settings-storage.service.ts:54\n                \n            \n\n\n            \n                \n                    Internal function to get boolean session storage values.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Key of the storage item\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | null\n\n                    \n                    \n                        The stored value or null if missing\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        getStorage\n                        \n                    \n                \n            \n            \n                \n                    \n                    getStorage(key: string)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/settings-storage.service.ts:31\n                \n            \n\n\n            \n                \n                    Internal function to get session storage values.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Key of the storage item\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | null\n\n                    \n                    \n                        The stored value or null if missing\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        setBoolStorage\n                        \n                    \n                \n            \n            \n                \n                    \n                    setBoolStorage(key: string, data: boolean | null)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/settings-storage.service.ts:42\n                \n            \n\n\n            \n                \n                    Internal function to set boolean session storage values.\nStore undefined or null to clear the storage.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Key of the storage item\n\n                                    \n                                \n                                \n                                    data\n                                    \n                                            boolean | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Data to store\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        setStorage\n                        \n                    \n                \n            \n            \n                \n                    \n                    setStorage(key: string, data: string | null | undefined)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/settings-storage.service.ts:21\n                \n            \n\n\n            \n                \n                    Internal function to set session storage values.\nStore undefined or null to clear the storage.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Key of the storage item\n\n                                    \n                                \n                                \n                                    data\n                                    \n                                            string | null | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Data to store\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hideSidebar\n                    \n                \n\n                \n                    \n                        gethideSidebar()\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/settings-storage.service.ts:68\n                                \n                            \n                    \n                        \n                                Get hide sidebar setting.\n\n\n                                \n                                    Returns :     boolean | null\n\n                                \n                        \n                    \n\n                \n                    \n                        sethideSidebar(setting: boolean | null)\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/settings-storage.service.ts:64\n                                \n                            \n                    \n                        \n                                Set hide sidebar setting.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            setting\n                                                    \n                                                            \n                                                                        boolean | null\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        hideUserBar\n                    \n                \n\n                \n                    \n                        gethideUserBar()\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/settings-storage.service.ts:80\n                                \n                            \n                    \n                        \n                                Get hide user bar setting.\n\n\n                                \n                                    Returns :     boolean | null\n\n                                \n                        \n                    \n\n                \n                    \n                        sethideUserBar(setting: boolean | null)\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/settings-storage.service.ts:76\n                                \n                            \n                    \n                        \n                                Set hide user bar setting.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            setting\n                                                    \n                                                            \n                                                                        boolean | null\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\n\n/** Key for the sidebar hide setting. */\nconst HIDE_SIDEBAR_KEY = \"hide-sidebar\";\n/** key for the user bar hide setting. */\nconst HIDE_USER_BAR_KEY = \"hide-user-bar\";\n\n/** Storage service for storing settings in the session storage. */\n@Injectable({\n  providedIn: 'root'\n})\nexport class SettingsStorageService {\n\n  /**\n   * Internal function to set session storage values.\n   *\n   * Store undefined or null to clear the storage.\n   * @param key Key of the storage item\n   * @param data Data to store\n   */\n  private static setStorage(key: string, data: string | null | undefined): void {\n    if (data) globalThis.sessionStorage.setItem(key, data);\n    else globalThis.sessionStorage.removeItem(key);\n  }\n  /**\n   * Internal function to get session storage values.\n   *\n   * @param key Key of the storage item\n   * @returns The stored value or null if missing\n   */\n  private static getStorage(key: string): string | null {\n    return globalThis.sessionStorage.getItem(key);\n  }\n\n  /**\n   * Internal function to set boolean session storage values.\n   *\n   * Store undefined or null to clear the storage.\n   * @param key Key of the storage item\n   * @param data Data to store\n   */\n  private static setBoolStorage(key: string, data: boolean | null): void {\n    if (typeof data === \"boolean\") {\n      SettingsStorageService.setStorage(key, `${data}`);\n    }\n    else SettingsStorageService.setStorage(key, data);\n  }\n  /**\n   * Internal function to get boolean session storage values.\n   *\n   * @param key Key of the storage item\n   * @returns The stored value or null if missing\n   */\n  private static getBoolStorage(key: string): boolean | null {\n    let data = SettingsStorageService.getStorage(key);\n    if (!data) return null;\n    return data === \"true\";\n  }\n\n  /**\n   * Set hide sidebar setting.\n   * @param setting\n   */\n  set hideSidebar(setting: boolean | null) {\n    SettingsStorageService.setBoolStorage(HIDE_SIDEBAR_KEY, setting);\n  }\n  /** Get hide sidebar setting. */\n  get hideSidebar(): boolean | null {\n    return SettingsStorageService.getBoolStorage(HIDE_SIDEBAR_KEY);\n  }\n\n  /**\n   * Set hide user bar setting.\n   * @param setting\n   */\n  set hideUserBar(setting: boolean | null) {\n    SettingsStorageService.setBoolStorage(HIDE_USER_BAR_KEY, setting);\n  }\n  /** Get hide user bar setting. */\n  get hideUserBar(): boolean | null {\n    return SettingsStorageService.getBoolStorage(HIDE_USER_BAR_KEY);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ShapeData.html":{"url":"interfaces/ShapeData.html","title":"interface - ShapeData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ShapeData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/common/src/lib/map/layer-data.ts\n        \n\n\n            \n                Description\n            \n            \n                Type to represent layer data received from the geo data server.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            geoJson\n                                        \n                                \n                                \n                                        \n                                            key\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            nutsKey\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        geoJson\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        geoJson:         GeoJsonObject\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GeoJsonObject\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nutsKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nutsKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as L from \"leaflet\";\n\n/**\n * GeoJSON data type used by Leaflet.\n * @private\n */\nexport type GeoJsonObject = Parameters[0];\n/** Type to represent layer data received from the geo data server. */\nexport interface ShapeData {\n  name: string,\n  key: string,\n  nutsKey: string,\n  geoJson: GeoJsonObject\n};\n\nexport type LayerData = ShapeData[];\n\nexport default LayerData;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SideBarComponent.html":{"url":"components/SideBarComponent.html","title":"component - SideBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SideBarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    wisdom_modules/core/src/app/frame/side-bar/side-bar.component.ts\n\n\n\n    \n        Description\n    \n    \n        The component displaying the sidebar.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-side-bar\n            \n\n\n\n\n            \n                templateUrl\n                ./side-bar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                sideBar\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        sideBar\n                        \n                    \n                \n            \n                \n                    \n                        Default value : sidebar\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/core/src/app/frame/side-bar/side-bar.component.ts:13\n                        \n                    \n\n            \n                \n                    Load the sidebar from the workspace.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component} from \"@angular/core\";\n\nimport {sidebar} from \"../../../../../../sidebar\";\n\n/** The component displaying the sidebar. */\n@Component({\n  selector: \"app-side-bar\",\n  templateUrl: \"./side-bar.component.html\"\n})\nexport class SideBarComponent {\n\n  /** Load the sidebar from the workspace. */\n  sideBar = sidebar;\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n      {{label[0] | translate}}\n    \n  \n\n  \n    \n      \n        \n          \n            \n          \n          {{entry[0] | translate}}\n        \n      \n      \n        \n          \n            \n          \n          {{entry[0] | translate}}\n        \n      \n      \n\n      \n    \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                {{label[0] | translate}}                                                                    {{entry[0] | translate}}                                                                      {{entry[0] | translate}}                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BarChartComponent', 'selector': 'bar-chart'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'ExampleComponent', 'selector': ''},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IonIconComponent', 'selector': 'ion-icon'},{'name': 'LineChartComponent', 'selector': 'line-chart'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'map'},{'name': 'MapSelectViewComponent', 'selector': 'lib-map-select-view'},{'name': 'ResultDataViewComponent', 'selector': 'lib-result-data-view'},{'name': 'SideBarComponent', 'selector': 'app-side-bar'},{'name': 'WaterUsageForecastsComponent', 'selector': 'lib-water-usage-forecasts'}];\n    var DIRECTIVES = [{'name': 'BulmaIsToggleableDirective', 'selector': '.is-toggleable'},{'name': 'LangSelectorDirective', 'selector': '[selectLang]'}];\n    var ACTUAL_COMPONENT = {'name': 'SideBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StaticLoader.html":{"url":"classes/StaticLoader.html","title":"class - StaticLoader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StaticLoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/core/src/app/i18n/static-loader.ts\n        \n\n\n            \n                Description\n            \n            \n                The loader for the translations.\nSince all translations are available from the start this one is rather simple.\n\n            \n\n\n            \n                Implements\n            \n            \n                        TranslateLoader\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTranslation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getTranslation\n                        \n                    \n                \n            \n            \n                \ngetTranslation(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/i18n/static-loader.ts:32\n                \n            \n\n\n            \n                \n                    Get the translations for a specific language key.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The language key\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {TranslateLoader} from \"@ngx-translate/core\";\nimport {of, Observable} from \"rxjs\";\n\nimport de_DELang from \"./langs/de_DE\";\nimport en_USLang from \"./langs/en_US\";\nimport {ModuleProvider} from \"../module-provider\";\nimport {langs as sideBarLangs} from \"../../../../../sidebar\";\n\n/** The languages the loader provides. */\nlet langs: any = {\n  de_DE: Object.assign({}, de_DELang, ModuleProvider.langs(\"de_DE\")),\n  en_US: Object.assign({}, en_USLang, ModuleProvider.langs(\"en_US\"))\n}\n\nfor (let [lang, values] of Object.entries(sideBarLangs)) {\n  langs[lang as \"de_DE\" | \"en_US\"].sidebar = {};\n  for (let [key, value] of Object.entries(values)) {\n    langs[lang as \"de_DE\" | \"en_US\"].sidebar[key] = value;\n  }\n}\n\n/**\n * The loader for the translations.\n * Since all translations are available from the start this one is rather simple.\n */\nexport class StaticLoader implements TranslateLoader {\n\n  /**\n   * Get the translations for a specific language key.\n   * @param lang The language key\n   */\n  getTranslation(lang: string): Observable {\n    // @ts-ignore\n    return of(langs[lang]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/core/src/app/auth/user.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service to interact with the user management of the auth server.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createUser\n                            \n                            \n                                getUsers\n                            \n                            \n                                    Private\n                                    Static\n                                httpOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/core/src/app/auth/user.service.ts:25\n                            \n                        \n\n                \n                    \n                            Constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to interact with the server via http\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createUser\n                        \n                    \n                \n            \n            \n                \ncreateUser(firstName: string, lastName: string, username: string, password: string, scopes?: string, roles?: number[])\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/auth/user.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    firstName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lastName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scopes\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    roles\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsers\n                        \n                    \n                \n            \n            \n                \ngetUsers()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/auth/user.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        httpOptions\n                        \n                    \n                \n            \n            \n                \n                    \n                    httpOptions()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/auth/user.service.ts:33\n                \n            \n\n\n        \n    \n\n\n    \n\n\n    \n        import {HttpClient, HttpHeaders, HttpResponse} from \"@angular/common/http\";\nimport {join} from \"@angular/compiler-cli\";\nimport {Injectable} from \"@angular/core\";\nimport {Observable} from \"rxjs\";\n\nimport GetUsers200 from \"./response_types/users/GetUsers200\";\nimport PutUsers201 from \"./response_types/users/PutUsers201\";\nimport PutUsers409 from \"./response_types/users/PutUsers409\";\n\n// FIXME: this url is incorrect and the base needs to be moved\n/** Url for the interaction. */\nconst AUTH_API = \"localhost:8090/auth/\";\n\n/** Options passed into the get requests. */\nconst getOptions: Parameters[1] = {\n  responseType: \"json\"\n}\n\n// FIXME: this is currently pretty wrong in the implementation\n\n/** Service to interact with the user management of the auth server. */\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserService {\n\n  /**\n   * Constructor.\n   * @param http Service to interact with the server via http\n   */\n  constructor(private http: HttpClient) {}\n\n  private static httpOptions(): Parameters[1] {\n    return {\n      responseType: \"json\",\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\"\n      }),\n    }\n  }\n\n  getUsers() {\n    return this.http.get(join(AUTH_API, \"users\"), UserService.httpOptions()) as\n      Observable>;\n  }\n\n  createUser(\n    firstName: string,\n    lastName: string,\n    username: string,\n    password: string,\n    scopes?: string,\n    roles?: number[]\n  ) {\n    const body: any = {\n      firstName, lastName, username, password\n    };\n    if (scopes) body.scopes = scopes;\n    if (roles) body.roles = roles;\n\n    return this.http.put(\n      join(AUTH_API, \"users\"),\n      body,\n      UserService.httpOptions()\n    ) as Observable |\n      {status: 409} & HttpResponse\n    >;\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WaterUsageForecastsComponent.html":{"url":"components/WaterUsageForecastsComponent.html","title":"component - WaterUsageForecastsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  WaterUsageForecastsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    wisdom_modules/water-usage-forecasts/src/lib/water-usage-forecasts.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component displaying the request interface as well as the data provided by\nthe server for the water usage forecasts.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-water-usage-forecasts\n            \n\n\n\n\n            \n                templateUrl\n                ./water-usage-forecasts.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                keys\n                            \n                            \n                                selectedView\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/water-usage-forecasts.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/water-usage-forecasts/src/lib/water-usage-forecasts.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        keys\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/water-usage-forecasts.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedView\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"map-select\" | \"result-data\"\n\n                    \n                \n                \n                    \n                        Default value : \"map-select\"\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/water-usage-forecasts.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from \"@angular/core\";\nimport {ActivatedRoute} from \"@angular/router\";\n\n// TODO: doc this\n\n/**\n * Component displaying the request interface as well as the data provided by\n * the server for the water usage forecasts.\n */\n@Component({\n  selector: \"lib-water-usage-forecasts\",\n  templateUrl: \"./water-usage-forecasts.component.html\"\n})\nexport class WaterUsageForecastsComponent implements OnInit {\n\n  selectedView: \"map-select\" | \"result-data\" = \"map-select\";\n\n  private keys?: string[];\n\n  constructor(private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    // check for query parameters, upon change extract them and display correct\n    // view\n    this.route.queryParams.subscribe(({key}) => {\n      if (!key || !key.length) {\n        // missing or invalid parameters, display the map selection\n        this.selectedView = \"map-select\";\n        this.keys = undefined;\n        return;\n      }\n\n      this.keys = [key].flat();\n      this.selectedView = \"result-data\";\n    });\n  }\n\n}\n\n    \n\n    \n        \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BarChartComponent', 'selector': 'bar-chart'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'ExampleComponent', 'selector': ''},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IonIconComponent', 'selector': 'ion-icon'},{'name': 'LineChartComponent', 'selector': 'line-chart'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'map'},{'name': 'MapSelectViewComponent', 'selector': 'lib-map-select-view'},{'name': 'ResultDataViewComponent', 'selector': 'lib-result-data-view'},{'name': 'SideBarComponent', 'selector': 'app-side-bar'},{'name': 'WaterUsageForecastsComponent', 'selector': 'lib-water-usage-forecasts'}];\n    var DIRECTIVES = [{'name': 'BulmaIsToggleableDirective', 'selector': '.is-toggleable'},{'name': 'LangSelectorDirective', 'selector': '[selectLang]'}];\n    var ACTUAL_COMPONENT = {'name': 'WaterUsageForecastsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WaterUsageForecastsModule.html":{"url":"modules/WaterUsageForecastsModule.html","title":"module - WaterUsageForecastsModule","body":"\n                   \n\n\n\n\n    Modules\n    WaterUsageForecastsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_WaterUsageForecastsModule\n\n\n\ncluster_WaterUsageForecastsModule_declarations\n\n\n\ncluster_WaterUsageForecastsModule_imports\n\n\n\ncluster_WaterUsageForecastsModule_exports\n\n\n\n\nMapSelectViewComponent\n\nMapSelectViewComponent\n\n\n\nWaterUsageForecastsModule\n\nWaterUsageForecastsModule\n\nWaterUsageForecastsModule -->\n\nMapSelectViewComponent->WaterUsageForecastsModule\n\n\n\n\n\nResultDataViewComponent\n\nResultDataViewComponent\n\nWaterUsageForecastsModule -->\n\nResultDataViewComponent->WaterUsageForecastsModule\n\n\n\n\n\nWaterUsageForecastsComponent\n\nWaterUsageForecastsComponent\n\nWaterUsageForecastsModule -->\n\nWaterUsageForecastsComponent->WaterUsageForecastsModule\n\n\n\n\n\nWaterUsageForecastsComponent \n\nWaterUsageForecastsComponent \n\nWaterUsageForecastsComponent  -->\n\nWaterUsageForecastsModule->WaterUsageForecastsComponent \n\n\n\n\n\nChartModule\n\nChartModule\n\nWaterUsageForecastsModule -->\n\nChartModule->WaterUsageForecastsModule\n\n\n\n\n\nWisdomModule\n\nWisdomModule\n\nWaterUsageForecastsModule -->\n\nWisdomModule->WaterUsageForecastsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            wisdom_modules/water-usage-forecasts/src/lib/water-usage-forecasts.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MapSelectViewComponent\n                        \n                        \n                            ResultDataViewComponent\n                        \n                        \n                            WaterUsageForecastsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ChartModule\n                        \n                        \n                            WisdomModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            WaterUsageForecastsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {CommonModule} from \"@angular/common\";\nimport {NgModule} from \"@angular/core\";\nimport {RouterModule} from \"@angular/router\";\nimport {TranslateModule} from \"@ngx-translate/core\";\nimport {ChartModule, WisdomModule} from \"common\";\n\nimport {WaterUsageForecastsComponent} from \"./water-usage-forecasts.component\";\nimport {\n  MapSelectViewComponent\n} from \"./views/map-select-view/map-select-view.component\";\nimport {\n  ResultDataViewComponent\n} from \"./views/result-data-view/result-data-view.component\";\n\n@NgModule({\n  declarations: [\n    WaterUsageForecastsComponent,\n    MapSelectViewComponent,\n    ResultDataViewComponent\n  ],\n  imports: [\n    WisdomModule,\n    ChartModule,\n    CommonModule,\n    RouterModule,\n    TranslateModule\n  ],\n  exports: [\n    WaterUsageForecastsComponent\n  ]\n})\nexport class WaterUsageForecastsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WaterUsageForecastsService.html":{"url":"injectables/WaterUsageForecastsService.html","title":"injectable - WaterUsageForecastsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WaterUsageForecastsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/water-usage-forecasts/src/lib/water-usage-forecasts.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service to interact with server providing the data to display.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchForecastData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, router: Router)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/water-usage-forecasts.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        fetchForecastData\n                        \n                    \n                \n            \n            \n                \nfetchForecastData(key: string | string[], forecastModel: ForecastType, consumerGroup?: \"businesses\" | \"households_and_small_businesses\" | \"farming_forestry_fishing_industry\" | \"public_institutions\" | \"all\")\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/water-usage-forecasts/src/lib/water-usage-forecasts.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                            string | string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    forecastModel\n                                    \n                                                ForecastType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    consumerGroup\n                                    \n                                            \"businesses\" | \"households_and_small_businesses\" | \"farming_forestry_fishing_industry\" | \"public_institutions\" | \"all\"\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {HttpClient, HttpContext, HttpHeaders} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\nimport {USE_API_URL, USE_LOADER} from \"common\";\nimport {Observable} from \"rxjs\";\n\nimport {ForecastType} from \"./forecast-type\";\nimport {Router} from \"@angular/router\";\nimport {ForecastResponse} from \"./forecast-response\";\n\nconst API_URL = \"water-usage-forecasts\";\n\n/**\n * Service to interact with server providing the data to display.\n */\n@Injectable({\n  providedIn: \"root\"\n})\nexport class WaterUsageForecastsService {\n\n  constructor(\n    private http: HttpClient,\n    private router: Router\n  ) {}\n\n  fetchForecastData(\n    key: string | string[],\n    forecastModel: ForecastType,\n    consumerGroup?:\n      \"businesses\" |\n      \"households_and_small_businesses\" |\n      \"farming_forestry_fishing_industry\" |\n      \"public_institutions\" |\n      \"all\"\n  ): Observable {\n    let url = this.router.parseUrl(`${API_URL}/${forecastModel}`);\n    if (consumerGroup) url.queryParams[\"consumerGroup\"] = consumerGroup;\n    url.queryParams[\"key\"] = key;\n    return this.http.get(url.toString(), {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\"\n      }),\n      responseType: \"json\",\n      context: new HttpContext()\n        .set(USE_API_URL, true)\n        .set(USE_LOADER, \"water-usage-forecasts.display.loading\")\n    }) as Observable;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WisdomInterface.html":{"url":"interfaces/WisdomInterface.html","title":"interface - WisdomInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  WisdomInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/common/src/WisdomInterface.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the wisdom modules.\nEvery wisdom module must provide such an object implementing this interface.\nThe object must be exported under the name \"wisdomInterface\".\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            entryComponent\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                                \n                                        \n                                            scopes\n                                        \n                                \n                                \n                                        \n                                            translations\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        entryComponent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        entryComponent:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The entry component that should be displayed.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The path to the component displaying the module.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scopes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scopes:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The scopes required to see the component.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        translations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        translations:     Record>>>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record>>>\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The translations the modules provides and uses.\nThe top most entry should be the namespace, the following the component and\nin the component there should be keys for the translation keys.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface WisdomInterface {\n  /** The path to the component displaying the module. */\n  path: string;\n  /** The scopes required to see the component. */\n  scopes: string[];\n  /** The entry component that should be displayed. */\n  entryComponent: any;\n  /**\n   * The translations the modules provides and uses.\n   *\n   * The top most entry should be the namespace, the following the component and\n   * in the component there should be keys for the translation keys.\n   */\n  translations: Record>>>\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WisdomModule.html":{"url":"modules/WisdomModule.html","title":"module - WisdomModule","body":"\n                   \n\n\n\n\n    Modules\n    WisdomModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_WisdomModule\n\n\n\ncluster_WisdomModule_declarations\n\n\n\ncluster_WisdomModule_exports\n\n\n\n\nBulmaIsToggleableDirective\n\nBulmaIsToggleableDirective\n\n\n\nWisdomModule\n\nWisdomModule\n\nWisdomModule -->\n\nBulmaIsToggleableDirective->WisdomModule\n\n\n\n\n\nIonIconComponent\n\nIonIconComponent\n\nWisdomModule -->\n\nIonIconComponent->WisdomModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nWisdomModule -->\n\nMapComponent->WisdomModule\n\n\n\n\n\nBulmaIsToggleableDirective \n\nBulmaIsToggleableDirective \n\nBulmaIsToggleableDirective  -->\n\nWisdomModule->BulmaIsToggleableDirective \n\n\n\n\n\nChartModule \n\nChartModule \n\nChartModule  -->\n\nWisdomModule->ChartModule \n\n\n\n\n\nIonIconComponent \n\nIonIconComponent \n\nIonIconComponent  -->\n\nWisdomModule->IonIconComponent \n\n\n\n\n\nMapComponent \n\nMapComponent \n\nMapComponent  -->\n\nWisdomModule->MapComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            wisdom_modules/common/src/lib/wisdom.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BulmaIsToggleableDirective\n                        \n                        \n                            IonIconComponent\n                        \n                        \n                            MapComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BulmaIsToggleableDirective\n                        \n                        \n                            ChartModule\n                        \n                        \n                            IonIconComponent\n                        \n                        \n                            MapComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from \"@angular/core\";\n\nimport {\n  BulmaIsToggleableDirective\n} from \"./bulma/bulma-is-toggleable.directive\";\nimport {ChartModule} from \"./chart/chart.module\";\nimport {IonIconComponent} from \"./ion-icon/ion-icon.component\";\nimport {MapComponent} from \"./map/map.component\";\nimport {TranslateModule} from \"@ngx-translate/core\";\n\n@NgModule({\n  declarations: [\n    IonIconComponent,\n    BulmaIsToggleableDirective,\n    MapComponent\n  ],\n  imports: [\n    TranslateModule\n  ],\n  exports: [\n    IonIconComponent,\n    BulmaIsToggleableDirective,\n    MapComponent,\n    ChartModule\n  ]\n})\nexport class WisdomModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                sidebar.ts\n            \n            variable\n            langs\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                sidebar.ts\n            \n            variable\n            sidebar\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/WisdomInterface.ts\n            \n            interface\n            WisdomInterface\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/bulma/bulma-is-toggleable.directive.ts\n            \n            directive\n            BulmaIsToggleableDirective\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/chart/bar-chart.component.ts\n            \n            component\n            BarChartComponent\n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/chart/line-chart.component.ts\n            \n            component\n            LineChartComponent\n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/http-context/use-api-url.ts\n            \n            variable\n            USE_API_URL\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/http-context/use-base-url.ts\n            \n            variable\n            USE_BASE_URL\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/http-context/use-cache.ts\n            \n            variable\n            USE_CACHE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/http-context/use-loader.ts\n            \n            variable\n            USE_LOADER\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/ion-icon/ion-icon.component.ts\n            \n            component\n            IonIconComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/map/invert-selection.ts\n            \n            variable\n            control\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/map/layer-data.ts\n            \n            interface\n            ShapeData\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/map/map.component.ts\n            \n            component\n            MapComponent\n            \n                88 %\n                (22/25)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/map/map.service.ts\n            \n            injectable\n            MapService\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/map/map.service.ts\n            \n            interface\n            MapDB\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/map/map.service.ts\n            \n            variable\n            API_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/map/map.service.ts\n            \n            variable\n            DB_NAME\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/map/map.service.ts\n            \n            variable\n            SCHEMA_V\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/map/resolution.ts\n            \n            function\n            toEnum\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/map/resolution.ts\n            \n            function\n            toKeyLength\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/util.ts\n            \n            function\n            prettyPrintNum\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/util.ts\n            \n            function\n            stringToColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/util.ts\n            \n            function\n            translateObject\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/auth/auth-storage.service.ts\n            \n            injectable\n            AuthStorageService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/auth/auth-storage.service.ts\n            \n            variable\n            ACCESS_TOKEN_KEY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/auth/auth-storage.service.ts\n            \n            variable\n            EXPIRES_IN_KEY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/auth/auth-storage.service.ts\n            \n            variable\n            REFRESH_TOKEN_KEY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/auth/auth-storage.service.ts\n            \n            variable\n            SCOPES_KEY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/auth/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/auth/auth.interceptor.ts\n            \n            interceptor\n            AuthInterceptor\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/auth/auth.interceptor.ts\n            \n            variable\n            TOKEN_HEADER_KEY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/auth/auth.service.ts\n            \n            variable\n            AUTH_URL\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/auth/auth.service.ts\n            \n            variable\n            httpOptions\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/auth/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/auth/user.service.ts\n            \n            injectable\n            UserService\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/auth/user.service.ts\n            \n            variable\n            AUTH_API\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/auth/user.service.ts\n            \n            variable\n            getOptions\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/base-url.interceptor.ts\n            \n            interceptor\n            BaseUrlInterceptor\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/cache.interceptor.ts\n            \n            interceptor\n            CacheInterceptor\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/error/error.component.ts\n            \n            component\n            ErrorComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/frame/frame.component.ts\n            \n            component\n            FrameComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/frame/loader/loader.component.ts\n            \n            component\n            LoaderComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/frame/loader/loader.guard.ts\n            \n            guard\n            LoaderGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/frame/loader/loader.interceptor.ts\n            \n            interceptor\n            LoaderInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/frame/loader/loader.service.ts\n            \n            injectable\n            LoaderService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/frame/side-bar/side-bar.component.ts\n            \n            component\n            SideBarComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/i18n/lang-selector.directive.ts\n            \n            directive\n            LangSelectorDirective\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/i18n/static-loader.ts\n            \n            class\n            StaticLoader\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/i18n/static-loader.ts\n            \n            variable\n            langs\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/module-provider.ts\n            \n            class\n            ModuleProvider\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/sanitize-url.interceptor.ts\n            \n            interceptor\n            SanitizeUrlInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/settings-storage.service.ts\n            \n            injectable\n            SettingsStorageService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/settings-storage.service.ts\n            \n            variable\n            HIDE_SIDEBAR_KEY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/settings-storage.service.ts\n            \n            variable\n            HIDE_USER_BAR_KEY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/environments/environment.common.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/environments/environment.prod.ts\n            \n            variable\n            baseUrl\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/environments/environment.ts\n            \n            variable\n            baseUrl\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/environments/environment.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/example/src/lib/example.component.ts\n            \n            component\n            ExampleComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/example/src/lib/example.service.ts\n            \n            injectable\n            ExampleService\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/example/src/public-api.ts\n            \n            variable\n            wisdomInterface\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/water-usage-forecasts/src/lib/forecast-response.ts\n            \n            interface\n            ForecastEntry\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                wisdom_modules/water-usage-forecasts/src/lib/forecast-response.ts\n            \n            interface\n            ForecastResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                wisdom_modules/water-usage-forecasts/src/lib/forecast-response.ts\n            \n            interface\n            ForecastUsage\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                wisdom_modules/water-usage-forecasts/src/lib/views/map-select-view/map-select-view.component.ts\n            \n            component\n            MapSelectViewComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                wisdom_modules/water-usage-forecasts/src/lib/views/result-data-view/result-data-view.component.ts\n            \n            component\n            ResultDataViewComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                wisdom_modules/water-usage-forecasts/src/lib/water-usage-forecasts.component.ts\n            \n            component\n            WaterUsageForecastsComponent\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                wisdom_modules/water-usage-forecasts/src/lib/water-usage-forecasts.service.ts\n            \n            injectable\n            WaterUsageForecastsService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                wisdom_modules/water-usage-forecasts/src/lib/water-usage-forecasts.service.ts\n            \n            variable\n            API_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                wisdom_modules/water-usage-forecasts/src/public-api.ts\n            \n            variable\n            wisdomInterface\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~13.2.2\n        \n            @angular/common : ~13.2.2\n        \n            @angular/compiler : ~13.2.2\n        \n            @angular/core : ~13.2.2\n        \n            @angular/forms : ~13.2.2\n        \n            @angular/platform-browser : ~13.2.2\n        \n            @angular/platform-browser-dynamic : ~13.2.2\n        \n            @angular/router : ~13.2.2\n        \n            @ngx-translate/core : ^14.0.0\n        \n            bulma : ^0.9.3\n        \n            bulma-prefers-dark : ^0.1.0-beta.1\n        \n            chart.js : ^3.7.1\n        \n            chartjs-plugin-annotation : ^1.4.0\n        \n            idb : ^7.0.1\n        \n            leaflet : ^1.7.1\n        \n            path-browserify : ^1.0.1\n        \n            rxjs : ~7.5.4\n        \n            tslib : ^2.3.1\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ForecastType   (wisdom_modules/.../forecast-type.ts)\n                        \n                        \n                            Resolution   (wisdom_modules/.../resolution.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    wisdom_modules/water-usage-forecasts/src/lib/forecast-type.ts\n    \n        \n            \n                \n                    \n                        \n                        ForecastType\n                    \n                \n                        \n                            \n                                 LOGARITHMIC\n                            \n                        \n                        \n                            \n                                Value : logarithmic\n                            \n                        \n                        \n                            \n                                 LINEAR\n                            \n                        \n                        \n                            \n                                Value : linear\n                            \n                        \n                        \n                            \n                                 POLYNOMIAL\n                            \n                        \n                        \n                            \n                                Value : polynomial\n                            \n                        \n            \n        \n\n    wisdom_modules/common/src/lib/map/resolution.ts\n    \n        \n            \n                \n                    \n                        \n                        Resolution\n                    \n                \n                        \n                            \n                                 STATE\n                            \n                        \n                        \n                            \n                                Value : state\n                            \n                        \n                        \n                            \n                                 DISTRICT\n                            \n                        \n                        \n                            \n                                Value : district\n                            \n                        \n                        \n                            \n                                 ADMINISTRATION\n                            \n                        \n                        \n                            \n                                Value : administration\n                            \n                        \n                        \n                            \n                                 MUNICIPAL\n                            \n                        \n                        \n                            \n                                Value : municipal\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            prettyPrintNum   (wisdom_modules/.../util.ts)\n                        \n                        \n                            stringToColor   (wisdom_modules/.../util.ts)\n                        \n                        \n                            toEnum   (wisdom_modules/.../resolution.ts)\n                        \n                        \n                            toKeyLength   (wisdom_modules/.../resolution.ts)\n                        \n                        \n                            translateObject   (wisdom_modules/.../util.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    wisdom_modules/common/src/lib/util.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        prettyPrintNum\n                        \n                    \n                \n            \n            \n                \nprettyPrintNum(num: number)\n                \n            \n\n\n\n\n            \n                \n                    Returns a number presentation where every third digit from the end is\nseparated by a dot.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    num\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Number to pretty print\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            prettyPrintNum(12345678) =&gt; &quot;12.345.678&quot;\n                        \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stringToColor\n                        \n                    \n                \n            \n            \n                \nstringToColor(str: string, map?: Record)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    str\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    map\n                                    \n                                            Record\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        translateObject\n                        \n                    \n                \n            \n            \n                \ntranslateObject(service: TranslateService, obj: T)\n                \n            \n\n\n\n\n            \n                \n                    Utility function to translate strings in any data object using the given\ntranslate service.\nInternally the instant() method is used, causing this to be sync, beware.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    service\n                                    \n                                            TranslateService\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Translate service to translate with\n\n                                    \n                                \n                                \n                                    obj\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Object to iterate and translate through\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    wisdom_modules/common/src/lib/map/resolution.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        toEnum\n                        \n                    \n                \n            \n            \n                \ntoEnum(length: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Resolution | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toKeyLength\n                        \n                    \n                \n            \n            \n                \ntoKeyLength(res: Resolution)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                                Resolution\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_ChartModule\n\n\n\ncluster_ChartModule_declarations\n\n\n\ncluster_ChartModule_exports\n\n\n\ncluster_ExampleModule\n\n\n\ncluster_ExampleModule_declarations\n\n\n\ncluster_ExampleModule_exports\n\n\n\ncluster_WaterUsageForecastsModule\n\n\n\ncluster_WaterUsageForecastsModule_declarations\n\n\n\ncluster_WaterUsageForecastsModule_exports\n\n\n\ncluster_WisdomModule\n\n\n\ncluster_WisdomModule_declarations\n\n\n\ncluster_WisdomModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nErrorComponent\n\nErrorComponent\n\nAppModule -->\n\nErrorComponent->AppModule\n\n\n\n\n\nFrameComponent\n\nFrameComponent\n\nAppModule -->\n\nFrameComponent->AppModule\n\n\n\n\n\nLangSelectorDirective\n\nLangSelectorDirective\n\nAppModule -->\n\nLangSelectorDirective->AppModule\n\n\n\n\n\nLoaderComponent\n\nLoaderComponent\n\nAppModule -->\n\nLoaderComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nSideBarComponent\n\nSideBarComponent\n\nAppModule -->\n\nSideBarComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nWisdomModule\n\nWisdomModule\n\nAppModule -->\n\nWisdomModule->AppModule\n\n\n\n\n\nExampleModule\n\nExampleModule\n\nExampleModule -->\n\nWisdomModule->ExampleModule\n\n\n\n\n\nWaterUsageForecastsModule\n\nWaterUsageForecastsModule\n\nWaterUsageForecastsModule -->\n\nWisdomModule->WaterUsageForecastsModule\n\n\n\n\n\nBulmaIsToggleableDirective \n\nBulmaIsToggleableDirective \n\nBulmaIsToggleableDirective  -->\n\nWisdomModule->BulmaIsToggleableDirective \n\n\n\n\n\nChartModule \n\nChartModule \n\nChartModule  -->\n\nWisdomModule->ChartModule \n\n\n\n\n\nIonIconComponent \n\nIonIconComponent \n\nIonIconComponent  -->\n\nWisdomModule->IonIconComponent \n\n\n\n\n\nMapComponent \n\nMapComponent \n\nMapComponent  -->\n\nWisdomModule->MapComponent \n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nAppModule -->\n\nAuthInterceptor->AppModule\n\n\n\n\n\nBaseUrlInterceptor\n\nBaseUrlInterceptor\n\nAppModule -->\n\nBaseUrlInterceptor->AppModule\n\n\n\n\n\nCacheInterceptor\n\nCacheInterceptor\n\nAppModule -->\n\nCacheInterceptor->AppModule\n\n\n\n\n\nLoaderInterceptor\n\nLoaderInterceptor\n\nAppModule -->\n\nLoaderInterceptor->AppModule\n\n\n\n\n\nSanitizeUrlInterceptor\n\nSanitizeUrlInterceptor\n\nAppModule -->\n\nSanitizeUrlInterceptor->AppModule\n\n\n\n\n\nBarChartComponent\n\nBarChartComponent\n\n\n\nChartModule\n\nChartModule\n\nChartModule -->\n\nBarChartComponent->ChartModule\n\n\n\n\n\nLineChartComponent\n\nLineChartComponent\n\nChartModule -->\n\nLineChartComponent->ChartModule\n\n\n\n\n\nBarChartComponent \n\nBarChartComponent \n\nBarChartComponent  -->\n\nChartModule->BarChartComponent \n\n\n\n\n\nLineChartComponent \n\nLineChartComponent \n\nLineChartComponent  -->\n\nChartModule->LineChartComponent \n\n\n\nWaterUsageForecastsModule -->\n\nChartModule->WaterUsageForecastsModule\n\n\n\n\n\nExampleComponent\n\nExampleComponent\n\nExampleModule -->\n\nExampleComponent->ExampleModule\n\n\n\n\n\nExampleComponent \n\nExampleComponent \n\nExampleComponent  -->\n\nExampleModule->ExampleComponent \n\n\n\n\n\nMapSelectViewComponent\n\nMapSelectViewComponent\n\nWaterUsageForecastsModule -->\n\nMapSelectViewComponent->WaterUsageForecastsModule\n\n\n\n\n\nResultDataViewComponent\n\nResultDataViewComponent\n\nWaterUsageForecastsModule -->\n\nResultDataViewComponent->WaterUsageForecastsModule\n\n\n\n\n\nWaterUsageForecastsComponent\n\nWaterUsageForecastsComponent\n\nWaterUsageForecastsModule -->\n\nWaterUsageForecastsComponent->WaterUsageForecastsModule\n\n\n\n\n\nWaterUsageForecastsComponent \n\nWaterUsageForecastsComponent \n\nWaterUsageForecastsComponent  -->\n\nWaterUsageForecastsModule->WaterUsageForecastsComponent \n\n\n\n\n\nBulmaIsToggleableDirective\n\nBulmaIsToggleableDirective\n\nWisdomModule -->\n\nBulmaIsToggleableDirective->WisdomModule\n\n\n\n\n\nIonIconComponent\n\nIonIconComponent\n\nWisdomModule -->\n\nIonIconComponent->WisdomModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nWisdomModule -->\n\nMapComponent->WisdomModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    14 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        4 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ChartModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ExampleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WaterUsageForecastsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WisdomModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DeleteUsersId200   (wisdom_modules/.../DeleteUsersId200.ts)\n                        \n                        \n                            DeleteUsersId403   (wisdom_modules/.../DeleteUsersId403.ts)\n                        \n                        \n                            DeleteUsersId404   (wisdom_modules/.../DeleteUsersId404.ts)\n                        \n                        \n                            GeoJsonObject   (wisdom_modules/.../layer-data.ts)\n                        \n                        \n                            GeoJsonObject   (wisdom_modules/.../map.component.ts)\n                        \n                        \n                            GetUsers200   (wisdom_modules/.../GetUsers200.ts)\n                        \n                        \n                            GetUsersId200   (wisdom_modules/.../GetUsersId200.ts)\n                        \n                        \n                            GetUsersId404   (wisdom_modules/.../GetUsersId404.ts)\n                        \n                        \n                            GetUsersMe200   (wisdom_modules/.../GetUsersMe200.ts)\n                        \n                        \n                            LayerConfig   (wisdom_modules/.../map.component.ts)\n                        \n                        \n                            LayerData   (wisdom_modules/.../layer-data.ts)\n                        \n                        \n                            LayerKey   (wisdom_modules/.../map.component.ts)\n                        \n                        \n                            nullString   (wisdom_modules/.../side-bar-entries.ts)\n                        \n                        \n                            PatchUsers204   (wisdom_modules/.../PatchUsers204.ts)\n                        \n                        \n                            PatchUsers403   (wisdom_modules/.../PatchUsers403.ts)\n                        \n                        \n                            PatchUsers404   (wisdom_modules/.../PatchUsers404.ts)\n                        \n                        \n                            PatchUsersMe200   (wisdom_modules/.../PatchUsersMe200.ts)\n                        \n                        \n                            PostOAuthToken200   (wisdom_modules/.../PostOAuthToken200.ts)\n                        \n                        \n                            PostOAuthToken400   (wisdom_modules/.../PostOAuthToken400.ts)\n                        \n                        \n                            PostOAuthToken401   (wisdom_modules/.../PostOAuthToken401.ts)\n                        \n                        \n                            PostRevoke200   (wisdom_modules/.../PostRevoke200.ts)\n                        \n                        \n                            PostRevoke403   (wisdom_modules/.../PostRevoke403.ts)\n                        \n                        \n                            PutUsers201   (wisdom_modules/.../PutUsers201.ts)\n                        \n                        \n                            PutUsers409   (wisdom_modules/.../PutUsers409.ts)\n                        \n                        \n                            SideBarEntries   (wisdom_modules/.../side-bar-entries.ts)\n                        \n                        \n                            SideBarEntry   (wisdom_modules/.../side-bar-entries.ts)\n                        \n                        \n                            SideBarEntryLvl1   (wisdom_modules/.../side-bar-entries.ts)\n                        \n                        \n                            SideBarEntryLvl2   (wisdom_modules/.../side-bar-entries.ts)\n                        \n                        \n                            SideBarEntryLvl3   (wisdom_modules/.../side-bar-entries.ts)\n                        \n                        \n                            SideBarLabel   (wisdom_modules/.../side-bar-entries.ts)\n                        \n                        \n                            User   (wisdom_modules/.../User.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    wisdom_modules/core/src/app/auth/response_types/users/DeleteUsersId200.ts\n    \n    \n        \n            \n                \n                    \n                    DeleteUsersId200\n                \n            \n            \n                \n                    The user was deleted\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/users/DeleteUsersId403.ts\n    \n    \n        \n            \n                \n                    \n                    DeleteUsersId403\n                \n            \n            \n                \n                    Insufficient privileges to run this action\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/users/DeleteUsersId404.ts\n    \n    \n        \n            \n                \n                    \n                    DeleteUsersId404\n                \n            \n            \n                \n                    The user does not exist in the system\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    wisdom_modules/common/src/lib/map/layer-data.ts\n    \n    \n        \n            \n                \n                    \n                    GeoJsonObject\n                \n            \n            \n                \n                    GeoJSON data type used by Leaflet.\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    LayerData\n                \n            \n            \n                \n                            ShapeData[]\n\n                \n            \n        \n    \n    wisdom_modules/common/src/lib/map/map.component.ts\n    \n    \n        \n            \n                \n                    \n                    GeoJsonObject\n                \n            \n            \n                \n                    GeoJSON data type used by Leaflet.\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    LayerConfig\n                \n            \n            \n                \n                    A layer config for the input of MapComponent.inputLayers.\n\n                \n            \n            \n                \n                            Record\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    LayerKey\n                \n            \n            \n                \n                    Type alias to enforce the meaning of the layer keys.\n\n                \n            \n            \n                \n                            string\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/users/GetUsers200.ts\n    \n    \n        \n            \n                \n                    \n                    GetUsers200\n                \n            \n            \n                \n                            User[]\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/users/GetUsersId200.ts\n    \n    \n        \n            \n                \n                    \n                    GetUsersId200\n                \n            \n            \n                \n                    \nInformation about the User\n\n\n                \n            \n            \n                \n                            Omit\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/users/GetUsersId404.ts\n    \n    \n        \n            \n                \n                    \n                    GetUsersId404\n                \n            \n            \n                \n                    The user does not exist in the system\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/users/GetUsersMe200.ts\n    \n    \n        \n            \n                \n                    \n                    GetUsersMe200\n                \n            \n            \n                \n                    Information\n\n                \n            \n            \n                \n                            Omit\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/frame/side-bar/side-bar-entries.ts\n    \n    \n        \n            \n                \n                    \n                    nullString\n                \n            \n            \n                \n                    Nullable string.\n\n                \n            \n            \n                \n                        string | null\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SideBarEntries\n                \n            \n            \n                \n                    This type describes the nested data structure of the sidebar.\nThis type consists of nested arrays.\nThe first layer are for labels.\nAll the following are entries with a name, that may be translated if give a\ntranslation key, a possible icon name from ://ionic.io/ioniconshttps,\na path to follow and possible children.\n\n                \n            \n            \n                \n                            SideBarLabel[]\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SideBarEntry\n                \n            \n            \n                \n                    [identifier name, icon name, path]\n\n                \n            \n            \n                \n                            [string, nullString, nullString]\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SideBarEntryLvl1\n                \n            \n            \n                \n                             | SideBarEntry\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SideBarEntryLvl2\n                \n            \n            \n                \n                             | SideBarEntry\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SideBarEntryLvl3\n                \n            \n            \n                \n                            SideBarEntry\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SideBarLabel\n                \n            \n            \n                \n                        [string, nullString, SideBarEntryLvl1[]]\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/users/PatchUsers204.ts\n    \n    \n        \n            \n                \n                    \n                    PatchUsers204\n                \n            \n            \n                \n                    Successfully updated the user\n\n                \n            \n            \n                \n                            Omit\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/users/PatchUsers403.ts\n    \n    \n        \n            \n                \n                    \n                    PatchUsers403\n                \n            \n            \n                \n                    Insufficient privileges to update the users\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/users/PatchUsers404.ts\n    \n    \n        \n            \n                \n                    \n                    PatchUsers404\n                \n            \n            \n                \n                    The user does not exist and therefore cannot be updated\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/users/PatchUsersMe200.ts\n    \n    \n        \n            \n                \n                    \n                    PatchUsersMe200\n                \n            \n            \n                \n                    Successfully updated the user\n\n                \n            \n            \n                \n                            Omit\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/login/PostOAuthToken200.ts\n    \n    \n        \n            \n                \n                    \n                    PostOAuthToken200\n                \n            \n            \n                \n                    The user was authorized successfully\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/login/PostOAuthToken400.ts\n    \n    \n        \n            \n                \n                    \n                    PostOAuthToken400\n                \n            \n            \n                \n                    Bad request made\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/login/PostOAuthToken401.ts\n    \n    \n        \n            \n                \n                    \n                    PostOAuthToken401\n                \n            \n            \n                \n                    Unauthorized\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/login/PostRevoke200.ts\n    \n    \n        \n            \n                \n                    \n                    PostRevoke200\n                \n            \n            \n                \n                    Standard response\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/login/PostRevoke403.ts\n    \n    \n        \n            \n                \n                    \n                    PostRevoke403\n                \n            \n            \n                \n                    The scope of the current user is insufficient\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/users/PutUsers201.ts\n    \n    \n        \n            \n                \n                    \n                    PutUsers201\n                \n            \n            \n                \n                    The user was created successfully\n\n                \n            \n            \n                \n                            User\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/users/PutUsers409.ts\n    \n    \n        \n            \n                \n                    \n                    PutUsers409\n                \n            \n            \n                \n                    A user with the same data already exists\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/types/User.ts\n    \n    \n        \n            \n                \n                    \n                    User\n                \n            \n            \n                \n                    Representation of a user.\n\n                \n            \n            \n                \n                        Partial\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ACCESS_TOKEN_KEY   (wisdom_modules/.../auth-storage.service.ts)\n                        \n                        \n                            API_URL   (wisdom_modules/.../water-usage-forecasts.service.ts)\n                        \n                        \n                            API_URL   (wisdom_modules/.../map.service.ts)\n                        \n                        \n                            AUTH_API   (wisdom_modules/.../user.service.ts)\n                        \n                        \n                            AUTH_URL   (wisdom_modules/.../auth.service.ts)\n                        \n                        \n                            baseUrl   (wisdom_modules/.../environment.prod.ts)\n                        \n                        \n                            baseUrl   (wisdom_modules/.../environment.ts)\n                        \n                        \n                            control   (wisdom_modules/.../invert-selection.ts)\n                        \n                        \n                            DB_NAME   (wisdom_modules/.../map.service.ts)\n                        \n                        \n                            environment   (wisdom_modules/.../environment.common.ts)\n                        \n                        \n                            environment   (wisdom_modules/.../environment.prod.ts)\n                        \n                        \n                            environment   (wisdom_modules/.../environment.ts)\n                        \n                        \n                            EXPIRES_IN_KEY   (wisdom_modules/.../auth-storage.service.ts)\n                        \n                        \n                            getOptions   (wisdom_modules/.../user.service.ts)\n                        \n                        \n                            HIDE_SIDEBAR_KEY   (wisdom_modules/.../settings-storage.service.ts)\n                        \n                        \n                            HIDE_USER_BAR_KEY   (wisdom_modules/.../settings-storage.service.ts)\n                        \n                        \n                            httpOptions   (wisdom_modules/.../auth.service.ts)\n                        \n                        \n                            langs   (sidebar.ts)\n                        \n                        \n                            langs   (wisdom_modules/.../static-loader.ts)\n                        \n                        \n                            REFRESH_TOKEN_KEY   (wisdom_modules/.../auth-storage.service.ts)\n                        \n                        \n                            SCHEMA_V   (wisdom_modules/.../map.service.ts)\n                        \n                        \n                            SCOPES_KEY   (wisdom_modules/.../auth-storage.service.ts)\n                        \n                        \n                            sidebar   (sidebar.ts)\n                        \n                        \n                            TOKEN_HEADER_KEY   (wisdom_modules/.../auth.interceptor.ts)\n                        \n                        \n                            USE_API_URL   (wisdom_modules/.../use-api-url.ts)\n                        \n                        \n                            USE_BASE_URL   (wisdom_modules/.../use-base-url.ts)\n                        \n                        \n                            USE_CACHE   (wisdom_modules/.../use-cache.ts)\n                        \n                        \n                            USE_LOADER   (wisdom_modules/.../use-loader.ts)\n                        \n                        \n                            wisdomInterface   (wisdom_modules/.../public-api.ts)\n                        \n                        \n                            wisdomInterface   (wisdom_modules/.../public-api.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    wisdom_modules/core/src/app/auth/auth-storage.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ACCESS_TOKEN_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"auth-token\"\n                    \n                \n\n            \n                \n                    Key for the access token.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        EXPIRES_IN_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"auth-expires-in\"\n                    \n                \n\n            \n                \n                    Key fo the expiration date.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        REFRESH_TOKEN_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"auth-refresh-token\"\n                    \n                \n\n            \n                \n                    Key for the refresh token.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SCOPES_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"auth-scopes\"\n                    \n                \n\n            \n                \n                    Key for the scopes.\n\n                \n            \n\n        \n    \n\n    wisdom_modules/water-usage-forecasts/src/lib/water-usage-forecasts.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        API_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"water-usage-forecasts\"\n                    \n                \n\n\n        \n    \n\n    wisdom_modules/common/src/lib/map/map.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        API_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"geodata\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DB_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"map-db\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SCHEMA_V\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n\n\n        \n    \n\n    wisdom_modules/core/src/app/auth/user.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AUTH_API\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"localhost:8090/auth/\"\n                    \n                \n\n            \n                \n                    Url for the interaction.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : {\n  responseType: \"json\"\n}\n                    \n                \n\n            \n                \n                    Options passed into the get requests.\n\n                \n            \n\n        \n    \n\n    wisdom_modules/core/src/app/auth/auth.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AUTH_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"auth\"\n                    \n                \n\n            \n                \n                    Url for the interaction.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        httpOptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : {\n  headers: new HttpHeaders({\n    \"Content-Type\": \"application/x-www-form-urlencoded\"\n  }),\n  responseType: \"json\",\n  context: new HttpContext().set(USE_API_URL, true)\n}\n                    \n                \n\n            \n                \n                    Options for the post request in the service.\nAs per reference the content type is always \"x-www-form-urlencoded\" instead\nof \"json\".\nThe response is a json though.\n\n                \n            \n\n        \n    \n\n    wisdom_modules/core/src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"https://wisdom-demo.uol.de/\"\n                    \n                \n\n            \n                \n                    Base url for making requests.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.assign({}, commonEnvironment, {\n  production: true,\n  baseUrl,\n  apiUrl: baseUrl + \"api/\"\n})\n                    \n                \n\n            \n                \n                    Environment for the dev mode.\n\n                \n            \n\n        \n    \n\n    wisdom_modules/core/src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : window.location.origin + \"/\"\n                    \n                \n\n            \n                \n                    Url used to call the original window location, will be captured by the proxy.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.assign({}, commonEnvironment, {\n  production: false,\n  baseUrl,\n  apiUrl: baseUrl + \"api/\"\n})\n                    \n                \n\n            \n                \n                    Environment for the dev mode.\n\n                \n            \n\n        \n    \n\n    wisdom_modules/common/src/lib/map/invert-selection.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        control\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  invertSelection: (callback: (arg0: MouseEvent) => void, options?: L.ControlOptions) => {\n    let InvertSelection = L.Control.extend({\n      options: {\n        position: \"topright\"\n      },\n      initialize: function (options: any) {\n        L.Util.setOptions(this, options);\n      },\n      onAdd: function (map: L.Map) {\n        let centerContent = [\n          \"is-flex is-align-content-center\",\n          \"is-align-items-center\",\n          \"is-justify-content-center\"\n        ].join(\" \");\n\n        let container = L.DomUtil.create(\n          \"div\",\n          \"select-all-container leaflet-control-layers leaflet-control\"\n        );\n        container.addEventListener(\"click\", callback);\n        let button = L.DomUtil.create(\n          \"a\",\n          \"leaflet-control-layers-toggle \" + centerContent,\n          container\n        );\n        button.style.backgroundImage = \"none\";\n        let icon = L.DomUtil.create(\n          \"ion-icon\",\n          \"select-all-icon\",\n          button\n        );\n        icon.style.pointerEvents = \"none\";\n        icon.setAttribute(\"name\", \"extension-puzzle\");\n        icon.setAttribute(\"size\", \"large\");\n        icon.style.color = \"#a0a0a0\";\n        return container;\n      }\n    });\n    return new InvertSelection(options);\n  }\n}\n                    \n                \n\n\n        \n    \n\n    wisdom_modules/core/src/environments/environment.common.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  // empty for now but still injected\n}\n                    \n                \n\n            \n                \n                    Environment values for both dev and prod mode.\n\n                \n            \n\n        \n    \n\n    wisdom_modules/core/src/app/settings-storage.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        HIDE_SIDEBAR_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"hide-sidebar\"\n                    \n                \n\n            \n                \n                    Key for the sidebar hide setting.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        HIDE_USER_BAR_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"hide-user-bar\"\n                    \n                \n\n            \n                \n                    key for the user bar hide setting.\n\n                \n            \n\n        \n    \n\n    sidebar.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        langs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  de_DE: {\n    \"water-usage\": \"Wasserverbrauch\"\n  },\n  en_US: {\n    \"water-usage\": \"Water Usage\"\n  }\n}\n                    \n                \n\n            \n                \n                    This constant is used to inject language content into the translator.\nThe keys to use the injected will use the namespace \"sidebar\".\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sidebar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SideBarEntries\n\n                    \n                \n                \n                    \n                        Default value : [\n  [\n    \"Proof of Concept\", \"rocket\", [\n      [\"Example\", \"sparkles\", \"example\"],\n      [\"No Example\", null, null]\n    ]\n  ],\n  [\n    \"sidebar.water-usage\", \"bar-chart\", [\n      [\"water-usage-forecasts.label.name\", \"calendar\", \"water-usage-forecasts\"]\n    ]\n  ]\n]\n                    \n                \n\n            \n                \n                    This constant describes how the sidebar should directly look like.\nFor further explanation check SideBarEntries.\n\n                \n            \n\n        \n    \n\n    wisdom_modules/core/src/app/i18n/static-loader.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        langs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n  de_DE: Object.assign({}, de_DELang, ModuleProvider.langs(\"de_DE\")),\n  en_US: Object.assign({}, en_USLang, ModuleProvider.langs(\"en_US\"))\n}\n                    \n                \n\n            \n                \n                    The languages the loader provides.\n\n                \n            \n\n        \n    \n\n    wisdom_modules/core/src/app/auth/auth.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TOKEN_HEADER_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Authorization\"\n                    \n                \n\n            \n                \n                    Key for the token.\n\n                \n            \n\n        \n    \n\n    wisdom_modules/common/src/lib/http-context/use-api-url.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        USE_API_URL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new HttpContextToken(() => false)\n                    \n                \n\n            \n                \n                    HttpContextToken used to determine if the api url should be used.\nDefaults to false.\n\n                \n            \n\n        \n    \n\n    wisdom_modules/common/src/lib/http-context/use-base-url.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        USE_BASE_URL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new HttpContextToken(() => true)\n                    \n                \n\n            \n                \n                    HttpContextToken used to determine if the base url should be used.\nDefaults to true.\n\n                \n            \n\n        \n    \n\n    wisdom_modules/common/src/lib/http-context/use-cache.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        USE_CACHE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new HttpContextToken(() => true)\n                    \n                \n\n            \n                \n                    HttpContextToken used to determine if cache headers should be sent.\nDefaults to true.\n\n                \n            \n\n        \n    \n\n    wisdom_modules/common/src/lib/http-context/use-loader.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        USE_LOADER\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new HttpContextToken(() => false)\n                    \n                \n\n            \n                \n                    HttpContextToken used to determine if loader should be shown.\nA given string will be run through the translator and therefore may get\ntranslated.\nUseful for longer loading times.\nDefaults to false.\n\n                \n            \n\n        \n    \n\n    wisdom_modules/example/src/public-api.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        wisdomInterface\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WisdomInterface\n\n                    \n                \n                \n                    \n                        Default value : {\n  path: \"example\",\n  scopes: [\"example\"],\n  entryComponent: ExampleComponent,\n  translations: {\n    de_DE,\n    en_US\n  }\n}\n                    \n                \n\n            \n                \n                    The wisdom interface for the core module to inject this module.\n\n                \n            \n\n        \n    \n\n    wisdom_modules/water-usage-forecasts/src/public-api.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        wisdomInterface\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WisdomInterface\n\n                    \n                \n                \n                    \n                        Default value : {\n  path: \"water-usage-forecasts\",\n  scopes: [\"water-usage-forecasts\"],\n  entryComponent: WaterUsageForecastsComponent,\n  translations: {\n    de_DE,\n    en_US\n  }\n}\n                    \n                \n\n            \n                \n                    Public interface for the wisdom core to inject this module.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
