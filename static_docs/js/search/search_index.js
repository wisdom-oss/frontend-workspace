var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.661,1,1.295]],["body/components/AppComponent.html",[0,1.203,1,2.27,2,2.175,3,0.197,4,0.197,5,1.727,6,1.727,7,1.727,8,0.177,9,3.73,10,0.449,11,2.79,12,3.48,13,4.915,14,4.409,15,4.409,16,1.91,17,2.794,18,1.449,19,2.9,20,1.616,21,2.498,22,5.681,23,0.239,24,1.111,25,7.019,26,0.889,27,3.658,28,0.809,29,4.312,30,4.032,31,4.409,32,1.883,33,5.681,34,2.91,35,2.794,36,5.681,37,6.354,38,5.496,39,0.644,40,0.016,41,1.684,42,0.283,43,0.585,44,1.084,45,3.48,46,4.409,47,4.312,48,4.915,49,0.342,50,0.328,51,3.347,52,3.73,53,3.73,54,3.73,55,1.991,56,0.197,57,0.239,58,1.389,59,4.312,60,4.312,61,4.312,62,1.727,63,2.275,64,1.91,65,1.389,66,2.705,67,1.727,68,0.443,69,1.727,70,1.449,71,1.727,72,1.389,73,2.705,74,1.727,75,1.727,76,1.449,77,1.727,78,1.389,79,1.389,80,1.727,81,1.332,82,1.58,83,1.727,84,1.449,85,1.727,86,1.389,87,1.727,88,1.332,89,1.727,90,1.389,91,1.177,92,1.513,93,2.275,94,1.389,95,1.727,96,0.773,97,1.449,98,1.727,99,1.727,100,1.389,101,1.278,102,1.58,103,1.651,104,1.513,105,1.389,106,1.727,107,1.389,108,1.651,109,1.727,110,0.011,111,0.011]],["title/modules/AppModule.html",[112,1.779,113,2.735]],["body/modules/AppModule.html",[1,2.552,3,0.177,4,0.177,8,0.158,11,1.413,40,0.016,49,0.399,50,0.293,56,0.177,57,0.214,76,2.346,79,2.248,84,2.346,86,2.248,97,2.346,107,2.248,110,0.011,111,0.011,113,5.719,114,1.874,115,3.03,116,3.338,117,3.338,118,3.338,119,3.338,120,3.338,121,4.583,122,4.011,123,4.583,124,4.583,125,4.583,126,4.275,127,4.583,128,4.583,129,3.23,130,2.09,131,2.217,132,3.858,133,3.742,134,5.273,135,3.463,136,5.273,137,5.273,138,7.144,139,1.297,140,3.463,141,5.273,142,2.994,143,5.273,144,3.338,145,2.738,146,4.561,147,2.738,148,2.09,149,2.09,150,1.192,151,3.858,152,3.858,153,3.338,154,3.858,155,2.534,156,5.273,157,3.858,158,3.338,159,3.858,160,2.738,161,3.858,162,3.858,163,3.858,164,3.742,165,3.858,166,2.561,167,3.858,168,3.858,169,3.858,170,3.338,171,3.858,172,3.858,173,3.858,174,3.858,175,2.994,176,5.544,177,7.144,178,6.979,179,2.068]],["title/modules/AppRoutingModule.html",[112,1.779,121,2.531]],["body/modules/AppRoutingModule.html",[0,1.138,3,0.253,4,0.253,8,0.227,34,3.647,40,0.016,49,0.393,50,0.42,56,0.253,57,0.306,79,2.14,86,2.14,110,0.013,111,0.013,112,2.55,114,2.683,121,4.36,135,3.627,140,4.36,153,4.777,158,4.777,180,5.523,181,5.523,182,5.154,183,4.362,184,1.388,185,4.36,186,4.777,187,3.627,188,4.777,189,4.676,190,4.777,191,1.856,192,4.36,193,4.286,194,5.523,195,3.383,196,4.286,197,5.523,198,4.286]],["title/guards/AuthGuard.html",[185,2.531,199,2.087]],["body/guards/AuthGuard.html",[3,0.155,4,0.155,8,0.139,10,0.5,16,1.135,20,0.96,23,0.187,26,0.752,28,0.684,34,1.729,39,0.504,40,0.016,42,0.315,49,0.326,50,0.257,56,0.155,57,0.187,68,0.315,96,0.605,110,0.01,111,0.01,145,3.409,179,1.001,184,0.848,185,3.155,192,4.227,195,4.31,199,2.602,200,2.217,201,2.92,202,4.804,203,3.624,204,4.804,205,3.728,206,5.213,207,3.728,208,5.055,209,3.728,210,6.092,211,4.885,212,4.804,213,3.121,214,1.191,215,2.92,216,3.501,217,4.31,218,2.78,219,3.376,220,0.684,221,0.62,222,3.969,223,3.672,224,2.761,225,3.728,226,0.98,227,1.615,228,2.218,229,3.3,230,2.049,231,3.148,232,3.728,233,2.92,234,3.732,235,4.324,236,4.728,237,3.376,238,3.728,239,4.804,240,4.804,241,4.804,242,3.728,243,3.728,244,2.761,245,4.155,246,4.804,247,3.728,248,1.615,249,4.324,250,1.526,251,3.672,252,2.112,253,0.589,254,2.62,255,0.718,256,2.396,257,2.92,258,1.001,259,1.37,260,1.141,261,2.217,262,2.62,263,3.376,264,3.376,265,1.101,266,4.804,267,3.376,268,3.376,269,3.376,270,2.92,271,3.376,272,2.396,273,1.828,274,3.376,275,2.92,276,3.728,277,2.62,278,2.92,279,1.64,280,1.258,281,3.376,282,3.376,283,2.461,284,2.068,285,3.376,286,3.376,287,2.92,288,4.804,289,5.592,290,2.461,291,2.92,292,2.92,293,1.416,294,3.376,295,1.94,296,3.376,297,2.92,298,3.376,299,6.092,300,2.92,301,3.376,302,4.155,303,2.92,304,3.376,305,3.376,306,3.376,307,2.068,308,3.376,309,3.376,310,2.92,311,3.376,312,2.92,313,3.376,314,3.376,315,3.376,316,3.376,317,4.155,318,1.94,319,2.217,320,3.376,321,2.92,322,2.92,323,3.376]],["title/interceptors/AuthInterceptor.html",[123,2.531,324,1.616]],["body/interceptors/AuthInterceptor.html",[3,0.206,4,0.206,8,0.185,10,0.676,16,1.515,23,0.25,26,0.916,28,0.833,39,0.674,40,0.016,42,0.383,49,0.348,50,0.343,56,0.206,57,0.25,68,0.383,110,0.012,111,0.012,123,3.841,139,1.515,191,1.966,208,5.04,214,1.269,215,3.9,216,3.949,220,0.833,221,0.755,222,4.608,223,3.841,224,3.362,225,4.54,229,2.442,250,1.772,253,0.717,255,0.959,256,3.2,259,1.382,265,0.706,276,3.499,283,3.737,318,2.591,319,2.961,324,2.453,325,2.761,326,3.499,327,5.333,328,5.616,329,3.219,330,3.977,331,4.508,332,2.761,333,4.469,334,4.209,335,4.508,336,5.849,337,6.493,338,5.849,339,3.841,340,3.841,341,5.849,342,2.761,343,3.583,344,3.499,345,1.393,346,3.499,347,1.726,348,5.849,349,4.508,350,3.499,351,5.849,352,3.9,353,4.508,354,1.806,355,4.508,356,4.508,357,2.961,358,3.9]],["title/injectables/AuthService.html",[217,2.36,253,0.472]],["body/injectables/AuthService.html",[3,0.163,4,0.163,8,0.146,10,0.709,20,1.013,23,0.198,26,0.781,28,0.936,34,1.825,39,0.932,40,0.016,42,0.458,43,1.037,49,0.354,50,0.271,56,0.163,57,0.198,68,0.431,110,0.01,111,0.01,139,1.197,150,1.101,179,1.056,191,1.677,195,3.056,203,3.863,206,3.541,208,5.14,211,4.428,214,1.126,217,3.056,220,0.936,221,0.848,226,1.175,229,3.119,230,1.828,243,3.872,244,2.867,250,1.907,253,0.612,255,0.758,258,1.056,259,1.449,262,2.765,265,0.977,279,2.424,280,1.783,284,2.182,329,1.494,347,1.364,354,1.427,359,1.427,360,2.765,361,4.316,362,4.99,363,4.469,364,4.316,365,4.99,366,2.047,367,2.881,368,3.562,369,2.205,370,3.872,371,2.867,372,4.99,373,5.536,374,3.562,375,4.99,376,5.098,377,4.99,378,3.562,379,4.99,380,4.99,381,3.562,382,4.99,383,4.99,384,3.562,385,2.702,386,2.304,387,2.092,388,4.469,389,2.528,390,1.494,391,2.528,392,2.339,393,3.081,394,3.081,395,3.562,396,3.081,397,3.562,398,1.305,399,2.765,400,2.765,401,3.081,402,1.825,403,2.092,404,2.765,405,2.765,406,4.316,407,3.872,408,4.316,409,3.081,410,2.415,411,3.081,412,4.662,413,3.562,414,3.081,415,1.566,416,1.427,417,1.645,418,3.081,419,1.828,420,3.081,421,6.24,422,6.24,423,4.99,424,4.99,425,4.99,426,3.562,427,4.99,428,4.99,429,3.562]],["title/injectables/AuthStorageService.html",[216,2.215,253,0.472]],["body/injectables/AuthStorageService.html",[3,0.133,4,0.133,8,0.119,10,0.631,20,0.824,23,0.161,26,0.673,28,1.013,31,3.337,39,1.097,40,0.016,41,1.947,42,0.416,43,1.044,44,1.788,49,0.147,50,0.22,56,0.133,57,0.284,68,0.416,96,1.085,110,0.009,111,0.009,191,1.906,207,4.701,208,5.038,211,4.503,216,2.471,220,0.904,221,0.819,223,4.167,226,0.877,229,3.437,230,1.575,248,2.42,253,0.527,258,0.859,259,1.207,260,1.294,265,0.993,293,2.378,297,3.719,318,1.666,345,2.129,359,1.161,430,5.589,431,2.057,432,3.719,433,3.051,434,4.024,435,4.503,436,3.719,437,3.719,438,2.202,439,5.126,440,6.057,441,5.126,442,5.211,443,2.507,444,5.489,445,3.437,446,2.823,447,3.719,448,2.898,449,3.473,450,4.3,451,4.009,452,3.595,453,2.898,454,2.898,455,2.507,456,2.898,457,2.898,458,7.114,459,2.898,460,2.898,461,5.239,462,4.924,463,1.72,464,2.898,465,2.898,466,4.3,467,5.126,468,4.3,469,2.898,470,2.898,471,2.898,472,2.507,473,2.898,474,2.898,475,2.898,476,2.898,477,3.978,478,2.507,479,3.978,480,2.507,481,3.978,482,3.978,483,2.898,484,2.898,485,2.507,486,2.898,487,2.898,488,3.719,489,2.507,490,2.507,491,2.898,492,4.3,493,2.898,494,2.898,495,2.898,496,2.898,497,3.337,498,2.898,499,2.898,500,2.898,501,2.898,502,2.898,503,2.898,504,2.898,505,2.898]],["title/interceptors/BaseUrlInterceptor.html",[124,2.531,324,1.616]],["body/interceptors/BaseUrlInterceptor.html",[3,0.222,4,0.222,8,0.199,10,0.639,16,1.632,23,0.269,26,0.96,28,0.691,39,0.725,40,0.016,42,0.318,49,0.369,50,0.369,56,0.222,57,0.373,68,0.318,110,0.012,111,0.012,124,4.027,139,1.632,150,1.5,155,4.783,220,0.691,221,0.627,227,2.061,250,1.835,253,0.752,255,1.033,259,1.305,265,0.76,283,3.81,325,2.974,329,3.168,330,4.118,332,2.974,333,4.326,334,4.326,340,4.027,342,2.974,343,3.757,371,3.525,390,2.036,398,2.846,506,5.305,507,3.768,508,7.284,509,4.855,510,6.133,511,5.482,512,4.199,513,3.768,514,4.855,515,7.063,516,4.855,517,4.855,518,4.855,519,4.855,520,4.855,521,3.188,522,4.855,523,4.855]],["title/interfaces/Breadcrumb.html",[524,0.968,525,2.531]],["body/interfaces/Breadcrumb.html",[3,0.191,4,0.191,8,0.171,10,0.435,20,1.187,23,0.385,24,1.087,40,0.016,42,0.437,43,1.054,44,1.571,49,0.316,50,0.317,55,3.419,56,0.255,57,0.232,58,2.492,64,1.868,68,0.437,81,1.718,110,0.011,111,0.011,184,1.049,213,2.137,218,2.552,220,0.792,221,0.956,226,0.851,227,1.402,234,2.556,248,2.241,250,1.706,251,2.74,253,0.682,255,0.888,258,1.237,259,1.183,260,0.851,265,0.653,273,3.011,280,1.456,463,1.093,524,1.571,525,4.972,526,1.927,527,3.238,528,6.55,529,4.104,530,3.415,531,4.083,532,4.809,533,4.083,534,3.593,535,3.945,536,3.195,537,3.65,538,4.105,539,4.437,540,3.238,541,3.195,542,2.137,543,2.74,544,4.852,545,3.609,546,3.609,547,3.609,548,1.529,549,3.609,550,3.609,551,2.26,552,3.609,553,3.609,554,4.314,555,3.609]],["title/components/BreadcrumbsComponent.html",[0,0.661,70,1.295]],["body/components/BreadcrumbsComponent.html",[0,1.228,1,1.136,2,1.841,3,0.155,4,0.155,5,1.354,6,1.354,7,1.354,8,0.139,10,0.501,11,2.452,16,1.616,17,2.461,18,1.136,19,2.821,21,2.114,23,0.188,24,0.94,26,0.753,27,3.301,28,1.002,30,3.412,32,1.425,39,0.836,40,0.016,41,1.807,42,0.367,44,1.208,49,0.283,50,0.257,56,0.155,57,0.188,58,1.549,62,1.354,63,1.925,64,1.616,65,1.089,66,2.441,67,1.354,68,0.422,69,1.354,70,2.049,71,1.354,72,1.089,73,2.441,74,1.354,75,1.354,76,1.136,77,1.354,78,1.089,79,1.089,80,1.354,81,1.044,82,1.238,83,1.354,84,1.136,85,1.354,86,1.089,87,1.354,88,1.044,89,1.354,90,1.089,91,0.922,92,1.186,93,1.925,94,1.089,95,1.354,96,0.606,97,1.136,98,1.354,99,1.354,100,1.089,101,1.002,102,2.359,103,1.294,104,1.186,105,1.089,106,1.354,107,1.089,108,1.294,109,1.354,110,0.01,111,0.01,179,1.425,213,3.122,214,1.094,220,0.481,221,0.436,226,1.461,244,2.763,248,2.049,249,3.412,252,2.68,255,0.719,259,0.719,260,1.141,265,0.876,279,2.336,283,1.731,307,2.945,347,1.294,419,2.359,452,2.961,525,4.702,530,2.463,531,3.734,541,4.045,542,3.428,544,5.703,548,2.233,554,3.731,556,2.924,557,4.808,558,4.808,559,4.159,560,4.159,561,4.808,562,3.157,563,4.808,564,5.596,565,4.808,566,6.886,567,6.095,568,6.095,569,1.942,570,4.808,571,3.38,572,4.159,573,4.159,574,4.808,575,4.159,576,3.38,577,4.808,578,4.808,579,4.808,580,4.808,581,4.808,582,3.38,583,3.731,584,4.159,585,3.38,586,2.604,587,3.38,588,3.38,589,3.38,590,3.38,591,4.808,592,3.38,593,3.38,594,3.38,595,2.463]],["title/injectables/BreadcrumbsService.html",[253,0.472,542,1.974]],["body/injectables/BreadcrumbsService.html",[3,0.186,4,0.186,8,0.167,10,0.569,20,1.157,23,0.409,24,1.069,26,0.856,28,0.94,32,1.62,39,0.817,40,0.016,41,1.206,42,0.405,43,0.934,44,1.82,49,0.312,50,0.309,55,2.851,56,0.25,57,0.226,58,2.372,64,1.368,68,0.405,81,1.257,110,0.011,111,0.011,184,1.023,213,2.8,218,2.093,220,0.779,221,0.797,226,1.115,227,1.838,234,2.493,248,2.435,250,1.879,251,2.672,253,0.67,255,0.866,258,1.206,259,1.163,260,1.259,265,0.637,273,2.204,280,1.728,359,1.63,463,1.617,524,1.374,525,5.111,527,3.159,528,6.369,529,3.142,530,2.085,531,3.349,532,3.52,533,3.349,534,3.548,535,2.888,536,2.339,537,2.672,538,4.521,539,5.031,540,4.243,541,3.957,542,2.8,543,3.59,544,5.621,545,3.52,546,4.729,547,4.729,548,2.003,549,4.729,550,3.52,551,2.204,552,3.52,553,3.52,554,5.502,555,3.52,596,4.07,597,4.07,598,4.07,599,4.07]],["title/directives/BulmaIsToggleableDirective.html",[65,1.242,105,1.242]],["body/directives/BulmaIsToggleableDirective.html",[3,0.187,4,0.187,8,0.168,10,0.426,18,1.375,19,2.01,23,0.227,24,1.073,26,0.859,28,1.033,32,1.626,39,0.925,40,0.016,41,1.626,42,0.434,43,1,44,1.379,49,0.207,50,0.311,56,0.187,57,0.409,65,2.288,68,0.268,104,1.436,105,1.768,110,0.011,111,0.011,220,0.583,221,0.528,248,2.081,252,2.413,260,1.449,265,0.641,293,2.596,370,4.259,392,2.687,419,2.01,438,2.811,600,6.377,601,3.54,602,5.487,603,6.615,604,4.259,605,4.747,606,7.665,607,6.459,608,5.795,609,5.4,610,6.191,611,3.894,612,4.747,613,4.259,614,6.191,615,5.487,616,7.788,617,5.487,618,6.191,619,6.191,620,2.507,621,3.54,622,4.092,623,4.092,624,2.666,625,4.092,626,4.092,627,4.092,628,4.092,629,2.507,630,3.54,631,4.092,632,4.092,633,4.092,634,4.092,635,4.092,636,4.092,637,3.54,638,6.191,639,4.092,640,5.487,641,4.092]],["title/interceptors/CacheInterceptor.html",[125,2.531,324,1.616]],["body/interceptors/CacheInterceptor.html",[3,0.184,4,0.184,8,0.165,10,0.564,16,1.349,23,0.223,24,1.059,26,0.848,28,0.873,32,1.606,39,0.6,40,0.016,42,0.402,44,1.361,49,0.332,50,0.305,56,0.184,57,0.223,58,1.294,68,0.263,91,2.085,110,0.011,111,0.011,125,3.557,139,1.349,150,1.24,220,0.572,221,0.518,230,2.404,247,4.204,248,1.821,250,1.673,253,0.664,255,0.854,259,1.153,260,1.44,265,0.96,280,1.719,283,3.617,319,3.557,324,2.753,325,2.459,329,3.027,330,4.198,332,2.459,333,4.02,334,4.02,340,3.557,342,2.459,343,3.318,344,3.116,345,1.24,354,2.828,357,2.636,369,2.074,371,3.113,387,1.684,389,4.658,416,2.17,419,1.471,433,3.845,642,3.473,643,4.351,644,3.845,645,5.417,646,3.845,647,7.218,648,4.658,649,7.062,650,6.131,651,6.131,652,4.015,653,6.131,654,5.417,655,5.417,656,4.758,657,6.131,658,5.417,659,4.015,660,6.564,661,5.417,662,4.015,663,5.417,664,4.204,665,4.204,666,4.015,667,4.015,668,4.015,669,4.015,670,4.015,671,3.116,672,4.015,673,4.015,674,5.417,675,7.062,676,4.015,677,3.473,678,4.015,679,4.015,680,3.116,681,4.015,682,4.015,683,4.015,684,4.015]],["title/components/ConsumerDetailComponent.html",[0,0.661,72,1.242]],["body/components/ConsumerDetailComponent.html",[0,0.897,1,1.01,2,1.69,3,0.138,4,0.138,5,1.203,6,1.203,7,1.203,8,0.123,11,2.355,16,1.484,17,2.302,18,1.01,19,2.777,21,1.941,23,0.167,24,0.863,26,0.691,27,3.125,28,1.033,32,1.822,39,0.782,40,0.016,41,1.822,42,0.464,43,0.872,44,1.545,49,0.345,50,0.228,55,1.387,56,0.138,57,0.167,58,0.968,62,1.203,63,1.768,64,1.484,65,0.968,66,2.311,67,1.203,68,0.484,69,1.203,70,1.01,71,1.203,72,1.859,73,2.574,74,2.462,75,1.203,76,1.01,77,1.203,78,0.968,79,0.968,80,1.203,81,0.928,82,1.1,83,1.203,84,1.01,85,1.203,86,0.968,87,1.203,88,2.053,89,1.203,90,0.968,91,1.205,92,1.054,93,1.768,94,0.968,95,1.203,96,1.034,97,1.01,98,1.203,99,1.203,100,0.968,101,0.89,102,1.1,103,2.004,104,1.054,105,0.968,106,1.203,107,0.968,108,1.15,109,1.203,110,0.009,111,0.009,150,0.928,184,0.755,214,0.863,220,0.629,221,0.829,231,1.941,255,0.639,260,1.355,280,1.156,463,1.156,497,3.426,530,1.539,538,3.437,541,3.008,542,2.955,620,1.84,685,2.684,686,2.728,687,5.686,688,5.686,689,5.686,690,2.331,691,3.715,692,3.819,693,5.56,694,2.986,695,5.234,696,4.037,697,3.694,698,5.317,699,4.415,700,4.478,701,2.598,702,3.534,703,5.234,704,3.789,705,5.234,706,4.095,707,4.415,708,4.415,709,4.478,710,3.004,711,3.004,712,3.004,713,3.004,714,4.415,715,3.004,716,4.062,717,2.598,718,2.598,719,2.331,720,3.004,721,2.598,722,3.004,723,2.132,724,2.598,725,2.598,726,2.331,727,3.004,728,3.133,729,2.132,730,2.331,731,4.415,732,3.004,733,3.004,734,3.426,735,3.004,736,3.004,737,3.004,738,2.598,739,3.004,740,2.598,741,3.004,742,2.331,743,3.004,744,2.598,745,3.004,746,3.004,747,3.004,748,2.331,749,1.459,750,3.004,751,2.598,752,3.004,753,3.004,754,3.004,755,2.132,756,3.004,757,3.004,758,3.004,759,3.004,760,3.004,761,3.004]],["title/injectables/ConsumersService.html",[253,0.472,704,2.531]],["body/injectables/ConsumersService.html",[3,0.217,4,0.217,8,0.195,14,3.684,20,1.35,23,0.263,24,0.928,26,0.946,28,0.861,39,0.709,40,0.016,42,0.485,43,0.82,49,0.366,50,0.361,56,0.277,57,0.263,68,0.474,110,0.012,111,0.012,139,1.595,150,1.466,179,1.792,184,1.193,191,1.595,214,1.182,218,2.877,220,0.861,221,0.78,250,1.911,253,0.741,255,1.01,258,1.407,260,1.233,265,0.743,280,1.583,354,1.901,359,1.901,366,2.728,367,3.234,369,2.315,386,2.792,387,2.535,390,1.99,398,1.739,403,1.99,410,1.99,415,2.087,416,1.901,417,2.192,463,1.742,533,2.907,685,2.437,686,2.437,694,2.306,696,3.117,704,3.97,709,3.684,749,2.306,762,3.368,763,6.046,764,4.746,765,6.046,766,5.163,767,4.746,768,2.087,769,2.192,770,4.106,771,4.746,772,3.684,773,5.23,774,4.106,775,6.046,776,4.746,777,6.046,778,4.746,779,2.728,780,2.306,781,2.431]],["title/interfaces/Error.html",[290,1.974,524,0.968]],["body/interfaces/Error.html",[3,0.228,4,0.228,8,0.205,10,0.709,12,3.053,23,0.277,24,1.219,40,0.016,42,0.491,43,1.081,56,0.228,68,0.467,110,0.013,111,0.013,221,1.007,224,2.865,290,4.103,295,4.304,369,2.73,449,4.587,463,1.782,524,1.253,526,2.302,548,1.826,782,4.312,783,3.869,784,4.985,785,3.274,786,5.534,787,5.534,788,5.534,789,5.534]],["title/components/ErrorComponent.html",[0,0.661,76,1.295]],["body/components/ErrorComponent.html",[0,1.16,1,1.073,2,1.766,3,0.211,4,0.146,5,1.278,6,1.278,7,1.278,8,0.131,10,0.618,11,2.539,12,2.826,17,1.403,18,1.073,19,2.8,21,2.029,23,0.177,24,0.902,26,0.722,28,1.006,32,1.367,39,0.689,40,0.016,41,0.946,42,0.463,43,0.996,44,0.802,49,0.274,50,0.243,56,0.146,57,0.177,62,1.278,63,1.848,64,1.551,65,1.028,66,2.378,67,1.278,68,0.476,69,1.278,70,1.073,71,1.278,72,1.028,73,2.378,74,1.278,75,1.278,76,1.995,77,1.278,78,1.028,79,1.028,80,1.278,81,0.986,82,1.169,83,1.278,84,1.073,85,1.278,86,1.028,87,1.278,88,0.986,89,1.278,90,1.028,91,0.871,92,1.119,93,1.848,94,1.028,95,1.278,96,0.572,97,1.073,98,1.278,99,1.278,100,1.028,101,0.946,102,1.169,103,1.222,104,1.119,105,1.028,106,1.278,107,1.028,108,1.222,109,1.278,110,0.009,111,0.009,179,0.946,213,2.363,214,1.16,220,0.455,221,0.937,226,1.414,252,2.029,259,0.982,260,0.941,265,1.06,287,3.991,290,3.914,293,1.935,295,3.773,322,3.991,369,2.513,419,1.985,438,2.363,449,4.021,463,1.208,540,3.581,548,1.69,586,2.499,604,3.581,785,3.03,786,4.888,787,4.888,788,4.888,789,4.888,790,2.76,791,3.581,792,4.614,793,3.991,794,4.614,795,6.298,796,5.419,797,5.937,798,5.419,799,3.191,800,5.481,801,3.899,802,3.191,803,3.991,804,4.614,805,4.608,806,3.274,807,3.191,808,4.614,809,3.191,810,3.191,811,3.191,812,3.191,813,3.191,814,3.191,815,3.581,816,3.191,817,3.191,818,3.581,819,3.991,820,2.265,821,2.76,822,4.614,823,3.191,824,2.76,825,3.991,826,2.76,827,3.191,828,3.191,829,3.191,830,3.191,831,4.687,832,4.614,833,3.191,834,4.614,835,4.614,836,6.298,837,3.191,838,3.191,839,3.191,840,3.191,841,3.191,842,3.581]],["title/interceptors/ErrorInterceptor.html",[126,2.36,324,1.616]],["body/interceptors/ErrorInterceptor.html",[3,0.197,4,0.197,8,0.177,10,0.662,16,1.449,23,0.239,26,0.889,28,0.809,39,0.644,40,0.016,42,0.372,49,0.355,50,0.328,56,0.197,57,0.239,58,1.831,64,1.91,68,0.372,110,0.011,111,0.011,126,3.48,139,1.449,150,1.332,213,2.91,214,1.242,220,0.809,221,0.733,226,1.432,248,1.91,250,1.734,253,0.697,254,4.409,255,0.918,259,1.352,265,0.995,279,2.76,280,1.129,283,3.692,290,3.595,324,3.023,325,2.641,329,3.082,330,4.299,332,2.641,333,4.137,334,4.137,342,2.641,343,3.48,347,1.651,369,2.586,391,3.06,416,2.275,536,3.265,569,2.478,648,4.032,656,4.409,671,3.347,786,3.347,787,3.347,788,3.347,789,3.347,793,4.915,801,4.897,806,5.115,821,3.73,843,3.73,844,5.681,845,4.915,846,5.681,847,4.312,848,5.842,849,4.312,850,5.681,851,4.915,852,4.312,853,4.312,854,4.312,855,4.312,856,4.312,857,4.312,858,4.312,859,4.312,860,4.312,861,4.312,862,4.312,863,4.312,864,4.312,865,4.312,866,4.312,867,4.312,868,4.312]],["title/injectables/ErrorService.html",[253,0.472,801,2.531]],["body/injectables/ErrorService.html",[3,0.205,4,0.205,8,0.184,10,0.674,20,1.274,23,0.249,24,1.139,26,0.912,28,0.922,32,1.328,39,0.669,40,0.016,41,1.328,42,0.382,44,1.126,49,0.328,50,0.341,56,0.205,57,0.249,58,2.209,68,0.382,110,0.012,111,0.012,126,4.199,130,3.156,184,1.126,214,1.265,218,2.91,220,0.83,221,0.752,226,1.398,227,1.958,248,1.958,253,0.714,254,4.522,258,1.328,259,1.24,280,1.526,290,4.034,303,5.04,340,3.826,347,1.716,357,4.991,359,1.795,419,2.134,586,3.156,624,2.83,680,3.478,702,2.745,801,3.826,806,4.865,848,5.93,869,3.876,870,5.826,871,7.106,872,3.876,873,5.826,874,5.826,875,6.855,876,4.522,877,5.826,878,5.04,879,5.826,880,5.826,881,4.481,882,5.04,883,5.6,884,5.826,885,3.876,886,4.481,887,4.481,888,4.481]],["title/components/ExampleComponent.html",[0,0.661,78,1.242]],["body/components/ExampleComponent.html",[0,1.252,1,1.648,2,2.363,3,0.224,4,0.224,5,1.964,6,1.964,7,1.964,8,0.201,10,0.511,11,2.732,17,2.156,18,1.648,19,2.922,21,2.714,40,0.016,49,0.248,50,0.373,56,0.224,57,0.272,62,1.964,63,2.472,64,2.074,65,1.58,66,2.839,67,1.964,68,0.465,69,1.964,70,1.648,71,1.964,72,1.58,73,2.839,74,1.964,75,1.964,76,1.648,77,1.964,78,2.284,79,1.58,80,1.964,81,1.515,82,1.796,83,1.964,84,1.648,85,1.964,86,1.58,87,1.964,88,1.515,89,1.964,90,1.58,91,1.338,92,1.72,93,2.472,94,1.58,95,1.964,96,0.879,97,1.648,98,1.964,99,1.964,100,1.58,101,1.453,102,1.796,103,1.877,104,1.72,105,1.58,106,1.964,107,1.58,108,1.877,109,1.964,110,0.012,111,0.012,595,3.161,889,4.241,890,5.338,891,4.342,892,6.171,893,4.38,894,6.171]],["title/modules/ExampleModule.html",[112,1.779,895,2.735]],["body/modules/ExampleModule.html",[3,0.246,4,0.246,8,0.22,10,0.559,40,0.016,49,0.37,50,0.408,56,0.246,57,0.298,78,2.564,110,0.013,111,0.013,112,3.012,114,2.605,115,3.749,122,4.381,129,3.996,130,2.905,131,3.082,133,4.63,135,4.284,140,4.284,147,4.63,148,2.905,149,2.905,150,1.657,198,5.063,890,5.643,891,3.996,895,5.567,896,4.639,897,5.363,898,4.639,899,4.639,900,5.363,901,5.363]],["title/injectables/ExampleService.html",[253,0.472,902,2.991]],["body/injectables/ExampleService.html",[3,0.273,4,0.273,8,0.245,10,0.62,20,1.693,40,0.016,49,0.301,50,0.453,56,0.273,57,0.33,110,0.014,111,0.014,226,1.416,253,0.851,258,1.765,359,2.385,891,4.253,902,5.389,903,5.151,904,6.943,905,6.006]],["title/interfaces/ForecastEntry.html",[524,0.968,906,2.36]],["body/interfaces/ForecastEntry.html",[3,0.199,4,0.199,8,0.178,20,1.233,23,0.241,24,1.115,40,0.016,42,0.418,43,0.979,49,0.356,50,0.33,56,0.322,57,0.241,68,0.284,96,0.777,101,1.69,110,0.011,111,0.011,139,1.458,150,1.34,179,1.286,184,1.09,191,1.458,214,0.848,218,2.44,226,0.885,228,2.003,230,1.589,250,1.739,253,0.699,255,0.923,258,1.286,260,1.163,265,0.679,280,1.494,345,1.969,354,1.737,367,2.633,369,1.661,386,2.633,387,2.392,390,1.819,398,1.589,402,3.467,403,1.819,410,1.819,415,1.907,416,1.737,417,2.003,463,1.927,524,1.601,526,2.003,548,1.589,685,1.589,686,2.48,768,1.907,769,2.003,779,2.493,780,2.107,781,2.222,906,4.146,907,2.107,908,2.493,909,4.618,910,3.698,911,2.493,912,3.078,913,3.493,914,4.184,915,4.184,916,4.184,917,2.493,918,3.078,919,4.991,920,3.278,921,3.078,922,3.078,923,3.078,924,3.078,925,3.078,926,3.078,927,4.048,928,3.078,929,2.848,930,2.848,931,3.078,932,2.493,933,2.848,934,3.078,935,3.078,936,3.078,937,2.493,938,3.078,939,3.078,940,2.848,941,3.078,942,3.078,943,3.078,944,3.078,945,3.078,946,3.078,947,3.078]],["title/interfaces/ForecastResponse.html",[524,0.968,917,2.215]],["body/interfaces/ForecastResponse.html",[3,0.197,4,0.197,8,0.177,20,1.226,23,0.239,24,1.111,40,0.016,42,0.482,43,0.978,49,0.355,50,0.328,56,0.321,57,0.239,68,0.283,96,0.773,101,1.684,110,0.011,111,0.011,139,1.449,150,1.332,179,1.278,184,1.084,191,1.449,214,0.843,218,2.433,226,0.88,228,1.991,230,1.58,250,1.734,253,0.697,255,0.918,258,1.278,260,1.159,265,0.675,280,1.488,345,1.963,354,1.727,367,2.623,369,1.651,386,2.623,387,2.383,390,1.808,398,1.58,402,2.209,403,1.808,410,1.808,415,1.896,416,1.727,417,1.991,463,1.924,524,1.597,526,1.991,548,1.58,685,1.58,686,2.474,768,1.896,769,1.991,779,2.478,780,2.095,781,2.209,906,3.892,907,2.095,908,2.478,909,3.731,910,2.91,911,2.478,912,3.06,913,3.48,914,4.172,915,4.172,916,4.172,917,3.265,918,4.793,919,4.981,920,3.265,921,4.793,922,3.06,923,3.06,924,3.06,925,3.06,926,3.06,927,4.032,928,3.06,929,2.832,930,2.832,931,3.06,932,2.478,933,2.832,934,3.06,935,3.06,936,3.06,937,2.478,938,3.06,939,3.06,940,2.832,941,3.06,942,3.06,943,3.06,944,3.06,945,3.06,946,3.06,947,3.06,948,4.793]],["title/interfaces/ForecastUsage.html",[524,0.968,932,2.215]],["body/interfaces/ForecastUsage.html",[3,0.195,4,0.195,8,0.175,20,1.209,23,0.236,24,1.1,40,0.016,42,0.458,43,1.009,49,0.353,50,0.323,56,0.32,57,0.236,68,0.279,96,0.762,101,1.668,110,0.011,111,0.011,139,1.429,150,1.313,179,1.26,184,1.068,191,1.429,214,0.831,218,2.415,226,0.867,228,1.963,230,1.557,250,1.722,253,0.69,255,0.904,258,1.26,260,1.148,265,0.665,280,1.474,345,1.949,354,1.702,367,2.599,369,1.627,386,2.599,387,2.36,390,1.782,398,1.557,402,2.177,403,1.782,410,1.782,415,1.869,416,1.702,417,1.963,463,2.03,524,1.585,526,1.963,548,1.557,685,1.557,686,2.46,768,1.869,769,1.963,779,2.443,780,2.065,781,2.177,906,3.864,907,2.065,908,2.443,909,3.695,910,2.883,911,2.443,912,3.016,913,3.447,914,4.143,915,4.143,916,4.143,917,2.443,918,3.016,919,4.958,920,3.234,921,3.016,922,3.016,923,3.016,924,3.016,925,3.016,926,3.016,927,4.958,928,3.016,929,2.791,930,2.791,931,3.016,932,3.234,933,4.41,934,4.766,935,4.766,936,3.016,937,2.443,938,3.016,939,3.016,940,2.791,941,3.016,942,3.016,943,3.016,944,3.016,945,3.016,946,3.016,947,3.016]],["title/components/FrameComponent.html",[0,0.661,79,1.242]],["body/components/FrameComponent.html",[0,1.084,1,1.084,2,1.78,3,0.148,4,0.148,5,1.292,6,1.292,7,1.292,8,0.132,10,0.484,11,2.547,17,1.418,18,1.084,19,2.804,21,2.045,23,0.179,26,0.728,28,0.939,39,0.814,40,0.016,41,1.616,42,0.357,45,2.848,46,3.609,49,0.32,50,0.245,56,0.148,57,0.179,62,1.292,63,1.862,64,1.563,65,1.039,66,2.39,67,1.292,68,0.445,69,1.292,70,1.084,71,1.292,72,1.039,73,2.39,74,1.292,75,1.292,76,1.084,77,1.292,78,1.039,79,1.922,80,1.292,81,0.997,82,1.182,83,1.292,84,1.084,85,1.292,86,1.039,87,1.292,88,0.997,89,1.292,90,1.039,91,0.88,92,1.132,93,1.862,94,1.039,95,1.292,96,0.578,97,1.084,98,1.292,99,1.292,100,1.039,101,0.956,102,1.182,103,1.235,104,1.132,105,1.039,106,1.292,107,1.039,108,1.235,109,1.292,110,0.009,111,0.009,131,2.672,179,0.956,184,0.811,195,3.655,203,3.894,209,2.503,214,1.166,216,3.429,217,4.16,218,2.752,220,0.777,221,0.704,222,4.235,223,3.918,226,0.948,228,2.147,229,2.518,230,1.703,231,2.045,248,2.215,249,4.235,252,2.897,256,3.3,259,1.27,260,1.217,265,0.728,300,2.79,318,1.854,364,5.7,419,1.703,438,2.382,548,1.703,595,3.832,949,2.79,950,4.65,951,4.65,952,4.65,953,4.65,954,5.967,955,4.65,956,4.716,957,4.716,958,2.79,959,5.967,960,4.235,961,3.226,962,2.259,963,4.65,964,4.716,965,3.226,966,4.65,967,4.65,968,2.79,969,3.226,970,5.395,971,3.429,972,5.709,973,2.79,974,3.226,975,2.79,976,3.226,977,3.918,978,2.79,979,3.226,980,3.226,981,3.226,982,2.503,983,3.226,984,3.226,985,4.65,986,2.79,987,4.65,988,2.79,989,3.226,990,3.226,991,2.79,992,3.226,993,2.79,994,3.3,995,4.65,996,4.65,997,4.65,998,4.65,999,4.65,1000,4.65,1001,4.65,1002,4.65]],["title/components/IonIconComponent.html",[0,0.661,81,1.191]],["body/components/IonIconComponent.html",[0,1.205,1,1.222,2,1.938,3,0.167,4,0.167,5,1.456,6,1.456,7,1.456,8,0.149,10,0.527,11,2.51,15,5.318,18,1.222,19,2.846,23,0.202,28,0.829,39,0.543,40,0.016,41,1.078,42,0.382,43,0.854,48,5.037,49,0.184,50,0.276,55,3.31,56,0.167,57,0.202,58,1.172,62,1.456,63,2.027,64,2.363,65,1.172,66,2.521,67,1.456,68,0.509,69,1.456,70,1.222,71,1.456,72,1.172,73,2.521,74,1.456,75,1.456,76,1.222,77,1.456,78,1.172,79,1.172,80,1.456,81,1.945,82,2.51,83,1.456,84,1.222,85,1.456,86,1.172,87,1.456,88,1.124,89,1.456,90,1.172,91,0.992,92,1.276,93,2.027,94,1.172,95,1.456,96,0.652,97,1.222,98,1.456,99,1.456,100,1.172,101,1.078,102,1.332,103,1.392,104,1.276,105,1.172,106,1.456,107,1.172,108,1.392,109,1.456,110,0.01,111,0.01,214,1.138,220,0.721,221,0.653,227,2.224,232,4.519,248,1.222,259,0.774,273,2.742,327,3.928,347,1.392,402,2.593,438,2.593,452,3.058,485,5.037,548,1.854,584,5.928,611,3.592,629,3.1,646,3.592,729,5.168,803,4.379,893,3.592,1003,5.446,1004,4.886,1005,3.145,1006,6.296,1007,3.592,1008,5.062,1009,5.062,1010,5.062,1011,3.636,1012,4.886,1013,3.636,1014,5.823,1015,5.062,1016,5.062,1017,5.823,1018,5.037,1019,5.823,1020,5.823,1021,5.318,1022,5.823,1023,5.823,1024,5.037,1025,5.037,1026,5.823,1027,5.037,1028,4.519,1029,5.823,1030,5.823,1031,3.636,1032,3.636,1033,3.636]],["title/directives/LangSelectorDirective.html",[65,1.242,107,1.242]],["body/directives/LangSelectorDirective.html",[3,0.212,4,0.212,8,0.19,10,0.62,18,1.555,19,2.179,23,0.257,26,0.931,28,0.988,39,0.691,40,0.016,41,1.372,42,0.39,43,0.807,49,0.301,50,0.352,56,0.212,57,0.257,64,2.21,65,2.408,68,0.303,104,1.623,107,1.917,108,2.657,110,0.012,111,0.012,148,2.507,149,2.507,214,1.285,220,0.659,221,0.597,226,1.524,244,3.419,248,1.999,259,0.985,265,0.724,273,3.222,307,3.644,345,2.218,347,1.772,350,5.102,385,3.561,452,2.89,531,3.644,537,4.907,583,5.102,605,5.687,611,4.222,612,5.146,613,4.617,620,2.835,621,4.003,624,2.89,629,2.835,630,4.003,637,4.003,994,4.925,1034,6.209,1035,4.003,1036,5.427,1037,6.939,1038,4.628,1039,4.628,1040,4.628,1041,5.094,1042,5.949,1043,4.628,1044,5.949,1045,4.628,1046,4.628]],["title/interfaces/LayerData.html",[524,0.968,1047,2.215]],["body/interfaces/LayerData.html",[3,0.22,4,0.22,8,0.198,10,0.502,18,1.619,23,0.267,24,1.193,32,1.427,35,2.683,40,0.016,42,0.494,43,0.909,49,0.244,56,0.322,68,0.4,96,1.302,110,0.012,111,0.012,224,3.507,227,1.619,230,2.235,260,0.982,295,2.767,345,1.885,433,4.33,463,1.998,524,1.533,526,2.223,543,4.007,694,2.964,749,3.254,1047,3.849,1048,3.417,1049,3.417,1050,5.794,1051,3.507,1052,4.007,1053,4.875,1054,4.673,1055,5.278,1056,5.278,1057,4.313,1058,3.417,1059,3.737,1060,3.737,1061,4.165,1062,4.451,1063,4.165,1064,4.165,1065,4.165,1066,3.417,1067,4.165]],["title/components/LoaderComponent.html",[0,0.661,84,1.295]],["body/components/LoaderComponent.html",[0,1.095,1,1.111,2,1.811,3,0.151,4,0.151,5,1.323,6,1.323,7,1.323,8,0.136,10,0.493,11,2.563,12,3.696,16,1.59,17,2.43,18,1.111,19,2.812,21,2.08,23,0.263,24,0.925,26,0.741,27,3.268,28,0.859,30,3.358,32,1.402,39,0.494,40,0.016,41,1.402,42,0.31,43,0.642,44,1.389,49,0.239,50,0.251,56,0.151,57,0.183,62,1.323,63,1.895,64,1.59,65,1.065,66,2.416,67,1.323,68,0.419,69,1.323,70,1.111,71,1.323,72,1.065,73,2.416,74,1.323,75,1.323,76,1.111,77,1.323,78,1.065,79,1.065,80,1.323,81,1.021,82,1.211,83,1.323,84,2.028,85,1.323,86,1.065,87,1.323,88,1.021,89,1.323,90,1.065,91,0.902,92,1.159,93,1.895,94,1.065,95,1.323,96,0.592,97,1.111,98,1.323,99,1.323,100,1.065,101,0.979,102,1.211,103,1.265,104,1.159,105,1.065,106,1.323,107,1.065,108,1.265,109,1.323,110,0.01,111,0.01,131,2.719,166,3.102,214,1.08,220,0.471,221,0.426,226,1.395,259,0.703,277,3.672,307,2.898,319,3.107,347,1.265,419,1.733,445,1.79,530,2.423,548,2.339,551,3.458,560,2.859,569,1.899,586,2.563,595,2.423,608,3.672,691,2.345,785,4.193,791,3.672,876,3.672,878,4.093,1068,2.859,1069,2.859,1070,4.965,1071,6.034,1072,4.731,1073,4.093,1074,6.252,1075,4.731,1076,5.219,1077,4.093,1078,5.526,1079,4.731,1080,4.78,1081,5.526,1082,3.696,1083,3.305,1084,4.093,1085,4.731,1086,3.305,1087,3.305,1088,3.305,1089,2.565,1090,3.305,1091,3.305,1092,3.305,1093,3.305,1094,2.565,1095,2.859,1096,3.305,1097,5.523,1098,3.922,1099,6.385,1100,6.034,1101,6.034,1102,4.731,1103,5.526,1104,5.526,1105,3.305,1106,6.643,1107,3.305,1108,4.731,1109,3.305,1110,3.305,1111,3.305,1112,3.305,1113,3.305,1114,4.731,1115,3.672,1116,4.731,1117,6.034,1118,4.731,1119,4.731,1120,4.731,1121,3.305,1122,4.093,1123,3.305,1124,3.305,1125,3.305,1126,3.305,1127,3.305,1128,5.526,1129,3.305,1130,2.859,1131,2.859,1132,2.859,1133,3.305]],["title/guards/LoaderGuard.html",[189,2.531,199,2.087]],["body/guards/LoaderGuard.html",[3,0.224,4,0.224,8,0.201,10,0.642,16,1.645,20,1.392,23,0.272,26,0.965,28,0.961,40,0.016,42,0.321,49,0.358,50,0.372,56,0.224,57,0.272,68,0.321,110,0.012,111,0.012,130,3.339,166,2.995,179,2.1,183,4.339,184,1.23,189,4.048,192,4.895,199,3.339,200,3.214,214,1.319,220,0.697,221,0.632,226,1.489,234,2.998,236,3.799,250,1.336,251,3.214,253,0.756,255,1.042,258,1.451,259,1.042,265,0.965,347,1.874,569,2.813,1082,4.339,1089,3.799,1134,4.234,1135,6.165,1136,7.655,1137,6.165,1138,7.455,1139,4.895,1140,6.448,1141,6.448,1142,4.895,1143,5.333,1144,4.895,1145,6.165,1146,6.165]],["title/interceptors/LoaderInterceptor.html",[127,2.531,324,1.616]],["body/interceptors/LoaderInterceptor.html",[3,0.197,4,0.197,8,0.177,10,0.661,16,1.445,23,0.239,26,0.888,28,0.808,39,0.948,40,0.016,42,0.372,43,0.583,44,1.081,49,0.355,50,0.327,56,0.197,57,0.239,58,2.044,68,0.372,110,0.011,111,0.011,127,3.724,139,1.445,150,1.328,166,2.755,214,1.24,220,0.808,221,0.732,226,1.538,248,2.267,250,1.965,253,0.695,255,0.915,259,1.35,265,1.056,279,3.277,280,1.126,283,3.689,324,2.829,325,2.634,329,3.02,330,3.473,332,3.473,333,4.132,334,4.132,342,2.634,343,3.473,344,3.337,347,1.646,416,2.884,569,2.471,573,4.905,586,3.071,665,4.401,671,4.401,680,4.401,768,3.083,1070,4.024,1082,4.411,1089,3.337,1140,6.229,1141,4.905,1147,3.719,1148,5.671,1149,4.905,1150,4.3,1151,4.3,1152,5.671,1153,4.3,1154,5.671,1155,4.3,1156,2.634,1157,4.3,1158,4.3,1159,4.3,1160,4.3,1161,4.3,1162,4.3,1163,4.3,1164,3.337,1165,5.671]],["title/injectables/LoaderService.html",[253,0.472,1082,2.36]],["body/injectables/LoaderService.html",[0,1.22,3,0.162,4,0.162,8,0.145,10,0.517,11,2.277,20,1.005,23,0.196,24,0.97,26,0.776,28,1.014,32,1.843,39,0.929,40,0.016,41,1.47,42,0.376,43,0.888,44,1.562,49,0.251,50,0.269,56,0.162,57,0.196,58,2.11,68,0.232,91,1.696,110,0.01,111,0.01,166,3.458,199,2.687,220,0.503,221,0.74,226,1.268,227,1.667,250,1.974,253,0.608,255,0.752,258,1.047,259,1.056,260,1.526,261,3.257,265,0.776,277,3.85,280,1.778,324,2.08,329,2.08,350,4.825,359,1.415,361,4.291,371,4.091,434,3.52,438,2.541,446,3.257,449,3.038,530,2.541,539,5.134,548,2.686,586,3.367,624,3.458,982,3.85,1070,4.949,1074,4.291,1076,5.873,1080,4.959,1082,3.038,1084,4.291,1156,4.271,1166,3.056,1167,4.96,1168,4.96,1169,4.96,1170,5.733,1171,5.733,1172,5.733,1173,5.733,1174,4.96,1175,6.217,1176,4.96,1177,6.79,1178,3.533,1179,4.96,1180,5.733,1181,2.32,1182,4.291,1183,3.533,1184,3.533,1185,3.85,1186,3.533,1187,6.217,1188,6.217,1189,3.533,1190,4.96,1191,3.533,1192,3.52,1193,3.533,1194,3.533,1195,3.533,1196,3.533,1197,3.533,1198,3.533,1199,3.533,1200,3.533,1201,4.96,1202,3.533,1203,3.533,1204,4.96,1205,3.533,1206,4.96,1207,3.533,1208,3.533]],["title/components/LoginComponent.html",[0,0.661,86,1.242]],["body/components/LoginComponent.html",[0,1.072,1,1.054,2,1.745,3,0.144,4,0.144,5,1.256,6,1.256,7,1.256,8,0.129,10,0.559,11,2.527,12,2.791,17,1.379,18,1.054,19,2.793,21,2.004,23,0.174,24,0.891,26,0.713,28,0.839,32,1.351,39,0.469,40,0.016,41,1.351,42,0.386,43,0.618,44,0.788,45,2.791,46,3.537,49,0.341,50,0.238,56,0.144,57,0.174,62,1.256,63,2.359,64,1.98,65,1.011,66,2.359,67,1.256,68,0.428,69,1.256,70,1.054,71,1.256,72,1.011,73,2.359,74,1.256,75,1.256,76,1.054,77,1.256,78,1.011,79,1.011,80,1.256,81,0.969,82,1.149,83,1.256,84,1.054,85,1.256,86,1.898,87,1.256,88,0.969,89,1.256,90,1.011,91,0.856,92,1.1,93,1.825,94,1.011,95,1.256,96,0.562,97,1.054,98,1.256,99,1.256,100,1.011,101,0.93,102,1.149,103,1.201,104,1.1,105,1.011,106,1.256,107,1.011,108,1.201,109,1.256,110,0.009,111,0.009,142,2.435,184,0.788,191,1.532,195,4.561,203,3.535,206,2.226,214,1.151,216,3.385,217,4.125,218,2.735,220,0.649,221,0.588,222,4.18,224,2.619,225,3.537,226,1.201,228,2.104,229,2.907,230,1.669,231,2.961,244,2.619,249,4.18,256,2.226,257,2.714,259,1.331,260,1.201,270,2.714,275,2.714,276,2.435,283,1.607,284,1.921,290,3.534,291,4.642,293,1.911,302,2.714,310,2.714,312,2.714,317,2.714,358,2.714,373,4.165,376,2.435,407,3.537,419,1.966,445,2.468,583,4.571,595,3.534,620,1.921,624,2.214,629,2.791,702,3.608,723,2.226,824,2.714,825,3.942,958,2.714,991,2.714,993,2.714,1012,4.165,1209,2.714,1210,4.557,1211,6.256,1212,5.367,1213,4.557,1214,4.557,1215,4.557,1216,4.557,1217,5.89,1218,3.137,1219,3.942,1220,4.557,1221,4.557,1222,4.557,1223,3.942,1224,3.942,1225,4.557,1226,4.557,1227,3.137,1228,3.137,1229,3.942,1230,3.137,1231,3.942,1232,3.137,1233,3.137,1234,3.137,1235,3.137,1236,3.137,1237,3.137,1238,3.137,1239,3.137,1240,3.137,1241,3.137,1242,3.137,1243,3.137,1244,3.234,1245,3.137,1246,3.137,1247,3.137,1248,3.137,1249,3.137,1250,4.557,1251,4.557,1252,3.137,1253,3.137,1254,3.137,1255,3.137,1256,3.137,1257,2.714,1258,4.557,1259,4.557,1260,4.557,1261,4.557,1262,4.557]],["title/components/MapComponent.html",[0,0.661,88,1.191]],["body/components/MapComponent.html",[0,0.709,1,0.462,2,0.903,3,0.063,4,0.063,5,0.944,6,0.55,7,0.55,8,0.056,10,0.246,11,1.654,16,0.792,17,1.362,18,0.462,19,2.38,23,0.076,24,0.718,26,0.369,27,1.99,28,1.015,30,1.673,31,1.83,32,1.776,34,0.703,35,1.616,39,0.618,40,0.016,41,1.511,42,0.471,43,0.829,44,1.589,49,0.27,50,0.104,56,0.063,57,0.076,58,2.094,62,0.55,63,1.935,64,1.235,65,0.442,66,1.472,67,0.55,68,0.408,69,0.55,70,0.462,71,0.55,72,0.442,73,1.472,74,0.55,75,0.55,76,0.462,77,0.55,78,0.442,79,0.442,80,0.55,81,0.424,82,0.503,83,0.55,84,0.462,85,0.55,86,0.442,87,0.55,88,1.135,89,0.55,90,0.442,91,2.027,92,0.482,93,0.944,94,0.442,95,0.55,96,1.15,97,0.462,98,0.55,99,0.55,100,0.442,101,0.407,102,0.503,103,0.526,104,0.482,105,0.442,106,0.55,107,0.442,108,0.526,109,0.55,110,0.005,111,0.005,129,3.745,130,0.744,179,1.226,191,0.792,205,2.404,213,1.587,214,0.606,220,0.441,221,0.688,226,1.04,227,2.126,228,1.089,230,0.864,248,1.39,250,1.232,252,1.616,255,0.292,259,0.292,260,1.484,273,0.744,280,1.447,293,0.989,295,2.112,307,3.264,318,2.93,339,0.902,345,1.889,347,0.526,352,2.68,371,0.789,385,2.241,392,0.902,398,1.346,404,1.83,410,0.989,419,0.503,434,0.975,438,1.208,445,2.886,451,2.762,463,0.811,531,3.123,534,1.78,536,1.355,538,3.744,539,3.781,548,2.28,551,0.744,569,0.789,611,1.673,620,0.841,624,2.844,629,4.179,644,1.673,646,1.673,691,2.199,694,1.145,697,2.777,700,2.852,719,1.066,723,0.975,730,1.066,749,1.145,785,0.902,815,1.066,882,2.039,883,2.68,885,3.179,891,1.444,893,2.936,910,3.069,920,0.789,933,1.548,962,3.157,1012,2.404,1021,2.404,1025,1.188,1028,1.83,1041,3.205,1047,2.777,1051,4.164,1052,3.744,1054,3.67,1058,0.975,1059,0.841,1060,1.066,1062,2.251,1068,1.188,1073,2.68,1077,2.039,1098,0.975,1115,1.83,1122,4.781,1131,3.179,1185,2.852,1192,0.975,1263,1.066,1264,1.83,1265,2.358,1266,3.098,1267,5.549,1268,4.932,1269,3.098,1270,3.098,1271,4.046,1272,3.098,1273,3.098,1274,3.675,1275,4.137,1276,3.675,1277,4.609,1278,2.358,1279,3.098,1280,3.098,1281,3.098,1282,3.675,1283,5.156,1284,2.358,1285,2.358,1286,2.251,1287,1.373,1288,1.373,1289,1.373,1290,2.358,1291,3.098,1292,2.852,1293,2.404,1294,3.098,1295,3.098,1296,3.444,1297,3.098,1298,3.098,1299,2.199,1300,2.404,1301,2.68,1302,3.098,1303,3.098,1304,3.675,1305,2.68,1306,3.098,1307,3.098,1308,3.098,1309,1.373,1310,2.358,1311,2.358,1312,1.373,1313,2.358,1314,2.358,1315,2.358,1316,2.358,1317,1.373,1318,3.179,1319,1.373,1320,3.675,1321,2.358,1322,1.373,1323,2.358,1324,1.373,1325,3.675,1326,1.373,1327,1.373,1328,1.373,1329,2.358,1330,1.373,1331,2.358,1332,2.358,1333,2.358,1334,1.373,1335,4.411,1336,2.358,1337,2.358,1338,2.358,1339,3.675,1340,1.373,1341,1.373,1342,1.373,1343,2.358,1344,4.932,1345,1.373,1346,2.358,1347,2.039,1348,1.373,1349,1.373,1350,2.039,1351,1.373,1352,3.098,1353,1.373,1354,1.373,1355,1.373,1356,3.675,1357,2.039,1358,2.358,1359,1.373,1360,2.358,1361,3.675,1362,1.373,1363,1.373,1364,1.373,1365,1.373,1366,1.373,1367,1.373,1368,1.373,1369,2.358,1370,1.373,1371,1.373,1372,1.373,1373,1.373,1374,1.373,1375,2.358,1376,2.358,1377,1.373,1378,1.373,1379,0.975,1380,1.373,1381,1.373,1382,1.373,1383,1.373,1384,1.373,1385,1.373,1386,1.188,1387,1.188,1388,1.188,1389,1.188,1390,1.188,1391,2.039,1392,1.188,1393,1.373,1394,1.373,1395,1.373,1396,1.373,1397,1.373,1398,1.373,1399,1.373,1400,1.373,1401,1.373,1402,1.373,1403,1.373,1404,1.373,1405,1.373,1406,1.373,1407,1.373,1408,1.373,1409,1.373,1410,1.373,1411,1.373,1412,1.373,1413,1.373,1414,2.358,1415,1.373,1416,2.358,1417,1.373,1418,2.358,1419,2.358,1420,1.373,1421,2.358,1422,1.373,1423,1.373,1424,1.373,1425,2.358,1426,1.373,1427,1.373,1428,1.373,1429,1.373,1430,1.066,1431,1.373,1432,1.373,1433,1.373,1434,1.373,1435,1.373,1436,1.373,1437,1.373,1438,1.373,1439,1.373,1440,1.373,1441,1.373,1442,1.373,1443,1.373,1444,1.373,1445,3.098,1446,2.358,1447,3.098,1448,1.373,1449,3.098,1450,1.373,1451,1.373,1452,3.098,1453,1.373,1454,1.373,1455,1.373,1456,3.098,1457,1.373,1458,1.373,1459,1.373,1460,1.373,1461,1.373,1462,1.373,1463,1.373,1464,1.373,1465,0.841,1466,1.188,1467,1.188,1468,2.358,1469,1.373,1470,2.358,1471,1.373,1472,1.373,1473,1.373,1474,2.358,1475,1.373,1476,1.373,1477,1.373,1478,1.373,1479,2.358,1480,1.373,1481,1.373,1482,1.373,1483,1.373,1484,1.373,1485,2.358,1486,1.373,1487,1.188,1488,1.373,1489,1.188,1490,1.066,1491,1.373,1492,3.098,1493,1.373,1494,1.373,1495,1.373,1496,1.373,1497,1.373,1498,1.373,1499,1.373,1500,1.373,1501,1.373,1502,1.373,1503,1.373,1504,1.373,1505,2.358,1506,2.358,1507,1.373,1508,1.373,1509,1.373,1510,1.373,1511,1.373,1512,1.373,1513,1.373,1514,1.373,1515,2.358,1516,1.373,1517,1.373,1518,1.373,1519,2.358,1520,1.373,1521,1.373]],["title/interfaces/MapDB.html",[524,0.968,1522,2.735]],["body/interfaces/MapDB.html",[3,0.133,4,0.133,8,0.119,10,0.302,20,0.824,23,0.161,24,0.84,35,1.274,40,0.017,42,0.431,43,0.822,44,1.595,49,0.349,50,0.22,56,0.133,57,0.161,58,1.652,68,0.19,91,1.792,96,1.29,110,0.009,111,0.009,139,0.974,166,1.408,179,1.681,191,1.723,214,0.567,226,0.877,227,1.906,228,1.338,230,1.062,242,2.249,252,1.274,253,0.527,255,0.617,258,0.859,259,1.207,260,0.591,261,2.823,265,0.888,279,1.408,280,1.342,329,2.378,345,2.029,347,1.11,354,1.161,367,1.985,369,2.171,385,2.776,386,1.985,387,1.803,388,3.337,390,1.215,398,1.575,403,1.215,410,1.215,415,1.274,416,1.161,417,1.338,419,1.062,446,1.903,451,2.329,452,2.089,463,1.126,521,3.724,524,0.728,526,1.338,529,3.646,533,3.473,534,3.259,551,2.776,562,1.903,643,2.057,749,1.408,768,1.274,769,1.338,780,1.408,781,1.485,842,2.249,948,4.024,962,3.456,1007,3.051,1047,3.646,1051,3.259,1052,3.366,1053,3.366,1054,4.457,1057,4.023,1059,1.775,1062,3.473,1066,2.057,1156,1.775,1192,4.299,1286,1.775,1296,4.22,1299,2.057,1300,2.249,1430,2.249,1465,1.775,1490,2.249,1522,3.051,1523,2.057,1524,3.978,1525,5.589,1526,3.719,1527,4.434,1528,5.489,1529,4.905,1530,3.719,1531,3.978,1532,3.719,1533,4.905,1534,4.434,1535,4.434,1536,4.701,1537,3.719,1538,3.719,1539,2.507,1540,3.978,1541,2.507,1542,3.051,1543,2.249,1544,2.057,1545,1.903,1546,3.051,1547,2.507,1548,4.434,1549,3.719,1550,2.507,1551,2.507,1552,3.719,1553,3.719,1554,3.719,1555,2.507,1556,2.507,1557,3.719,1558,2.507,1559,2.507,1560,2.507,1561,2.507,1562,2.507,1563,2.249,1564,4.905,1565,2.507,1566,2.507,1567,2.507,1568,3.719,1569,4.434,1570,2.507,1571,4.434,1572,3.719,1573,2.507,1574,3.719,1575,2.507,1576,3.337,1577,3.719,1578,3.719,1579,2.507,1580,2.507,1581,2.507,1582,2.507,1583,3.719,1584,2.507,1585,2.507,1586,2.507,1587,2.507,1588,2.507,1589,2.507,1590,2.507,1591,2.507,1592,3.719,1593,2.507,1594,2.507,1595,2.507,1596,2.507,1597,2.507,1598,2.507,1599,2.507,1600,2.507,1601,2.507,1602,2.507,1603,3.719,1604,2.507,1605,2.507,1606,2.507,1607,2.507,1608,2.507,1609,2.507,1610,2.507]],["title/components/MapSelectViewComponent.html",[0,0.661,90,1.242]],["body/components/MapSelectViewComponent.html",[0,1.095,1,1.264,2,1.984,3,0.172,4,0.172,5,1.506,6,1.506,7,1.506,8,0.154,11,2.537,16,1.741,17,2.606,18,1.264,19,2.857,21,2.278,23,0.209,24,1.013,26,0.811,27,3.459,28,0.986,32,1.536,39,0.774,40,0.016,41,1.757,42,0.439,43,0.804,44,1.302,49,0.3,50,0.286,55,1.736,56,0.172,57,0.209,58,1.212,62,1.506,63,2.075,64,1.741,65,1.212,66,2.558,67,1.506,68,0.454,69,1.506,70,1.264,71,1.506,72,1.212,73,2.773,74,1.506,75,1.506,76,1.264,77,1.506,78,1.212,79,1.212,80,1.506,81,1.162,82,1.378,83,1.506,84,1.264,85,1.506,86,1.212,87,1.506,88,1.162,89,1.506,90,2.058,91,1.89,92,2.745,93,2.075,94,1.212,95,1.506,96,0.674,97,1.264,98,1.506,99,1.506,100,1.212,101,1.986,102,1.378,103,1.44,104,1.319,105,1.212,106,1.506,107,1.212,108,1.44,109,1.506,110,0.013,111,0.01,150,1.162,184,0.945,214,1.013,220,0.738,221,0.824,231,2.606,260,1.057,419,1.898,530,1.926,541,2.977,542,3.272,685,2.599,686,2.747,702,3.912,911,2.161,948,3.677,962,3.103,1292,4.021,1296,4.077,1611,6.137,1612,5.506,1613,2.919,1614,4.482,1615,4.482,1616,5.927,1617,5.927,1618,3.761,1619,5.181,1620,3.761,1621,3.761,1622,3.761,1623,3.761,1624,3.761,1625,3.761,1626,3.761,1627,3.253,1628,3.253,1629,3.761,1630,3.761,1631,3.761,1632,3.761,1633,3.761,1634,3.761,1635,5.181,1636,5.181]],["title/injectables/MapService.html",[253,0.472,1286,2.36]],["body/injectables/MapService.html",[3,0.126,4,0.126,8,0.113,10,0.518,20,0.784,23,0.153,24,0.809,26,0.648,28,0.708,32,0.817,35,1.212,39,0.412,40,0.017,42,0.326,43,0.876,44,1.49,49,0.344,50,0.21,56,0.126,57,0.153,58,1.603,68,0.326,91,1.855,96,1.333,110,0.008,111,0.008,139,0.926,166,1.339,179,1.757,191,1.672,214,0.972,220,0.59,221,0.534,226,1.128,227,1.392,228,1.912,230,1.01,242,2.139,252,2.187,253,0.508,255,0.586,258,0.817,259,1.177,260,1.015,261,3.266,265,0.866,279,1.339,280,1.303,329,2.612,345,1.832,347,1.055,354,1.104,359,1.104,366,1.584,367,2.554,369,2.27,385,2.694,386,1.912,387,1.737,388,3.214,390,1.156,398,1.517,403,1.156,410,1.156,415,1.212,416,1.104,417,1.272,419,1.517,446,2.719,451,3.373,452,2.687,463,1.084,521,4.089,524,0.693,529,2.859,533,3.388,534,2.38,551,2.243,562,2.719,643,2.939,749,1.339,768,1.212,769,1.272,780,1.339,781,1.412,842,2.139,962,3.461,1007,1.956,1047,3.407,1051,2.859,1052,4.089,1053,3.266,1054,4.308,1057,3.631,1059,1.688,1062,3.047,1066,1.956,1156,2.536,1181,1.81,1192,4.208,1286,2.536,1296,4.248,1299,1.956,1300,3.214,1430,3.214,1465,1.688,1490,2.139,1522,1.956,1523,1.956,1524,3.214,1525,5.375,1526,2.384,1527,3.582,1528,3.582,1529,4.784,1530,2.384,1531,3.86,1532,2.384,1533,3.582,1534,4.303,1535,4.303,1536,4.601,1537,2.384,1538,2.384,1539,2.384,1540,4.601,1541,2.384,1542,2.939,1543,2.139,1544,1.956,1545,1.81,1546,2.939,1547,2.384,1548,5.387,1549,4.784,1550,3.582,1551,3.582,1552,4.784,1553,4.784,1554,3.582,1555,2.384,1556,2.384,1557,3.582,1558,2.384,1559,2.384,1560,2.384,1561,2.384,1562,3.582,1563,3.214,1564,5.387,1565,4.303,1566,4.303,1567,2.384,1568,3.582,1569,4.303,1570,2.384,1571,4.303,1572,3.582,1573,2.384,1574,3.582,1575,2.384,1576,3.214,1577,3.582,1578,3.582,1579,2.384,1580,2.384,1581,2.384,1582,2.384,1583,3.582,1584,2.384,1585,2.384,1586,2.384,1587,2.384,1588,2.384,1589,2.384,1590,2.384,1591,2.384,1592,3.582,1593,2.384,1594,2.384,1595,2.384,1596,2.384,1597,2.384,1598,2.384,1599,2.384,1600,2.384,1601,2.384,1602,2.384,1603,3.582,1604,2.384,1605,2.384,1606,2.384,1607,2.384,1608,2.384,1609,2.384,1610,2.384,1637,4.141,1638,2.756,1639,2.756]],["title/interfaces/Marker.html",[524,0.968,697,2.215]],["body/interfaces/Marker.html",[3,0.22,4,0.22,8,0.197,10,0.5,23,0.266,24,1.19,32,1.805,35,2.677,40,0.016,41,1.423,42,0.461,49,0.308,55,3.425,56,0.22,58,1.546,88,1.881,110,0.012,111,0.012,213,3.119,221,0.984,227,2.047,248,2.047,293,2.554,340,3.998,357,3.998,403,3.044,463,1.942,524,1.681,526,2.216,531,3.73,613,4.726,694,3.603,697,4.509,755,5.504,783,4.726,1051,3.843,1058,3.406,1271,4.321,1640,4.152,1641,6.089,1642,5.459,1643,6.688,1644,6.688,1645,6.089,1646,5.267,1647,4.152]],["title/classes/ModuleProvider.html",[57,0.214,187,2.531]],["body/classes/ModuleProvider.html",[3,0.202,4,0.202,8,0.182,10,0.602,23,0.245,26,0.904,28,0.916,39,0.863,40,0.016,42,0.29,43,0.873,45,4.445,49,0.345,56,0.202,57,0.41,68,0.29,96,1.222,110,0.012,111,0.012,112,2.667,114,3.642,176,4.482,183,4.75,184,1.111,185,2.903,186,3.824,187,3.792,189,3.792,190,3.824,214,1.257,220,0.63,221,0.571,259,0.941,260,1.312,265,0.904,272,4.099,318,2.541,345,2.107,385,3.128,435,5.15,609,3.138,818,4.482,893,3.138,982,3.431,994,4.099,1036,4.84,1648,5.899,1649,3.824,1650,5.775,1651,5.775,1652,5.775,1653,5.775,1654,4.099,1655,4.421,1656,5.775,1657,5.775,1658,5.775,1659,5.775,1660,5.775,1661,4.421,1662,4.84,1663,4.421,1664,4.996,1665,5.775,1666,4.421,1667,4.421,1668,5.775,1669,4.421,1670,4.421,1671,4.421,1672,5.775,1673,6.432,1674,4.421,1675,4.421]],["title/guards/QueryParameterGuard.html",[199,2.087,1676,2.735]],["body/guards/QueryParameterGuard.html",[3,0.282,4,0.186,8,0.167,10,0.642,16,1.364,20,1.154,23,0.225,26,0.854,28,0.777,39,0.606,40,0.016,42,0.358,43,0.933,49,0.312,50,0.309,56,0.186,57,0.225,58,2.216,68,0.358,96,0.978,110,0.011,111,0.011,179,1.203,184,1.02,192,4.517,196,4.235,199,2.956,200,2.665,214,1.205,218,2.909,220,0.939,221,0.851,224,3.789,227,2.216,231,3.278,233,3.511,234,4.038,235,5.027,236,5.117,244,3.136,248,1.834,250,1.877,251,4.517,252,2.399,253,0.669,255,0.864,258,1.203,259,1.403,265,0.854,279,3.575,347,1.554,419,1.487,452,1.972,529,3.136,534,3.136,535,3.873,536,3.136,586,2.956,624,2.651,819,4.72,872,3.511,962,2.651,1024,4.72,1143,4.72,1156,4.038,1164,3.15,1244,4.679,1676,4.679,1677,5.333,1678,3.511,1679,5.457,1680,5.457,1681,7.358,1682,5.457,1683,5.457,1684,4.059,1685,5.457,1686,4.72,1687,4.059,1688,5.703,1689,5.457,1690,4.72,1691,4.059,1692,4.059,1693,4.059,1694,3.511,1695,4.059]],["title/components/ResultDataViewComponent.html",[0,0.661,94,1.242]],["body/components/ResultDataViewComponent.html",[0,0.793,1,0.559,2,1.062,3,0.163,4,0.076,5,0.666,6,0.666,7,0.666,8,0.068,10,0.173,11,1.829,16,0.932,17,1.568,18,0.559,19,2.495,21,1.22,23,0.092,24,0.542,26,0.434,27,2.254,28,1.003,32,1.762,39,0.829,40,0.016,41,1.762,42,0.424,43,0.878,44,1.534,49,0.292,50,0.127,51,1.292,55,1.281,56,0.191,57,0.092,58,1.341,62,1.852,63,1.111,64,0.932,65,0.536,66,1.666,67,0.666,68,0.417,69,0.666,70,0.559,71,0.666,72,0.536,73,2,74,2.121,75,0.666,76,0.559,77,0.666,78,0.536,79,0.536,80,0.666,81,0.514,82,0.61,83,0.666,84,0.559,85,0.666,86,0.536,87,0.666,88,0.857,89,0.666,90,0.536,91,1.136,92,0.584,93,1.111,94,1.341,95,1.852,96,1.399,97,0.559,98,0.666,99,0.666,100,0.536,101,2.138,102,1.694,103,1.366,104,0.584,105,0.536,106,0.666,107,0.536,108,0.637,109,0.666,110,0.011,111,0.006,150,0.514,166,1.347,179,0.822,184,0.418,191,0.559,214,0.542,218,2.028,220,0.79,221,0.806,226,0.849,227,1.399,231,1.568,235,2.531,238,4.845,248,0.559,252,1.22,260,1.375,265,0.651,284,2.832,292,1.44,293,0.698,318,0.956,329,1.163,345,1.637,357,1.093,402,1.827,405,1.292,419,1.307,438,1.421,449,2.185,451,2.254,463,1.387,529,0.956,530,1.827,534,1.594,541,2.05,542,2.131,548,1.524,551,2.504,569,0.956,586,1.502,595,3.316,685,2.598,686,2.796,693,3.599,694,1.347,697,1.594,702,2.549,704,3.478,724,1.44,725,1.44,726,2.153,728,1.969,729,1.181,734,2.153,738,2.399,740,1.44,742,1.292,755,1.969,831,1.44,909,3.478,910,1.421,911,1.594,913,3.642,917,0.956,920,2.05,932,1.594,937,2.391,940,1.821,962,1.347,1053,1.821,1062,1.019,1094,3.588,1098,2.531,1130,3.085,1156,1.699,1244,1.181,1257,1.44,1264,2.153,1271,3.759,1283,3.23,1286,3.244,1292,3.588,1296,3.044,1350,1.44,1357,2.399,1379,2.531,1465,1.019,1487,1.44,1489,1.44,1613,1.292,1614,2.399,1615,2.399,1642,2.153,1694,2.399,1696,6.134,1697,5.503,1698,3.567,1699,3.567,1700,3.567,1701,3.567,1702,4.219,1703,3.567,1704,3.567,1705,2.774,1706,2.774,1707,2.774,1708,2.774,1709,2.774,1710,2.774,1711,3.567,1712,2.732,1713,1.664,1714,2.774,1715,5.297,1716,1.664,1717,2.774,1718,4.161,1719,1.664,1720,2.774,1721,1.664,1722,1.664,1723,1.664,1724,1.664,1725,1.664,1726,1.664,1727,2.774,1728,1.664,1729,1.664,1730,1.664,1731,2.399,1732,1.664,1733,2.774,1734,1.664,1735,2.774,1736,1.664,1737,1.664,1738,2.774,1739,1.664,1740,1.664,1741,1.664,1742,1.664,1743,1.664,1744,3.085,1745,1.664,1746,1.664,1747,1.664,1748,1.664,1749,1.664,1750,2.774,1751,1.292,1752,1.664,1753,1.664,1754,1.664,1755,1.44,1756,1.969,1757,3.567,1758,1.664,1759,2.774,1760,1.664,1761,4.161,1762,1.664,1763,2.774,1764,1.664,1765,3.567,1766,3.567,1767,1.664,1768,1.181,1769,1.664,1770,1.664,1771,1.664,1772,1.664,1773,1.664,1774,1.664,1775,1.664,1776,1.664,1777,2.153,1778,1.664,1779,1.44,1780,1.664,1781,1.664,1782,1.664,1783,1.664,1784,1.664,1785,1.664,1786,1.664,1787,1.664,1788,1.664,1789,1.664,1790,2.399,1791,2.774,1792,2.774,1793,1.292,1794,1.664,1795,2.399,1796,2.774,1797,2.774,1798,2.774,1799,2.774,1800,2.774,1801,1.664,1802,1.664,1803,1.44,1804,1.664,1805,1.664,1806,1.664,1807,1.664,1808,1.664,1809,2.774,1810,1.664,1811,1.664,1812,1.664,1813,1.664,1814,1.664,1815,1.664,1816,1.664,1817,1.292,1818,1.664,1819,1.664,1820,1.664,1821,1.664,1822,1.664,1823,4.161,1824,3.567,1825,2.774,1826,1.664,1827,1.664,1828,1.664,1829,1.664,1830,1.664,1831,1.664,1832,1.664,1833,1.664,1834,1.664,1835,1.664,1836,1.664,1837,1.664,1838,1.664,1839,1.664,1840,1.664,1841,4.161,1842,4.161,1843,1.664,1844,1.664,1845,1.664,1846,1.664,1847,1.664,1848,3.567,1849,1.664,1850,1.664,1851,1.664,1852,1.664,1853,1.664,1854,1.664,1855,1.664,1856,1.664,1857,1.664,1858,1.664,1859,2.774,1860,2.774,1861,2.774,1862,1.664,1863,5.945,1864,2.774,1865,2.774,1866,2.774,1867,2.774,1868,2.774,1869,2.774,1870,2.774,1871,4.161,1872,2.774,1873,2.774,1874,2.774,1875,2.774,1876,2.774,1877,2.774,1878,2.774,1879,2.774,1880,2.774,1881,2.774,1882,2.774]],["title/interceptors/SanitizeUrlInterceptor.html",[128,2.531,324,1.616]],["body/interceptors/SanitizeUrlInterceptor.html",[3,0.21,4,0.21,8,0.188,10,0.616,16,1.541,23,0.254,26,0.926,28,0.653,34,3.029,39,0.685,40,0.016,42,0.301,49,0.331,50,0.349,56,0.21,57,0.254,68,0.301,110,0.012,111,0.012,128,3.883,139,1.541,170,5.115,220,0.653,221,0.592,243,4.589,250,1.786,253,0.725,255,0.976,259,1.258,265,0.718,279,2.873,283,3.754,324,3.073,325,2.808,329,3.201,330,3.622,332,3.622,333,4.236,334,4.236,339,3.883,342,2.808,343,3.622,398,2.166,507,3.558,529,2.635,572,5.982,624,2.873,648,4.197,664,4.589,677,3.966,845,5.115,851,5.115,1018,5.115,1817,4.589,1883,5.115,1884,6.915,1885,5.913,1886,5.913,1887,6.915,1888,6.915,1889,5.913,1890,5.913,1891,4.585,1892,5.913,1893,5.913,1894,4.585,1895,4.585,1896,4.585,1897,4.585,1898,4.585,1899,6.545,1900,4.585,1901,4.585,1902,4.585]],["title/injectables/SettingsStorageService.html",[253,0.472,960,2.735]],["body/injectables/SettingsStorageService.html",[3,0.135,4,0.135,8,0.121,10,0.635,20,0.836,23,0.163,26,0.68,28,0.965,39,1.051,40,0.016,41,1.89,42,0.418,43,1.019,44,1.435,49,0.149,50,0.223,56,0.135,57,0.163,68,0.418,96,1.367,110,0.009,111,0.009,179,0.871,191,1.46,203,3.454,220,0.908,221,0.823,223,5.079,226,0.886,248,2.365,252,3.353,253,0.533,258,0.871,259,1.441,260,1.473,265,0.954,293,2.84,345,2.335,359,1.177,431,2.085,432,3.757,434,4.051,435,5.125,436,3.757,437,3.757,438,2.225,443,2.542,444,6.086,445,3.668,446,3.749,447,3.757,449,4.149,451,4.241,452,3.205,455,2.542,472,2.542,488,2.542,489,2.542,490,2.542,956,4.47,957,4.47,960,3.083,964,3.757,968,2.542,970,5.605,971,3.665,972,5.797,973,2.542,975,2.542,977,4.187,978,2.542,986,2.542,988,2.542,1094,5.257,1164,2.281,1576,5.257,1903,5.368,1904,4.344,1905,4.344,1906,4.344,1907,5.709,1908,2.938,1909,4.344,1910,2.938,1911,4.344,1912,2.938,1913,2.938,1914,2.938,1915,2.281,1916,2.281,1917,4.344,1918,2.938,1919,2.938,1920,2.938,1921,2.938,1922,2.938]],["title/interfaces/ShapeData.html",[524,0.968,1057,2.36]],["body/interfaces/ShapeData.html",[3,0.217,4,0.217,8,0.195,10,0.494,18,2.032,23,0.263,24,1.182,32,1.407,35,2.658,40,0.016,42,0.504,43,1.042,49,0.24,56,0.321,68,0.485,96,1.192,110,0.012,111,0.012,224,2.728,227,1.595,230,1.739,260,0.968,295,3.474,345,2.285,433,3.368,463,1.992,524,1.519,526,2.192,543,3.117,694,2.306,749,3.651,1047,3.474,1048,3.368,1049,3.368,1050,5.755,1051,2.728,1052,3.117,1053,3.97,1054,4.075,1055,4.106,1056,4.106,1057,4.075,1058,3.368,1059,4.29,1060,3.684,1061,5.23,1062,4.742,1063,5.23,1064,5.23,1065,5.23,1066,4.971,1067,5.23]],["title/components/SideBarComponent.html",[0,0.661,97,1.295]],["body/components/SideBarComponent.html",[0,1.225,1,1.532,2,2.255,3,0.209,4,0.209,5,1.825,6,1.825,7,1.825,8,0.187,10,0.475,11,2.764,18,1.532,19,2.916,21,2.59,23,0.253,24,1.151,28,0.649,32,1.351,40,0.016,44,1.145,49,0.298,50,0.346,56,0.209,57,0.253,62,1.825,63,2.359,64,1.98,65,1.468,66,2.763,67,1.825,68,0.452,69,1.825,70,1.532,71,1.825,72,1.468,73,2.763,74,1.825,75,1.825,76,1.532,77,1.825,78,1.468,79,1.468,80,1.825,81,1.408,82,1.669,83,1.825,84,1.532,85,1.825,86,1.468,87,1.825,88,1.408,89,1.825,90,1.468,91,1.244,92,1.599,93,2.359,94,1.468,95,1.825,96,0.817,97,2.319,98,2.861,99,1.825,100,1.468,101,1.351,102,1.669,103,1.745,104,1.599,105,1.468,106,1.825,107,1.468,108,1.745,109,1.825,110,0.012,111,0.012,160,4.18,595,3.748,971,4.45,977,3.868,1149,5.095,1264,4.571,1923,4.571,1924,3.942,1925,5.89,1926,4.557,1927,5.095,1928,5.89,1929,6.899]],["title/classes/StaticLoader.html",[57,0.214,164,2.735]],["body/classes/StaticLoader.html",[3,0.218,4,0.218,8,0.196,10,0.631,16,2.036,23,0.264,26,0.948,28,0.678,39,0.711,40,0.016,42,0.312,43,0.904,44,1.522,49,0.381,56,0.218,57,0.264,68,0.312,110,0.012,111,0.012,112,2.199,146,5.763,148,2.579,149,2.579,150,1.471,164,4.299,166,3.237,175,3.695,187,3.127,188,4.119,213,3.103,220,0.678,221,0.614,250,1.818,255,1.013,259,1.013,261,3.127,265,0.745,272,4.299,345,2.237,445,2.579,609,3.379,930,3.978,971,2.736,994,4.729,1036,4.977,1654,4.299,1662,5.253,1768,4.299,1930,4.702,1931,3.695,1932,6.058,1933,6.058,1934,6.058,1935,4.761,1936,6.058,1937,5.763,1938,5.24,1939,5.763,1940,5.24,1941,4.761,1942,4.761,1943,4.761,1944,4.119,1945,3.695,1946,5.763,1947,4.119,1948,4.119,1949,4.761,1950,6.058,1951,4.761,1952,4.761,1953,4.761,1954,4.761,1955,4.761]],["title/injectables/UserService.html",[253,0.472,1956,2.991]],["body/injectables/UserService.html",[3,0.155,4,0.155,8,0.139,10,0.584,20,0.966,23,0.188,24,0.943,26,0.755,28,0.87,39,0.721,40,0.016,42,0.368,43,1.041,49,0.349,50,0.258,56,0.155,57,0.188,68,0.4,110,0.01,111,0.01,139,1.141,155,2.23,191,1.886,195,3.741,203,4.134,205,2.635,214,1.097,220,0.687,221,0.622,226,1.246,228,2.82,229,2.612,230,2.238,232,3.743,250,1.761,253,0.591,255,0.723,258,1.006,259,1.467,260,1.246,265,0.878,273,3.308,280,1.69,293,2.023,321,2.937,347,1.3,354,1.36,359,1.36,363,2.635,366,1.951,367,2.82,369,2.64,371,3.224,373,5.351,376,5.564,387,2.023,392,2.23,398,1.767,400,4.354,403,1.424,410,2.023,412,4.335,415,2.121,435,3.981,442,5.001,463,1.469,536,1.951,543,3.167,624,2.725,646,3.423,648,3.423,665,3.743,780,1.649,1028,3.743,1181,3.167,1956,3.743,1957,2.635,1958,4.823,1959,5.61,1960,6.108,1961,3.395,1962,3.395,1963,6.452,1964,6.703,1965,3.395,1966,6.108,1967,7.427,1968,4.823,1969,4.823,1970,4.172,1971,4.823,1972,6.108,1973,4.172,1974,6.108,1975,6.108,1976,6.703,1977,4.823,1978,4.823,1979,4.172,1980,4.823,1981,4.823,1982,3.395,1983,4.823,1984,4.823,1985,3.395,1986,4.823,1987,4.172,1988,2.937,1989,3.395,1990,2.937,1991,3.395,1992,2.937,1993,3.395,1994,2.937,1995,3.395,1996,4.823,1997,3.395,1998,3.395,1999,2.635,2000,2.937,2001,2.635,2002,4.823,2003,2.937,2004,2.937,2005,3.395,2006,3.395,2007,4.172,2008,4.823,2009,4.172,2010,3.395,2011,3.395,2012,3.395,2013,3.395,2014,3.395]],["title/components/WaterRightDetailComponent.html",[0,0.661,100,1.242]],["body/components/WaterRightDetailComponent.html",[0,0.691,1,0.667,2,1.227,3,0.091,4,0.091,5,0.795,6,0.795,7,0.795,8,0.081,11,1.99,16,1.077,17,1.773,18,0.667,19,2.59,21,1.409,23,0.11,24,0.626,26,0.502,27,2.507,28,0.847,32,1.195,35,0.873,39,0.602,40,0.016,41,1.372,42,0.333,43,0.435,44,1.013,49,0.301,50,0.151,55,0.916,56,0.091,57,0.11,58,0.639,62,0.795,63,1.283,64,1.077,65,0.639,66,1.853,67,0.795,68,0.356,69,0.795,70,0.667,71,0.795,72,0.639,73,2.176,74,0.795,75,0.795,76,0.667,77,0.795,78,0.639,79,0.639,80,0.795,81,0.613,82,0.727,83,0.795,84,0.667,85,0.795,86,0.639,87,0.795,88,1.43,89,0.795,90,0.639,91,1.56,92,0.696,93,1.283,94,0.639,95,0.795,96,0.91,97,0.667,98,0.795,99,0.795,100,1.491,101,2.363,102,2.737,103,1.543,104,0.696,105,0.639,106,0.795,107,0.639,108,0.76,109,0.795,110,0.006,111,0.006,148,1.075,149,1.075,150,0.613,184,0.499,206,2.274,214,0.626,220,0.456,221,0.414,226,0.822,231,1.409,255,0.422,260,0.944,265,0.631,280,0.839,402,1.642,452,1.958,463,0.839,497,4.216,530,1.016,537,3.039,538,2.647,541,2.317,542,2.371,595,4.07,620,1.215,685,2.251,686,2.928,687,4.768,690,1.54,691,2.861,692,2.772,694,1.557,696,3.567,697,2.66,700,3.592,701,1.716,702,2.835,717,1.716,718,1.716,719,1.54,721,1.716,723,1.408,726,1.54,729,1.408,730,1.54,734,1.54,748,3.592,751,1.716,755,1.408,800,1.54,1271,3.605,1379,2.274,1628,1.716,1642,1.54,1646,2.772,1647,1.716,1712,3.039,1731,5.457,1755,1.716,1756,2.274,1779,2.772,1795,1.716,1803,1.716,2009,2.772,2015,4.768,2016,4.768,2017,4.628,2018,3.205,2019,1.984,2020,1.984,2021,3.205,2022,1.984,2023,3.205,2024,3.129,2025,1.984,2026,1.984,2027,1.54,2028,1.984,2029,1.984,2030,1.716,2031,1.984,2032,1.984,2033,1.984,2034,1.984,2035,1.984,2036,1.984,2037,1.984,2038,1.984,2039,1.984,2040,1.984,2041,1.984,2042,1.984,2043,1.984,2044,1.984,2045,1.984,2046,1.984,2047,1.984,2048,1.984,2049,1.984,2050,1.984,2051,7.946,2052,1.984,2053,1.984,2054,3.487,2055,1.984,2056,1.984,2057,1.984,2058,1.984,2059,6.309,2060,3.205,2061,3.205,2062,3.205,2063,5.432,2064,3.205,2065,3.205,2066,3.205,2067,3.205,2068,3.205,2069,3.205,2070,3.205,2071,3.205,2072,3.205,2073,3.205,2074,4.628,2075,3.205,2076,3.205,2077,3.205,2078,3.205,2079,3.205,2080,3.205,2081,3.205,2082,3.205,2083,3.205,2084,3.205,2085,3.205,2086,3.205,2087,3.205,2088,4.628,2089,4.628,2090,3.205,2091,3.205,2092,3.205,2093,3.205,2094,3.205,2095,3.205,2096,3.205,2097,3.205,2098,3.205,2099,3.205,2100,3.205,2101,3.205,2102,3.205,2103,3.205,2104,3.205,2105,3.205,2106,3.205,2107,3.205,2108,3.205,2109,3.205,2110,3.205,2111,3.205,2112,3.205,2113,3.205,2114,3.205,2115,3.205,2116,3.205,2117,3.205,2118,3.205,2119,3.205,2120,3.205,2121,3.205,2122,3.205,2123,3.205,2124,3.205,2125,3.205,2126,3.205,2127,3.205,2128,3.205,2129,3.205,2130,3.205,2131,3.205,2132,3.205,2133,3.205,2134,3.205,2135,3.205,2136,3.205,2137,3.205,2138,3.205,2139,3.205,2140,3.205]],["title/injectables/WaterRightsService.html",[253,0.472,1712,2.531]],["body/injectables/WaterRightsService.html",[3,0.184,4,0.184,8,0.165,14,3.12,20,1.143,23,0.223,26,0.849,28,0.874,39,0.81,40,0.016,42,0.488,43,0.545,49,0.347,50,0.306,56,0.281,57,0.223,68,0.431,91,1.097,101,1.192,110,0.011,111,0.011,139,1.351,150,1.242,179,1.946,184,1.01,191,1.351,214,1.06,218,2.765,220,0.874,221,0.792,250,1.871,252,2.384,253,0.665,255,0.856,258,1.192,260,1.106,265,1.028,280,1.891,354,2.171,359,1.61,366,2.31,367,3.032,369,2.076,386,2.833,387,2.573,390,1.686,398,1.986,403,2.274,410,2.274,415,2.384,416,2.171,417,2.504,463,1.891,533,2.462,551,3.557,608,3.12,685,2.406,686,2.406,694,1.953,696,2.64,749,1.953,766,5.322,768,1.768,769,1.856,772,3.12,773,4.69,774,3.478,779,3.116,780,2.634,781,2.777,907,3.19,1712,3.56,1768,2.853,1777,4.762,1793,3.12,2024,4.208,2030,4.69,2054,3.478,2141,2.853,2142,5.422,2143,5.422,2144,4.02,2145,5.422,2146,4.02,2147,5.422,2148,4.02,2149,3.478,2150,4.02,2151,5.681,2152,3.478,2153,5.422,2154,4.02,2155,5.422,2156,4.02,2157,3.478,2158,4.02,2159,5.422,2160,4.02,2161,4.02,2162,4.02,2163,4.02,2164,4.02,2165,4.02,2166,4.02,2167,4.02,2168,4.02,2169,4.02,2170,4.02,2171,4.02,2172,4.02,2173,4.02,2174,4.02,2175,4.02,2176,4.02,2177,4.02,2178,4.02,2179,4.02]],["title/modules/WaterUsageForecastsModule.html",[112,1.779,2180,2.735]],["body/modules/WaterUsageForecastsModule.html",[3,0.224,4,0.224,8,0.201,40,0.016,49,0.394,50,0.373,56,0.224,57,0.272,72,2.403,90,2.403,92,2.165,94,2.403,96,1.106,100,2.403,102,2.261,110,0.012,111,0.012,114,2.382,115,3.547,122,4.286,129,3.78,130,2.656,131,2.818,133,4.38,135,4.052,140,4.052,147,4.38,148,2.656,149,2.656,150,1.515,182,4.79,184,1.232,685,1.796,686,2.261,688,3.805,689,3.805,820,3.48,1612,3.805,1697,3.805,2015,3.805,2016,3.805,2180,5.628,2181,4.241,2182,4.903,2183,4.241,2184,4.903,2185,4.903,2186,5.338,2187,6.171,2188,4.241,2189,4.241,2190,6.171,2191,6.171,2192,4.903,2193,6.171,2194,4.903]],["title/injectables/WaterUsageForecastsService.html",[253,0.472,937,2.215]],["body/injectables/WaterUsageForecastsService.html",[3,0.183,4,0.183,8,0.164,10,0.415,20,1.134,23,0.221,26,0.844,28,0.768,39,0.596,40,0.016,42,0.401,43,1.019,49,0.346,50,0.303,56,0.313,57,0.221,68,0.401,96,0.966,101,1.598,110,0.011,111,0.011,139,1.34,150,1.232,179,1.182,184,1.002,191,1.34,214,1.054,218,2.759,220,0.768,221,0.696,226,1.1,228,2.49,230,1.976,250,1.786,253,0.661,255,0.849,258,1.182,260,1.1,265,0.624,280,1.412,345,2.022,354,1.597,359,1.597,366,2.292,367,3.022,369,2.065,386,2.49,387,2.261,390,1.672,398,1.461,402,2.043,403,1.672,410,1.672,415,1.753,416,1.597,417,1.841,463,1.887,524,1.535,548,1.976,685,2.238,686,2.685,768,1.753,769,1.841,779,2.292,780,1.937,781,2.043,906,3.742,907,2.968,908,2.292,909,3.541,910,2.762,911,2.292,912,2.83,913,4.009,914,4.012,915,4.012,916,4.012,917,2.292,918,2.83,919,5.114,920,3.099,921,2.83,922,2.83,923,2.83,924,2.83,925,2.83,926,2.83,927,3.827,928,2.83,929,2.619,930,2.619,931,2.83,932,2.292,933,2.619,934,2.83,935,2.83,936,3.827,937,3.099,938,4.336,939,4.336,940,4.012,941,4.336,942,4.336,943,4.336,944,2.83,945,2.83,946,2.83,947,2.83,1181,2.619,2195,3.988,2196,3.988,2197,3.988]],["title/injectables/WaterUsageHistoryService.html",[253,0.472,706,2.735]],["body/injectables/WaterUsageHistoryService.html",[3,0.217,4,0.217,8,0.194,20,1.345,23,0.263,26,0.944,28,0.859,39,0.707,40,0.016,42,0.459,43,0.901,49,0.366,50,0.36,56,0.276,57,0.263,68,0.396,91,1.291,96,0.848,101,1.402,110,0.012,111,0.012,139,1.59,150,1.462,179,1.788,184,1.189,191,1.59,214,1.179,218,2.875,220,0.859,221,0.779,250,1.813,253,0.74,255,1.007,258,1.402,260,1.231,265,0.741,280,1.74,354,1.895,359,1.895,366,2.719,367,3.231,369,2.31,386,2.786,387,2.53,390,1.984,398,1.733,403,1.984,410,1.984,415,2.08,416,1.895,417,2.185,462,3.672,463,1.58,685,2.434,686,2.835,696,3.962,698,5.219,706,4.282,716,3.672,744,5.746,768,2.08,769,2.185,772,3.672,779,2.719,780,2.298,781,2.423,805,3.672,907,3.227,2157,4.092,2198,3.358,2199,6.033,2200,4.731,2201,6.033,2202,4.731,2203,4.731,2204,4.731,2205,4.731,2206,4.731]],["title/interfaces/WisdomInterface.html",[524,0.968,2207,2.735]],["body/interfaces/WisdomInterface.html",[0,1.275,3,0.222,4,0.222,8,0.199,10,0.505,13,5.3,23,0.269,24,1.198,40,0.016,42,0.44,43,0.911,45,4.324,49,0.245,56,0.222,68,0.402,110,0.012,111,0.012,112,3.259,114,3.429,176,4.755,184,1.218,200,4.635,231,3.416,339,4.023,442,5.277,524,1.83,526,2.238,905,5.3,910,3.441,962,3.429,1007,4.348,1041,4.348,1097,5.3,1182,5.3,1293,4.755,1305,5.3,1662,5.277,1702,5.01,1945,4.755,2207,5.01,2208,4.193,2209,6.127,2210,6.127,2211,6.127,2212,6.127,2213,6.127,2214,6.127,2215,5.3]],["title/modules/WisdomModule.html",[112,1.779,122,2.215]],["body/modules/WisdomModule.html",[3,0.226,4,0.226,8,0.203,40,0.016,49,0.388,50,0.376,56,0.226,57,0.274,70,2.647,81,2.434,82,1.811,88,2.434,105,2.538,110,0.012,111,0.012,114,2.402,115,3.565,122,4.588,129,3.8,130,2.678,131,2.841,133,4.403,135,3.246,140,4.074,147,4.403,148,2.678,149,2.678,182,4.815,184,1.242,198,4.815,820,3.508,1004,3.837,2186,5.366,2216,4.276,2217,4.276,2218,4.276,2219,4.944,2220,4.944,2221,4.944,2222,4.944,2223,4.944,2224,4.944]],["title/coverage.html",[2225,4.557]],["body/coverage.html",[0,1.231,1,0.866,8,0.106,9,2.229,40,0.016,42,0.169,57,0.218,65,1.268,70,0.866,72,0.83,76,0.866,78,0.83,79,0.83,81,0.796,84,0.866,86,0.83,88,0.796,90,0.83,92,1.38,94,0.83,96,0.705,97,0.866,100,0.83,102,1.442,105,0.83,107,0.83,110,0.008,111,0.008,123,1.692,124,1.692,125,1.692,126,1.578,127,1.692,128,1.692,155,1.692,160,1.828,164,1.828,185,1.692,187,1.692,189,1.692,199,2.586,201,2.229,216,1.481,217,1.578,231,1.133,253,0.871,280,0.675,290,2.016,293,2.647,324,2.545,326,3.054,346,2,360,3.705,389,1.828,390,1.08,391,1.828,399,2,412,1.828,430,4.468,431,4.62,477,2,479,2,481,2,482,2,506,2.229,507,3.054,511,3.705,513,2,521,1.692,524,1.71,525,1.692,527,3.054,542,1.32,556,2.229,600,2.229,601,2.229,642,2.229,644,1.828,685,2.729,686,2.809,687,3.054,688,2,689,2,690,3.054,697,1.481,704,1.692,706,1.828,728,1.828,762,2.793,768,1.133,769,2.658,782,2.229,790,2.229,801,1.692,843,2.229,869,2.229,889,2.229,902,2,903,2.229,906,1.578,907,3.241,908,3.308,917,1.481,932,1.481,937,1.481,949,2.229,960,1.828,971,1.481,1003,2.229,1004,2,1005,2.229,1034,2.229,1035,2.229,1047,1.481,1048,2.793,1049,2.793,1057,1.578,1069,2.229,1082,1.578,1098,5.185,1115,6.277,1134,2.229,1147,2.229,1166,2.229,1209,2.229,1263,2,1286,1.578,1522,1.828,1523,4.085,1542,4.085,1544,1.828,1546,1.828,1611,2.229,1612,2,1613,3.054,1640,2.229,1648,2.229,1649,2.229,1654,2.793,1676,1.828,1677,2.229,1678,2.229,1696,2.229,1697,2,1712,1.692,1751,2,1756,1.828,1883,2.229,1903,3.705,1915,2,1916,2,1923,2,1924,2.229,1930,3.054,1931,3.705,1956,2,1957,3.705,1999,2,2001,2,2015,2,2016,2,2027,2,2141,2.793,2198,2.793,2207,3.388,2208,2.229,2225,2.229,2226,2.576,2227,2.229,2228,2.576,2229,3.404,2230,7.852,2231,7.875,2232,6.313,2233,3.935,2234,6.671,2235,4.774,2236,6.807,2237,4.979,2238,3.404,2239,2.229,2240,2.229,2241,2.229,2242,2.229,2243,2.576,2244,3.054,2245,2.229,2246,2.229,2247,4.979,2248,2.229,2249,2.229,2250,2.229,2251,5.344,2252,2.576,2253,2.229,2254,3.404,2255,3.404,2256,3.404,2257,2.229,2258,3.404,2259,3.404,2260,3.404,2261,6.313,2262,2.229,2263,5.344,2264,2.576,2265,2.576,2266,2.576,2267,2.576,2268,2.576,2269,2.576,2270,2.576,2271,2.576,2272,2.576,2273,2.229,2274,2.576,2275,2.576]],["title/dependencies.html",[115,2.665,2276,2.78]],["body/dependencies.html",[34,2.777,35,2.384,38,4.69,40,0.016,50,0.412,52,4.69,53,4.69,54,4.69,110,0.013,111,0.013,115,3.116,142,4.208,144,5.681,145,4.661,148,2.937,149,2.937,184,1.363,255,1.154,393,4.69,604,5.097,820,3.848,1387,4.69,1540,4.208,1988,4.69,2188,4.69,2189,4.69,2277,5.422,2278,7.803,2279,5.422,2280,5.422,2281,5.422,2282,5.422,2283,5.422,2284,4.69,2285,5.422,2286,5.422,2287,5.422,2288,5.422,2289,5.422,2290,5.422,2291,5.422,2292,5.422,2293,5.422,2294,5.422,2295,5.422,2296,5.422,2297,5.422,2298,5.422,2299,5.422]],["title/miscellaneous/enumerations.html",[2300,1.741,2301,4.011]],["body/miscellaneous/enumerations.html",[23,0.318,40,0.016,44,1.965,91,1.565,110,0.014,111,0.014,235,4.82,548,2.101,685,2.101,686,2.651,907,2.787,908,3.904,913,4.16,914,4.46,915,4.46,916,4.46,920,3.904,1296,3.904,1379,4.82,1744,5.875,2244,4.452,2300,3.107,2301,4.962,2302,4.452,2303,4.962,2304,5.736]],["title/miscellaneous/functions.html",[2300,1.741,2305,4.011]],["body/miscellaneous/functions.html",[0,0.726,10,0.762,23,0.235,35,1.861,39,1.093,40,0.016,42,0.47,43,1.008,68,0.48,91,1.718,96,0.758,110,0.011,111,0.011,220,1.042,221,0.944,226,1.284,227,1.422,231,2.768,234,3.437,238,3.285,265,0.662,278,3.661,293,2.64,295,3.225,345,2.071,385,2.292,398,1.55,445,3.039,452,2.726,463,1.916,535,3.983,537,3.685,559,3.661,575,3.661,595,3.573,694,2.056,749,2.056,818,4.355,876,3.285,891,2.592,910,2.874,929,2.779,1027,3.661,1181,2.779,1185,3.285,1296,4.204,1318,5.446,1466,3.661,1467,5.799,1545,2.779,1688,3.661,1690,4.854,1702,3.983,1751,4.355,1777,3.285,1790,3.661,1987,3.661,2003,3.661,2004,3.661,2027,4.355,2244,3.285,2245,4.854,2246,4.854,2247,3.661,2248,4.854,2249,4.854,2250,4.854,2300,2.292,2303,4.854,2305,3.661,2306,6.976,2307,4.232,2308,4.232,2309,4.232,2310,4.232,2311,5.612,2312,4.232,2313,4.232,2314,4.232,2315,4.232,2316,4.232,2317,4.232,2318,4.232,2319,4.232,2320,4.232,2321,4.232,2322,4.232,2323,4.232,2324,4.232,2325,4.232,2326,4.232,2327,4.232,2328,4.232,2329,4.232,2330,5.612,2331,6.296,2332,4.232,2333,4.232,2334,4.232,2335,4.232,2336,4.232,2337,3.661,2338,4.232,2339,4.232,2340,6.296,2341,3.661,2342,4.232,2343,4.232,2344,4.232,2345,6.976,2346,4.232,2347,4.232,2348,4.232,2349,4.232]],["title/index.html",[23,0.214,2350,3.334]],["body/index.html",[1,2.46,2,1.625,40,0.016,70,2.46,72,2.031,76,2.119,78,2.358,79,2.031,81,2.262,84,2.119,86,2.031,88,2.262,90,2.031,94,2.031,97,2.119,100,2.031,104,1.489,105,2.358,107,2.031,110,0.011,111,0.011,113,5.741,114,2.062,115,3.231,116,3.671,117,3.671,118,3.671,119,3.671,120,3.671,121,4.14,122,4.528,123,4.14,124,4.14,125,4.14,126,3.862,127,4.14,128,4.14,129,3.444,130,2.299,131,2.439,183,2.6,200,2.787,359,1.7,526,1.96,609,3.012,748,3.294,826,3.671,895,5.195,896,3.671,898,3.671,899,3.671,1465,3.444,2180,5.47,2181,3.671,2183,3.671,2216,3.671,2217,3.671,2218,3.671,2350,3.671,2351,4.244,2352,4.244,2353,5.622]],["title/modules.html",[114,2.559]],["body/modules.html",[40,0.014,110,0.014,111,0.014,113,4.26,114,2.916,121,3.942,122,3.45,145,5.387,272,4.26,895,4.26,2180,4.26,2354,7.591,2355,7.591,2356,7.727,2357,6.003]],["title/properties.html",[24,0.906,2276,2.78]],["body/properties.html",[10,0.646,15,4.814,24,1.213,40,0.015,110,0.014,111,0.014,1545,4.073,1927,5.366,2284,5.366,2358,6.203]],["title/routes.html",[183,3.227]],["body/routes.html",[40,0.014,110,0.014,111,0.014,183,3.864]],["title/miscellaneous/typealiases.html",[2300,1.741,2359,4.637]],["body/miscellaneous/typealiases.html",[23,0.206,34,2.633,35,2.26,40,0.013,42,0.515,43,0.905,55,2.374,68,0.417,96,1.139,110,0.01,111,0.01,160,2.639,193,2.886,203,4.185,227,1.728,244,2.137,247,3.99,284,2.277,307,2.277,329,1.559,345,1.149,394,4.447,396,4.447,451,2.014,562,2.442,629,2.277,685,2.158,686,2.444,709,3.99,716,3.99,742,2.886,749,2.497,762,2.639,766,3.99,907,2.497,910,1.905,948,5.457,962,1.806,971,2.137,977,4.734,1041,2.639,1048,2.639,1049,3.648,1051,3.386,1059,3.893,1229,4.447,1231,4.447,1263,2.886,1268,4.447,1293,2.886,1301,3.216,1344,4.447,1388,3.216,1389,3.216,1390,3.216,1391,3.216,1392,3.216,1531,2.886,1686,3.216,1923,2.886,1970,3.216,1973,3.216,1979,3.216,1990,4.447,1992,4.447,1994,4.447,2007,3.216,2024,3.99,2141,4.511,2149,4.447,2151,4.447,2152,5.498,2198,3.648,2227,3.216,2300,2.014,2302,4.933,2360,3.718,2361,3.216,2362,5.141,2363,3.718,2364,5.141,2365,3.718,2366,5.141,2367,3.718,2368,3.718,2369,5.892,2370,3.718,2371,5.141,2372,3.718,2373,5.141,2374,3.718,2375,5.141,2376,3.718,2377,6.672,2378,7.073,2379,7.209,2380,5.141,2381,3.718,2382,5.141,2383,3.718,2384,5.141,2385,3.718,2386,5.141,2387,3.718,2388,3.718,2389,3.718,2390,3.718,2391,3.718,2392,5.141,2393,3.718,2394,3.718,2395,3.718,2396,4.447,2397,6.672,2398,5.892,2399,5.141,2400,5.141,2401,5.892,2402,3.718,2403,3.718,2404,3.718,2405,3.718,2406,5.892,2407,5.141,2408,3.216,2409,3.718,2410,3.718,2411,5.892,2412,5.141,2413,3.718,2414,3.718,2415,5.141,2416,3.718,2417,3.718,2418,3.718,2419,3.216,2420,5.141,2421,3.718,2422,3.718,2423,3.718,2424,3.216,2425,3.718,2426,3.718,2427,3.718,2428,6.356,2429,5.892,2430,3.718,2431,3.718,2432,3.718,2433,3.718,2434,3.718,2435,3.718,2436,3.718,2437,3.718,2438,3.718,2439,3.718,2440,3.718,2441,3.718,2442,3.718,2443,3.718,2444,3.718,2445,3.718,2446,3.718,2447,3.718,2448,3.718]],["title/miscellaneous/variables.html",[2300,1.741,2449,4.011]],["body/miscellaneous/variables.html",[0,0.89,12,1.268,23,0.115,32,2.281,34,3.193,35,1.824,40,0.016,41,0.614,42,0.493,43,0.95,44,1.934,45,2.031,51,1.607,55,2.396,68,0.136,72,0.667,78,0.667,82,0.758,88,0.64,90,0.667,91,1.132,92,1.163,94,0.667,96,0.594,100,0.667,101,2.029,103,0.793,110,0.008,111,0.007,112,1.915,155,3.114,166,1.611,175,3.681,179,1.791,192,1.359,193,2.573,196,3.219,203,1.796,207,1.607,208,3.408,209,1.607,211,2.353,226,0.422,227,2.095,229,2.811,231,2.282,245,1.791,262,1.607,265,0.519,273,1.796,279,1.006,280,1.582,284,1.268,290,2.429,293,1.391,319,1.359,326,1.607,327,3.219,328,1.791,329,1.391,339,2.177,345,1.867,346,2.573,354,1.328,360,1.607,363,2.573,370,1.607,371,2.384,385,1.121,386,0.956,387,0.868,389,2.353,390,1.391,391,2.353,392,1.359,398,2.13,399,2.573,400,4.297,401,1.791,402,1.06,403,2.176,404,1.607,405,1.607,406,2.868,407,2.573,408,2.868,409,1.791,410,1.989,411,1.791,412,2.353,414,1.791,415,1.458,416,0.829,417,0.956,418,1.791,419,2.13,420,1.791,430,1.607,431,4.288,442,3.366,445,1.121,451,1.796,461,1.791,462,1.607,463,0.542,477,2.573,478,1.791,479,2.573,480,1.791,481,2.573,482,2.573,511,4.837,512,5.53,513,2.573,521,3.636,524,0.833,536,1.19,562,1.359,607,1.791,624,1.006,643,1.469,644,3.929,656,2.573,664,1.607,685,2.13,686,2.709,728,2.353,762,1.469,768,1.458,769,2.952,770,1.791,783,1.607,785,3.408,791,1.607,800,1.607,805,1.607,806,1.469,815,1.607,891,3.178,907,2.015,908,1.906,911,3.342,962,1.006,970,3.681,971,3.182,972,2.573,977,2.724,1021,1.607,1036,1.469,1054,1.268,1070,1.469,1095,1.791,1132,1.791,1219,1.791,1223,1.791,1224,1.791,1244,1.469,1267,3.588,1277,2.868,1283,1.607,1299,1.469,1335,4.489,1347,1.791,1386,1.791,1465,1.268,1523,1.469,1524,1.607,1525,3.219,1536,2.573,1542,3.683,1543,1.607,1544,2.353,1545,1.359,1546,2.353,1563,1.607,1627,1.791,1654,3.366,1662,2.353,1664,1.791,1676,1.469,1702,2.944,1756,2.353,1768,3.366,1793,1.607,1817,1.607,1903,1.607,1915,2.573,1916,2.573,1930,1.607,1931,3.681,1937,1.791,1938,1.791,1939,1.791,1940,1.791,1944,1.791,1945,1.607,1946,4.102,1947,1.791,1948,1.791,1957,1.607,1999,2.573,2000,1.791,2001,2.573,2141,2.353,2198,2.353,2207,3.929,2215,1.791,2229,3.588,2237,4.489,2238,4.102,2239,2.868,2240,2.868,2241,1.791,2242,2.868,2253,1.791,2254,1.791,2255,5.227,2256,1.791,2257,1.791,2258,4.102,2259,1.791,2260,3.588,2262,1.791,2273,1.791,2300,2.246,2302,3.219,2337,1.791,2341,1.791,2361,1.791,2396,2.868,2408,1.791,2419,1.791,2424,1.791,2449,1.791,2450,4.743,2451,4.148,2452,3.316,2453,3.316,2454,3.316,2455,3.316,2456,3.316,2457,2.07,2458,2.07,2459,3.316,2460,2.07,2461,2.07,2462,2.07,2463,5.189,2464,3.316,2465,3.316,2466,3.316,2467,3.316,2468,3.316,2469,4.148,2470,4.148,2471,2.07,2472,2.07,2473,2.07,2474,2.07,2475,3.316,2476,2.07,2477,3.316,2478,4.743,2479,2.07,2480,3.316,2481,3.316,2482,2.07,2483,2.07,2484,2.07,2485,2.07,2486,2.07,2487,2.07,2488,2.07,2489,2.07,2490,3.316,2491,2.07,2492,3.316,2493,2.07,2494,2.07,2495,4.148,2496,2.07,2497,3.316,2498,2.07,2499,2.07,2500,2.07,2501,2.07,2502,2.07,2503,2.07,2504,2.07,2505,2.07,2506,2.07,2507,2.07,2508,2.07,2509,2.07,2510,2.07,2511,2.07,2512,3.316,2513,3.316,2514,2.07,2515,2.07,2516,2.07,2517,2.07,2518,2.07,2519,2.07,2520,2.07,2521,2.07,2522,2.07,2523,2.07,2524,2.07,2525,5.189,2526,2.07,2527,2.07,2528,2.07,2529,2.07,2530,2.07,2531,2.07,2532,3.316]]],"invertedIndex":[["",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/ExampleComponent.html":{},"modules/ExampleModule.html":{},"injectables/ExampleService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"interfaces/LayerData.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"interfaces/Marker.html":{},"classes/ModuleProvider.html":{},"guards/QueryParameterGuard.html":{},"components/ResultDataViewComponent.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"interfaces/ShapeData.html":{},"components/SideBarComponent.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"interfaces/WisdomInterface.html":{},"modules/WisdomModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":1098,"title":{},"body":{"components/LoaderComponent.html":{},"components/MapComponent.html":{},"components/ResultDataViewComponent.html":{},"coverage.html":{}}}],["0.1.0",{"_index":2284,"title":{},"body":{"dependencies.html":{},"properties.html":{}}}],["0.11.6",{"_index":2299,"title":{},"body":{"dependencies.html":{}}}],["0.3s",{"_index":1111,"title":{},"body":{"components/LoaderComponent.html":{}}}],["0.6s",{"_index":1113,"title":{},"body":{"components/LoaderComponent.html":{}}}],["0.7s",{"_index":1110,"title":{},"body":{"components/LoaderComponent.html":{}}}],["0.8",{"_index":1118,"title":{},"body":{"components/LoaderComponent.html":{}}}],["0.8s",{"_index":1123,"title":{},"body":{"components/LoaderComponent.html":{}}}],["0.9.4",{"_index":2281,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2261,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2268,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2263,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2264,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2267,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2270,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2269,"title":{},"body":{"coverage.html":{}}}],["0s",{"_index":1108,"title":{},"body":{"components/LoaderComponent.html":{}}}],["1",{"_index":551,"title":{},"body":{"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"components/LoaderComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"components/ResultDataViewComponent.html":{},"injectables/WaterRightsService.html":{}}}],["1.0.1",{"_index":2294,"title":{},"body":{"dependencies.html":{}}}],["1.11.3",{"_index":2289,"title":{},"body":{"dependencies.html":{}}}],["1.4.0",{"_index":2287,"title":{},"body":{"dependencies.html":{}}}],["1.4s",{"_index":1107,"title":{},"body":{"components/LoaderComponent.html":{}}}],["1.5.3",{"_index":2292,"title":{},"body":{"dependencies.html":{}}}],["1.8.0",{"_index":2291,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":2231,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":2266,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":748,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/WaterRightDetailComponent.html":{},"index.html":{}}}],["100",{"_index":1115,"title":{},"body":{"components/LoaderComponent.html":{},"components/MapComponent.html":{},"coverage.html":{}}}],["10000",{"_index":1789,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["10px",{"_index":1120,"title":{},"body":{"components/LoaderComponent.html":{}}}],["12",{"_index":2057,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["13",{"_index":2352,"title":{},"body":{"index.html":{}}}],["14",{"_index":2351,"title":{},"body":{"index.html":{}}}],["14.0.0",{"_index":2280,"title":{},"body":{"dependencies.html":{}}}],["14.1.2",{"_index":2278,"title":{},"body":{"dependencies.html":{}}}],["15px",{"_index":1116,"title":{},"body":{"components/LoaderComponent.html":{}}}],["1:25000",{"_index":2131,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["1].recordedat.toisostring().substring(0",{"_index":747,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["1f5aec",{"_index":1321,"title":{},"body":{"components/MapComponent.html":{}}}],["1s",{"_index":1101,"title":{},"body":{"components/LoaderComponent.html":{}}}],["2",{"_index":1465,"title":{},"body":{"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"components/ResultDataViewComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["2.4.0",{"_index":2297,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":2251,"title":{},"body":{"coverage.html":{}}}],["2000",{"_index":1125,"title":{},"body":{"components/LoaderComponent.html":{}}}],["2022",{"_index":1462,"title":{},"body":{"components/MapComponent.html":{}}}],["29/29",{"_index":2243,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":2353,"title":{},"body":{"index.html":{}}}],["3.0.11",{"_index":2293,"title":{},"body":{"dependencies.html":{}}}],["3.8.0",{"_index":2286,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":2236,"title":{},"body":{"coverage.html":{}}}],["31",{"_index":2058,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["33",{"_index":2265,"title":{},"body":{"coverage.html":{}}}],["35",{"_index":2478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["38",{"_index":2271,"title":{},"body":{"coverage.html":{}}}],["39;01&#39",{"_index":1375,"title":{},"body":{"components/MapComponent.html":{}}}],["39;034030000000&#39",{"_index":1376,"title":{},"body":{"components/MapComponent.html":{}}}],["39;all",{"_index":1368,"title":{},"body":{"components/MapComponent.html":{}}}],["39;only",{"_index":1372,"title":{},"body":{"components/MapComponent.html":{}}}],["39;show",{"_index":1378,"title":{},"body":{"components/MapComponent.html":{}}}],["4",{"_index":828,"title":{},"body":{"components/ErrorComponent.html":{}}}],["4/4",{"_index":2232,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":317,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["401",{"_index":358,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/LoginComponent.html":{}}}],["409",{"_index":2014,"title":{},"body":{"injectables/UserService.html":{}}}],["5",{"_index":826,"title":{},"body":{"components/ErrorComponent.html":{},"index.html":{}}}],["5/5",{"_index":2234,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1119,"title":{},"body":{"components/LoaderComponent.html":{}}}],["500px",{"_index":1339,"title":{},"body":{"components/MapComponent.html":{}}}],["53.1434501",{"_index":1332,"title":{},"body":{"components/MapComponent.html":{}}}],["5443ba",{"_index":1819,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["56px",{"_index":1127,"title":{},"body":{"components/LoaderComponent.html":{}}}],["6/6",{"_index":2235,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1361,"title":{},"body":{"components/MapComponent.html":{}}}],["7.0.2",{"_index":2290,"title":{},"body":{"dependencies.html":{}}}],["7.5.5",{"_index":2295,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":2233,"title":{},"body":{"coverage.html":{}}}],["8.2145521",{"_index":1333,"title":{},"body":{"components/MapComponent.html":{}}}],["8/21",{"_index":2272,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":2252,"title":{},"body":{"coverage.html":{}}}],["9999",{"_index":2056,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["_displaytexts",{"_index":1170,"title":{},"body":{"injectables/LoaderService.html":{}}}],["_loading",{"_index":1171,"title":{},"body":{"injectables/LoaderService.html":{}}}],["a0a0a0",{"_index":2506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["a9c940",{"_index":1820,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["abc123",{"_index":2328,"title":{},"body":{"miscellaneous/functions.html":{}}}],["access",{"_index":207,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthStorageService.html":{},"miscellaneous/variables.html":{}}}],["access_token_key",{"_index":477,"title":{},"body":{"injectables/AuthStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["accessors",{"_index":438,"title":{},"body":{"injectables/AuthStorageService.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/ErrorComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"injectables/LoaderService.html":{},"components/MapComponent.html":{},"components/ResultDataViewComponent.html":{},"injectables/SettingsStorageService.html":{}}}],["accesstoken",{"_index":439,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["accesstoken(token",{"_index":491,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["account",{"_index":1967,"title":{},"body":{"injectables/UserService.html":{}}}],["accounts",{"_index":1983,"title":{},"body":{"injectables/UserService.html":{}}}],["accumulations",{"_index":918,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["action",{"_index":2409,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["activated",{"_index":1688,"title":{},"body":{"guards/QueryParameterGuard.html":{},"miscellaneous/functions.html":{}}}],["activatedroute",{"_index":702,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"injectables/ErrorService.html":{},"components/LoginComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["activatedroutesnapshot",{"_index":234,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"guards/LoaderGuard.html":{},"guards/QueryParameterGuard.html":{},"miscellaneous/functions.html":{}}}],["active",{"_index":608,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{},"components/LoaderComponent.html":{},"injectables/WaterRightsService.html":{}}}],["actual_component",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["actually",{"_index":1294,"title":{},"body":{"components/MapComponent.html":{}}}],["add",{"_index":982,"title":{},"body":{"components/FrameComponent.html":{},"injectables/LoaderService.html":{},"classes/ModuleProvider.html":{}}}],["addloader",{"_index":1174,"title":{},"body":{"injectables/LoaderService.html":{}}}],["addloader(toresolve",{"_index":1176,"title":{},"body":{"injectables/LoaderService.html":{}}}],["adds",{"_index":1009,"title":{},"body":{"components/IonIconComponent.html":{}}}],["administration",{"_index":1744,"title":{},"body":{"components/ResultDataViewComponent.html":{},"miscellaneous/enumerations.html":{}}}],["afterviewinit",{"_index":691,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/LoaderComponent.html":{},"components/MapComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["agriculture",{"_index":1810,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["alias",{"_index":1388,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/typealiases.html":{}}}],["aliases",{"_index":2360,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":2492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alive",{"_index":566,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["allow",{"_index":803,"title":{},"body":{"components/ErrorComponent.html":{},"components/IonIconComponent.html":{}}}],["allowed",{"_index":240,"title":{},"body":{"guards/AuthGuard.html":{}}}],["allows",{"_index":573,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"interceptors/LoaderInterceptor.html":{}}}],["already",{"_index":1531,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{},"miscellaneous/typealiases.html":{}}}],["always",{"_index":404,"title":{},"body":{"injectables/AuthService.html":{},"components/MapComponent.html":{},"miscellaneous/variables.html":{}}}],["amount",{"_index":1890,"title":{},"body":{"interceptors/SanitizeUrlInterceptor.html":{}}}],["amounts",{"_index":928,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["angular",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/IonIconComponent.html":{},"properties.html":{}}}],["angular/animations",{"_index":2277,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":820,"title":{},"body":{"components/ErrorComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"modules/WisdomModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interceptors/BaseUrlInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"injectables/ConsumersService.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"interceptors/LoaderInterceptor.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/UserService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["angular/compiler",{"_index":1988,"title":{},"body":{"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/core",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/ExampleComponent.html":{},"modules/ExampleModule.html":{},"injectables/ExampleService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"guards/QueryParameterGuard.html":{},"components/ResultDataViewComponent.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"components/SideBarComponent.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"modules/WisdomModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":184,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"injectables/ErrorService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"guards/LoaderGuard.html":{},"components/LoginComponent.html":{},"components/MapSelectViewComponent.html":{},"classes/ModuleProvider.html":{},"guards/QueryParameterGuard.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"interfaces/WisdomInterface.html":{},"modules/WisdomModule.html":{},"dependencies.html":{}}}],["animation",{"_index":1074,"title":{},"body":{"components/LoaderComponent.html":{},"injectables/LoaderService.html":{}}}],["annotation",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["annotationplugin",{"_index":37,"title":{},"body":{"components/AppComponent.html":{}}}],["another",{"_index":658,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["any).options.padding",{"_index":1442,"title":{},"body":{"components/MapComponent.html":{}}}],["api",{"_index":521,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["api.ts",{"_index":2258,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["api_url",{"_index":769,"title":{},"body":{"injectables/ConsumersService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apiurl",{"_index":2468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["app.component",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":22,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"coverage.html":{},"index.html":{}}}],["append",{"_index":655,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["application",{"_index":951,"title":{},"body":{"components/FrameComponent.html":{}}}],["application/json",{"_index":780,"title":{},"body":{"injectables/ConsumersService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/UserService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["application/x",{"_index":414,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["appmodule",{"_index":113,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{}}}],["approutingmodule",{"_index":121,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["area",{"_index":1731,"title":{},"body":{"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["areacomponents",{"_index":1698,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["arg0",{"_index":2482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["array",{"_index":534,"title":{},"body":{"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"guards/QueryParameterGuard.html":{},"components/ResultDataViewComponent.html":{}}}],["array.from(this.selectedshapes[layerkey",{"_index":1520,"title":{},"body":{"components/MapComponent.html":{}}}],["arrays",{"_index":2423,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["assets/leaflet/images",{"_index":60,"title":{},"body":{"components/AppComponent.html":{}}}],["associated",{"_index":1976,"title":{},"body":{"injectables/UserService.html":{}}}],["association",{"_index":2118,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["async",{"_index":1565,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["asynchronously",{"_index":1562,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["attention",{"_index":1302,"title":{},"body":{"components/MapComponent.html":{}}}],["attribute",{"_index":1024,"title":{},"body":{"components/IonIconComponent.html":{},"guards/QueryParameterGuard.html":{}}}],["attribution",{"_index":1458,"title":{},"body":{"components/MapComponent.html":{}}}],["auth",{"_index":229,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"components/FrameComponent.html":{},"components/LoginComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["auth.service",{"_index":257,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["auth/auth",{"_index":981,"title":{},"body":{"components/FrameComponent.html":{}}}],["auth/auth.guard",{"_index":186,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/ModuleProvider.html":{}}}],["auth/auth.interceptor",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/auth.service",{"_index":980,"title":{},"body":{"components/FrameComponent.html":{}}}],["auth/login/login.component",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["auth_api",{"_index":1999,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth_url",{"_index":399,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authentication",{"_index":338,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["authguard",{"_index":185,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"classes/ModuleProvider.html":{},"coverage.html":{}}}],["authinterceptor",{"_index":123,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"coverage.html":{},"index.html":{}}}],["authority",{"_index":2063,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["authorization",{"_index":328,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"miscellaneous/variables.html":{}}}],["authorized",{"_index":2434,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["authrequest",{"_index":348,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["authservice",{"_index":217,"title":{"injectables/AuthService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/FrameComponent.html":{},"components/LoginComponent.html":{},"coverage.html":{}}}],["authstorage",{"_index":222,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/FrameComponent.html":{},"components/LoginComponent.html":{}}}],["authstorageservice",{"_index":216,"title":{"injectables/AuthStorageService.html":{}},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthStorageService.html":{},"components/FrameComponent.html":{},"components/LoginComponent.html":{},"coverage.html":{}}}],["authstorageservice.getstorage(access_token_key",{"_index":493,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["authstorageservice.getstorage(expires_in_key",{"_index":498,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["authstorageservice.getstorage(refresh_token_key",{"_index":501,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["authstorageservice.getstorage(scopes_key",{"_index":505,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["authstorageservice.setstorage(`${unixtime",{"_index":495,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["authstorageservice.setstorage(scopes",{"_index":503,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["authstorageservice.setstorage(token",{"_index":492,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["automatically",{"_index":2213,"title":{},"body":{"interfaces/WisdomInterface.html":{}}}],["available",{"_index":272,"title":{},"body":{"guards/AuthGuard.html":{},"classes/ModuleProvider.html":{},"classes/StaticLoader.html":{},"modules.html":{}}}],["avoid",{"_index":294,"title":{},"body":{"guards/AuthGuard.html":{}}}],["await",{"_index":1192,"title":{},"body":{"injectables/LoaderService.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["awaited",{"_index":1179,"title":{},"body":{"injectables/LoaderService.html":{}}}],["awaits",{"_index":1188,"title":{},"body":{"injectables/LoaderService.html":{}}}],["ba4c43",{"_index":1816,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["back",{"_index":842,"title":{},"body":{"components/ErrorComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["backgroundcolor",{"_index":740,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/ResultDataViewComponent.html":{}}}],["bad",{"_index":2436,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["bar",{"_index":977,"title":{},"body":{"components/FrameComponent.html":{},"injectables/SettingsStorageService.html":{},"components/SideBarComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["bar'},{'name",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["bar.component",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["bar.component.html",{"_index":1925,"title":{},"body":{"components/SideBarComponent.html":{}}}],["bar.component.ts",{"_index":1924,"title":{},"body":{"components/SideBarComponent.html":{},"coverage.html":{}}}],["bar.component.ts:13",{"_index":1926,"title":{},"body":{"components/SideBarComponent.html":{}}}],["bar/side",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"components/SideBarComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["base",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"interceptors/BaseUrlInterceptor.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["baseurl",{"_index":2255,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["baseurlinterceptor",{"_index":124,"title":{"interceptors/BaseUrlInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/BaseUrlInterceptor.html":{},"coverage.html":{},"index.html":{}}}],["bcd9e0",{"_index":1814,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["bearer",{"_index":337,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["before",{"_index":1893,"title":{},"body":{"interceptors/SanitizeUrlInterceptor.html":{}}}],["behavior",{"_index":2042,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["behaviorsubject",{"_index":538,"title":{},"body":{"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"components/ConsumerDetailComponent.html":{},"components/MapComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["behaviorsubject([[nan",{"_index":2023,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["behaviorsubject([nan",{"_index":714,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["behaviour",{"_index":645,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["beta.1",{"_index":2285,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":1167,"title":{},"body":{"injectables/LoaderService.html":{}}}],["beware",{"_index":2336,"title":{},"body":{"miscellaneous/functions.html":{}}}],["bkg",{"_index":1461,"title":{},"body":{"components/MapComponent.html":{}}}],["black",{"_index":1837,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["blue",{"_index":741,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["body",{"_index":2009,"title":{},"body":{"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{}}}],["body.roles",{"_index":2011,"title":{},"body":{"injectables/UserService.html":{}}}],["body.scopes",{"_index":2010,"title":{},"body":{"injectables/UserService.html":{}}}],["boolean",{"_index":252,"title":{},"body":{"guards/AuthGuard.html":{},"components/BreadcrumbsComponent.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/ErrorComponent.html":{},"components/FrameComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"guards/QueryParameterGuard.html":{},"components/ResultDataViewComponent.html":{},"injectables/SettingsStorageService.html":{},"injectables/WaterRightsService.html":{}}}],["bootstrap",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["bordercolor",{"_index":1836,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["borderskipped",{"_index":1834,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["borderwidth",{"_index":1833,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["both",{"_index":2509,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bounce",{"_index":1100,"title":{},"body":{"components/LoaderComponent.html":{}}}],["bounds",{"_index":2017,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["bounds[0].push(coordinates[0",{"_index":2038,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["bounds[1].push(coordinates[1",{"_index":2039,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["box",{"_index":1053,"title":{},"body":{"interfaces/LayerData.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"components/ResultDataViewComponent.html":{},"interfaces/ShapeData.html":{}}}],["breadcrumb",{"_index":525,"title":{"interfaces/Breadcrumb.html":{}},"body":{"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"coverage.html":{}}}],["breadcrumbs",{"_index":541,"title":{},"body":{"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"components/ConsumerDetailComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["breadcrumbs'},{'name",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["breadcrumbs.component.html",{"_index":565,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["breadcrumbs.service",{"_index":588,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["breadcrumbs/breadcrumbs.component",{"_index":2220,"title":{},"body":{"modules/WisdomModule.html":{}}}],["breadcrumbscomponent",{"_index":70,"title":{"components/BreadcrumbsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"modules/WisdomModule.html":{},"coverage.html":{},"index.html":{}}}],["breadcrumbsservice",{"_index":542,"title":{"injectables/BreadcrumbsService.html":{}},"body":{"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"components/ConsumerDetailComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"coverage.html":{}}}],["breadcrumb}s",{"_index":545,"title":{},"body":{"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{}}}],["break",{"_index":1257,"title":{},"body":{"components/LoginComponent.html":{},"components/ResultDataViewComponent.html":{}}}],["bring",{"_index":967,"title":{},"body":{"components/FrameComponent.html":{}}}],["browse",{"_index":2356,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"dependencies.html":{},"modules.html":{}}}],["browserify",{"_index":393,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["browsermodule",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["bulma",{"_index":604,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{},"components/ErrorComponent.html":{},"dependencies.html":{}}}],["bulma/bulma",{"_index":2221,"title":{},"body":{"modules/WisdomModule.html":{}}}],["bulmaistoggleabledirective",{"_index":105,"title":{"directives/BulmaIsToggleableDirective.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"modules/WisdomModule.html":{},"coverage.html":{},"index.html":{}}}],["businesses",{"_index":940,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/ResultDataViewComponent.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["button",{"_index":2497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["button.style.backgroundimage",{"_index":2498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cache",{"_index":643,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"miscellaneous/variables.html":{}}}],["cache.interceptor",{"_index":167,"title":{},"body":{"modules/AppModule.html":{}}}],["cache.ts",{"_index":2239,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["cached",{"_index":1529,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["cachedkeys",{"_index":1585,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["cachedquery",{"_index":1572,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["cachedquery.box",{"_index":1584,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["cachedquery.shapes",{"_index":1579,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["cacheinterceptor",{"_index":125,"title":{"interceptors/CacheInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/CacheInterceptor.html":{},"coverage.html":{},"index.html":{}}}],["caching",{"_index":654,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["calc(100vh",{"_index":1126,"title":{},"body":{"components/LoaderComponent.html":{}}}],["calendar",{"_index":1627,"title":{},"body":{"components/MapSelectViewComponent.html":{},"miscellaneous/variables.html":{}}}],["call",{"_index":1219,"title":{},"body":{"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["callback",{"_index":2481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["called",{"_index":1135,"title":{},"body":{"guards/LoaderGuard.html":{}}}],["can't",{"_index":274,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canactivate",{"_index":192,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"guards/LoaderGuard.html":{},"guards/QueryParameterGuard.html":{},"miscellaneous/variables.html":{}}}],["canactivate(route",{"_index":233,"title":{},"body":{"guards/AuthGuard.html":{},"guards/QueryParameterGuard.html":{}}}],["canactivatechild",{"_index":1138,"title":{},"body":{"guards/LoaderGuard.html":{}}}],["capture",{"_index":844,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["captured",{"_index":2473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["case",{"_index":825,"title":{},"body":{"components/ErrorComponent.html":{},"components/LoginComponent.html":{}}}],["catch(console.error",{"_index":1769,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["catch(e",{"_index":992,"title":{},"body":{"components/FrameComponent.html":{}}}],["catcherror",{"_index":852,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["catcherror(requesterror",{"_index":855,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["causing",{"_index":2334,"title":{},"body":{"miscellaneous/functions.html":{}}}],["center",{"_index":1267,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/variables.html":{}}}],["centercontent",{"_index":2490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["certain",{"_index":819,"title":{},"body":{"components/ErrorComponent.html":{},"guards/QueryParameterGuard.html":{}}}],["change",{"_index":1141,"title":{},"body":{"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{}}}],["chart",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/ResultDataViewComponent.html":{},"miscellaneous/variables.html":{}}}],["chart.getdatasetmeta(item.datasetindex",{"_index":1860,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["chart.getdatasetmeta(item.datasetindex).hidden",{"_index":1859,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["chart.js",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["chart.js/auto",{"_index":724,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/ResultDataViewComponent.html":{}}}],["chart.register(annotationplugin",{"_index":61,"title":{},"body":{"components/AppComponent.html":{}}}],["chart.update",{"_index":1862,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["chartdata",{"_index":693,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/ResultDataViewComponent.html":{}}}],["chartevent",{"_index":1718,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["chartjs",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["chartlegendfilter",{"_index":1705,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["chartlegendfilter(item",{"_index":1714,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["chartlegendonclick",{"_index":1706,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["chartlegendonclick(event",{"_index":1717,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["charts",{"_index":2189,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{},"dependencies.html":{}}}],["check",{"_index":279,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/BreadcrumbsComponent.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/LoaderInterceptor.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"guards/QueryParameterGuard.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"miscellaneous/variables.html":{}}}],["checking",{"_index":202,"title":{},"body":{"guards/AuthGuard.html":{}}}],["checks",{"_index":243,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interceptors/SanitizeUrlInterceptor.html":{}}}],["child",{"_index":1145,"title":{},"body":{"guards/LoaderGuard.html":{}}}],["child(1",{"_index":1105,"title":{},"body":{"components/LoaderComponent.html":{}}}],["child(2",{"_index":1109,"title":{},"body":{"components/LoaderComponent.html":{}}}],["child(3",{"_index":1112,"title":{},"body":{"components/LoaderComponent.html":{}}}],["children",{"_index":193,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["class",{"_index":57,"title":{"classes/ModuleProvider.html":{},"classes/StaticLoader.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/ExampleComponent.html":{},"modules/ExampleModule.html":{},"injectables/ExampleService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"classes/ModuleProvider.html":{},"guards/QueryParameterGuard.html":{},"components/ResultDataViewComponent.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"components/SideBarComponent.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"modules/WisdomModule.html":{},"coverage.html":{}}}],["classes",{"_index":609,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{},"classes/ModuleProvider.html":{},"classes/StaticLoader.html":{},"index.html":{}}}],["classes.trim().split(/\\s",{"_index":636,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["cleaned",{"_index":2164,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["clear",{"_index":434,"title":{},"body":{"injectables/AuthStorageService.html":{},"injectables/LoaderService.html":{},"components/MapComponent.html":{},"injectables/SettingsStorageService.html":{}}}],["clearloading",{"_index":1175,"title":{},"body":{"injectables/LoaderService.html":{}}}],["clears",{"_index":297,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthStorageService.html":{}}}],["cli",{"_index":1989,"title":{},"body":{"injectables/UserService.html":{}}}],["click",{"_index":613,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{},"directives/LangSelectorDirective.html":{},"interfaces/Marker.html":{}}}],["clickable",{"_index":563,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["clicked",{"_index":619,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["clicking",{"_index":605,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{},"directives/LangSelectorDirective.html":{}}}],["clicklangselect",{"_index":1037,"title":{},"body":{"directives/LangSelectorDirective.html":{}}}],["client",{"_index":1552,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["closed",{"_index":487,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["cluster_appmodule",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_bootstrap",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_declarations",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_imports",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_providers",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_examplemodule",{"_index":896,"title":{},"body":{"modules/ExampleModule.html":{},"index.html":{}}}],["cluster_examplemodule_declarations",{"_index":899,"title":{},"body":{"modules/ExampleModule.html":{},"index.html":{}}}],["cluster_examplemodule_exports",{"_index":898,"title":{},"body":{"modules/ExampleModule.html":{},"index.html":{}}}],["cluster_examplemodule_imports",{"_index":897,"title":{},"body":{"modules/ExampleModule.html":{}}}],["cluster_waterusageforecastsmodule",{"_index":2181,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{},"index.html":{}}}],["cluster_waterusageforecastsmodule_declarations",{"_index":2183,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{},"index.html":{}}}],["cluster_waterusageforecastsmodule_imports",{"_index":2182,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{}}}],["cluster_wisdommodule",{"_index":2216,"title":{},"body":{"modules/WisdomModule.html":{},"index.html":{}}}],["cluster_wisdommodule_declarations",{"_index":2217,"title":{},"body":{"modules/WisdomModule.html":{},"index.html":{}}}],["cluster_wisdommodule_exports",{"_index":2218,"title":{},"body":{"modules/WisdomModule.html":{},"index.html":{}}}],["code",{"_index":295,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"interfaces/LayerData.html":{},"components/MapComponent.html":{},"interfaces/ShapeData.html":{},"miscellaneous/functions.html":{}}}],["codes",{"_index":322,"title":{},"body":{"guards/AuthGuard.html":{},"components/ErrorComponent.html":{}}}],["codetype",{"_index":822,"title":{},"body":{"components/ErrorComponent.html":{}}}],["collect",{"_index":870,"title":{},"body":{"injectables/ErrorService.html":{}}}],["collected",{"_index":557,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["collectedlang",{"_index":1672,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["collecting",{"_index":540,"title":{},"body":{"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"components/ErrorComponent.html":{}}}],["color",{"_index":1467,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/functions.html":{}}}],["colormap",{"_index":1809,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["column",{"_index":1133,"title":{},"body":{"components/LoaderComponent.html":{}}}],["combinelatestwith",{"_index":1752,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["common",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"interceptors/BaseUrlInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interceptors/ErrorInterceptor.html":{},"modules/ExampleModule.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"interceptors/LoaderInterceptor.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"classes/StaticLoader.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["common.map.resolution",{"_index":1848,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["commonenvironment",{"_index":2466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["commonmodule",{"_index":2186,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{},"modules/WisdomModule.html":{}}}],["communicated",{"_index":1169,"title":{},"body":{"injectables/LoaderService.html":{}}}],["communication",{"_index":1084,"title":{},"body":{"components/LoaderComponent.html":{},"injectables/LoaderService.html":{}}}],["complaining",{"_index":1020,"title":{},"body":{"components/IonIconComponent.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"interfaces/WisdomInterface.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["component[1",{"_index":1882,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["component_template",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"index.html":{}}}],["concept",{"_index":2515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config",{"_index":1391,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/typealiases.html":{}}}],["considered",{"_index":561,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["consists",{"_index":2422,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["console.error(e",{"_index":993,"title":{},"body":{"components/FrameComponent.html":{},"components/LoginComponent.html":{}}}],["console.error(error",{"_index":1251,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log(\"successfully",{"_index":1242,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log([event",{"_index":1857,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["console.log([item",{"_index":1853,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["console.log(requesterror",{"_index":857,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["const",{"_index":191,"title":{},"body":{"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"injectables/ConsumersService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"components/ResultDataViewComponent.html":{},"injectables/SettingsStorageService.html":{},"injectables/UserService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["constant",{"_index":2512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["constructing",{"_index":1659,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["constructor",{"_index":214,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"classes/ModuleProvider.html":{},"guards/QueryParameterGuard.html":{},"components/ResultDataViewComponent.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["constructor(authservice",{"_index":958,"title":{},"body":{"components/FrameComponent.html":{},"components/LoginComponent.html":{}}}],["constructor(authstorage",{"_index":215,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{}}}],["constructor(breadcrumbs",{"_index":1618,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["constructor(elref",{"_index":1011,"title":{},"body":{"components/IonIconComponent.html":{}}}],["constructor(http",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ConsumersService.html":{},"injectables/MapService.html":{},"injectables/UserService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["constructor(location",{"_index":799,"title":{},"body":{"components/ErrorComponent.html":{}}}],["constructor(private",{"_index":347,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/BreadcrumbsComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"guards/QueryParameterGuard.html":{},"injectables/UserService.html":{}}}],["constructor(route",{"_index":701,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["constructor(router",{"_index":872,"title":{},"body":{"injectables/ErrorService.html":{},"guards/QueryParameterGuard.html":{}}}],["constructor(service",{"_index":569,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"components/MapComponent.html":{},"components/ResultDataViewComponent.html":{}}}],["constructor(translateservice",{"_index":1038,"title":{},"body":{"directives/LangSelectorDirective.html":{}}}],["consumer",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["consumer/:consumer",{"_index":2524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["consumerareadata",{"_index":1699,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["consumerdetailcomponent",{"_index":72,"title":{"components/ConsumerDetailComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["consumergroup",{"_index":919,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["consumergroupdata",{"_index":1700,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["consumericon",{"_index":728,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/ResultDataViewComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["consumerlocationsresponse",{"_index":709,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"miscellaneous/typealiases.html":{}}}],["consumers",{"_index":770,"title":{},"body":{"injectables/ConsumersService.html":{},"miscellaneous/variables.html":{}}}],["consumersservice",{"_index":704,"title":{"injectables/ConsumersService.html":{}},"body":{"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"components/ResultDataViewComponent.html":{},"coverage.html":{}}}],["consumption",{"_index":1629,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["container",{"_index":785,"title":{},"body":{"interfaces/Error.html":{},"components/ErrorComponent.html":{},"components/LoaderComponent.html":{},"components/MapComponent.html":{},"miscellaneous/variables.html":{}}}],["container.addeventlistener(\"click",{"_index":2496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["containing",{"_index":224,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/Error.html":{},"interfaces/LayerData.html":{},"components/LoginComponent.html":{},"guards/QueryParameterGuard.html":{},"interfaces/ShapeData.html":{}}}],["content",{"_index":403,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ConsumersService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"interfaces/Marker.html":{},"injectables/UserService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"miscellaneous/variables.html":{}}}],["context",{"_index":416,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/CacheInterceptor.html":{},"injectables/ConsumersService.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"interceptors/LoaderInterceptor.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"miscellaneous/variables.html":{}}}],["context/use",{"_index":1542,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["continue",{"_index":1779,"title":{},"body":{"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["control",{"_index":644,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"components/MapComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["coordinates",{"_index":694,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/LayerData.html":{},"components/MapComponent.html":{},"interfaces/Marker.html":{},"components/ResultDataViewComponent.html":{},"interfaces/ShapeData.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"miscellaneous/functions.html":{}}}],["coordinates[0",{"_index":758,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["coordinates[1",{"_index":759,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["core",{"_index":2532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["core.frame.account",{"_index":997,"title":{},"body":{"components/FrameComponent.html":{}}}],["core.frame.administration",{"_index":999,"title":{},"body":{"components/FrameComponent.html":{}}}],["core.frame.logout",{"_index":998,"title":{},"body":{"components/FrameComponent.html":{}}}],["core.frame.permissions",{"_index":1001,"title":{},"body":{"components/FrameComponent.html":{}}}],["core.frame.roles",{"_index":1002,"title":{},"body":{"components/FrameComponent.html":{}}}],["core.frame.usermanagement",{"_index":1000,"title":{},"body":{"components/FrameComponent.html":{}}}],["core.login.forgotpassword",{"_index":1261,"title":{},"body":{"components/LoginComponent.html":{}}}],["core.login.login",{"_index":1262,"title":{},"body":{"components/LoginComponent.html":{}}}],["core.login.password",{"_index":1260,"title":{},"body":{"components/LoginComponent.html":{}}}],["core.login.username",{"_index":1259,"title":{},"body":{"components/LoginComponent.html":{}}}],["corner",{"_index":1055,"title":{},"body":{"interfaces/LayerData.html":{},"interfaces/ShapeData.html":{}}}],["correct",{"_index":1018,"title":{},"body":{"components/IonIconComponent.html":{},"interceptors/SanitizeUrlInterceptor.html":{}}}],["coverage",{"_index":2225,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["covering",{"_index":791,"title":{},"body":{"components/ErrorComponent.html":{},"components/LoaderComponent.html":{},"miscellaneous/variables.html":{}}}],["create",{"_index":1966,"title":{},"body":{"injectables/UserService.html":{}}}],["created",{"_index":2444,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["creates",{"_index":874,"title":{},"body":{"injectables/ErrorService.html":{}}}],["createuser",{"_index":1959,"title":{},"body":{"injectables/UserService.html":{}}}],["createuser(firstname",{"_index":1962,"title":{},"body":{"injectables/UserService.html":{}}}],["creating",{"_index":1641,"title":{},"body":{"interfaces/Marker.html":{}}}],["creation",{"_index":1969,"title":{},"body":{"injectables/UserService.html":{}}}],["crs",{"_index":771,"title":{},"body":{"injectables/ConsumersService.html":{}}}],["cservice",{"_index":703,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["current",{"_index":244,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/BreadcrumbsComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoginComponent.html":{},"guards/QueryParameterGuard.html":{},"miscellaneous/typealiases.html":{}}}],["currently",{"_index":624,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{},"injectables/ErrorService.html":{},"directives/LangSelectorDirective.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"guards/QueryParameterGuard.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["curtain",{"_index":2526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["curtain.ts",{"_index":2240,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["custom",{"_index":783,"title":{},"body":{"interfaces/Error.html":{},"interfaces/Marker.html":{},"miscellaneous/variables.html":{}}}],["d35a0c",{"_index":1316,"title":{},"body":{"components/MapComponent.html":{}}}],["danger",{"_index":827,"title":{},"body":{"components/ErrorComponent.html":{}}}],["dark",{"_index":2283,"title":{},"body":{"dependencies.html":{}}}],["data",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthStorageService.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"interfaces/LayerData.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"classes/ModuleProvider.html":{},"guards/QueryParameterGuard.html":{},"components/ResultDataViewComponent.html":{},"injectables/SettingsStorageService.html":{},"interfaces/ShapeData.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["data.areas",{"_index":1880,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["data.box[0",{"_index":1494,"title":{},"body":{"components/MapComponent.html":{}}}],["data.box[2",{"_index":1495,"title":{},"body":{"components/MapComponent.html":{}}}],["data.branches",{"_index":1881,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["data.consumer",{"_index":1878,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["data.datasets.length",{"_index":1855,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["data.legaltitle",{"_index":2060,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["data.locations",{"_index":2034,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["data.map",{"_index":2204,"title":{},"body":{"injectables/WaterUsageHistoryService.html":{}}}],["data.map(({usage",{"_index":739,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["data.map(({year",{"_index":743,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["data.results",{"_index":1864,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["data.selection",{"_index":1865,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["data.shapes",{"_index":1487,"title":{},"body":{"components/MapComponent.html":{},"components/ResultDataViewComponent.html":{}}}],["data.subject",{"_index":2061,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["data.ts",{"_index":1049,"title":{},"body":{"interfaces/LayerData.html":{},"interfaces/ShapeData.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["data?.address",{"_index":2069,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["data?.annotation",{"_index":2140,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["data?.bailee",{"_index":2071,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["data?.dateofchange?.toisostring()?.slice(0",{"_index":2073,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["data?.externalid",{"_index":2078,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["data?.filereference",{"_index":2080,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["data?.grantingauthority",{"_index":2064,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["data?.id",{"_index":2075,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["data?.no",{"_index":2076,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["data?.registeringauthority",{"_index":2066,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["data?.waterauthority",{"_index":2067,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["data[0",{"_index":1794,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["data[1",{"_index":1801,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["data[data.length",{"_index":746,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["database",{"_index":1984,"title":{},"body":{"injectables/UserService.html":{}}}],["datasets",{"_index":738,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/ResultDataViewComponent.html":{}}}],["date",{"_index":462,"title":{},"body":{"injectables/AuthStorageService.html":{},"injectables/WaterUsageHistoryService.html":{},"miscellaneous/variables.html":{}}}],["date(raw.dateofchange",{"_index":2175,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["date(raw.valid.from",{"_index":2178,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["date(raw.valid.until",{"_index":2179,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["date(recorded_at",{"_index":2206,"title":{},"body":{"injectables/WaterUsageHistoryService.html":{}}}],["dayjs",{"_index":2288,"title":{},"body":{"dependencies.html":{}}}],["db",{"_index":1525,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{},"miscellaneous/variables.html":{}}}],["db.createobjectstore(\"queries",{"_index":1560,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["db.createobjectstore(\"shapes",{"_index":1561,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["db.deleteobjectstore(\"queries",{"_index":1558,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["db.deleteobjectstore(\"shapes",{"_index":1559,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["db_name",{"_index":1544,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dbschema",{"_index":1527,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["de",{"_index":1460,"title":{},"body":{"components/MapComponent.html":{}}}],["de/by",{"_index":1464,"title":{},"body":{"components/MapComponent.html":{}}}],["de_de",{"_index":1946,"title":{},"body":{"classes/StaticLoader.html":{},"miscellaneous/variables.html":{}}}],["de_delang",{"_index":1937,"title":{},"body":{"classes/StaticLoader.html":{},"miscellaneous/variables.html":{}}}],["de_delangcommon",{"_index":1938,"title":{},"body":{"classes/StaticLoader.html":{},"miscellaneous/variables.html":{}}}],["deciding",{"_index":239,"title":{},"body":{"guards/AuthGuard.html":{}}}],["declarations",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"modules/ExampleModule.html":{},"modules/WaterUsageForecastsModule.html":{},"modules/WisdomModule.html":{}}}],["decorators",{"_index":620,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{},"components/ConsumerDetailComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["default",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"injectables/ErrorService.html":{},"interfaces/LayerData.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"interfaces/Marker.html":{},"components/ResultDataViewComponent.html":{},"interfaces/ShapeData.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"miscellaneous/variables.html":{}}}],["defaultlanguage",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["defaults",{"_index":1335,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"classes/ModuleProvider.html":{},"guards/QueryParameterGuard.html":{},"components/ResultDataViewComponent.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"components/SideBarComponent.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["delay",{"_index":1106,"title":{},"body":{"components/LoaderComponent.html":{}}}],["delete",{"_index":836,"title":{},"body":{"components/ErrorComponent.html":{}}}],["deleted",{"_index":2404,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["deleteusersid200",{"_index":2362,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["deleteusersid403",{"_index":2364,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["deleteusersid404",{"_index":2366,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["dependencies",{"_index":115,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ExampleModule.html":{},"modules/WaterUsageForecastsModule.html":{},"modules/WisdomModule.html":{},"dependencies.html":{},"index.html":{}}}],["depletes",{"_index":296,"title":{},"body":{"guards/AuthGuard.html":{}}}],["describes",{"_index":2419,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["description",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/ExampleComponent.html":{},"modules/ExampleModule.html":{},"injectables/ExampleService.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"interfaces/LayerData.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"interfaces/Marker.html":{},"classes/ModuleProvider.html":{},"guards/QueryParameterGuard.html":{},"components/ResultDataViewComponent.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"interfaces/ShapeData.html":{},"components/SideBarComponent.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"injectables/WaterUsageForecastsService.html":{},"interfaces/WisdomInterface.html":{},"miscellaneous/functions.html":{},"properties.html":{}}}],["destroy",{"_index":577,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["detail",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"miscellaneous/variables.html":{}}}],["detail'},{'name",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["detail.component",{"_index":2191,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{}}}],["detail.component.html",{"_index":692,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["detail.component.ts",{"_index":690,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/WaterRightDetailComponent.html":{},"coverage.html":{}}}],["detail.component.ts:20",{"_index":2025,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["detail.component.ts:21",{"_index":2026,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["detail.component.ts:23",{"_index":721,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["detail.component.ts:24",{"_index":718,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["detail.component.ts:25",{"_index":717,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["detail.component.ts:26",{"_index":720,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["detail.component.ts:27",{"_index":715,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["detail.component.ts:29",{"_index":713,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["detail.component.ts:30",{"_index":722,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["detail.component.ts:32",{"_index":707,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["detail.component.ts:34",{"_index":2019,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["detail.component.ts:38",{"_index":2020,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["detail.component.ts:41",{"_index":712,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["detail.component.ts:58",{"_index":710,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["detail.component.ts:75",{"_index":711,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["detail.component.ts:76",{"_index":2022,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["detail/consumer",{"_index":689,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"coverage.html":{}}}],["detail/water",{"_index":2016,"title":{},"body":{"components/WaterRightDetailComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"coverage.html":{}}}],["details",{"_index":2162,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["detecting",{"_index":1148,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["determine",{"_index":2525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deterministically",{"_index":2324,"title":{},"body":{"miscellaneous/functions.html":{}}}],["deutsch",{"_index":995,"title":{},"body":{"components/FrameComponent.html":{}}}],["dev",{"_index":2469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["didfinish",{"_index":1701,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["digit",{"_index":2315,"title":{},"body":{"miscellaneous/functions.html":{}}}],["direct",{"_index":1143,"title":{},"body":{"guards/LoaderGuard.html":{},"guards/QueryParameterGuard.html":{}}}],["direction",{"_index":1473,"title":{},"body":{"components/MapComponent.html":{}}}],["directive",{"_index":65,"title":{"directives/BulmaIsToggleableDirective.html":{},"directives/LangSelectorDirective.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"coverage.html":{}}}],["directives",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"index.html":{}}}],["directly",{"_index":1021,"title":{},"body":{"components/IonIconComponent.html":{},"components/MapComponent.html":{},"miscellaneous/variables.html":{}}}],["disable",{"_index":2528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["discharge",{"_index":2091,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["display",{"_index":548,"title":{},"body":{"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/MapComponent.html":{},"components/ResultDataViewComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/enumerations.html":{}}}],["displayed",{"_index":531,"title":{},"body":{"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/LangSelectorDirective.html":{},"components/MapComponent.html":{},"interfaces/Marker.html":{}}}],["displaying",{"_index":1264,"title":{},"body":{"components/MapComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{}}}],["displaylayer",{"_index":1449,"title":{},"body":{"components/MapComponent.html":{}}}],["displayname",{"_index":933,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/MapComponent.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["displays",{"_index":1056,"title":{},"body":{"interfaces/LayerData.html":{},"interfaces/ShapeData.html":{}}}],["displaytext",{"_index":1177,"title":{},"body":{"injectables/LoaderService.html":{}}}],["displaytexts",{"_index":1080,"title":{},"body":{"components/LoaderComponent.html":{},"injectables/LoaderService.html":{}}}],["displaytextsubject",{"_index":1172,"title":{},"body":{"injectables/LoaderService.html":{}}}],["district",{"_index":1379,"title":{},"body":{"components/MapComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"miscellaneous/enumerations.html":{}}}],["div",{"_index":1132,"title":{},"body":{"components/LoaderComponent.html":{},"miscellaneous/variables.html":{}}}],["divided",{"_index":504,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["dl",{"_index":1463,"title":{},"body":{"components/MapComponent.html":{}}}],["doc",{"_index":483,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["docs",{"_index":1304,"title":{},"body":{"components/MapComponent.html":{}}}],["document.getelementbyid(`${location?.id}`)?.scrollintoview",{"_index":2041,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["documentation",{"_index":2226,"title":{},"body":{"coverage.html":{}}}],["doesn't",{"_index":1657,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["done",{"_index":1735,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["dot",{"_index":2316,"title":{},"body":{"miscellaneous/functions.html":{}}}],["during",{"_index":1968,"title":{},"body":{"injectables/UserService.html":{}}}],["dynamic",{"_index":2279,"title":{},"body":{"dependencies.html":{}}}],["e.g",{"_index":2342,"title":{},"body":{"miscellaneous/functions.html":{}}}],["e02abf",{"_index":1822,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["ease",{"_index":1103,"title":{},"body":{"components/LoaderComponent.html":{}}}],["efforts",{"_index":1085,"title":{},"body":{"components/LoaderComponent.html":{}}}],["el",{"_index":2159,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["el.water_right",{"_index":2160,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["element",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["elementclasses",{"_index":614,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["elementclasses(classes",{"_index":634,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["elementref",{"_index":1012,"title":{},"body":{"components/IonIconComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{}}}],["elements",{"_index":1357,"title":{},"body":{"components/MapComponent.html":{},"components/ResultDataViewComponent.html":{}}}],["elref",{"_index":1014,"title":{},"body":{"components/IonIconComponent.html":{}}}],["elsewhere",{"_index":1787,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["emit",{"_index":882,"title":{},"body":{"injectables/ErrorService.html":{},"components/MapComponent.html":{}}}],["emitselection",{"_index":1276,"title":{},"body":{"components/MapComponent.html":{}}}],["emitted",{"_index":1291,"title":{},"body":{"components/MapComponent.html":{}}}],["emitter",{"_index":884,"title":{},"body":{"injectables/ErrorService.html":{}}}],["empty",{"_index":1299,"title":{},"body":{"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"miscellaneous/variables.html":{}}}],["en_us",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"classes/StaticLoader.html":{},"miscellaneous/variables.html":{}}}],["en_us\"].sidebar",{"_index":1951,"title":{},"body":{"classes/StaticLoader.html":{}}}],["en_us\"].sidebar[key",{"_index":1953,"title":{},"body":{"classes/StaticLoader.html":{}}}],["en_uslang",{"_index":1939,"title":{},"body":{"classes/StaticLoader.html":{},"miscellaneous/variables.html":{}}}],["en_uslangcommon",{"_index":1940,"title":{},"body":{"classes/StaticLoader.html":{},"miscellaneous/variables.html":{}}}],["end",{"_index":929,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/functions.html":{}}}],["endyear",{"_index":934,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["enforce",{"_index":1389,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/typealiases.html":{}}}],["english",{"_index":996,"title":{},"body":{"components/FrameComponent.html":{}}}],["ensuring",{"_index":574,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["entire",{"_index":792,"title":{},"body":{"components/ErrorComponent.html":{}}}],["entries",{"_index":1686,"title":{},"body":{"guards/QueryParameterGuard.html":{},"miscellaneous/typealiases.html":{}}}],["entries.ts",{"_index":2379,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["entry",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"interfaces/WisdomInterface.html":{}}}],["entry[0",{"_index":1929,"title":{},"body":{"components/SideBarComponent.html":{}}}],["enum",{"_index":912,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["enumerations",{"_index":2301,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":511,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apiurl",{"_index":519,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{}}}],["environment.baseurl",{"_index":517,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{}}}],["environments/environment",{"_index":514,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{}}}],["equation",{"_index":924,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["err",{"_index":1162,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["error",{"_index":290,"title":{"interfaces/Error.html":{}},"body":{"guards/AuthGuard.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/LoginComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["error'},{'name",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["error(err",{"_index":1161,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["error(requesterror",{"_index":868,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["error.component.html",{"_index":794,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.service",{"_index":821,"title":{},"body":{"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{}}}],["errorcode",{"_index":795,"title":{},"body":{"components/ErrorComponent.html":{}}}],["errorcomponent",{"_index":76,"title":{"components/ErrorComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"coverage.html":{},"index.html":{}}}],["errordescription",{"_index":786,"title":{},"body":{"interfaces/Error.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{}}}],["errorinterceptor",{"_index":126,"title":{"interceptors/ErrorInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"coverage.html":{},"index.html":{}}}],["errorname",{"_index":787,"title":{},"body":{"interfaces/Error.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{}}}],["errorpresent",{"_index":871,"title":{},"body":{"injectables/ErrorService.html":{}}}],["errors",{"_index":806,"title":{},"body":{"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"miscellaneous/variables.html":{}}}],["errorservice",{"_index":801,"title":{"injectables/ErrorService.html":{}},"body":{"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"coverage.html":{}}}],["errresponse",{"_index":291,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["errresponse.error",{"_index":1250,"title":{},"body":{"components/LoginComponent.html":{}}}],["errresponse.status",{"_index":1249,"title":{},"body":{"components/LoginComponent.html":{}}}],["etag",{"_index":647,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["etag](https://developer.mozilla.org/en",{"_index":666,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["etagmap",{"_index":650,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["etags",{"_index":661,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["event",{"_index":357,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"injectables/ErrorService.html":{},"interfaces/Marker.html":{},"components/ResultDataViewComponent.html":{}}}],["event.headers.get(\"etag",{"_index":681,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["event.headers.get(\"last",{"_index":683,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["eventemitter",{"_index":883,"title":{},"body":{"injectables/ErrorService.html":{},"components/MapComponent.html":{}}}],["events",{"_index":879,"title":{},"body":{"injectables/ErrorService.html":{}}}],["everything",{"_index":1300,"title":{},"body":{"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["evt",{"_index":1647,"title":{},"body":{"interfaces/Marker.html":{},"components/WaterRightDetailComponent.html":{}}}],["exactly",{"_index":1373,"title":{},"body":{"components/MapComponent.html":{}}}],["example",{"_index":891,"title":{},"body":{"components/ExampleComponent.html":{},"modules/ExampleModule.html":{},"injectables/ExampleService.html":{},"components/MapComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["example.component",{"_index":901,"title":{},"body":{"modules/ExampleModule.html":{}}}],["example.component.html",{"_index":892,"title":{},"body":{"components/ExampleComponent.html":{}}}],["example.example.key",{"_index":894,"title":{},"body":{"components/ExampleComponent.html":{}}}],["examplecomponent",{"_index":78,"title":{"components/ExampleComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"modules/ExampleModule.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["examplemodule",{"_index":895,"title":{"modules/ExampleModule.html":{}},"body":{"modules/ExampleModule.html":{},"index.html":{},"modules.html":{}}}],["exampleservice",{"_index":902,"title":{"injectables/ExampleService.html":{}},"body":{"injectables/ExampleService.html":{},"coverage.html":{}}}],["except",{"_index":953,"title":{},"body":{"components/FrameComponent.html":{}}}],["executed",{"_index":618,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["exist",{"_index":2411,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["exists",{"_index":2446,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["expects",{"_index":1679,"title":{},"body":{"guards/QueryParameterGuard.html":{}}}],["expiration",{"_index":461,"title":{},"body":{"injectables/AuthStorageService.html":{},"miscellaneous/variables.html":{}}}],["expires",{"_index":480,"title":{},"body":{"injectables/AuthStorageService.html":{},"miscellaneous/variables.html":{}}}],["expires_in_key",{"_index":479,"title":{},"body":{"injectables/AuthStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["expiresin",{"_index":440,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["expiresin(unixtime",{"_index":494,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["explanation",{"_index":2520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["export",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/ExampleComponent.html":{},"modules/ExampleModule.html":{},"injectables/ExampleService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"interfaces/LayerData.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"interfaces/Marker.html":{},"classes/ModuleProvider.html":{},"guards/QueryParameterGuard.html":{},"components/ResultDataViewComponent.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"interfaces/ShapeData.html":{},"components/SideBarComponent.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"interfaces/WisdomInterface.html":{},"modules/WisdomModule.html":{}}}],["exported",{"_index":905,"title":{},"body":{"injectables/ExampleService.html":{},"interfaces/WisdomInterface.html":{}}}],["exports",{"_index":198,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ExampleModule.html":{},"modules/WisdomModule.html":{}}}],["extends",{"_index":1526,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["extension",{"_index":2501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f",{"_index":1225,"title":{},"body":{"components/LoginComponent.html":{}}}],["f.valid",{"_index":1234,"title":{},"body":{"components/LoginComponent.html":{}}}],["f.value",{"_index":1235,"title":{},"body":{"components/LoginComponent.html":{}}}],["fails",{"_index":1682,"title":{},"body":{"guards/QueryParameterGuard.html":{}}}],["false",{"_index":419,"title":{},"body":{"injectables/AuthService.html":{},"components/BreadcrumbsComponent.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ErrorComponent.html":{},"injectables/ErrorService.html":{},"components/FrameComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"guards/QueryParameterGuard.html":{},"components/ResultDataViewComponent.html":{},"miscellaneous/variables.html":{}}}],["farming_forestry_fishing_industry",{"_index":942,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["feature",{"_index":1470,"title":{},"body":{"components/MapComponent.html":{}}}],["feature.properties.key",{"_index":1476,"title":{},"body":{"components/MapComponent.html":{}}}],["fetch",{"_index":1548,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["fetchconsumers",{"_index":763,"title":{},"body":{"injectables/ConsumersService.html":{}}}],["fetchconsumers(params",{"_index":765,"title":{},"body":{"injectables/ConsumersService.html":{}}}],["fetchdata",{"_index":1707,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["fetchdata(key",{"_index":1720,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["fetched",{"_index":1430,"title":{},"body":{"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["fetched[layerkey",{"_index":1432,"title":{},"body":{"components/MapComponent.html":{}}}],["fetchforecastdata",{"_index":938,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["fetchforecastdata(key",{"_index":2196,"title":{},"body":{"injectables/WaterUsageForecastsService.html":{}}}],["fetchlayerdata",{"_index":1566,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["fetchlayerdata(resolution",{"_index":1638,"title":{},"body":{"injectables/MapService.html":{}}}],["fetchwaterrightdetails",{"_index":2142,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["fetchwaterrightdetails(no",{"_index":2145,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["fetchwaterrightlocations",{"_index":2143,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["fetchwaterrightlocations(params",{"_index":2147,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["fetchwaterusagehistory",{"_index":2199,"title":{},"body":{"injectables/WaterUsageHistoryService.html":{}}}],["fetchwaterusagehistory(id",{"_index":2201,"title":{},"body":{"injectables/WaterUsageHistoryService.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/ExampleComponent.html":{},"modules/ExampleModule.html":{},"injectables/ExampleService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"interfaces/LayerData.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"interfaces/Marker.html":{},"classes/ModuleProvider.html":{},"guards/QueryParameterGuard.html":{},"components/ResultDataViewComponent.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"interfaces/ShapeData.html":{},"components/SideBarComponent.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"interfaces/WisdomInterface.html":{},"modules/WisdomModule.html":{},"coverage.html":{}}}],["find",{"_index":1027,"title":{},"body":{"components/IonIconComponent.html":{},"miscellaneous/functions.html":{}}}],["first",{"_index":1973,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["firstname",{"_index":1972,"title":{},"body":{"injectables/UserService.html":{}}}],["firstvaluefrom",{"_index":1541,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["firstvaluefrom(this.http.get(`${api_url",{"_index":1593,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["fisheries",{"_index":1812,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["fix",{"_index":1884,"title":{},"body":{"interceptors/SanitizeUrlInterceptor.html":{}}}],["fixme",{"_index":1996,"title":{},"body":{"injectables/UserService.html":{}}}],["flat",{"_index":1694,"title":{},"body":{"guards/QueryParameterGuard.html":{},"components/ResultDataViewComponent.html":{}}}],["flex",{"_index":2491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["float",{"_index":925,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["fo",{"_index":478,"title":{},"body":{"injectables/AuthStorageService.html":{},"miscellaneous/variables.html":{}}}],["follow",{"_index":2426,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["following",{"_index":1293,"title":{},"body":{"components/MapComponent.html":{},"interfaces/WisdomInterface.html":{},"miscellaneous/typealiases.html":{}}}],["force",{"_index":1564,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["forecast",{"_index":909,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/ResultDataViewComponent.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["forecastentry",{"_index":906,"title":{"interfaces/ForecastEntry.html":{}},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{},"coverage.html":{}}}],["forecastmodel",{"_index":939,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["forecastresponse",{"_index":917,"title":{"interfaces/ForecastResponse.html":{}},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/ResultDataViewComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"coverage.html":{}}}],["forecastresponse[\"accumulations",{"_index":1804,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["forecastresponse[\"partials\"][0][\"consumergroup",{"_index":922,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["forecastresponse[\"partials\"][0][\"referenceusages",{"_index":931,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["forecasts",{"_index":911,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/variables.html":{}}}],["forecasts.breadcrumbs.map",{"_index":1847,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["forecasts.breadcrumbs.water",{"_index":1628,"title":{},"body":{"components/MapSelectViewComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["forecasts.display.loading",{"_index":947,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["forecasts.label.name",{"_index":2519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forecasts.map",{"_index":1635,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["forecasts.module.ts",{"_index":2185,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{}}}],["forecasts.parameter",{"_index":1873,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["forecasts.parameter.linear",{"_index":1874,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["forecasts.parameter.logarithmic",{"_index":1875,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["forecasts.parameter.polynomial",{"_index":1876,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["forecasts.result",{"_index":1863,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["forecasts.service",{"_index":1754,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["forecasts.service.ts",{"_index":908,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["forecasts.service.ts:58",{"_index":2195,"title":{},"body":{"injectables/WaterUsageForecastsService.html":{}}}],["forecasts.service.ts:65",{"_index":2197,"title":{},"body":{"injectables/WaterUsageForecastsService.html":{}}}],["forecasts.water",{"_index":2051,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["forecasts/results",{"_index":1852,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["forecasts/src/lib/map",{"_index":2259,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["forecasts/src/lib/routing.ts",{"_index":2262,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["forecasts/src/lib/services/consumers.service.ts",{"_index":762,"title":{},"body":{"injectables/ConsumersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["forecasts/src/lib/services/consumers.service.ts:27",{"_index":764,"title":{},"body":{"injectables/ConsumersService.html":{}}}],["forecasts/src/lib/services/consumers.service.ts:34",{"_index":767,"title":{},"body":{"injectables/ConsumersService.html":{}}}],["forecasts/src/lib/services/water",{"_index":907,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["forecasts/src/lib/views/detail",{"_index":687,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/WaterRightDetailComponent.html":{},"coverage.html":{}}}],["forecasts/src/lib/views/map",{"_index":1611,"title":{},"body":{"components/MapSelectViewComponent.html":{},"coverage.html":{}}}],["forecasts/src/lib/views/result",{"_index":1696,"title":{},"body":{"components/ResultDataViewComponent.html":{},"coverage.html":{}}}],["forecasts/src/lib/water",{"_index":2184,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{}}}],["forecasts/src/public",{"_index":2273,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["forecasttype",{"_index":913,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/ResultDataViewComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/enumerations.html":{}}}],["forecasttype.linear",{"_index":1763,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["forecastusage",{"_index":932,"title":{"interfaces/ForecastUsage.html":{}},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/ResultDataViewComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"coverage.html":{}}}],["forestry",{"_index":1811,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["form",{"_index":407,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["formsmodule",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["found",{"_index":2346,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fragment",{"_index":528,"title":{},"body":{"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{}}}],["fragments",{"_index":544,"title":{},"body":{"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{}}}],["frame",{"_index":954,"title":{},"body":{"components/FrameComponent.html":{}}}],["frame'},{'name",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["frame.component.html",{"_index":955,"title":{},"body":{"components/FrameComponent.html":{}}}],["frame/error/error.component",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["frame/error/error.interceptor",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["frame/frame.component",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["frame/loader/loader.component",{"_index":168,"title":{},"body":{"modules/AppModule.html":{}}}],["frame/loader/loader.guard",{"_index":190,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/ModuleProvider.html":{}}}],["frame/loader/loader.interceptor",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["frame/side",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["framecomponent",{"_index":79,"title":{"components/FrameComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"coverage.html":{},"index.html":{}}}],["framing",{"_index":950,"title":{},"body":{"components/FrameComponent.html":{}}}],["fromobject",{"_index":424,"title":{},"body":{"injectables/AuthService.html":{}}}],["frontend",{"_index":2358,"title":{},"body":{"properties.html":{}}}],["full",{"_index":2522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["full_res",{"_index":1367,"title":{},"body":{"components/MapComponent.html":{}}}],["fully",{"_index":575,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"miscellaneous/functions.html":{}}}],["function",{"_index":293,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthStorageService.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/ErrorComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/Marker.html":{},"components/ResultDataViewComponent.html":{},"injectables/SettingsStorageService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["functions",{"_index":2305,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":209,"title":{},"body":{"guards/AuthGuard.html":{},"components/FrameComponent.html":{},"miscellaneous/variables.html":{}}}],["generate",{"_index":1987,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["generates",{"_index":2323,"title":{},"body":{"miscellaneous/functions.html":{}}}],["geo",{"_index":1052,"title":{},"body":{"interfaces/LayerData.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"interfaces/ShapeData.html":{}}}],["geobasis",{"_index":1459,"title":{},"body":{"components/MapComponent.html":{}}}],["geodata",{"_index":1543,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{},"miscellaneous/variables.html":{}}}],["geojson",{"_index":749,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/LayerData.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"interfaces/ShapeData.html":{},"injectables/WaterRightsService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["geojson.coordinates[0",{"_index":753,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["geojson.coordinates[1",{"_index":752,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["geojsonlayer",{"_index":1456,"title":{},"body":{"components/MapComponent.html":{}}}],["geojsonlayer.adddata(object.assign(shape.geojson",{"_index":1488,"title":{},"body":{"components/MapComponent.html":{}}}],["geojsonlayer.addto(map",{"_index":1491,"title":{},"body":{"components/MapComponent.html":{}}}],["geojsonobject",{"_index":1059,"title":{},"body":{"interfaces/LayerData.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"interfaces/ShapeData.html":{},"miscellaneous/typealiases.html":{}}}],["getaccesstoken",{"_index":454,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["getboolstorage",{"_index":1904,"title":{},"body":{"injectables/SettingsStorageService.html":{}}}],["getboolstorage(key",{"_index":1906,"title":{},"body":{"injectables/SettingsStorageService.html":{}}}],["getdisplaytexts",{"_index":1193,"title":{},"body":{"injectables/LoaderService.html":{}}}],["getelementclasses",{"_index":625,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["getexpiresin",{"_index":459,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["gethidesidebar",{"_index":968,"title":{},"body":{"components/FrameComponent.html":{},"injectables/SettingsStorageService.html":{}}}],["gethideuserbar",{"_index":975,"title":{},"body":{"components/FrameComponent.html":{},"injectables/SettingsStorageService.html":{}}}],["getloading",{"_index":1195,"title":{},"body":{"injectables/LoaderService.html":{}}}],["getmethod",{"_index":1746,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["getoptions",{"_index":2001,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getrefreshtoken",{"_index":469,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["getresolvedurl",{"_index":2248,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getresolvedurl(route",{"_index":2307,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getscopes",{"_index":473,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["getshowtype",{"_index":816,"title":{},"body":{"components/ErrorComponent.html":{}}}],["getstorage",{"_index":436,"title":{},"body":{"injectables/AuthStorageService.html":{},"injectables/SettingsStorageService.html":{}}}],["getstorage(key",{"_index":447,"title":{},"body":{"injectables/AuthStorageService.html":{},"injectables/SettingsStorageService.html":{}}}],["getter",{"_index":484,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["gettranslation",{"_index":1933,"title":{},"body":{"classes/StaticLoader.html":{}}}],["gettranslation(lang",{"_index":1934,"title":{},"body":{"classes/StaticLoader.html":{}}}],["getusers",{"_index":1960,"title":{},"body":{"injectables/UserService.html":{}}}],["getusers200",{"_index":1990,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["getusersid200",{"_index":2371,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["getusersid404",{"_index":2373,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["getusersme200",{"_index":2375,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["give",{"_index":1301,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/typealiases.html":{}}}],["given",{"_index":385,"title":{},"body":{"injectables/AuthService.html":{},"directives/LangSelectorDirective.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"classes/ModuleProvider.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["globalthis.localstorage.getitem(\"lang",{"_index":174,"title":{},"body":{"modules/AppModule.html":{}}}],["globalthis.localstorage.setitem(\"lang",{"_index":1046,"title":{},"body":{"directives/LangSelectorDirective.html":{}}}],["globalthis.sessionstorage.getitem(key",{"_index":490,"title":{},"body":{"injectables/AuthStorageService.html":{},"injectables/SettingsStorageService.html":{}}}],["globalthis.sessionstorage.removeitem(key",{"_index":488,"title":{},"body":{"injectables/AuthStorageService.html":{},"injectables/SettingsStorageService.html":{}}}],["globalthis.sessionstorage.setitem(key",{"_index":489,"title":{},"body":{"injectables/AuthStorageService.html":{},"injectables/SettingsStorageService.html":{}}}],["go",{"_index":287,"title":{},"body":{"guards/AuthGuard.html":{},"components/ErrorComponent.html":{}}}],["goback",{"_index":797,"title":{},"body":{"components/ErrorComponent.html":{}}}],["gracefully",{"_index":323,"title":{},"body":{"guards/AuthGuard.html":{}}}],["grant_type",{"_index":425,"title":{},"body":{"injectables/AuthService.html":{}}}],["graph",{"_index":2357,"title":{},"body":{"modules.html":{}}}],["green",{"_index":1813,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["grid",{"_index":1128,"title":{},"body":{"components/LoaderComponent.html":{}}}],["group",{"_index":1733,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["groups",{"_index":1879,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["gt",{"_index":2320,"title":{},"body":{"miscellaneous/functions.html":{}}}],["gt;&lt;/map&gt",{"_index":1382,"title":{},"body":{"components/MapComponent.html":{}}}],["guard",{"_index":199,"title":{"guards/AuthGuard.html":{},"guards/LoaderGuard.html":{},"guards/QueryParameterGuard.html":{}},"body":{"guards/AuthGuard.html":{},"guards/LoaderGuard.html":{},"injectables/LoaderService.html":{},"guards/QueryParameterGuard.html":{},"coverage.html":{}}}],["guards",{"_index":200,"title":{},"body":{"guards/AuthGuard.html":{},"guards/LoaderGuard.html":{},"guards/QueryParameterGuard.html":{},"interfaces/WisdomInterface.html":{},"index.html":{}}}],["handle",{"_index":319,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"components/LoaderComponent.html":{},"miscellaneous/variables.html":{}}}],["handleconsumerdata",{"_index":699,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["handleconsumerdata(data",{"_index":708,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["handled",{"_index":793,"title":{},"body":{"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{}}}],["handler",{"_index":340,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/BaseUrlInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"injectables/ErrorService.html":{},"interfaces/Marker.html":{}}}],["handling",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LoaderService.html":{}}}],["header",{"_index":351,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["headers",{"_index":354,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interceptors/CacheInterceptor.html":{},"injectables/ConsumersService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/UserService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"miscellaneous/variables.html":{}}}],["height",{"_index":1122,"title":{},"body":{"components/LoaderComponent.html":{},"components/MapComponent.html":{}}}],["height=&quot;70vh&quot",{"_index":1365,"title":{},"body":{"components/MapComponent.html":{}}}],["helper",{"_index":1986,"title":{},"body":{"injectables/UserService.html":{}}}],["here",{"_index":893,"title":{},"body":{"components/ExampleComponent.html":{},"components/IonIconComponent.html":{},"components/MapComponent.html":{},"classes/ModuleProvider.html":{}}}],["hex",{"_index":1318,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/functions.html":{}}}],["hide",{"_index":970,"title":{},"body":{"components/FrameComponent.html":{},"injectables/SettingsStorageService.html":{},"miscellaneous/variables.html":{}}}],["hide_sidebar_key",{"_index":1915,"title":{},"body":{"injectables/SettingsStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["hide_user_bar_key",{"_index":1916,"title":{},"body":{"injectables/SettingsStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["hidesidebar",{"_index":956,"title":{},"body":{"components/FrameComponent.html":{},"injectables/SettingsStorageService.html":{}}}],["hidesidebar(setting",{"_index":986,"title":{},"body":{"components/FrameComponent.html":{},"injectables/SettingsStorageService.html":{}}}],["hideuserbar",{"_index":957,"title":{},"body":{"components/FrameComponent.html":{},"injectables/SettingsStorageService.html":{}}}],["hideuserbar(setting",{"_index":988,"title":{},"body":{"components/FrameComponent.html":{},"injectables/SettingsStorageService.html":{}}}],["higher",{"_index":547,"title":{},"body":{"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{}}}],["history",{"_index":805,"title":{},"body":{"components/ErrorComponent.html":{},"injectables/WaterUsageHistoryService.html":{},"miscellaneous/variables.html":{}}}],["history.service",{"_index":727,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["history.service.ts",{"_index":2198,"title":{},"body":{"injectables/WaterUsageHistoryService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["history.service.ts:18",{"_index":2200,"title":{},"body":{"injectables/WaterUsageHistoryService.html":{}}}],["history.service.ts:25",{"_index":2202,"title":{},"body":{"injectables/WaterUsageHistoryService.html":{}}}],["historydata",{"_index":695,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["historyresponse",{"_index":716,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"injectables/WaterUsageHistoryService.html":{},"miscellaneous/typealiases.html":{}}}],["holding",{"_index":660,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["holds",{"_index":1356,"title":{},"body":{"components/MapComponent.html":{}}}],["host",{"_index":616,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["hostbinding",{"_index":628,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["hostbinding(\"class",{"_index":632,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["hostlistener",{"_index":630,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{},"directives/LangSelectorDirective.html":{}}}],["hostlistener(\"click",{"_index":637,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{},"directives/LangSelectorDirective.html":{}}}],["hostlistener('click",{"_index":621,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{},"directives/LangSelectorDirective.html":{}}}],["hostlisteners",{"_index":612,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{},"directives/LangSelectorDirective.html":{}}}],["household",{"_index":1815,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["households_and_small_businesses",{"_index":941,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["hovering",{"_index":1645,"title":{},"body":{"interfaces/Marker.html":{}}}],["hservice",{"_index":705,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["html",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["http",{"_index":369,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/CacheInterceptor.html":{},"injectables/ConsumersService.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/UserService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["http_interceptors",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ConsumersService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/UserService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["httpclientmodule",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["httpcode",{"_index":788,"title":{},"body":{"interfaces/Error.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{}}}],["httpcontext",{"_index":386,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ConsumersService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"miscellaneous/variables.html":{}}}],["httpcontexttoken",{"_index":512,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{},"miscellaneous/variables.html":{}}}],["httperror",{"_index":789,"title":{},"body":{"interfaces/Error.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{}}}],["httperrorresponse",{"_index":1154,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["httpevent",{"_index":342,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/BaseUrlInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/LoaderInterceptor.html":{},"interceptors/SanitizeUrlInterceptor.html":{}}}],["httphandler",{"_index":334,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/BaseUrlInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/LoaderInterceptor.html":{},"interceptors/SanitizeUrlInterceptor.html":{}}}],["httpheaders",{"_index":387,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/CacheInterceptor.html":{},"injectables/ConsumersService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/UserService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"miscellaneous/variables.html":{}}}],["httpinterceptor",{"_index":343,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/BaseUrlInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/LoaderInterceptor.html":{},"interceptors/SanitizeUrlInterceptor.html":{}}}],["httpoptions",{"_index":412,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["httpparams",{"_index":388,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["httpparams({fromobject",{"_index":427,"title":{},"body":{"injectables/AuthService.html":{}}}],["httprequest",{"_index":333,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/BaseUrlInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/LoaderInterceptor.html":{},"interceptors/SanitizeUrlInterceptor.html":{}}}],["httpresponse",{"_index":665,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/UserService.html":{}}}],["httpresponsebase",{"_index":1153,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["https://bulma.io/documentation/components/menu",{"_index":984,"title":{},"body":{"components/FrameComponent.html":{}}}],["https://github.com/microsoft/tsdoc/issues/308",{"_index":486,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["https://ionic.io/ionicons",{"_index":1030,"title":{},"body":{"components/IonIconComponent.html":{}}}],["https://tile.openstreetmap.org/{z}/{x}/{y}.png",{"_index":1358,"title":{},"body":{"components/MapComponent.html":{}}}],["https://unpkg.com/ionicons@5.5.2/dist/svg/business.svg",{"_index":2476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://unpkg.com/ionicons@5.5.2/dist/svg/water.svg",{"_index":2479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://wisdom04.vlba.uni",{"_index":1306,"title":{},"body":{"components/MapComponent.html":{}}}],["i18n/lang",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["i18n/static",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["icon",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"components/ConsumerDetailComponent.html":{},"components/IonIconComponent.html":{},"components/MapSelectViewComponent.html":{},"interfaces/Marker.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["icon'},{'name",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["icon.component",{"_index":2223,"title":{},"body":{"modules/WisdomModule.html":{}}}],["icon.component.ts",{"_index":1005,"title":{},"body":{"components/IonIconComponent.html":{},"coverage.html":{}}}],["icon.component.ts:12",{"_index":1013,"title":{},"body":{"components/IonIconComponent.html":{}}}],["icon.component.ts:31",{"_index":1016,"title":{},"body":{"components/IonIconComponent.html":{}}}],["icon.default.imagepath",{"_index":59,"title":{},"body":{"components/AppComponent.html":{}}}],["icon.setattribute(\"name",{"_index":2500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon.setattribute(\"size",{"_index":2503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon.style.color",{"_index":2505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon.style.pointerevents",{"_index":2499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon/ion",{"_index":1004,"title":{},"body":{"components/IonIconComponent.html":{},"modules/WisdomModule.html":{},"coverage.html":{}}}],["icons",{"_index":729,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/IonIconComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["icons.ts",{"_index":2260,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["iconsize",{"_index":2477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iconurl",{"_index":2475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":696,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["idb",{"_index":1540,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{},"dependencies.html":{}}}],["idb.get(\"queries",{"_index":1573,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["idb.transaction(\"shapes",{"_index":1575,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["idb.transaction([\"queries",{"_index":1600,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["identifier",{"_index":2227,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["identify",{"_index":1530,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["ignore",{"_index":261,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/LoaderService.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"classes/StaticLoader.html":{}}}],["image",{"_index":33,"title":{},"body":{"components/AppComponent.html":{}}}],["implement",{"_index":1295,"title":{},"body":{"components/MapComponent.html":{}}}],["implementation",{"_index":2005,"title":{},"body":{"injectables/UserService.html":{}}}],["implementing",{"_index":2210,"title":{},"body":{"interfaces/WisdomInterface.html":{}}}],["implements",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/BaseUrlInterceptor.html":{},"components/BreadcrumbsComponent.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"guards/QueryParameterGuard.html":{},"components/ResultDataViewComponent.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"classes/StaticLoader.html":{},"components/WaterRightDetailComponent.html":{}}}],["import",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/ExampleComponent.html":{},"modules/ExampleModule.html":{},"injectables/ExampleService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"interfaces/LayerData.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"interfaces/Marker.html":{},"classes/ModuleProvider.html":{},"guards/QueryParameterGuard.html":{},"components/ResultDataViewComponent.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"interfaces/ShapeData.html":{},"components/SideBarComponent.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"interfaces/WisdomInterface.html":{},"modules/WisdomModule.html":{}}}],["imported",{"_index":1625,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["imports",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ExampleModule.html":{},"modules/WaterUsageForecastsModule.html":{},"modules/WisdomModule.html":{}}}],["include",{"_index":2212,"title":{},"body":{"interfaces/WisdomInterface.html":{}}}],["incorrect",{"_index":1997,"title":{},"body":{"injectables/UserService.html":{}}}],["index",{"_index":23,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"interfaces/LayerData.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"interfaces/Marker.html":{},"classes/ModuleProvider.html":{},"guards/QueryParameterGuard.html":{},"components/ResultDataViewComponent.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"interfaces/ShapeData.html":{},"components/SideBarComponent.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"interfaces/WisdomInterface.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexed",{"_index":1536,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{},"miscellaneous/variables.html":{}}}],["indexeddb",{"_index":1549,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["infinite",{"_index":1102,"title":{},"body":{"components/LoaderComponent.html":{}}}],["infinity",{"_index":1825,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/ExampleComponent.html":{},"modules/ExampleModule.html":{},"injectables/ExampleService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"interfaces/LayerData.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"interfaces/Marker.html":{},"classes/ModuleProvider.html":{},"guards/QueryParameterGuard.html":{},"components/ResultDataViewComponent.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"interfaces/ShapeData.html":{},"components/SideBarComponent.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"interfaces/WisdomInterface.html":{},"modules/WisdomModule.html":{}}}],["information",{"_index":2415,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["infos",{"_index":784,"title":{},"body":{"interfaces/Error.html":{}}}],["init",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/LoaderComponent.html":{},"components/MapComponent.html":{}}}],["initial",{"_index":1977,"title":{},"body":{"injectables/UserService.html":{}}}],["initialize",{"_index":2487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject",{"_index":327,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/IonIconComponent.html":{},"miscellaneous/variables.html":{}}}],["injectable",{"_index":253,"title":{"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"injectables/BreadcrumbsService.html":{},"injectables/ConsumersService.html":{},"injectables/ErrorService.html":{},"injectables/ExampleService.html":{},"injectables/LoaderService.html":{},"injectables/MapService.html":{},"injectables/SettingsStorageService.html":{},"injectables/UserService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"interceptors/CacheInterceptor.html":{},"injectables/ConsumersService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"injectables/ExampleService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"guards/QueryParameterGuard.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"injectables/UserService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"coverage.html":{}}}],["injectables",{"_index":359,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"injectables/BreadcrumbsService.html":{},"injectables/ConsumersService.html":{},"injectables/ErrorService.html":{},"injectables/ExampleService.html":{},"injectables/LoaderService.html":{},"injectables/MapService.html":{},"injectables/SettingsStorageService.html":{},"injectables/UserService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"index.html":{}}}],["injected",{"_index":339,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/MapComponent.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"interfaces/WisdomInterface.html":{},"miscellaneous/variables.html":{}}}],["injects",{"_index":336,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["inner",{"_index":1331,"title":{},"body":{"components/MapComponent.html":{}}}],["input",{"_index":629,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"miscellaneous/typealiases.html":{}}}],["input(\"center",{"_index":1397,"title":{},"body":{"components/MapComponent.html":{}}}],["input(\"class",{"_index":631,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["input(\"height",{"_index":1393,"title":{},"body":{"components/MapComponent.html":{}}}],["input(\"layers",{"_index":1405,"title":{},"body":{"components/MapComponent.html":{}}}],["input(\"layerselectable",{"_index":1408,"title":{},"body":{"components/MapComponent.html":{}}}],["input(\"markers",{"_index":1410,"title":{},"body":{"components/MapComponent.html":{}}}],["input(\"scrollwheelzoom",{"_index":1401,"title":{},"body":{"components/MapComponent.html":{}}}],["input(\"selectedcolor",{"_index":1404,"title":{},"body":{"components/MapComponent.html":{}}}],["input(\"selectlang",{"_index":1043,"title":{},"body":{"directives/LangSelectorDirective.html":{}}}],["input(\"tileurl",{"_index":1395,"title":{},"body":{"components/MapComponent.html":{}}}],["input(\"unselectedcolor",{"_index":1403,"title":{},"body":{"components/MapComponent.html":{}}}],["input(\"zoom",{"_index":1399,"title":{},"body":{"components/MapComponent.html":{}}}],["inputcenter",{"_index":1398,"title":{},"body":{"components/MapComponent.html":{}}}],["inputheight",{"_index":1394,"title":{},"body":{"components/MapComponent.html":{}}}],["inputlayers",{"_index":1284,"title":{},"body":{"components/MapComponent.html":{}}}],["inputlayers(layerconfig",{"_index":1406,"title":{},"body":{"components/MapComponent.html":{}}}],["inputlayerselectable",{"_index":1409,"title":{},"body":{"components/MapComponent.html":{}}}],["inputmarkers",{"_index":1285,"title":{},"body":{"components/MapComponent.html":{}}}],["inputmarkers(markers",{"_index":1411,"title":{},"body":{"components/MapComponent.html":{}}}],["inputs",{"_index":611,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/MapComponent.html":{}}}],["inputscrollwheelzoom",{"_index":1402,"title":{},"body":{"components/MapComponent.html":{}}}],["inputtileurl",{"_index":1396,"title":{},"body":{"components/MapComponent.html":{}}}],["inputzoom",{"_index":1400,"title":{},"body":{"components/MapComponent.html":{}}}],["insert",{"_index":653,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["insertroute",{"_index":1666,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["insertroute.canactivate",{"_index":1668,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["insertroute.canactivate.push(authguard",{"_index":1670,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["instanceof",{"_index":680,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"injectables/ErrorService.html":{},"interceptors/LoaderInterceptor.html":{}}}],["instant",{"_index":2333,"title":{},"body":{"miscellaneous/functions.html":{}}}],["instead",{"_index":409,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["institution",{"_index":1818,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["insufficient",{"_index":2406,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["interact",{"_index":228,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/UserService.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["interaction",{"_index":363,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["intercept",{"_index":330,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/BaseUrlInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/LoaderInterceptor.html":{},"interceptors/SanitizeUrlInterceptor.html":{}}}],["intercept(request",{"_index":332,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/BaseUrlInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/LoaderInterceptor.html":{},"interceptors/SanitizeUrlInterceptor.html":{}}}],["intercepting",{"_index":1892,"title":{},"body":{"interceptors/SanitizeUrlInterceptor.html":{}}}],["interceptor",{"_index":324,"title":{"interceptors/AuthInterceptor.html":{},"interceptors/BaseUrlInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/LoaderInterceptor.html":{},"interceptors/SanitizeUrlInterceptor.html":{}},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"coverage.html":{}}}],["interceptors",{"_index":325,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/BaseUrlInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/LoaderInterceptor.html":{},"interceptors/SanitizeUrlInterceptor.html":{}}}],["interface",{"_index":524,"title":{"interfaces/Breadcrumb.html":{},"interfaces/Error.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"interfaces/LayerData.html":{},"interfaces/MapDB.html":{},"interfaces/Marker.html":{},"interfaces/ShapeData.html":{},"interfaces/WisdomInterface.html":{}},"body":{"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"interfaces/Error.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"interfaces/LayerData.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"interfaces/Marker.html":{},"interfaces/ShapeData.html":{},"injectables/WaterUsageForecastsService.html":{},"interfaces/WisdomInterface.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["interfaces",{"_index":526,"title":{},"body":{"interfaces/Breadcrumb.html":{},"interfaces/Error.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"interfaces/LayerData.html":{},"interfaces/MapDB.html":{},"interfaces/Marker.html":{},"interfaces/ShapeData.html":{},"interfaces/WisdomInterface.html":{},"index.html":{}}}],["internal",{"_index":449,"title":{},"body":{"injectables/AuthStorageService.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"injectables/LoaderService.html":{},"components/ResultDataViewComponent.html":{},"injectables/SettingsStorageService.html":{}}}],["internally",{"_index":1185,"title":{},"body":{"injectables/LoaderService.html":{},"components/MapComponent.html":{},"miscellaneous/functions.html":{}}}],["intersection",{"_index":1297,"title":{},"body":{"components/MapComponent.html":{}}}],["invert",{"_index":1386,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/variables.html":{}}}],["invertselection",{"_index":2480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["invertselection(options",{"_index":2507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["invertselectioncontrol",{"_index":1447,"title":{},"body":{"components/MapComponent.html":{}}}],["invertselectioncontrol.addto(map",{"_index":1504,"title":{},"body":{"components/MapComponent.html":{}}}],["ion",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"modules/WisdomModule.html":{},"miscellaneous/variables.html":{}}}],["ionic.io/ioniconshttps",{"_index":2425,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ioniconcomponent",{"_index":81,"title":{"components/IonIconComponent.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"modules/WisdomModule.html":{},"coverage.html":{},"index.html":{}}}],["ionicons",{"_index":1006,"title":{},"body":{"components/IonIconComponent.html":{}}}],["isactive",{"_index":610,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["isallset",{"_index":567,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["isloading",{"_index":1081,"title":{},"body":{"components/LoaderComponent.html":{}}}],["isreal",{"_index":1784,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["issue",{"_index":1226,"title":{},"body":{"components/LoginComponent.html":{}}}],["item",{"_index":1094,"title":{},"body":{"components/LoaderComponent.html":{},"components/ResultDataViewComponent.html":{},"injectables/SettingsStorageService.html":{}}}],["item.datasetindex",{"_index":1854,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["item.linewidth",{"_index":1856,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["item:nth",{"_index":1104,"title":{},"body":{"components/LoaderComponent.html":{}}}],["items",{"_index":2493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iterate",{"_index":1790,"title":{},"body":{"components/ResultDataViewComponent.html":{},"miscellaneous/functions.html":{}}}],["iterated",{"_index":1683,"title":{},"body":{"guards/QueryParameterGuard.html":{}}}],["itself",{"_index":1015,"title":{},"body":{"components/IonIconComponent.html":{}}}],["join",{"_index":392,"title":{},"body":{"injectables/AuthService.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/MapComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["join(auth_api",{"_index":2013,"title":{},"body":{"injectables/UserService.html":{}}}],["join(auth_url",{"_index":422,"title":{},"body":{"injectables/AuthService.html":{}}}],["js",{"_index":1010,"title":{},"body":{"components/IonIconComponent.html":{}}}],["json",{"_index":410,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ConsumersService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/UserService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"miscellaneous/variables.html":{}}}],["json.parse(cleaned",{"_index":2170,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["json.parse(json.stringify(raw",{"_index":2172,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["json.stringify(res",{"_index":2165,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["justify",{"_index":2494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["k",{"_index":1591,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["k.split",{"_index":1429,"title":{},"body":{"components/MapComponent.html":{}}}],["k.substring(0",{"_index":1590,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["key",{"_index":345,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthStorageService.html":{},"interceptors/CacheInterceptor.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"directives/LangSelectorDirective.html":{},"interfaces/LayerData.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"classes/ModuleProvider.html":{},"components/ResultDataViewComponent.html":{},"injectables/SettingsStorageService.html":{},"interfaces/ShapeData.html":{},"classes/StaticLoader.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["key[0",{"_index":1532,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["key].flat",{"_index":1761,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["keyframes",{"_index":1114,"title":{},"body":{"components/LoaderComponent.html":{}}}],["keys",{"_index":962,"title":{},"body":{"components/FrameComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"guards/QueryParameterGuard.html":{},"components/ResultDataViewComponent.html":{},"interfaces/WisdomInterface.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["keys.length",{"_index":1587,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["keys.map(k",{"_index":1589,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["keys?.map(k",{"_index":1428,"title":{},"body":{"components/MapComponent.html":{}}}],["kombination",{"_index":1253,"title":{},"body":{"components/LoginComponent.html":{}}}],["korrekt",{"_index":1255,"title":{},"body":{"components/LoginComponent.html":{}}}],["l",{"_index":1058,"title":{},"body":{"interfaces/LayerData.html":{},"components/MapComponent.html":{},"interfaces/Marker.html":{},"interfaces/ShapeData.html":{}}}],["l.control.extend",{"_index":2485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["l.control.layers",{"_index":1446,"title":{},"body":{"components/MapComponent.html":{}}}],["l.controloptions",{"_index":2484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["l.divicon",{"_index":1644,"title":{},"body":{"interfaces/Marker.html":{}}}],["l.domutil.create",{"_index":2495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["l.geojson(undefined",{"_index":1457,"title":{},"body":{"components/MapComponent.html":{}}}],["l.icon",{"_index":1643,"title":{},"body":{"interfaces/Marker.html":{}}}],["l.layer",{"_index":1352,"title":{},"body":{"components/MapComponent.html":{}}}],["l.map",{"_index":1347,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/variables.html":{}}}],["l.map(nativemapelement",{"_index":1436,"title":{},"body":{"components/MapComponent.html":{}}}],["l.marker(marker.coordinates",{"_index":1510,"title":{},"body":{"components/MapComponent.html":{}}}],["l.markerclustergroup",{"_index":1506,"title":{},"body":{"components/MapComponent.html":{}}}],["l.path",{"_index":1477,"title":{},"body":{"components/MapComponent.html":{}}}],["l.tilelayer(this.tileurl).addto(map",{"_index":1443,"title":{},"body":{"components/MapComponent.html":{}}}],["l.util.setoptions(this",{"_index":2488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["label",{"_index":1829,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["label[0",{"_index":1928,"title":{},"body":{"components/SideBarComponent.html":{}}}],["labels",{"_index":742,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/ResultDataViewComponent.html":{},"miscellaneous/typealiases.html":{}}}],["lang",{"_index":994,"title":{},"body":{"components/FrameComponent.html":{},"directives/LangSelectorDirective.html":{},"classes/ModuleProvider.html":{},"classes/StaticLoader.html":{}}}],["langs",{"_index":1654,"title":{},"body":{"classes/ModuleProvider.html":{},"classes/StaticLoader.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["langs(lang",{"_index":1660,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["langs/de_de",{"_index":1941,"title":{},"body":{"classes/StaticLoader.html":{}}}],["langs/en_us",{"_index":1942,"title":{},"body":{"classes/StaticLoader.html":{}}}],["langs[lang",{"_index":1950,"title":{},"body":{"classes/StaticLoader.html":{}}}],["langselectordirective",{"_index":107,"title":{"directives/LangSelectorDirective.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"coverage.html":{},"index.html":{}}}],["language",{"_index":1036,"title":{},"body":{"directives/LangSelectorDirective.html":{},"classes/ModuleProvider.html":{},"classes/StaticLoader.html":{},"miscellaneous/variables.html":{}}}],["languages",{"_index":1944,"title":{},"body":{"classes/StaticLoader.html":{},"miscellaneous/variables.html":{}}}],["large",{"_index":2504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["last",{"_index":648,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/UserService.html":{}}}],["lastmodified",{"_index":675,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["lastmodifiedmap",{"_index":651,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["lastname",{"_index":1963,"title":{},"body":{"injectables/UserService.html":{}}}],["later",{"_index":1471,"title":{},"body":{"components/MapComponent.html":{}}}],["latitude",{"_index":1337,"title":{},"body":{"components/MapComponent.html":{}}}],["layer",{"_index":1051,"title":{},"body":{"interfaces/LayerData.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"interfaces/Marker.html":{},"interfaces/ShapeData.html":{},"miscellaneous/typealiases.html":{}}}],["layer.bindtooltip(feature.properties.name",{"_index":1472,"title":{},"body":{"components/MapComponent.html":{}}}],["layer.fire(\"click",{"_index":1503,"title":{},"body":{"components/MapComponent.html":{}}}],["layer.on(\"click",{"_index":1475,"title":{},"body":{"components/MapComponent.html":{}}}],["layerconfig",{"_index":1268,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/typealiases.html":{}}}],["layerdata",{"_index":1047,"title":{"interfaces/LayerData.html":{}},"body":{"interfaces/LayerData.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"interfaces/ShapeData.html":{},"coverage.html":{}}}],["layerdata.box",{"_index":1610,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["layerdata.shapes",{"_index":1604,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["layerdata[\"box",{"_index":1547,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["layerkey",{"_index":1344,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/typealiases.html":{}}}],["layername",{"_index":1519,"title":{},"body":{"components/MapComponent.html":{}}}],["layernames",{"_index":1269,"title":{},"body":{"components/MapComponent.html":{}}}],["layers",{"_index":1277,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/variables.html":{}}}],["layers.push(layer",{"_index":1486,"title":{},"body":{"components/MapComponent.html":{}}}],["layers]=&quot",{"_index":1366,"title":{},"body":{"components/MapComponent.html":{}}}],["layerscontrol",{"_index":1445,"title":{},"body":{"components/MapComponent.html":{}}}],["layerscontrol.addbaselayer(geojsonlayer",{"_index":1496,"title":{},"body":{"components/MapComponent.html":{}}}],["layerscontrol.addto(map",{"_index":1500,"title":{},"body":{"components/MapComponent.html":{}}}],["layerselectable",{"_index":1278,"title":{},"body":{"components/MapComponent.html":{}}}],["lazily",{"_index":1551,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["leads",{"_index":2211,"title":{},"body":{"interfaces/WisdomInterface.html":{}}}],["leaflet",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"interfaces/LayerData.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"interfaces/Marker.html":{},"interfaces/ShapeData.html":{},"components/WaterRightDetailComponent.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["leaflet.markercluster",{"_index":1387,"title":{},"body":{"components/MapComponent.html":{},"dependencies.html":{}}}],["leafletmouseevent",{"_index":1646,"title":{},"body":{"interfaces/Marker.html":{},"components/WaterRightDetailComponent.html":{}}}],["left",{"_index":532,"title":{},"body":{"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{}}}],["legend",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["legend.chart",{"_index":1858,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["legend.legenditems.length).hidden",{"_index":1861,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["legenditem",{"_index":1715,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["length",{"_index":2345,"title":{},"body":{"miscellaneous/functions.html":{}}}],["level",{"_index":1325,"title":{},"body":{"components/MapComponent.html":{}}}],["lib",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["linear",{"_index":915,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/enumerations.html":{}}}],["link",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/IonIconComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"interfaces/Marker.html":{},"guards/QueryParameterGuard.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["list",{"_index":543,"title":{},"body":{"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"interfaces/LayerData.html":{},"interfaces/ShapeData.html":{},"injectables/UserService.html":{}}}],["literal",{"_index":948,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"miscellaneous/typealiases.html":{}}}],["live",{"_index":580,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["lmarker",{"_index":1509,"title":{},"body":{"components/MapComponent.html":{}}}],["lmarker.addto(markerlayer",{"_index":1517,"title":{},"body":{"components/MapComponent.html":{}}}],["lmarker.bindtooltip(marker.tooltip",{"_index":1514,"title":{},"body":{"components/MapComponent.html":{}}}],["lmarker.on(\"click",{"_index":1516,"title":{},"body":{"components/MapComponent.html":{}}}],["lmarker.seticon(marker.icon",{"_index":1512,"title":{},"body":{"components/MapComponent.html":{}}}],["load",{"_index":1149,"title":{},"body":{"interceptors/LoaderInterceptor.html":{},"components/SideBarComponent.html":{}}}],["loader",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"components/ResultDataViewComponent.html":{},"classes/StaticLoader.html":{},"miscellaneous/variables.html":{}}}],["loader'},{'name",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["loader.component.html",{"_index":1079,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader.component.scss",{"_index":1078,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader.service",{"_index":1089,"title":{},"body":{"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{}}}],["loader.ts",{"_index":1931,"title":{},"body":{"classes/StaticLoader.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loader.ts:36",{"_index":1935,"title":{},"body":{"classes/StaticLoader.html":{}}}],["loadercomponent",{"_index":84,"title":{"components/LoaderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"coverage.html":{},"index.html":{}}}],["loaderguard",{"_index":189,"title":{"guards/LoaderGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/LoaderGuard.html":{},"classes/ModuleProvider.html":{},"coverage.html":{}}}],["loaderinterceptor",{"_index":127,"title":{"interceptors/LoaderInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/LoaderInterceptor.html":{},"coverage.html":{},"index.html":{}}}],["loaderservice",{"_index":1082,"title":{"injectables/LoaderService.html":{}},"body":{"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"coverage.html":{}}}],["loading",{"_index":1070,"title":{},"body":{"components/LoaderComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"miscellaneous/variables.html":{}}}],["loadings",{"_index":1190,"title":{},"body":{"injectables/LoaderService.html":{}}}],["localhost:8090/auth",{"_index":2000,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["location",{"_index":800,"title":{},"body":{"components/ErrorComponent.html":{},"components/WaterRightDetailComponent.html":{},"miscellaneous/variables.html":{}}}],["location.name",{"_index":2040,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location.real",{"_index":2036,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.basinno?.key",{"_index":2101,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.basinno?.name",{"_index":2102,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.county",{"_index":2104,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.eusurveyarea?.key",{"_index":2107,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.eusurveyarea?.name",{"_index":2108,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.field",{"_index":2110,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.floodarea",{"_index":2136,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.groundwatervolume",{"_index":2113,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.id",{"_index":2084,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.irrigationarea?.amount",{"_index":2093,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.irrigationarea?.unit",{"_index":2094,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.legalscope",{"_index":2083,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.localsubdistrict",{"_index":2116,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.location",{"_index":2035,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.maintenanceassociation?.key",{"_index":2119,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.maintenanceassociation?.name",{"_index":2120,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.municipalarea?.key",{"_index":2122,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.municipalarea?.name",{"_index":2123,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.name",{"_index":2082,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.no",{"_index":2086,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.plot",{"_index":2125,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.rainsupplement?.amount",{"_index":2097,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.rainsupplement?.duration",{"_index":2099,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.rainsupplement?.unit",{"_index":2098,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.rivershed",{"_index":2127,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.serialno",{"_index":2129,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.topmap1to25000?.key",{"_index":2132,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.topmap1to25000?.name",{"_index":2133,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.waterbody",{"_index":2134,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.waterprotectionarea",{"_index":2138,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["locations",{"_index":1792,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["log",{"_index":966,"title":{},"body":{"components/FrameComponent.html":{}}}],["logarithmic",{"_index":914,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/enumerations.html":{}}}],["logged",{"_index":275,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["login",{"_index":195,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/FrameComponent.html":{},"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["login'},{'name",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["login(username",{"_index":372,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.component.html",{"_index":1210,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":86,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"coverage.html":{},"index.html":{}}}],["loginhasissue",{"_index":1211,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginurltree",{"_index":266,"title":{},"body":{"guards/AuthGuard.html":{}}}],["loginurltree.queryparams",{"_index":269,"title":{},"body":{"guards/AuthGuard.html":{}}}],["logout",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{},"components/FrameComponent.html":{}}}],["logout(token",{"_index":377,"title":{},"body":{"injectables/AuthService.html":{}}}],["logs",{"_index":375,"title":{},"body":{"injectables/AuthService.html":{}}}],["long",{"_index":581,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["longer",{"_index":2530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["longitude",{"_index":1336,"title":{},"body":{"components/MapComponent.html":{}}}],["look",{"_index":1563,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{},"miscellaneous/variables.html":{}}}],["lt;map",{"_index":1364,"title":{},"body":{"components/MapComponent.html":{}}}],["lx",{"_index":1385,"title":{},"body":{"components/MapComponent.html":{}}}],["lx.control.invertselection",{"_index":1502,"title":{},"body":{"components/MapComponent.html":{}}}],["m",{"_index":1750,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["made",{"_index":2437,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["main",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["make",{"_index":1025,"title":{},"body":{"components/IonIconComponent.html":{},"components/MapComponent.html":{}}}],["makes",{"_index":578,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["making",{"_index":370,"title":{},"body":{"injectables/AuthService.html":{},"directives/BulmaIsToggleableDirective.html":{},"miscellaneous/variables.html":{}}}],["management",{"_index":1958,"title":{},"body":{"injectables/UserService.html":{}}}],["many",{"_index":1887,"title":{},"body":{"interceptors/SanitizeUrlInterceptor.html":{}}}],["map",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageHistoryService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["map'},{'name",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["map(el",{"_index":1841,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["map(str",{"_index":1439,"title":{},"body":{"components/MapComponent.html":{}}}],["map.component.css",{"_index":1266,"title":{},"body":{"components/MapComponent.html":{}}}],["map.fitbounds",{"_index":1493,"title":{},"body":{"components/MapComponent.html":{}}}],["map.getrenderer(map",{"_index":1441,"title":{},"body":{"components/MapComponent.html":{}}}],["map.on(\"baselayerchange",{"_index":1498,"title":{},"body":{"components/MapComponent.html":{}}}],["map.removecontrol(invertselectioncontrol",{"_index":1501,"title":{},"body":{"components/MapComponent.html":{}}}],["map.removecontrol(layerscontrol",{"_index":1451,"title":{},"body":{"components/MapComponent.html":{}}}],["map.removelayer(this.selectedgeojsonlayer",{"_index":1453,"title":{},"body":{"components/MapComponent.html":{}}}],["map.service",{"_index":1384,"title":{},"body":{"components/MapComponent.html":{}}}],["map/map.component",{"_index":2224,"title":{},"body":{"modules/WisdomModule.html":{}}}],["mapcomponent",{"_index":88,"title":{"components/MapComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"interfaces/Marker.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"modules/WisdomModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["mapcomponent.inputlayers",{"_index":1392,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/typealiases.html":{}}}],["mapcomponent[\"inputmarkers",{"_index":1758,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["mapdb",{"_index":1522,"title":{"interfaces/MapDB.html":{}},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{},"coverage.html":{}}}],["mapelement",{"_index":1270,"title":{},"body":{"components/MapComponent.html":{}}}],["mapped",{"_index":1346,"title":{},"body":{"components/MapComponent.html":{}}}],["maps",{"_index":1265,"title":{},"body":{"components/MapComponent.html":{}}}],["mapselection",{"_index":1617,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["mapselection(selection",{"_index":1620,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["mapselectviewcomponent",{"_index":90,"title":{"components/MapSelectViewComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["mapservice",{"_index":1286,"title":{"injectables/MapService.html":{}},"body":{"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"components/ResultDataViewComponent.html":{},"coverage.html":{}}}],["mapusage(el",{"_index":1842,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["mapusage(usage",{"_index":1826,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["marker",{"_index":697,"title":{"interfaces/Marker.html":{}},"body":{"components/ConsumerDetailComponent.html":{},"components/MapComponent.html":{},"interfaces/Marker.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"coverage.html":{}}}],["marker.geojson.coordinates[0",{"_index":1797,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["marker.geojson.coordinates[1",{"_index":1796,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["marker.icon",{"_index":1511,"title":{},"body":{"components/MapComponent.html":{}}}],["marker.id",{"_index":1802,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["marker.name",{"_index":1798,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["marker.onclick",{"_index":1515,"title":{},"body":{"components/MapComponent.html":{}}}],["marker.tooltip",{"_index":1513,"title":{},"body":{"components/MapComponent.html":{}}}],["marker.waterright",{"_index":1799,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["markerlayer",{"_index":1505,"title":{},"body":{"components/MapComponent.html":{}}}],["markerlayer.addto(map",{"_index":1518,"title":{},"body":{"components/MapComponent.html":{}}}],["markerlayer.removefrom(map",{"_index":1508,"title":{},"body":{"components/MapComponent.html":{}}}],["markers",{"_index":1271,"title":{},"body":{"components/MapComponent.html":{},"interfaces/Marker.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["markers.push",{"_index":1795,"title":{},"body":{"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["marker}s",{"_index":1413,"title":{},"body":{"components/MapComponent.html":{}}}],["match",{"_index":657,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["matching",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/ExampleComponent.html":{},"modules/ExampleModule.html":{},"injectables/ExampleService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"interfaces/LayerData.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"interfaces/Marker.html":{},"classes/ModuleProvider.html":{},"guards/QueryParameterGuard.html":{},"components/ResultDataViewComponent.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"interfaces/ShapeData.html":{},"components/SideBarComponent.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"interfaces/WisdomInterface.html":{},"modules/WisdomModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.max(...bounds[0",{"_index":2045,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["math.max(...bounds[1",{"_index":2046,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["math.max(usage.endyear",{"_index":1828,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["math.min(...bounds[0",{"_index":2047,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["math.min(...bounds[1",{"_index":2048,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["math.min(usage.startyear",{"_index":1827,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["maxyear",{"_index":1824,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["meaning",{"_index":1390,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/typealiases.html":{}}}],["message",{"_index":1223,"title":{},"body":{"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"interfaces/LayerData.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"interfaces/ShapeData.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["method",{"_index":238,"title":{},"body":{"guards/AuthGuard.html":{},"components/ResultDataViewComponent.html":{},"miscellaneous/functions.html":{}}}],["method(m",{"_index":1764,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["methode",{"_index":1872,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["methods",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/FrameComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"classes/ModuleProvider.html":{},"guards/QueryParameterGuard.html":{},"components/ResultDataViewComponent.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["middle",{"_index":1835,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["minimalistic",{"_index":890,"title":{},"body":{"components/ExampleComponent.html":{},"modules/ExampleModule.html":{}}}],["minyear",{"_index":1823,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["miscellaneous",{"_index":2300,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":1907,"title":{},"body":{"injectables/SettingsStorageService.html":{}}}],["mixed",{"_index":1377,"title":{},"body":{"components/MapComponent.html":{}}}],["mode",{"_index":2470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["model",{"_index":926,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["modernized",{"_index":2325,"title":{},"body":{"miscellaneous/functions.html":{}}}],["modified",{"_index":649,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["modified](https://developer.mozilla.org/en",{"_index":668,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["modifies",{"_index":1022,"title":{},"body":{"components/IonIconComponent.html":{}}}],["module",{"_index":112,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ExampleModule.html":{},"modules/WaterUsageForecastsModule.html":{},"modules/WisdomModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/ExampleModule.html":{},"classes/ModuleProvider.html":{},"classes/StaticLoader.html":{},"interfaces/WisdomInterface.html":{},"miscellaneous/variables.html":{}}}],["module.ts",{"_index":1653,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["module.wisdominterface.route",{"_index":1667,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["module.wisdominterface.translations[lang",{"_index":1674,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["modulelang",{"_index":1673,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["moduleprovider",{"_index":187,"title":{"classes/ModuleProvider.html":{}},"body":{"modules/AppRoutingModule.html":{},"classes/ModuleProvider.html":{},"classes/StaticLoader.html":{},"coverage.html":{}}}],["moduleprovider.langs(\"de_de",{"_index":1947,"title":{},"body":{"classes/StaticLoader.html":{},"miscellaneous/variables.html":{}}}],["moduleprovider.langs(\"en_us",{"_index":1948,"title":{},"body":{"classes/StaticLoader.html":{},"miscellaneous/variables.html":{}}}],["moduleprovider.routes",{"_index":194,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["modules",{"_index":114,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ExampleModule.html":{},"classes/ModuleProvider.html":{},"modules/WaterUsageForecastsModule.html":{},"interfaces/WisdomInterface.html":{},"modules/WisdomModule.html":{},"index.html":{},"modules.html":{}}}],["more",{"_index":1689,"title":{},"body":{"guards/QueryParameterGuard.html":{}}}],["mouse",{"_index":1314,"title":{},"body":{"components/MapComponent.html":{}}}],["mouseevent",{"_index":2483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["move",{"_index":1786,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["moved",{"_index":1998,"title":{},"body":{"injectables/UserService.html":{}}}],["multi",{"_index":178,"title":{},"body":{"modules/AppModule.html":{}}}],["municipal",{"_index":920,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/MapComponent.html":{},"components/ResultDataViewComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/enumerations.html":{}}}],["name",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/ExampleComponent.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"interfaces/LayerData.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"classes/ModuleProvider.html":{},"guards/QueryParameterGuard.html":{},"components/ResultDataViewComponent.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"interfaces/ShapeData.html":{},"components/SideBarComponent.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"interfaces/WisdomInterface.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["name(name",{"_index":1032,"title":{},"body":{"components/IonIconComponent.html":{}}}],["name(s",{"_index":1974,"title":{},"body":{"injectables/UserService.html":{}}}],["names",{"_index":1028,"title":{},"body":{"components/IonIconComponent.html":{},"components/MapComponent.html":{},"injectables/UserService.html":{}}}],["namespace",{"_index":2215,"title":{},"body":{"interfaces/WisdomInterface.html":{},"miscellaneous/variables.html":{}}}],["name}}{{id",{"_index":761,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["nan",{"_index":497,"title":{},"body":{"injectables/AuthStorageService.html":{},"components/ConsumerDetailComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["native",{"_index":1023,"title":{},"body":{"components/IonIconComponent.html":{}}}],["nativemapelement",{"_index":1434,"title":{},"body":{"components/MapComponent.html":{}}}],["navigate",{"_index":241,"title":{},"body":{"guards/AuthGuard.html":{}}}],["navigation",{"_index":1136,"title":{},"body":{"guards/LoaderGuard.html":{}}}],["navigationstart",{"_index":875,"title":{},"body":{"injectables/ErrorService.html":{}}}],["necessary",{"_index":232,"title":{},"body":{"guards/AuthGuard.html":{},"components/IonIconComponent.html":{},"injectables/UserService.html":{}}}],["need",{"_index":1658,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["needed",{"_index":584,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IonIconComponent.html":{}}}],["needs",{"_index":205,"title":{},"body":{"guards/AuthGuard.html":{},"components/MapComponent.html":{},"injectables/UserService.html":{}}}],["nested",{"_index":2420,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["nesting",{"_index":983,"title":{},"body":{"components/FrameComponent.html":{}}}],["new",{"_index":280,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newurl",{"_index":1899,"title":{},"body":{"interceptors/SanitizeUrlInterceptor.html":{}}}],["next",{"_index":283,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/BaseUrlInterceptor.html":{},"components/BreadcrumbsComponent.html":{},"interceptors/CacheInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/LoaderInterceptor.html":{},"components/LoginComponent.html":{},"interceptors/SanitizeUrlInterceptor.html":{}}}],["next(value",{"_index":1159,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["next.handle",{"_index":520,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{}}}],["next.handle(authrequest).pipe(tap(event",{"_index":356,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["next.handle(request",{"_index":671,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/LoaderInterceptor.html":{}}}],["next.handle(request).pipe",{"_index":854,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["next.handle(request.clone",{"_index":677,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"interceptors/SanitizeUrlInterceptor.html":{}}}],["ng2",{"_index":2188,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{},"dependencies.html":{}}}],["ngafterviewinit",{"_index":700,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/MapComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["ngchartsmodule",{"_index":2187,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{}}}],["ngform",{"_index":1217,"title":{},"body":{"components/LoginComponent.html":{}}}],["ngmodule",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ExampleModule.html":{},"modules/WaterUsageForecastsModule.html":{},"modules/WisdomModule.html":{}}}],["ngondestroy",{"_index":568,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["ngoninit",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/LoaderComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["ngx",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"modules/ExampleModule.html":{},"directives/LangSelectorDirective.html":{},"classes/StaticLoader.html":{},"components/WaterRightDetailComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"modules/WisdomModule.html":{},"dependencies.html":{}}}],["nicht",{"_index":1254,"title":{},"body":{"components/LoginComponent.html":{}}}],["node",{"_index":606,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["nomenclature",{"_index":1063,"title":{},"body":{"interfaces/LayerData.html":{},"interfaces/ShapeData.html":{}}}],["non",{"_index":320,"title":{},"body":{"guards/AuthGuard.html":{}}}],["none",{"_index":656,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"miscellaneous/variables.html":{}}}],["notifies",{"_index":1152,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["now",{"_index":2508,"title":{},"body":{"miscellaneous/variables.html":{}}}],["null",{"_index":451,"title":{},"body":{"injectables/AuthStorageService.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"components/ResultDataViewComponent.html":{},"injectables/SettingsStorageService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["nullable",{"_index":2418,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["nullish",{"_index":458,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["nullstring",{"_index":2377,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["num",{"_index":2317,"title":{},"body":{"miscellaneous/functions.html":{}}}],["number",{"_index":463,"title":{},"body":{"injectables/AuthStorageService.html":{},"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"interfaces/LayerData.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"interfaces/Marker.html":{},"components/ResultDataViewComponent.html":{},"interfaces/ShapeData.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["nutskey",{"_index":1066,"title":{},"body":{"interfaces/LayerData.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"interfaces/ShapeData.html":{}}}],["oauth",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{}}}],["oauth/check_token",{"_index":426,"title":{},"body":{"injectables/AuthService.html":{}}}],["oauth/revoke",{"_index":429,"title":{},"body":{"injectables/AuthService.html":{}}}],["oauth/token",{"_index":423,"title":{},"body":{"injectables/AuthService.html":{}}}],["oauth2.0",{"_index":1978,"title":{},"body":{"injectables/UserService.html":{}}}],["obj",{"_index":2330,"title":{},"body":{"miscellaneous/functions.html":{}}}],["object",{"_index":1702,"title":{},"body":{"components/ResultDataViewComponent.html":{},"interfaces/WisdomInterface.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["object.assign",{"_index":1768,"title":{},"body":{"components/ResultDataViewComponent.html":{},"classes/StaticLoader.html":{},"injectables/WaterRightsService.html":{},"miscellaneous/variables.html":{}}}],["object.assign(collectedlang",{"_index":1675,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["object.assign(this",{"_index":833,"title":{},"body":{"components/ErrorComponent.html":{}}}],["object.entries(config",{"_index":1424,"title":{},"body":{"components/MapComponent.html":{}}}],["object.entries(layerdata",{"_index":1454,"title":{},"body":{"components/MapComponent.html":{}}}],["object.entries(requests",{"_index":1431,"title":{},"body":{"components/MapComponent.html":{}}}],["object.entries(sidebarlangs",{"_index":1949,"title":{},"body":{"classes/StaticLoader.html":{}}}],["object.entries(values",{"_index":1952,"title":{},"body":{"classes/StaticLoader.html":{}}}],["object.keys(layerdata).length",{"_index":1499,"title":{},"body":{"components/MapComponent.html":{}}}],["object.values(forecast.municipal.reference",{"_index":1805,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["object.values(modules",{"_index":1665,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["observable",{"_index":250,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interceptors/BaseUrlInterceptor.html":{},"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"interceptors/CacheInterceptor.html":{},"injectables/ConsumersService.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/MapComponent.html":{},"guards/QueryParameterGuard.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["observable(subscriber",{"_index":281,"title":{},"body":{"guards/AuthGuard.html":{}}}],["observable.pipe(tap",{"_index":1158,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["observe",{"_index":554,"title":{},"body":{"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{}}}],["of(langs[lang",{"_index":1955,"title":{},"body":{"classes/StaticLoader.html":{}}}],["official",{"_index":1029,"title":{},"body":{"components/IonIconComponent.html":{}}}],["old",{"_index":212,"title":{},"body":{"guards/AuthGuard.html":{}}}],["oldenburg",{"_index":1338,"title":{},"body":{"components/MapComponent.html":{}}}],["oldenburg.de/repos/service",{"_index":1307,"title":{},"body":{"components/MapComponent.html":{}}}],["oldv",{"_index":1557,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["omit",{"_index":2152,"title":{},"body":{"injectables/WaterRightsService.html":{},"miscellaneous/typealiases.html":{}}}],["onadd",{"_index":2489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["onclick",{"_index":1642,"title":{},"body":{"interfaces/Marker.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["ondestroy",{"_index":564,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["one",{"_index":213,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/MapComponent.html":{},"interfaces/Marker.html":{},"classes/StaticLoader.html":{}}}],["oneachfeature",{"_index":1469,"title":{},"body":{"components/MapComponent.html":{}}}],["oninit",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["only_keys",{"_index":1371,"title":{},"body":{"components/MapComponent.html":{}}}],["onsubmit",{"_index":1213,"title":{},"body":{"components/LoginComponent.html":{}}}],["onsubmit(f",{"_index":1216,"title":{},"body":{"components/LoginComponent.html":{}}}],["onto",{"_index":1315,"title":{},"body":{"components/MapComponent.html":{}}}],["opacity",{"_index":1117,"title":{},"body":{"components/LoaderComponent.html":{}}}],["opendb",{"_index":1539,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["opendb(db_name",{"_index":1555,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["operate",{"_index":341,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["operations",{"_index":1578,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["operations.push(querystore.put",{"_index":1609,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["operations.push(shapestore.put(shape",{"_index":1605,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["operations.push(store.get(key).then(shape",{"_index":1580,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["operations.push(tx.done",{"_index":1582,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["option",{"_index":1313,"title":{},"body":{"components/MapComponent.html":{}}}],["optional",{"_index":221,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"interfaces/Marker.html":{},"classes/ModuleProvider.html":{},"guards/QueryParameterGuard.html":{},"components/ResultDataViewComponent.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":400,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["order",{"_index":876,"title":{},"body":{"injectables/ErrorService.html":{},"components/LoaderComponent.html":{},"miscellaneous/functions.html":{}}}],["original",{"_index":2471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["osm",{"_index":1360,"title":{},"body":{"components/MapComponent.html":{}}}],["oss",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/FrameComponent.html":{},"components/LoginComponent.html":{}}}],["otherwise",{"_index":2347,"title":{},"body":{"miscellaneous/functions.html":{}}}],["out",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"modules/ExampleModule.html":{},"components/FrameComponent.html":{},"components/LoaderComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"modules/WisdomModule.html":{},"index.html":{}}}],["output",{"_index":885,"title":{},"body":{"injectables/ErrorService.html":{},"components/MapComponent.html":{}}}],["outputs",{"_index":1282,"title":{},"body":{"components/MapComponent.html":{}}}],["over",{"_index":1791,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["overflow",{"_index":1129,"title":{},"body":{"components/LoaderComponent.html":{}}}],["overview",{"_index":2350,"title":{"index.html":{}},"body":{"index.html":{}}}],["package",{"_index":2276,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":249,"title":{},"body":{"guards/AuthGuard.html":{},"components/BreadcrumbsComponent.html":{},"components/FrameComponent.html":{},"components/LoginComponent.html":{}}}],["pairs",{"_index":1343,"title":{},"body":{"components/MapComponent.html":{}}}],["param",{"_index":259,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"interceptors/CacheInterceptor.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"classes/ModuleProvider.html":{},"guards/QueryParameterGuard.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{}}}],["parameter",{"_index":1869,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["parameter.guard.ts",{"_index":1678,"title":{},"body":{"guards/QueryParameterGuard.html":{},"coverage.html":{}}}],["parameter.guard.ts:25",{"_index":1684,"title":{},"body":{"guards/QueryParameterGuard.html":{}}}],["parameter.guard.ts:41",{"_index":1687,"title":{},"body":{"guards/QueryParameterGuard.html":{}}}],["parameters",{"_index":220,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"classes/ModuleProvider.html":{},"guards/QueryParameterGuard.html":{},"components/ResultDataViewComponent.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"miscellaneous/functions.html":{}}}],["parameters[0",{"_index":1060,"title":{},"body":{"interfaces/LayerData.html":{},"components/MapComponent.html":{},"interfaces/ShapeData.html":{}}}],["parameters[1",{"_index":2002,"title":{},"body":{"injectables/UserService.html":{}}}],["parameters[2",{"_index":413,"title":{},"body":{"injectables/AuthService.html":{}}}],["params",{"_index":533,"title":{},"body":{"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"injectables/ConsumersService.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/WaterRightsService.html":{}}}],["params.appendall({key",{"_index":1588,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["params.id",{"_index":775,"title":{},"body":{"injectables/ConsumersService.html":{}}}],["params.in",{"_index":773,"title":{},"body":{"injectables/ConsumersService.html":{},"injectables/WaterRightsService.html":{}}}],["params.isactive",{"_index":2153,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["params.isreal",{"_index":2155,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["params.set(\"resolution",{"_index":1586,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["params.usageabove",{"_index":777,"title":{},"body":{"injectables/ConsumersService.html":{}}}],["parse",{"_index":1685,"title":{},"body":{"guards/QueryParameterGuard.html":{}}}],["parsefloat(str",{"_index":1440,"title":{},"body":{"components/MapComponent.html":{}}}],["parseint(expiresin",{"_index":499,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["parseint(this.inputzoom",{"_index":1422,"title":{},"body":{"components/MapComponent.html":{}}}],["partial",{"_index":766,"title":{},"body":{"injectables/ConsumersService.html":{},"injectables/WaterRightsService.html":{},"miscellaneous/typealiases.html":{}}}],["partials",{"_index":921,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["pass",{"_index":848,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{}}}],["passed",{"_index":536,"title":{},"body":{"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"interceptors/ErrorInterceptor.html":{},"components/MapComponent.html":{},"guards/QueryParameterGuard.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["password",{"_index":373,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["password).subscribe",{"_index":1237,"title":{},"body":{"components/LoginComponent.html":{}}}],["passwordinput",{"_index":1212,"title":{},"body":{"components/LoginComponent.html":{}}}],["patchusers204",{"_index":2380,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["patchusers403",{"_index":2382,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["patchusers404",{"_index":2384,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["patchusersme200",{"_index":2386,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["path",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/MapComponent.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["path.bringtoback",{"_index":1480,"title":{},"body":{"components/MapComponent.html":{}}}],["path.bringtofront",{"_index":1483,"title":{},"body":{"components/MapComponent.html":{}}}],["path.replace(/\\/+/g",{"_index":1898,"title":{},"body":{"interceptors/SanitizeUrlInterceptor.html":{}}}],["path.setstyle({color",{"_index":1479,"title":{},"body":{"components/MapComponent.html":{}}}],["pathmatch",{"_index":2521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pathwithparams",{"_index":1895,"title":{},"body":{"interceptors/SanitizeUrlInterceptor.html":{}}}],["pathwithparams.split",{"_index":1897,"title":{},"body":{"interceptors/SanitizeUrlInterceptor.html":{}}}],["per",{"_index":262,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["person",{"_index":1975,"title":{},"body":{"injectables/UserService.html":{}}}],["pipe(combinelatestwith(this.consumersservice.fetchconsumers",{"_index":1785,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["pipe(map",{"_index":2157,"title":{},"body":{"injectables/WaterRightsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["pipe(map((raw",{"_index":2171,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["pipe(map((res",{"_index":2163,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["pipe(takewhile",{"_index":590,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["pipe(tap(event",{"_index":679,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["placed",{"_index":1738,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["plugin",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["point",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"injectables/ConsumersService.html":{},"injectables/WaterRightsService.html":{}}}],["polynomial",{"_index":916,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/enumerations.html":{}}}],["position",{"_index":1095,"title":{},"body":{"components/LoaderComponent.html":{},"miscellaneous/variables.html":{}}}],["possible",{"_index":247,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/CacheInterceptor.html":{},"miscellaneous/typealiases.html":{}}}],["possibly",{"_index":1075,"title":{},"body":{"components/LoaderComponent.html":{}}}],["post",{"_index":401,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["postoauthtoken200",{"_index":394,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/typealiases.html":{}}}],["postoauthtoken400",{"_index":1229,"title":{},"body":{"components/LoginComponent.html":{},"miscellaneous/typealiases.html":{}}}],["postoauthtoken401",{"_index":1231,"title":{},"body":{"components/LoginComponent.html":{},"miscellaneous/typealiases.html":{}}}],["postrevoke200",{"_index":396,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/typealiases.html":{}}}],["postrevoke403",{"_index":2392,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["predefined",{"_index":2327,"title":{},"body":{"miscellaneous/functions.html":{}}}],["prefers",{"_index":2282,"title":{},"body":{"dependencies.html":{}}}],["prepare",{"_index":1567,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["prepend",{"_index":508,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{}}}],["prepends",{"_index":510,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{}}}],["prependurl",{"_index":515,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{}}}],["presence",{"_index":877,"title":{},"body":{"injectables/ErrorService.html":{}}}],["present",{"_index":303,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ErrorService.html":{}}}],["presentation",{"_index":2313,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pretty",{"_index":2003,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["prettyprintnum",{"_index":2249,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["prettyprintnum(12345678",{"_index":2319,"title":{},"body":{"miscellaneous/functions.html":{}}}],["prettyprintnum(num",{"_index":2312,"title":{},"body":{"miscellaneous/functions.html":{}}}],["print",{"_index":2318,"title":{},"body":{"miscellaneous/functions.html":{}}}],["private",{"_index":260,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthStorageService.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"components/ErrorComponent.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"interfaces/LayerData.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"classes/ModuleProvider.html":{},"components/ResultDataViewComponent.html":{},"injectables/SettingsStorageService.html":{},"interfaces/ShapeData.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["privileges",{"_index":2407,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["prod",{"_index":2510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":2467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prognosemodell",{"_index":1870,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["prognosis",{"_index":1630,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["promise",{"_index":1156,"title":{},"body":{"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"guards/QueryParameterGuard.html":{},"components/ResultDataViewComponent.html":{}}}],["promise(resolve",{"_index":1157,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["promise.all(operations",{"_index":1583,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["promise.allsettled(this.promises",{"_index":1203,"title":{},"body":{"injectables/LoaderService.html":{}}}],["promises",{"_index":1173,"title":{},"body":{"injectables/LoaderService.html":{}}}],["proof",{"_index":2514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["properly",{"_index":1303,"title":{},"body":{"components/MapComponent.html":{}}}],["properties",{"_index":24,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"injectables/ErrorService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"interfaces/LayerData.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"interfaces/Marker.html":{},"components/ResultDataViewComponent.html":{},"interfaces/ShapeData.html":{},"components/SideBarComponent.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"interfaces/WisdomInterface.html":{},"properties.html":{}}}],["protection",{"_index":2137,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["protocol",{"_index":1894,"title":{},"body":{"interceptors/SanitizeUrlInterceptor.html":{}}}],["protocol}://${path",{"_index":1900,"title":{},"body":{"interceptors/SanitizeUrlInterceptor.html":{}}}],["provide",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"classes/ModuleProvider.html":{},"interfaces/WisdomInterface.html":{}}}],["providedin",{"_index":258,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"injectables/ConsumersService.html":{},"injectables/ErrorService.html":{},"injectables/ExampleService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"guards/LoaderGuard.html":{},"injectables/LoaderService.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"guards/QueryParameterGuard.html":{},"injectables/SettingsStorageService.html":{},"injectables/UserService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["provider",{"_index":188,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/StaticLoader.html":{}}}],["provider.ts",{"_index":1649,"title":{},"body":{"classes/ModuleProvider.html":{},"coverage.html":{}}}],["provider.ts:13",{"_index":1655,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["provider.ts:24",{"_index":1663,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["provider.ts:40",{"_index":1661,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["providers",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["provides",{"_index":1945,"title":{},"body":{"classes/StaticLoader.html":{},"interfaces/WisdomInterface.html":{},"miscellaneous/variables.html":{}}}],["providing",{"_index":936,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["proxy",{"_index":2474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":1817,"title":{},"body":{"components/ResultDataViewComponent.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"miscellaneous/variables.html":{}}}],["public_institutions",{"_index":943,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["pure",{"_index":1656,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["putusers201",{"_index":1992,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["putusers409",{"_index":1994,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["puzzle",{"_index":2502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["queries",{"_index":1528,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["query",{"_index":529,"title":{},"body":{"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"guards/QueryParameterGuard.html":{},"components/ResultDataViewComponent.html":{},"interceptors/SanitizeUrlInterceptor.html":{}}}],["query.join",{"_index":1902,"title":{},"body":{"interceptors/SanitizeUrlInterceptor.html":{}}}],["query.length",{"_index":1901,"title":{},"body":{"interceptors/SanitizeUrlInterceptor.html":{}}}],["querykey",{"_index":1571,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["queryparameterguard",{"_index":1676,"title":{"guards/QueryParameterGuard.html":{}},"body":{"guards/QueryParameterGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["queryparams",{"_index":1244,"title":{},"body":{"components/LoginComponent.html":{},"guards/QueryParameterGuard.html":{},"components/ResultDataViewComponent.html":{},"miscellaneous/variables.html":{}}}],["querystore",{"_index":1607,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["quot",{"_index":1381,"title":{},"body":{"components/MapComponent.html":{}}}],["quot;12.345.678&quot",{"_index":2321,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rate.amount",{"_index":2088,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["rate.unit}}/{{rate.duration",{"_index":2089,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["raw.dateofchange",{"_index":2173,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["raw.valid",{"_index":2176,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["rawlayerdata",{"_index":1592,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["rawlayerdata.shapes",{"_index":1594,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["rawlayerdata.shapes.map(rawshape",{"_index":1595,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["rawshape",{"_index":1598,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["rawshape.geojson",{"_index":1597,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["rawshape.nuts_key",{"_index":1596,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["re",{"_index":1757,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["readonly",{"_index":1553,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["reads",{"_index":1651,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["readwrite",{"_index":1601,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["ready",{"_index":286,"title":{},"body":{"guards/AuthGuard.html":{}}}],["real",{"_index":2150,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["received",{"_index":433,"title":{},"body":{"injectables/AuthStorageService.html":{},"interceptors/CacheInterceptor.html":{},"interfaces/LayerData.html":{},"interfaces/ShapeData.html":{}}}],["reconstruct",{"_index":1538,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["record",{"_index":910,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/MapComponent.html":{},"components/ResultDataViewComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"interfaces/WisdomInterface.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["recorded_at",{"_index":2205,"title":{},"body":{"injectables/WaterUsageHistoryService.html":{}}}],["recordedat",{"_index":698,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["recreated",{"_index":2309,"title":{},"body":{"miscellaneous/functions.html":{}}}],["redirect",{"_index":1681,"title":{},"body":{"guards/QueryParameterGuard.html":{}}}],["redirectto",{"_index":196,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/QueryParameterGuard.html":{},"miscellaneous/variables.html":{}}}],["reduces",{"_index":1889,"title":{},"body":{"interceptors/SanitizeUrlInterceptor.html":{}}}],["reexported",{"_index":1650,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["ref",{"_index":1350,"title":{},"body":{"components/MapComponent.html":{},"components/ResultDataViewComponent.html":{}}}],["ref.endyear",{"_index":1807,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["ref.startyear",{"_index":1808,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["reference",{"_index":402,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/IonIconComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/variables.html":{}}}],["referenceusages",{"_index":923,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["refprogsplit",{"_index":1703,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["refresh",{"_index":211,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"miscellaneous/variables.html":{}}}],["refresh(token",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{}}}],["refresh_token",{"_index":428,"title":{},"body":{"injectables/AuthService.html":{}}}],["refresh_token_key",{"_index":481,"title":{},"body":{"injectables/AuthStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["refresherrresponse",{"_index":314,"title":{},"body":{"guards/AuthGuard.html":{}}}],["refresherrresponse.status",{"_index":316,"title":{},"body":{"guards/AuthGuard.html":{}}}],["refreshes",{"_index":382,"title":{},"body":{"injectables/AuthService.html":{}}}],["refreshing",{"_index":246,"title":{},"body":{"guards/AuthGuard.html":{}}}],["refreshresponse",{"_index":306,"title":{},"body":{"guards/AuthGuard.html":{}}}],["refreshresponse.access_token",{"_index":308,"title":{},"body":{"guards/AuthGuard.html":{}}}],["refreshresponse.expires_in",{"_index":313,"title":{},"body":{"guards/AuthGuard.html":{}}}],["refreshresponse.refresh_token",{"_index":309,"title":{},"body":{"guards/AuthGuard.html":{}}}],["refreshresponse.scope",{"_index":311,"title":{},"body":{"guards/AuthGuard.html":{}}}],["refreshtoken",{"_index":441,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["refreshtoken(token",{"_index":500,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["registers",{"_index":36,"title":{},"body":{"components/AppComponent.html":{}}}],["regression",{"_index":1871,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["regressionmethod",{"_index":1704,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["relative",{"_index":1096,"title":{},"body":{"components/LoaderComponent.html":{}}}],["relativeto",{"_index":1766,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["removes",{"_index":546,"title":{},"body":{"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{}}}],["removing",{"_index":353,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["render",{"_index":1017,"title":{},"body":{"components/IonIconComponent.html":{}}}],["renders",{"_index":1329,"title":{},"body":{"components/MapComponent.html":{}}}],["replace(/\"'([^'\"\\s:,]+)'\"/g",{"_index":2168,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["replace(/\"\\s*([^\"]+)\\s*\"/g",{"_index":2166,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["replace(/'\"([^'\"\\s:,]+)\"'/g",{"_index":2169,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["replace(/'\\s*([^']+)\\s*'/g",{"_index":2167,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["replaceurl",{"_index":991,"title":{},"body":{"components/FrameComponent.html":{},"components/LoginComponent.html":{}}}],["reply",{"_index":278,"title":{},"body":{"guards/AuthGuard.html":{},"miscellaneous/functions.html":{}}}],["report",{"_index":1140,"title":{},"body":{"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{}}}],["reported",{"_index":1168,"title":{},"body":{"injectables/LoaderService.html":{}}}],["represent",{"_index":1050,"title":{},"body":{"interfaces/LayerData.html":{},"interfaces/ShapeData.html":{}}}],["representation",{"_index":2448,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["representing",{"_index":1067,"title":{},"body":{"interfaces/LayerData.html":{},"interfaces/ShapeData.html":{}}}],["represents",{"_index":1533,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["request",{"_index":329,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interceptors/BaseUrlInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"components/ResultDataViewComponent.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["request.clone",{"_index":349,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["request.clone({url",{"_index":522,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{}}}],["request.context.get(use_api_url",{"_index":518,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{}}}],["request.context.get(use_base_url",{"_index":516,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{}}}],["request.context.get(use_cache",{"_index":670,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["request.context.get(use_error_curtain",{"_index":853,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["request.context.get(use_loader",{"_index":1155,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["request.headers",{"_index":678,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["request.headers.set(\"if",{"_index":674,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["request.headers.set(token_header_key",{"_index":355,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["request.url",{"_index":523,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{}}}],["request.urlwithparams",{"_index":672,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["requested",{"_index":242,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["requesterror.error.error",{"_index":863,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["requesterror.error.errordescription",{"_index":866,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["requesterror.error.errorname",{"_index":864,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["requesterror.error.httpcode",{"_index":859,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["requesterror.error.httperror",{"_index":861,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["requesterror.message",{"_index":867,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["requesterror.name",{"_index":865,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["requesterror.ok",{"_index":856,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["requesterror.status",{"_index":860,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["requesterror.statustext",{"_index":862,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["requests",{"_index":371,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/BaseUrlInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"injectables/LoaderService.html":{},"components/MapComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["requests[layerkey",{"_index":1426,"title":{},"body":{"components/MapComponent.html":{}}}],["required",{"_index":2214,"title":{},"body":{"interfaces/WisdomInterface.html":{}}}],["res",{"_index":1777,"title":{},"body":{"components/ResultDataViewComponent.html":{},"injectables/WaterRightsService.html":{},"miscellaneous/functions.html":{}}}],["res.dateofchange",{"_index":2174,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["res.map",{"_index":2158,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["res.valid",{"_index":2177,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["reset",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorService.html":{},"modules/ExampleModule.html":{},"guards/LoaderGuard.html":{},"components/MapComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"modules/WisdomModule.html":{},"index.html":{}}}],["resolution",{"_index":1296,"title":{},"body":{"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"components/ResultDataViewComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["resolution&#39",{"_index":1369,"title":{},"body":{"components/MapComponent.html":{}}}],["resolution.district",{"_index":1380,"title":{},"body":{"components/MapComponent.html":{}}}],["resolution.municipal",{"_index":1370,"title":{},"body":{"components/MapComponent.html":{}}}],["resolution.toenum(shape.key.length",{"_index":1778,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["resolution.tokeylength(resolution",{"_index":1570,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["resolutionnum",{"_index":1569,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["resolutions",{"_index":2304,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["resolve(err",{"_index":1163,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["resolve(value",{"_index":1160,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["resolved",{"_index":2308,"title":{},"body":{"miscellaneous/functions.html":{}}}],["resolving",{"_index":1298,"title":{},"body":{"components/MapComponent.html":{}}}],["respond",{"_index":1073,"title":{},"body":{"components/LoaderComponent.html":{},"components/MapComponent.html":{}}}],["response",{"_index":284,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/ResultDataViewComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["response.access_token",{"_index":1238,"title":{},"body":{"components/LoginComponent.html":{}}}],["response.expires_in",{"_index":1241,"title":{},"body":{"components/LoginComponent.html":{}}}],["response.refresh_token",{"_index":1239,"title":{},"body":{"components/LoginComponent.html":{}}}],["response.scope",{"_index":1240,"title":{},"body":{"components/LoginComponent.html":{}}}],["response_types/login/postoauthtoken200",{"_index":395,"title":{},"body":{"injectables/AuthService.html":{}}}],["response_types/login/postoauthtoken400",{"_index":1230,"title":{},"body":{"components/LoginComponent.html":{}}}],["response_types/login/postoauthtoken401",{"_index":1232,"title":{},"body":{"components/LoginComponent.html":{}}}],["response_types/login/postrevoke200",{"_index":397,"title":{},"body":{"injectables/AuthService.html":{}}}],["response_types/users/getusers200",{"_index":1991,"title":{},"body":{"injectables/UserService.html":{}}}],["response_types/users/putusers201",{"_index":1993,"title":{},"body":{"injectables/UserService.html":{}}}],["response_types/users/putusers409",{"_index":1995,"title":{},"body":{"injectables/UserService.html":{}}}],["responsetype",{"_index":415,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ConsumersService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/UserService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"miscellaneous/variables.html":{}}}],["rest",{"_index":1534,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["rest/main/api/get",{"_index":1308,"title":{},"body":{"components/MapComponent.html":{}}}],["result",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["resultdataviewcomponent",{"_index":94,"title":{"components/ResultDataViewComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/ExampleComponent.html":{},"modules/ExampleModule.html":{},"injectables/ExampleService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"interfaces/LayerData.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"interfaces/Marker.html":{},"classes/ModuleProvider.html":{},"guards/QueryParameterGuard.html":{},"components/ResultDataViewComponent.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"interfaces/ShapeData.html":{},"components/SideBarComponent.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"interfaces/WisdomInterface.html":{},"modules/WisdomModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieved",{"_index":1550,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["return",{"_index":265,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"injectables/ConsumersService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"directives/LangSelectorDirective.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"classes/ModuleProvider.html":{},"guards/QueryParameterGuard.html":{},"components/ResultDataViewComponent.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":1535,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["returning",{"_index":850,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["returns",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoaderComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"classes/ModuleProvider.html":{},"guards/QueryParameterGuard.html":{},"components/ResultDataViewComponent.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"miscellaneous/functions.html":{}}}],["returntologin",{"_index":299,"title":{},"body":{"guards/AuthGuard.html":{}}}],["returnurl",{"_index":270,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["returnurl.queryparams",{"_index":1245,"title":{},"body":{"components/LoginComponent.html":{}}}],["returnurl.tostring().split(\"?\")[0",{"_index":1246,"title":{},"body":{"components/LoginComponent.html":{}}}],["revokes",{"_index":379,"title":{},"body":{"injectables/AuthService.html":{}}}],["revoking",{"_index":963,"title":{},"body":{"components/FrameComponent.html":{}}}],["right",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"coverage.html":{}}}],["right.address",{"_index":2068,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.annotation",{"_index":2139,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.bailee",{"_index":2070,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.basin",{"_index":2100,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.county",{"_index":2103,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.eu",{"_index":2105,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.external",{"_index":2077,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.field",{"_index":2109,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.file",{"_index":2079,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.flood",{"_index":2135,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.fluid",{"_index":2090,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.granting",{"_index":2062,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.groundwater",{"_index":2111,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.internal",{"_index":2074,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.irrigation",{"_index":2092,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.local",{"_index":2114,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.location",{"_index":2085,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.locations",{"_index":2081,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.maintenance",{"_index":2117,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.municipal",{"_index":2121,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.plot",{"_index":2124,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.rain",{"_index":2095,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.registering",{"_index":2065,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.rivershed",{"_index":2126,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.serial",{"_index":2128,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.since",{"_index":2052,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.top",{"_index":2130,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.water",{"_index":2059,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.withdrawal",{"_index":2087,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right/:waterright",{"_index":2523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rights",{"_index":1793,"title":{},"body":{"components/ResultDataViewComponent.html":{},"injectables/WaterRightsService.html":{},"miscellaneous/variables.html":{}}}],["rights.service",{"_index":1755,"title":{},"body":{"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["rights.service.ts",{"_index":2141,"title":{},"body":{"injectables/WaterRightsService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["rights.service.ts:116",{"_index":2144,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["rights.service.ts:123",{"_index":2148,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["rights.service.ts:147",{"_index":2146,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["rocket",{"_index":2516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["role",{"_index":1980,"title":{},"body":{"injectables/UserService.html":{}}}],["roles",{"_index":1964,"title":{},"body":{"injectables/UserService.html":{}}}],["root",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"injectables/ConsumersService.html":{},"injectables/ErrorService.html":{},"injectables/ExampleService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"guards/LoaderGuard.html":{},"injectables/LoaderService.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"guards/QueryParameterGuard.html":{},"injectables/SettingsStorageService.html":{},"injectables/UserService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["root'},{'name",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["route",{"_index":231,"title":{},"body":{"guards/AuthGuard.html":{},"components/ConsumerDetailComponent.html":{},"components/FrameComponent.html":{},"components/LoginComponent.html":{},"components/MapSelectViewComponent.html":{},"guards/QueryParameterGuard.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"interfaces/WisdomInterface.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["route.data[\"queryparams",{"_index":1693,"title":{},"body":{"guards/QueryParameterGuard.html":{}}}],["route.data[\"redirect",{"_index":1691,"title":{},"body":{"guards/QueryParameterGuard.html":{}}}],["route.queryparams[param",{"_index":1695,"title":{},"body":{"guards/QueryParameterGuard.html":{}}}],["route.url[0]?.path",{"_index":264,"title":{},"body":{"guards/AuthGuard.html":{}}}],["routed",{"_index":1222,"title":{},"body":{"components/LoginComponent.html":{}}}],["router",{"_index":218,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"injectables/ConsumersService.html":{},"injectables/ErrorService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"components/LoginComponent.html":{},"guards/QueryParameterGuard.html":{},"components/ResultDataViewComponent.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["router#parseurl",{"_index":1680,"title":{},"body":{"guards/QueryParameterGuard.html":{}}}],["routermodule",{"_index":182,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/WaterUsageForecastsModule.html":{},"modules/WisdomModule.html":{}}}],["routermodule.forroot(routes",{"_index":197,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":236,"title":{},"body":{"guards/AuthGuard.html":{},"guards/LoaderGuard.html":{},"guards/QueryParameterGuard.html":{}}}],["routes",{"_index":183,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/LoaderGuard.html":{},"classes/ModuleProvider.html":{},"index.html":{},"routes.html":{}}}],["routes.push(insertroute",{"_index":1671,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["routing",{"_index":1215,"title":{},"body":{"components/LoginComponent.html":{}}}],["routing.module",{"_index":151,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":181,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":560,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/LoaderComponent.html":{}}}],["run",{"_index":2408,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["rxjs",{"_index":255,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interceptors/BaseUrlInterceptor.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"guards/QueryParameterGuard.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1753,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["same",{"_index":1970,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["sanitize",{"_index":170,"title":{},"body":{"modules/AppModule.html":{},"interceptors/SanitizeUrlInterceptor.html":{}}}],["sanitizeurlinterceptor",{"_index":128,"title":{"interceptors/SanitizeUrlInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"coverage.html":{},"index.html":{}}}],["schema",{"_index":1524,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{},"miscellaneous/variables.html":{}}}],["schema_v",{"_index":1546,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["scope",{"_index":1979,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["scopeguard",{"_index":1669,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["scopes",{"_index":442,"title":{},"body":{"injectables/AuthStorageService.html":{},"injectables/UserService.html":{},"interfaces/WisdomInterface.html":{},"miscellaneous/variables.html":{}}}],["scopes(scopes",{"_index":502,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["scopes_key",{"_index":482,"title":{},"body":{"injectables/AuthStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["screen",{"_index":1071,"title":{},"body":{"components/LoaderComponent.html":{}}}],["scroll",{"_index":1131,"title":{},"body":{"components/LoaderComponent.html":{},"components/MapComponent.html":{}}}],["scrollwheelzoom",{"_index":1279,"title":{},"body":{"components/MapComponent.html":{}}}],["se",{"_index":263,"title":{},"body":{"guards/AuthGuard.html":{}}}],["see",{"_index":1305,"title":{},"body":{"components/MapComponent.html":{},"interfaces/WisdomInterface.html":{}}}],["sel[0",{"_index":1866,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["select",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["select.get",{"_index":1636,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["selectable",{"_index":1310,"title":{},"body":{"components/MapComponent.html":{}}}],["selected",{"_index":1283,"title":{},"body":{"components/MapComponent.html":{},"components/ResultDataViewComponent.html":{},"miscellaneous/variables.html":{}}}],["selected[0][0",{"_index":1849,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["selected[0][1",{"_index":1850,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["selectedcolor",{"_index":1280,"title":{},"body":{"components/MapComponent.html":{}}}],["selectedgeojsonlayer",{"_index":1272,"title":{},"body":{"components/MapComponent.html":{}}}],["selectedlayer",{"_index":1273,"title":{},"body":{"components/MapComponent.html":{}}}],["selectedshapes",{"_index":1274,"title":{},"body":{"components/MapComponent.html":{}}}],["selectedshapes.add(key",{"_index":1484,"title":{},"body":{"components/MapComponent.html":{}}}],["selectedshapes.delete(key",{"_index":1481,"title":{},"body":{"components/MapComponent.html":{}}}],["selectedshapes.has(key",{"_index":1478,"title":{},"body":{"components/MapComponent.html":{}}}],["selection",{"_index":1292,"title":{},"body":{"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{}}}],["selection.keys",{"_index":1632,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["selection.keys.length",{"_index":1634,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["selection.ts",{"_index":2242,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selection[res].push([shape.key",{"_index":1780,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["selectionready",{"_index":1616,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["selectlang",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["selector",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["selector.directive",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["selector.directive.ts",{"_index":1035,"title":{},"body":{"directives/LangSelectorDirective.html":{},"coverage.html":{}}}],["selector.directive.ts:17",{"_index":1040,"title":{},"body":{"directives/LangSelectorDirective.html":{}}}],["selector.directive.ts:24",{"_index":1042,"title":{},"body":{"directives/LangSelectorDirective.html":{}}}],["selector.directive.ts:8",{"_index":1039,"title":{},"body":{"directives/LangSelectorDirective.html":{}}}],["send",{"_index":315,"title":{},"body":{"guards/AuthGuard.html":{}}}],["sends",{"_index":298,"title":{},"body":{"guards/AuthGuard.html":{}}}],["sent",{"_index":664,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"miscellaneous/variables.html":{}}}],["separated",{"_index":559,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"miscellaneous/functions.html":{}}}],["server",{"_index":230,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/CacheInterceptor.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"interfaces/LayerData.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"interfaces/ShapeData.html":{},"injectables/UserService.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["service",{"_index":226,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"injectables/ExampleService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"components/ResultDataViewComponent.html":{},"injectables/SettingsStorageService.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["services",{"_index":1072,"title":{},"body":{"components/LoaderComponent.html":{}}}],["services/consumers.service",{"_index":725,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/ResultDataViewComponent.html":{}}}],["services/water",{"_index":726,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["session",{"_index":444,"title":{},"body":{"injectables/AuthStorageService.html":{},"injectables/SettingsStorageService.html":{}}}],["set",{"_index":248,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthStorageService.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"interceptors/LoaderInterceptor.html":{},"components/MapComponent.html":{},"interfaces/Marker.html":{},"guards/QueryParameterGuard.html":{},"components/ResultDataViewComponent.html":{},"injectables/SettingsStorageService.html":{}}}],["set(index",{"_index":549,"title":{},"body":{"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{}}}],["set(use_api_url",{"_index":417,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ConsumersService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"miscellaneous/variables.html":{}}}],["set(use_cache",{"_index":418,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["set(use_error_curtain",{"_index":420,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["set(use_loader",{"_index":781,"title":{},"body":{"injectables/ConsumersService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["setaccesstoken(token",{"_index":456,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["setboolstorage",{"_index":1905,"title":{},"body":{"injectables/SettingsStorageService.html":{}}}],["setboolstorage(key",{"_index":1909,"title":{},"body":{"injectables/SettingsStorageService.html":{}}}],["setbreadcrumbs",{"_index":1708,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["setbreadcrumbs(key",{"_index":1723,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["setelementclasses(classes",{"_index":626,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["setexpiresin(unixtime",{"_index":464,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["sethidesidebar(setting",{"_index":973,"title":{},"body":{"components/FrameComponent.html":{},"injectables/SettingsStorageService.html":{}}}],["sethideuserbar(setting",{"_index":978,"title":{},"body":{"components/FrameComponent.html":{},"injectables/SettingsStorageService.html":{}}}],["setinputlayers(layerconfig",{"_index":1363,"title":{},"body":{"components/MapComponent.html":{}}}],["setinputmarkers(markers",{"_index":1383,"title":{},"body":{"components/MapComponent.html":{}}}],["setmethod(m",{"_index":1748,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["setname(name",{"_index":1031,"title":{},"body":{"components/IonIconComponent.html":{}}}],["setrefreshtoken(token",{"_index":471,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["sets",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthStorageService.html":{},"components/MapComponent.html":{}}}],["setscopes(scopes",{"_index":475,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["setstorage",{"_index":437,"title":{},"body":{"injectables/AuthStorageService.html":{},"injectables/SettingsStorageService.html":{}}}],["setstorage(data",{"_index":450,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["setstorage(key",{"_index":1911,"title":{},"body":{"injectables/SettingsStorageService.html":{}}}],["setter",{"_index":485,"title":{},"body":{"injectables/AuthStorageService.html":{},"components/IonIconComponent.html":{}}}],["setting",{"_index":972,"title":{},"body":{"components/FrameComponent.html":{},"injectables/SettingsStorageService.html":{},"miscellaneous/variables.html":{}}}],["settings",{"_index":964,"title":{},"body":{"components/FrameComponent.html":{},"injectables/SettingsStorageService.html":{}}}],["settingsstorage",{"_index":959,"title":{},"body":{"components/FrameComponent.html":{}}}],["settingsstorageservice",{"_index":960,"title":{"injectables/SettingsStorageService.html":{}},"body":{"components/FrameComponent.html":{},"injectables/SettingsStorageService.html":{},"coverage.html":{}}}],["settingsstorageservice.getboolstorage(hide_sidebar_key",{"_index":1920,"title":{},"body":{"injectables/SettingsStorageService.html":{}}}],["settingsstorageservice.getboolstorage(hide_user_bar_key",{"_index":1922,"title":{},"body":{"injectables/SettingsStorageService.html":{}}}],["settingsstorageservice.getstorage(key",{"_index":1918,"title":{},"body":{"injectables/SettingsStorageService.html":{}}}],["settingsstorageservice.setboolstorage(hide_sidebar_key",{"_index":1919,"title":{},"body":{"injectables/SettingsStorageService.html":{}}}],["settingsstorageservice.setboolstorage(hide_user_bar_key",{"_index":1921,"title":{},"body":{"injectables/SettingsStorageService.html":{}}}],["settingsstorageservice.setstorage(key",{"_index":1917,"title":{},"body":{"injectables/SettingsStorageService.html":{}}}],["shall",{"_index":1981,"title":{},"body":{"injectables/UserService.html":{}}}],["shape",{"_index":1062,"title":{},"body":{"interfaces/LayerData.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"components/ResultDataViewComponent.html":{},"interfaces/ShapeData.html":{}}}],["shape.key",{"_index":1490,"title":{},"body":{"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["shape.name",{"_index":1489,"title":{},"body":{"components/MapComponent.html":{},"components/ResultDataViewComponent.html":{}}}],["shape[0",{"_index":1868,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["shape[1",{"_index":1867,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["shapedata",{"_index":1057,"title":{"interfaces/ShapeData.html":{}},"body":{"interfaces/LayerData.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"interfaces/ShapeData.html":{},"coverage.html":{}}}],["shapekeys",{"_index":1603,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["shapekeys.push(shape.key",{"_index":1606,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["shapes",{"_index":1054,"title":{},"body":{"interfaces/LayerData.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"interfaces/ShapeData.html":{},"miscellaneous/variables.html":{}}}],["shapes.push(shape",{"_index":1581,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["shapestore",{"_index":1602,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["show",{"_index":815,"title":{},"body":{"components/ErrorComponent.html":{},"components/MapComponent.html":{},"miscellaneous/variables.html":{}}}],["showerror",{"_index":796,"title":{},"body":{"components/ErrorComponent.html":{}}}],["shown",{"_index":1224,"title":{},"body":{"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["showtype",{"_index":798,"title":{},"body":{"components/ErrorComponent.html":{}}}],["side",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["sidebar",{"_index":971,"title":{},"body":{"components/FrameComponent.html":{},"injectables/SettingsStorageService.html":{},"components/SideBarComponent.html":{},"classes/StaticLoader.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["sidebar.ts",{"_index":2229,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["sidebar.water",{"_index":2518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sidebarcomponent",{"_index":97,"title":{"components/SideBarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"coverage.html":{},"index.html":{}}}],["sidebarentries",{"_index":2396,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["sidebarentry",{"_index":2397,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["sidebarentrylvl1",{"_index":2398,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["sidebarentrylvl2",{"_index":2399,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["sidebarentrylvl3",{"_index":2400,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["sidebarlabel",{"_index":2401,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["sidebarlangs",{"_index":1943,"title":{},"body":{"classes/StaticLoader.html":{}}}],["signed",{"_index":204,"title":{},"body":{"guards/AuthGuard.html":{}}}],["simple",{"_index":1932,"title":{},"body":{"classes/StaticLoader.html":{}}}],["simply",{"_index":1537,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["single",{"_index":1061,"title":{},"body":{"interfaces/LayerData.html":{},"interfaces/ShapeData.html":{}}}],["site",{"_index":952,"title":{},"body":{"components/FrameComponent.html":{}}}],["slash",{"_index":558,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["slashes",{"_index":1888,"title":{},"body":{"interceptors/SanitizeUrlInterceptor.html":{}}}],["small",{"_index":292,"title":{},"body":{"guards/AuthGuard.html":{},"components/ResultDataViewComponent.html":{}}}],["smooth",{"_index":2043,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["snapshot",{"_index":1690,"title":{},"body":{"guards/QueryParameterGuard.html":{},"miscellaneous/functions.html":{}}}],["solution",{"_index":2310,"title":{},"body":{"miscellaneous/functions.html":{}}}],["somewhere",{"_index":845,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/SanitizeUrlInterceptor.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/ExampleComponent.html":{},"modules/ExampleModule.html":{},"injectables/ExampleService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"interfaces/LayerData.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"interfaces/Marker.html":{},"classes/ModuleProvider.html":{},"guards/QueryParameterGuard.html":{},"components/ResultDataViewComponent.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"interfaces/ShapeData.html":{},"components/SideBarComponent.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"interfaces/WisdomInterface.html":{},"modules/WisdomModule.html":{}}}],["sparkles",{"_index":2517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specific",{"_index":1936,"title":{},"body":{"classes/StaticLoader.html":{}}}],["split",{"_index":1438,"title":{},"body":{"components/MapComponent.html":{}}}],["split(\"is",{"_index":641,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["stackoverflow",{"_index":2311,"title":{},"body":{"miscellaneous/functions.html":{}}}],["standard",{"_index":2441,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["start",{"_index":930,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"classes/StaticLoader.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["starts",{"_index":1137,"title":{},"body":{"guards/LoaderGuard.html":{}}}],["startyear",{"_index":935,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["state",{"_index":235,"title":{},"body":{"guards/AuthGuard.html":{},"guards/QueryParameterGuard.html":{},"components/ResultDataViewComponent.html":{},"miscellaneous/enumerations.html":{}}}],["state.url",{"_index":271,"title":{},"body":{"guards/AuthGuard.html":{}}}],["state.url.includes(\"login",{"_index":268,"title":{},"body":{"guards/AuthGuard.html":{}}}],["statements",{"_index":2228,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":435,"title":{},"body":{"injectables/AuthStorageService.html":{},"classes/ModuleProvider.html":{},"injectables/SettingsStorageService.html":{},"injectables/UserService.html":{}}}],["staticloader",{"_index":164,"title":{"classes/StaticLoader.html":{}},"body":{"modules/AppModule.html":{},"classes/StaticLoader.html":{},"coverage.html":{}}}],["stating",{"_index":1187,"title":{},"body":{"injectables/LoaderService.html":{}}}],["status",{"_index":321,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/UserService.html":{}}}],["step",{"_index":808,"title":{},"body":{"components/ErrorComponent.html":{}}}],["still",{"_index":245,"title":{},"body":{"guards/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["stops",{"_index":1019,"title":{},"body":{"components/IonIconComponent.html":{}}}],["storage",{"_index":223,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthStorageService.html":{},"components/FrameComponent.html":{},"injectables/SettingsStorageService.html":{}}}],["storage.service",{"_index":256,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/FrameComponent.html":{},"components/LoginComponent.html":{}}}],["storage.service.ts",{"_index":431,"title":{},"body":{"injectables/AuthStorageService.html":{},"injectables/SettingsStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["storage.service.ts:104",{"_index":474,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["storage.service.ts:21",{"_index":443,"title":{},"body":{"injectables/AuthStorageService.html":{},"injectables/SettingsStorageService.html":{}}}],["storage.service.ts:31",{"_index":1908,"title":{},"body":{"injectables/SettingsStorageService.html":{}}}],["storage.service.ts:33",{"_index":453,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["storage.service.ts:38",{"_index":448,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["storage.service.ts:42",{"_index":1910,"title":{},"body":{"injectables/SettingsStorageService.html":{}}}],["storage.service.ts:46",{"_index":457,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["storage.service.ts:54",{"_index":455,"title":{},"body":{"injectables/AuthStorageService.html":{},"injectables/SettingsStorageService.html":{}}}],["storage.service.ts:62",{"_index":465,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["storage.service.ts:64",{"_index":1913,"title":{},"body":{"injectables/SettingsStorageService.html":{}}}],["storage.service.ts:68",{"_index":1912,"title":{},"body":{"injectables/SettingsStorageService.html":{}}}],["storage.service.ts:70",{"_index":460,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["storage.service.ts:76",{"_index":1914,"title":{},"body":{"injectables/SettingsStorageService.html":{}}}],["storage.service.ts:80",{"_index":472,"title":{},"body":{"injectables/AuthStorageService.html":{},"injectables/SettingsStorageService.html":{}}}],["storage.service.ts:88",{"_index":470,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["storage.service.ts:96",{"_index":476,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["store",{"_index":1576,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/SettingsStorageService.html":{}}}],["stored",{"_index":446,"title":{},"body":{"injectables/AuthStorageService.html":{},"injectables/LoaderService.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/SettingsStorageService.html":{}}}],["storing",{"_index":432,"title":{},"body":{"injectables/AuthStorageService.html":{},"injectables/SettingsStorageService.html":{}}}],["str",{"_index":2326,"title":{},"body":{"miscellaneous/functions.html":{}}}],["string",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"interfaces/LayerData.html":{},"components/LoaderComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"classes/ModuleProvider.html":{},"guards/QueryParameterGuard.html":{},"components/ResultDataViewComponent.html":{},"injectables/SettingsStorageService.html":{},"interfaces/ShapeData.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"interfaces/WisdomInterface.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["strings",{"_index":535,"title":{},"body":{"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"guards/QueryParameterGuard.html":{},"miscellaneous/functions.html":{}}}],["stringtocolor",{"_index":1751,"title":{},"body":{"components/ResultDataViewComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["stringtocolor(str",{"_index":2322,"title":{},"body":{"miscellaneous/functions.html":{}}}],["stringtocolor(usage.displayname",{"_index":1838,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["structure",{"_index":2421,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["style",{"_index":1466,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/functions.html":{}}}],["styles",{"_index":1068,"title":{},"body":{"components/LoaderComponent.html":{},"components/MapComponent.html":{}}}],["styleurls",{"_index":1077,"title":{},"body":{"components/LoaderComponent.html":{},"components/MapComponent.html":{}}}],["sub",{"_index":2115,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["subject",{"_index":539,"title":{},"body":{"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"injectables/LoaderService.html":{},"components/MapComponent.html":{}}}],["submits",{"_index":1220,"title":{},"body":{"components/LoginComponent.html":{}}}],["subscribe",{"_index":878,"title":{},"body":{"injectables/ErrorService.html":{},"components/LoaderComponent.html":{}}}],["subscribe(data",{"_index":734,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["subscribe(next",{"_index":592,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["subscriber.complete",{"_index":289,"title":{},"body":{"guards/AuthGuard.html":{}}}],["subscriber.next(loginurltree",{"_index":301,"title":{},"body":{"guards/AuthGuard.html":{}}}],["subscriber.next(true",{"_index":288,"title":{},"body":{"guards/AuthGuard.html":{}}}],["successful",{"_index":1221,"title":{},"body":{"components/LoginComponent.html":{}}}],["successfully",{"_index":2428,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["such",{"_index":2209,"title":{},"body":{"interfaces/WisdomInterface.html":{}}}],["supplement",{"_index":2096,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["support",{"_index":2354,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":579,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["survey",{"_index":2106,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["svg",{"_index":2355,"title":{},"body":{"modules.html":{}}}],["swap",{"_index":2339,"title":{},"body":{"miscellaneous/functions.html":{}}}],["switch",{"_index":824,"title":{},"body":{"components/ErrorComponent.html":{},"components/LoginComponent.html":{}}}],["sync",{"_index":2335,"title":{},"body":{"miscellaneous/functions.html":{}}}],["system",{"_index":2412,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["t",{"_index":2331,"title":{},"body":{"miscellaneous/functions.html":{}}}],["table",{"_index":2275,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2274,"title":{},"body":{"coverage.html":{}}}],["takewhile",{"_index":587,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["tap",{"_index":344,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"interceptors/LoaderInterceptor.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["templateurl",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["territorial",{"_index":1064,"title":{},"body":{"interfaces/LayerData.html":{},"interfaces/ShapeData.html":{}}}],["text",{"_index":530,"title":{},"body":{"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"components/ConsumerDetailComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["texts",{"_index":1076,"title":{},"body":{"components/LoaderComponent.html":{},"injectables/LoaderService.html":{}}}],["then(data",{"_index":1775,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["therefore",{"_index":562,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["these&#39",{"_index":1374,"title":{},"body":{"components/MapComponent.html":{}}}],["things",{"_index":602,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["third",{"_index":2314,"title":{},"body":{"miscellaneous/functions.html":{}}}],["this._displaytexts.clear",{"_index":1207,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this._displaytexts.delete(toresolve",{"_index":1205,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this._displaytexts.set(toresolve",{"_index":1200,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this._loading.asobservable",{"_index":1198,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this._loading.next(false",{"_index":1204,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this._loading.next(true",{"_index":1202,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.alive",{"_index":591,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["this.authservice.login(username",{"_index":1236,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.logout(this.authstorage.accesstoken!).subscribe",{"_index":989,"title":{},"body":{"components/FrameComponent.html":{}}}],["this.authservice.refresh(this.authstorage.refreshtoken).subscribe",{"_index":305,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.authservice.validate(token!).subscribe",{"_index":282,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.authstorage.accesstoken",{"_index":276,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/LoginComponent.html":{}}}],["this.authstorage.clear",{"_index":300,"title":{},"body":{"guards/AuthGuard.html":{},"components/FrameComponent.html":{}}}],["this.authstorage.expiresin",{"_index":312,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["this.authstorage.refreshtoken",{"_index":302,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["this.authstorage.scopes",{"_index":310,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["this.bounds.next",{"_index":2044,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["this.bounds.subscribe(bounds",{"_index":2028,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["this.breadcrumbs.set(0",{"_index":1626,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["this.breadcrumbs.set(1",{"_index":1851,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["this.breadcrumbs.set(2",{"_index":751,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["this.center",{"_index":1419,"title":{},"body":{"components/MapComponent.html":{}}}],["this.chartdata",{"_index":737,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["this.classes",{"_index":635,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["this.classes.join",{"_index":633,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["this.classes.push(\"is",{"_index":639,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["this.consumerareadata",{"_index":1844,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["this.consumergroupdata",{"_index":1839,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["this.coordinates.next(coordinates",{"_index":756,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["this.coordinates.subscribe(coordinates",{"_index":757,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["this.cservice.fetchconsumers({id",{"_index":733,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["this.data",{"_index":2033,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["this.displaytexts",{"_index":1093,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.displaytextsubject.asobservable",{"_index":1197,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.displaytextsubject.next",{"_index":1208,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.displaytextsubject.next(array.from(this._displaytexts.values",{"_index":1201,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.elementclasses",{"_index":640,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["this.elref.nativeelement?.setattribute(\"name",{"_index":1033,"title":{},"body":{"components/IonIconComponent.html":{}}}],["this.emitselection",{"_index":1485,"title":{},"body":{"components/MapComponent.html":{}}}],["this.errorcode",{"_index":835,"title":{},"body":{"components/ErrorComponent.html":{}}}],["this.errordescription",{"_index":840,"title":{},"body":{"components/ErrorComponent.html":{}}}],["this.errorname",{"_index":839,"title":{},"body":{"components/ErrorComponent.html":{}}}],["this.errorpresent.emit(error",{"_index":888,"title":{},"body":{"injectables/ErrorService.html":{}}}],["this.errorpresent.emit(false",{"_index":887,"title":{},"body":{"injectables/ErrorService.html":{}}}],["this.etagmap.get(key",{"_index":673,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["this.etagmap.set(key",{"_index":682,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["this.fetchdata(key",{"_index":1762,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["this.fragments",{"_index":593,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["this.fragments.includes(undefined",{"_index":594,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["this.fragments.length",{"_index":550,"title":{},"body":{"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{}}}],["this.fragments[index",{"_index":552,"title":{},"body":{"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{}}}],["this.handleconsumerdata(data",{"_index":735,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["this.height",{"_index":1415,"title":{},"body":{"components/MapComponent.html":{}}}],["this.hservice.fetchwaterusagehistory(this.id",{"_index":736,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["this.http.get(join(auth_api",{"_index":2006,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(url.tostring",{"_index":779,"title":{},"body":{"injectables/ConsumersService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["this.http.post",{"_index":421,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.put",{"_index":2012,"title":{},"body":{"injectables/UserService.html":{}}}],["this.httpcode",{"_index":837,"title":{},"body":{"components/ErrorComponent.html":{}}}],["this.httpcode)[0",{"_index":823,"title":{},"body":{"components/ErrorComponent.html":{}}}],["this.httperror",{"_index":838,"title":{},"body":{"components/ErrorComponent.html":{}}}],["this.id",{"_index":731,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["this.idb",{"_index":1554,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["this.inputcenter",{"_index":1418,"title":{},"body":{"components/MapComponent.html":{}}}],["this.inputheight",{"_index":1414,"title":{},"body":{"components/MapComponent.html":{}}}],["this.inputlayerselectable",{"_index":1474,"title":{},"body":{"components/MapComponent.html":{}}}],["this.inputscrollwheelzoom",{"_index":1437,"title":{},"body":{"components/MapComponent.html":{}}}],["this.inputtileurl",{"_index":1416,"title":{},"body":{"components/MapComponent.html":{}}}],["this.inputzoom",{"_index":1420,"title":{},"body":{"components/MapComponent.html":{}}}],["this.isactive",{"_index":638,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["this.isloading",{"_index":1091,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.key",{"_index":1760,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["this.keys",{"_index":1631,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["this.lang",{"_index":1044,"title":{},"body":{"directives/LangSelectorDirective.html":{}}}],["this.lastmodifiedmap.get(key",{"_index":676,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["this.lastmodifiedmap.set(key",{"_index":684,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["this.layerconfig.next(layerconfig",{"_index":1407,"title":{},"body":{"components/MapComponent.html":{}}}],["this.layerconfig.subscribe(async",{"_index":1423,"title":{},"body":{"components/MapComponent.html":{}}}],["this.layerdata.next(fetched",{"_index":1433,"title":{},"body":{"components/MapComponent.html":{}}}],["this.layerdata.subscribe(layerdata",{"_index":1448,"title":{},"body":{"components/MapComponent.html":{}}}],["this.layernames[key",{"_index":1497,"title":{},"body":{"components/MapComponent.html":{}}}],["this.layernames[layerkey",{"_index":1425,"title":{},"body":{"components/MapComponent.html":{}}}],["this.location.back",{"_index":841,"title":{},"body":{"components/ErrorComponent.html":{}}}],["this.loginhasissue",{"_index":1252,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.map",{"_index":1444,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.map?.flytobounds(bounds",{"_index":2029,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["this.mapcomponent.map!.flyto(coordinates",{"_index":760,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["this.mapelement.nativeelement",{"_index":1435,"title":{},"body":{"components/MapComponent.html":{}}}],["this.mapservice.fetchlayerdata(null",{"_index":1774,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["this.marker",{"_index":754,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["this.markers",{"_index":1803,"title":{},"body":{"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["this.markers.next(markers",{"_index":1412,"title":{},"body":{"components/MapComponent.html":{}}}],["this.markers.subscribe(markers",{"_index":1507,"title":{},"body":{"components/MapComponent.html":{}}}],["this.name",{"_index":750,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["this.passwordinput?.nativeelement.select",{"_index":1256,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.promises",{"_index":1206,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.promises.push(toresolve",{"_index":1199,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.recordedat",{"_index":745,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["this.refprogsplit",{"_index":1806,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["this.route",{"_index":1767,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["this.route.parent",{"_index":1800,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["this.route.snapshot.params[\"consumer",{"_index":732,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["this.route.snapshot.params[\"waterright",{"_index":2031,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["this.route.snapshot.queryparams",{"_index":1759,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["this.route.snapshot.queryparams[\"method",{"_index":1770,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["this.router.createurltree([api_url",{"_index":2161,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["this.router.events.subscribe(event",{"_index":886,"title":{},"body":{"injectables/ErrorService.html":{}}}],["this.router.navigate",{"_index":1765,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["this.router.navigate([\"login",{"_index":990,"title":{},"body":{"components/FrameComponent.html":{}}}],["this.router.navigate([route",{"_index":1247,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.parseurl(\"/login",{"_index":267,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.router.parseurl(`${api_url}/${forecastmodel",{"_index":944,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["this.router.parseurl(api_url",{"_index":772,"title":{},"body":{"injectables/ConsumersService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["this.router.parseurl(redirect",{"_index":1692,"title":{},"body":{"guards/QueryParameterGuard.html":{}}}],["this.router.parseurl(this.route.snapshot.queryparams[\"returnurl",{"_index":1243,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.selected.emit",{"_index":1521,"title":{},"body":{"components/MapComponent.html":{}}}],["this.selectedcolor",{"_index":1482,"title":{},"body":{"components/MapComponent.html":{}}}],["this.selectedgeojsonlayer",{"_index":1452,"title":{},"body":{"components/MapComponent.html":{}}}],["this.selectedlayer",{"_index":1492,"title":{},"body":{"components/MapComponent.html":{}}}],["this.selectedshapes",{"_index":1450,"title":{},"body":{"components/MapComponent.html":{}}}],["this.selectedshapes[key",{"_index":1455,"title":{},"body":{"components/MapComponent.html":{}}}],["this.selection",{"_index":1781,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["this.selectionready",{"_index":1633,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["this.service.addloader(promise",{"_index":1165,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["this.service.clearloading",{"_index":1146,"title":{},"body":{"guards/LoaderGuard.html":{}}}],["this.service.displaytexts.subscribe(values",{"_index":1092,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.service.errorpresent.subscribe",{"_index":830,"title":{},"body":{"components/ErrorComponent.html":{}}}],["this.service.fetchforecastdata(key",{"_index":1771,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["this.service.fetchlayerdata",{"_index":1427,"title":{},"body":{"components/MapComponent.html":{}}}],["this.service.fetchwaterrightdetails(waterright",{"_index":2032,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["this.service.loading.subscribe(value",{"_index":1090,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.service.observe",{"_index":589,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["this.service.throwerror",{"_index":858,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["this.setbreadcrumbs(key",{"_index":1782,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["this.settingsstorage.hidesidebar",{"_index":985,"title":{},"body":{"components/FrameComponent.html":{}}}],["this.settingsstorage.hideuserbar",{"_index":987,"title":{},"body":{"components/FrameComponent.html":{}}}],["this.showerror",{"_index":832,"title":{},"body":{"components/ErrorComponent.html":{}}}],["this.subject.asobservable",{"_index":555,"title":{},"body":{"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{}}}],["this.subject.next(this.fragments",{"_index":553,"title":{},"body":{"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{}}}],["this.tileurl",{"_index":1417,"title":{},"body":{"components/MapComponent.html":{}}}],["this.translate.instant(\"water",{"_index":2050,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["this.translateservice.use(this.lang",{"_index":1045,"title":{},"body":{"directives/LangSelectorDirective.html":{}}}],["this.unselectedcolor",{"_index":1468,"title":{},"body":{"components/MapComponent.html":{}}}],["this.updateareacomponents(data.partials",{"_index":1773,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["this.updategraphs(data.accumulations",{"_index":1772,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["this.waterrightservice.fetchwaterrightlocations",{"_index":1783,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["this.zoom",{"_index":1421,"title":{},"body":{"components/MapComponent.html":{}}}],["this[\"data\"][\"valid",{"_index":2049,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["this[\"selection",{"_index":1776,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["though",{"_index":411,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["through",{"_index":2337,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["throw",{"_index":1258,"title":{},"body":{"components/LoginComponent.html":{}}}],["throwerror",{"_index":254,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{}}}],["throwerror(error",{"_index":880,"title":{},"body":{"injectables/ErrorService.html":{}}}],["tile",{"_index":1320,"title":{},"body":{"components/MapComponent.html":{}}}],["tileurl",{"_index":1275,"title":{},"body":{"components/MapComponent.html":{}}}],["time",{"_index":468,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["times",{"_index":2531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["timestamp",{"_index":496,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["timestamps",{"_index":663,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["title",{"_index":25,"title":{},"body":{"components/AppComponent.html":{}}}],["todo",{"_index":318,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthStorageService.html":{},"components/FrameComponent.html":{},"components/MapComponent.html":{},"classes/ModuleProvider.html":{},"components/ResultDataViewComponent.html":{}}}],["toenum",{"_index":2245,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["toenum(length",{"_index":2344,"title":{},"body":{"miscellaneous/functions.html":{}}}],["toggle",{"_index":607,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{},"miscellaneous/variables.html":{}}}],["toggleable",{"_index":603,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["toggleable'},{'name",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["toggleable.directive",{"_index":2222,"title":{},"body":{"modules/WisdomModule.html":{}}}],["toggleable.directive.ts",{"_index":601,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{},"coverage.html":{}}}],["toggleable.directive.ts:15",{"_index":623,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["toggleable.directive.ts:17",{"_index":622,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["toggleable.directive.ts:22",{"_index":615,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["toggleable.directive.ts:26",{"_index":627,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["toggleable.directive.ts:36",{"_index":617,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{}}}],["token",{"_index":208,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"miscellaneous/variables.html":{}}}],["token_header_key",{"_index":346,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tokens",{"_index":225,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/LoginComponent.html":{}}}],["tokeylength",{"_index":2246,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["tokeylength(res",{"_index":2348,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tooltip",{"_index":755,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"interfaces/Marker.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["top",{"_index":1097,"title":{},"body":{"components/LoaderComponent.html":{},"interfaces/WisdomInterface.html":{}}}],["topright",{"_index":2486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["toresolve",{"_index":1180,"title":{},"body":{"injectables/LoaderService.html":{}}}],["tourism",{"_index":1821,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["transforms",{"_index":2349,"title":{},"body":{"miscellaneous/functions.html":{}}}],["transition",{"_index":1121,"title":{},"body":{"components/LoaderComponent.html":{}}}],["translate",{"_index":595,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"miscellaneous/functions.html":{}}}],["translate/core",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"modules/ExampleModule.html":{},"directives/LangSelectorDirective.html":{},"classes/StaticLoader.html":{},"components/WaterRightDetailComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"modules/WisdomModule.html":{},"dependencies.html":{}}}],["translated",{"_index":2424,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["translateloader",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"classes/StaticLoader.html":{}}}],["translatemodule",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"modules/ExampleModule.html":{},"modules/WaterUsageForecastsModule.html":{},"modules/WisdomModule.html":{}}}],["translatemodule.forroot",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["translateobject",{"_index":2250,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["translateobject(service",{"_index":2329,"title":{},"body":{"miscellaneous/functions.html":{}}}],["translateservice",{"_index":537,"title":{},"body":{"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"directives/LangSelectorDirective.html":{},"components/WaterRightDetailComponent.html":{},"miscellaneous/functions.html":{}}}],["translation",{"_index":1041,"title":{},"body":{"directives/LangSelectorDirective.html":{},"components/MapComponent.html":{},"interfaces/WisdomInterface.html":{},"miscellaneous/typealiases.html":{}}}],["translations",{"_index":1662,"title":{},"body":{"classes/ModuleProvider.html":{},"classes/StaticLoader.html":{},"interfaces/WisdomInterface.html":{},"miscellaneous/variables.html":{}}}],["translator",{"_index":2513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["traversing",{"_index":804,"title":{},"body":{"components/ErrorComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["tries",{"_index":210,"title":{},"body":{"guards/AuthGuard.html":{}}}],["trimmedkeys",{"_index":1568,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["true",{"_index":179,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/BreadcrumbsComponent.html":{},"injectables/ConsumersService.html":{},"components/ErrorComponent.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"guards/LoaderGuard.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"guards/QueryParameterGuard.html":{},"components/ResultDataViewComponent.html":{},"injectables/SettingsStorageService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"miscellaneous/variables.html":{}}}],["true}).catch(e",{"_index":1248,"title":{},"body":{"components/LoginComponent.html":{}}}],["try",{"_index":304,"title":{},"body":{"guards/AuthGuard.html":{}}}],["ts",{"_index":1954,"title":{},"body":{"classes/StaticLoader.html":{}}}],["tslib",{"_index":2296,"title":{},"body":{"dependencies.html":{}}}],["tuple",{"_index":2340,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tupleswap",{"_index":2027,"title":{},"body":{"components/WaterRightDetailComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["tupleswap(location.location.coordinates",{"_index":2037,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["tupleswap(tuple",{"_index":2338,"title":{},"body":{"miscellaneous/functions.html":{}}}],["two",{"_index":2343,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tx",{"_index":1574,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["tx.objectstore(\"queries",{"_index":1608,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["tx.objectstore(\"shapes",{"_index":1577,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["type",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/AuthStorageService.html":{},"interceptors/BaseUrlInterceptor.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"interfaces/LayerData.html":{},"components/LoaderComponent.html":{},"guards/LoaderGuard.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"interfaces/Marker.html":{},"classes/ModuleProvider.html":{},"guards/QueryParameterGuard.html":{},"components/ResultDataViewComponent.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/SettingsStorageService.html":{},"interfaces/ShapeData.html":{},"classes/StaticLoader.html":{},"injectables/UserService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"interfaces/WisdomInterface.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":2359,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1164,"title":{},"body":{"interceptors/LoaderInterceptor.html":{},"guards/QueryParameterGuard.html":{},"injectables/SettingsStorageService.html":{}}}],["unauthorized",{"_index":2439,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["undefined",{"_index":452,"title":{},"body":{"injectables/AuthStorageService.html":{},"components/BreadcrumbsComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"guards/QueryParameterGuard.html":{},"injectables/SettingsStorageService.html":{},"components/WaterRightDetailComponent.html":{},"miscellaneous/functions.html":{}}}],["under",{"_index":1182,"title":{},"body":{"injectables/LoaderService.html":{},"interfaces/WisdomInterface.html":{}}}],["unhandled",{"_index":846,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["unique",{"_index":1971,"title":{},"body":{"injectables/UserService.html":{}}}],["units",{"_index":1065,"title":{},"body":{"interfaces/LayerData.html":{},"interfaces/ShapeData.html":{}}}],["unix",{"_index":467,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["unixtime",{"_index":466,"title":{},"body":{"injectables/AuthStorageService.html":{}}}],["unknown",{"_index":1599,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["unselected",{"_index":1323,"title":{},"body":{"components/MapComponent.html":{}}}],["unselectedcolor",{"_index":1281,"title":{},"body":{"components/MapComponent.html":{}}}],["until",{"_index":2054,"title":{},"body":{"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{}}}],["unused",{"_index":904,"title":{},"body":{"injectables/ExampleService.html":{}}}],["up",{"_index":572,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"interceptors/SanitizeUrlInterceptor.html":{}}}],["update",{"_index":307,"title":{},"body":{"guards/AuthGuard.html":{},"components/BreadcrumbsComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoaderComponent.html":{},"components/MapComponent.html":{},"miscellaneous/typealiases.html":{}}}],["updateareacomponents",{"_index":1709,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["updateareacomponents(forecast",{"_index":1725,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["updated",{"_index":2429,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["updategraphs",{"_index":1710,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["updategraphs(forecast",{"_index":1727,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["updates",{"_index":350,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"directives/LangSelectorDirective.html":{},"injectables/LoaderService.html":{}}}],["upgrade(db",{"_index":1556,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{}}}],["upon",{"_index":583,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoginComponent.html":{}}}],["url",{"_index":398,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/BaseUrlInterceptor.html":{},"injectables/ConsumersService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"injectables/UserService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["url.interceptor",{"_index":156,"title":{},"body":{"modules/AppModule.html":{}}}],["url.interceptor.ts",{"_index":507,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{},"interceptors/SanitizeUrlInterceptor.html":{},"coverage.html":{}}}],["url.interceptor.ts:23",{"_index":509,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{}}}],["url.interceptor.ts:28",{"_index":1891,"title":{},"body":{"interceptors/SanitizeUrlInterceptor.html":{}}}],["url.queryparams[\"consumer",{"_index":2203,"title":{},"body":{"injectables/WaterUsageHistoryService.html":{}}}],["url.queryparams[\"consumergroup",{"_index":945,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["url.queryparams[\"id",{"_index":776,"title":{},"body":{"injectables/ConsumersService.html":{}}}],["url.queryparams[\"in",{"_index":774,"title":{},"body":{"injectables/ConsumersService.html":{},"injectables/WaterRightsService.html":{}}}],["url.queryparams[\"is_active",{"_index":2154,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["url.queryparams[\"is_real",{"_index":2156,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["url.queryparams[\"key",{"_index":946,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["url.queryparams[\"usage_above",{"_index":778,"title":{},"body":{"injectables/ConsumersService.html":{}}}],["url.split",{"_index":1896,"title":{},"body":{"interceptors/SanitizeUrlInterceptor.html":{}}}],["url.ts",{"_index":2238,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["urlencoded",{"_index":408,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["urls",{"_index":1886,"title":{},"body":{"interceptors/SanitizeUrlInterceptor.html":{}}}],["urltree",{"_index":251,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"guards/LoaderGuard.html":{},"guards/QueryParameterGuard.html":{}}}],["us/docs/web/http/headers/etag",{"_index":667,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["us/docs/web/http/headers/last",{"_index":669,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["usage",{"_index":686,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["usage.displayname",{"_index":1830,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["usage.startyear",{"_index":1832,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["usage.usages.map((val",{"_index":1831,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["usageabove",{"_index":1788,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["usages",{"_index":927,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["use",{"_index":273,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/MapComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["use_api_url",{"_index":390,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/BaseUrlInterceptor.html":{},"injectables/ConsumersService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["use_base_url",{"_index":513,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["use_cache",{"_index":389,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/CacheInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["use_error_curtain",{"_index":391,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["use_loader",{"_index":768,"title":{},"body":{"injectables/ConsumersService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"interceptors/LoaderInterceptor.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["useclass",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":227,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/BaseUrlInterceptor.html":{},"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"injectables/ErrorService.html":{},"components/IonIconComponent.html":{},"interfaces/LayerData.html":{},"injectables/LoaderService.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"interfaces/Marker.html":{},"guards/QueryParameterGuard.html":{},"components/ResultDataViewComponent.html":{},"interfaces/ShapeData.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["useful",{"_index":2341,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":203,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/FrameComponent.html":{},"components/LoginComponent.html":{},"injectables/SettingsStorageService.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["username",{"_index":376,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["users",{"_index":2007,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["userservice",{"_index":1956,"title":{"injectables/UserService.html":{}},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["userservice.httpoptions",{"_index":2008,"title":{},"body":{"injectables/UserService.html":{}}}],["uses",{"_index":1007,"title":{},"body":{"components/IonIconComponent.html":{},"interfaces/MapDB.html":{},"injectables/MapService.html":{},"interfaces/WisdomInterface.html":{}}}],["using",{"_index":2332,"title":{},"body":{"miscellaneous/functions.html":{}}}],["usually",{"_index":851,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/SanitizeUrlInterceptor.html":{}}}],["utility",{"_index":818,"title":{},"body":{"components/ErrorComponent.html":{},"classes/ModuleProvider.html":{},"miscellaneous/functions.html":{}}}],["val",{"_index":831,"title":{},"body":{"components/ErrorComponent.html":{},"components/ResultDataViewComponent.html":{}}}],["val.error",{"_index":834,"title":{},"body":{"components/ErrorComponent.html":{}}}],["valid",{"_index":206,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["valid.from.toisostring().slice(0",{"_index":2053,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["valid.until.toisostring().slice(0",{"_index":2055,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["validate",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{}}}],["validate(token",{"_index":383,"title":{},"body":{"injectables/AuthService.html":{}}}],["validtostring",{"_index":2018,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["validtostring(data?.valid",{"_index":2072,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["validtostring(valid",{"_index":2021,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["value",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthStorageService.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"interceptors/CacheInterceptor.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"injectables/ErrorService.html":{},"components/LoaderComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"interfaces/MapDB.html":{},"components/MapSelectViewComponent.html":{},"injectables/MapService.html":{},"components/ResultDataViewComponent.html":{},"injectables/SettingsStorageService.html":{},"components/SideBarComponent.html":{},"classes/StaticLoader.html":{},"components/WaterRightDetailComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":445,"title":{},"body":{"injectables/AuthStorageService.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"injectables/SettingsStorageService.html":{},"classes/StaticLoader.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["values(forecast.consumergroup.forecast",{"_index":1843,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["values(forecast.consumergroup.reference",{"_index":1840,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["values(forecast.municipal.forecast",{"_index":1846,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["values(forecast.municipal.reference",{"_index":1845,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["var",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["variable",{"_index":2230,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2449,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1545,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{},"miscellaneous/functions.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["via",{"_index":646,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"components/IonIconComponent.html":{},"components/MapComponent.html":{},"injectables/UserService.html":{}}}],["view",{"_index":1614,"title":{},"body":{"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{}}}],["view'},{'name",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["view.component",{"_index":2193,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{}}}],["view.component.html",{"_index":1615,"title":{},"body":{"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{}}}],["view.component.ts",{"_index":1613,"title":{},"body":{"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"coverage.html":{}}}],["view.component.ts:12",{"_index":1624,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["view.component.ts:14",{"_index":1623,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["view.component.ts:16",{"_index":1619,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["view.component.ts:164",{"_index":1728,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view.component.ts:217",{"_index":1726,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view.component.ts:225",{"_index":1724,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view.component.ts:23",{"_index":1622,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["view.component.ts:243",{"_index":1716,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view.component.ts:249",{"_index":1719,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view.component.ts:28",{"_index":1713,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view.component.ts:31",{"_index":1621,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["view.component.ts:41",{"_index":1739,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view.component.ts:43",{"_index":1742,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view.component.ts:45",{"_index":1741,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view.component.ts:48",{"_index":1743,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view.component.ts:50",{"_index":1734,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view.component.ts:53",{"_index":1745,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view.component.ts:61",{"_index":1732,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view.component.ts:63",{"_index":1730,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view.component.ts:64",{"_index":1729,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view.component.ts:65",{"_index":1740,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view.component.ts:68",{"_index":1737,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view.component.ts:71",{"_index":1736,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view.component.ts:73",{"_index":1722,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view.component.ts:79",{"_index":1749,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view.component.ts:89",{"_index":1747,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view.component.ts:93",{"_index":1721,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view/consumer",{"_index":688,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"coverage.html":{}}}],["view/map",{"_index":1612,"title":{},"body":{"components/MapSelectViewComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"coverage.html":{}}}],["view/result",{"_index":1697,"title":{},"body":{"components/ResultDataViewComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"coverage.html":{}}}],["view/water",{"_index":2015,"title":{},"body":{"components/WaterRightDetailComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"coverage.html":{}}}],["viewchild",{"_index":723,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["viewchild(\"map",{"_index":730,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/MapComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["viewchild(\"passwordinput",{"_index":1233,"title":{},"body":{"components/LoginComponent.html":{}}}],["viewchild('map",{"_index":719,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/MapComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["viewchild('passwordinput",{"_index":1227,"title":{},"body":{"components/LoginComponent.html":{}}}],["views/detail",{"_index":2190,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{}}}],["views/map",{"_index":2192,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{}}}],["views/result",{"_index":2194,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{}}}],["void",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthStorageService.html":{},"components/BreadcrumbsComponent.html":{},"injectables/BreadcrumbsService.html":{},"directives/BulmaIsToggleableDirective.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"injectables/ErrorService.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"directives/LangSelectorDirective.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"interfaces/Marker.html":{},"components/ResultDataViewComponent.html":{},"injectables/SettingsStorageService.html":{},"components/WaterRightDetailComponent.html":{},"miscellaneous/variables.html":{}}}],["volume",{"_index":2112,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["wait",{"_index":277,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{}}}],["want",{"_index":1664,"title":{},"body":{"classes/ModuleProvider.html":{},"miscellaneous/variables.html":{}}}],["warning",{"_index":829,"title":{},"body":{"components/ErrorComponent.html":{}}}],["wasserverbrauch",{"_index":2511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["water",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"miscellaneous/variables.html":{}}}],["waterright",{"_index":2030,"title":{},"body":{"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{}}}],["waterrightdetailcomponent",{"_index":100,"title":{"components/WaterRightDetailComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/ConsumerDetailComponent.html":{},"components/ErrorComponent.html":{},"components/ExampleComponent.html":{},"components/FrameComponent.html":{},"components/IonIconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/SideBarComponent.html":{},"components/WaterRightDetailComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["waterrightdetailrawresponse",{"_index":2151,"title":{},"body":{"injectables/WaterRightsService.html":{},"miscellaneous/typealiases.html":{}}}],["waterrightdetailresponse",{"_index":2024,"title":{},"body":{"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"miscellaneous/typealiases.html":{}}}],["waterrighticon",{"_index":1756,"title":{},"body":{"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["waterrightlocationresponse",{"_index":2149,"title":{},"body":{"injectables/WaterRightsService.html":{},"miscellaneous/typealiases.html":{}}}],["waterrightservice",{"_index":1711,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["waterrightsservice",{"_index":1712,"title":{"injectables/WaterRightsService.html":{}},"body":{"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"coverage.html":{}}}],["waterusageforecastsmodule",{"_index":2180,"title":{"modules/WaterUsageForecastsModule.html":{}},"body":{"modules/WaterUsageForecastsModule.html":{},"index.html":{},"modules.html":{}}}],["waterusageforecastsservice",{"_index":937,"title":{"injectables/WaterUsageForecastsService.html":{}},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/ResultDataViewComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"coverage.html":{}}}],["waterusagehistoryservice",{"_index":706,"title":{"injectables/WaterUsageHistoryService.html":{}},"body":{"components/ConsumerDetailComponent.html":{},"injectables/WaterUsageHistoryService.html":{},"coverage.html":{}}}],["webcomponents",{"_index":1008,"title":{},"body":{"components/IonIconComponent.html":{}}}],["webkit",{"_index":1099,"title":{},"body":{"components/LoaderComponent.html":{}}}],["website",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/IonIconComponent.html":{}}}],["weird",{"_index":1885,"title":{},"body":{"interceptors/SanitizeUrlInterceptor.html":{}}}],["whether",{"_index":586,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/ErrorComponent.html":{},"injectables/ErrorService.html":{},"components/LoaderComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"guards/QueryParameterGuard.html":{},"components/ResultDataViewComponent.html":{}}}],["whole",{"_index":2527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["window",{"_index":2472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["window.location.origin",{"_index":2465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wisdom",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/FrameComponent.html":{},"components/LoginComponent.html":{},"classes/ModuleProvider.html":{},"interfaces/WisdomInterface.html":{},"miscellaneous/variables.html":{}}}],["wisdom_modules/.../auth",{"_index":2450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wisdom_modules/.../auth.interceptor.ts",{"_index":2462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wisdom_modules/.../auth.service.ts",{"_index":2453,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wisdom_modules/.../consumers.service.ts",{"_index":2361,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["wisdom_modules/.../deleteusersid200.ts",{"_index":2363,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../deleteusersid403.ts",{"_index":2365,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../deleteusersid404.ts",{"_index":2367,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../environment.common.ts",{"_index":2458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wisdom_modules/.../environment.prod.ts",{"_index":2454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wisdom_modules/.../environment.ts",{"_index":2455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wisdom_modules/.../getusers200.ts",{"_index":2370,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../getusersid200.ts",{"_index":2372,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../getusersid404.ts",{"_index":2374,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../getusersme200.ts",{"_index":2376,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../invert",{"_index":2457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wisdom_modules/.../layer",{"_index":2368,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../map",{"_index":2456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wisdom_modules/.../map.component.ts",{"_index":2369,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../map.service.ts",{"_index":2451,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wisdom_modules/.../patchusers204.ts",{"_index":2381,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../patchusers403.ts",{"_index":2383,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../patchusers404.ts",{"_index":2385,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../patchusersme200.ts",{"_index":2387,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../postoauthtoken200.ts",{"_index":2388,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../postoauthtoken400.ts",{"_index":2389,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../postoauthtoken401.ts",{"_index":2390,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../postrevoke200.ts",{"_index":2391,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../postrevoke403.ts",{"_index":2393,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../public",{"_index":2464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wisdom_modules/.../putusers201.ts",{"_index":2394,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../putusers409.ts",{"_index":2395,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../resolution.ts",{"_index":2303,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["wisdom_modules/.../routing.ts",{"_index":2461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wisdom_modules/.../settings",{"_index":2459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wisdom_modules/.../side",{"_index":2378,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../static",{"_index":2460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wisdom_modules/.../use",{"_index":2463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wisdom_modules/.../user.service.ts",{"_index":2452,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wisdom_modules/.../user.ts",{"_index":2402,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/.../util.ts",{"_index":2306,"title":{},"body":{"miscellaneous/functions.html":{}}}],["wisdom_modules/.../water",{"_index":2302,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.component.ts",{"_index":556,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"coverage.html":{}}}],["wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.component.ts:19",{"_index":585,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.component.ts:21",{"_index":570,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.component.ts:33",{"_index":582,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.component.ts:48",{"_index":571,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.component.ts:57",{"_index":576,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.service.ts",{"_index":527,"title":{},"body":{"interfaces/Breadcrumb.html":{},"injectables/BreadcrumbsService.html":{},"coverage.html":{}}}],["wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.service.ts:29",{"_index":598,"title":{},"body":{"injectables/BreadcrumbsService.html":{}}}],["wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.service.ts:34",{"_index":599,"title":{},"body":{"injectables/BreadcrumbsService.html":{}}}],["wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.service.ts:44",{"_index":597,"title":{},"body":{"injectables/BreadcrumbsService.html":{}}}],["wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.service.ts:51",{"_index":596,"title":{},"body":{"injectables/BreadcrumbsService.html":{}}}],["wisdom_modules/common/src/lib/bulma/bulma",{"_index":600,"title":{},"body":{"directives/BulmaIsToggleableDirective.html":{},"coverage.html":{}}}],["wisdom_modules/common/src/lib/guards/query",{"_index":1677,"title":{},"body":{"guards/QueryParameterGuard.html":{},"coverage.html":{}}}],["wisdom_modules/common/src/lib/http",{"_index":2237,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["wisdom_modules/common/src/lib/ion",{"_index":1003,"title":{},"body":{"components/IonIconComponent.html":{},"coverage.html":{}}}],["wisdom_modules/common/src/lib/map/invert",{"_index":2241,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["wisdom_modules/common/src/lib/map/layer",{"_index":1048,"title":{},"body":{"interfaces/LayerData.html":{},"interfaces/ShapeData.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts",{"_index":1263,"title":{},"body":{"components/MapComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:131",{"_index":1290,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:139",{"_index":1341,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:145",{"_index":1342,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:150",{"_index":1345,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:153",{"_index":1309,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:156",{"_index":1311,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:160",{"_index":1351,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:163",{"_index":1348,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:170",{"_index":1355,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:176",{"_index":1354,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:178",{"_index":1353,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:181",{"_index":1326,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:185",{"_index":1287,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:196",{"_index":1330,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:226",{"_index":1328,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:352",{"_index":1327,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:53",{"_index":1349,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:56",{"_index":1289,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:58",{"_index":1340,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:61",{"_index":1319,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:63",{"_index":1359,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:66",{"_index":1288,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:68",{"_index":1334,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:71",{"_index":1324,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:73",{"_index":1362,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:79",{"_index":1312,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:82",{"_index":1322,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.component.ts:84",{"_index":1317,"title":{},"body":{"components/MapComponent.html":{}}}],["wisdom_modules/common/src/lib/map/map.service.ts",{"_index":1523,"title":{},"body":{"interfaces/MapDB.html":{},"injectables/MapService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["wisdom_modules/common/src/lib/map/map.service.ts:70",{"_index":1637,"title":{},"body":{"injectables/MapService.html":{}}}],["wisdom_modules/common/src/lib/map/map.service.ts:97",{"_index":1639,"title":{},"body":{"injectables/MapService.html":{}}}],["wisdom_modules/common/src/lib/map/marker.ts",{"_index":1640,"title":{},"body":{"interfaces/Marker.html":{},"coverage.html":{}}}],["wisdom_modules/common/src/lib/map/resolution.ts",{"_index":2244,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["wisdom_modules/common/src/lib/util.ts",{"_index":2247,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["wisdom_modules/common/src/lib/wisdom.module.ts",{"_index":2219,"title":{},"body":{"modules/WisdomModule.html":{}}}],["wisdom_modules/common/src/wisdominterface.ts",{"_index":2208,"title":{},"body":{"interfaces/WisdomInterface.html":{},"coverage.html":{}}}],["wisdom_modules/core/src/app/app",{"_index":180,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["wisdom_modules/core/src/app/app.component.ts",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["wisdom_modules/core/src/app/app.component.ts:13",{"_index":47,"title":{},"body":{"components/AppComponent.html":{}}}],["wisdom_modules/core/src/app/app.component.ts:20",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["wisdom_modules/core/src/app/app.module.ts",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["wisdom_modules/core/src/app/auth/auth",{"_index":430,"title":{},"body":{"injectables/AuthStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["wisdom_modules/core/src/app/auth/auth.guard.ts",{"_index":201,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["wisdom_modules/core/src/app/auth/auth.guard.ts:23",{"_index":219,"title":{},"body":{"guards/AuthGuard.html":{}}}],["wisdom_modules/core/src/app/auth/auth.guard.ts:47",{"_index":237,"title":{},"body":{"guards/AuthGuard.html":{}}}],["wisdom_modules/core/src/app/auth/auth.interceptor.ts",{"_index":326,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["wisdom_modules/core/src/app/auth/auth.interceptor.ts:17",{"_index":331,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["wisdom_modules/core/src/app/auth/auth.interceptor.ts:30",{"_index":335,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["wisdom_modules/core/src/app/auth/auth.service.ts",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["wisdom_modules/core/src/app/auth/auth.service.ts:101",{"_index":378,"title":{},"body":{"injectables/AuthService.html":{}}}],["wisdom_modules/core/src/app/auth/auth.service.ts:41",{"_index":368,"title":{},"body":{"injectables/AuthService.html":{}}}],["wisdom_modules/core/src/app/auth/auth.service.ts:54",{"_index":374,"title":{},"body":{"injectables/AuthService.html":{}}}],["wisdom_modules/core/src/app/auth/auth.service.ts:72",{"_index":384,"title":{},"body":{"injectables/AuthService.html":{}}}],["wisdom_modules/core/src/app/auth/auth.service.ts:84",{"_index":381,"title":{},"body":{"injectables/AuthService.html":{}}}],["wisdom_modules/core/src/app/auth/login/login.component.ts",{"_index":1209,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["wisdom_modules/core/src/app/auth/login/login.component.ts:18",{"_index":1228,"title":{},"body":{"components/LoginComponent.html":{}}}],["wisdom_modules/core/src/app/auth/login/login.component.ts:21",{"_index":1214,"title":{},"body":{"components/LoginComponent.html":{}}}],["wisdom_modules/core/src/app/auth/login/login.component.ts:45",{"_index":1218,"title":{},"body":{"components/LoginComponent.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/login/postoauthtoken200.ts",{"_index":2433,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/login/postoauthtoken400.ts",{"_index":2435,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/login/postoauthtoken401.ts",{"_index":2438,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/login/postrevoke200.ts",{"_index":2440,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/login/postrevoke403.ts",{"_index":2442,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/users/deleteusersid200.ts",{"_index":2403,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/users/deleteusersid403.ts",{"_index":2405,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/users/deleteusersid404.ts",{"_index":2410,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/users/getusers200.ts",{"_index":2413,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/users/getusersid200.ts",{"_index":2414,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/users/getusersid404.ts",{"_index":2416,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/users/getusersme200.ts",{"_index":2417,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/users/patchusers204.ts",{"_index":2427,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/users/patchusers403.ts",{"_index":2430,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/users/patchusers404.ts",{"_index":2431,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/users/patchusersme200.ts",{"_index":2432,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/users/putusers201.ts",{"_index":2443,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/response_types/users/putusers409.ts",{"_index":2445,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/types/user.ts",{"_index":2447,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/auth/user.service.ts",{"_index":1957,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["wisdom_modules/core/src/app/auth/user.service.ts:25",{"_index":1961,"title":{},"body":{"injectables/UserService.html":{}}}],["wisdom_modules/core/src/app/auth/user.service.ts:37",{"_index":1985,"title":{},"body":{"injectables/UserService.html":{}}}],["wisdom_modules/core/src/app/auth/user.service.ts:47",{"_index":1982,"title":{},"body":{"injectables/UserService.html":{}}}],["wisdom_modules/core/src/app/auth/user.service.ts:67",{"_index":1965,"title":{},"body":{"injectables/UserService.html":{}}}],["wisdom_modules/core/src/app/base",{"_index":506,"title":{},"body":{"interceptors/BaseUrlInterceptor.html":{},"coverage.html":{}}}],["wisdom_modules/core/src/app/cache.interceptor.ts",{"_index":642,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"coverage.html":{}}}],["wisdom_modules/core/src/app/cache.interceptor.ts:23",{"_index":659,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["wisdom_modules/core/src/app/cache.interceptor.ts:25",{"_index":662,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["wisdom_modules/core/src/app/cache.interceptor.ts:35",{"_index":652,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["wisdom_modules/core/src/app/frame/error/error.component.ts",{"_index":790,"title":{},"body":{"components/ErrorComponent.html":{},"coverage.html":{}}}],["wisdom_modules/core/src/app/frame/error/error.component.ts:17",{"_index":814,"title":{},"body":{"components/ErrorComponent.html":{}}}],["wisdom_modules/core/src/app/frame/error/error.component.ts:20",{"_index":812,"title":{},"body":{"components/ErrorComponent.html":{}}}],["wisdom_modules/core/src/app/frame/error/error.component.ts:22",{"_index":813,"title":{},"body":{"components/ErrorComponent.html":{}}}],["wisdom_modules/core/src/app/frame/error/error.component.ts:24",{"_index":809,"title":{},"body":{"components/ErrorComponent.html":{}}}],["wisdom_modules/core/src/app/frame/error/error.component.ts:26",{"_index":811,"title":{},"body":{"components/ErrorComponent.html":{}}}],["wisdom_modules/core/src/app/frame/error/error.component.ts:28",{"_index":810,"title":{},"body":{"components/ErrorComponent.html":{}}}],["wisdom_modules/core/src/app/frame/error/error.component.ts:34",{"_index":817,"title":{},"body":{"components/ErrorComponent.html":{}}}],["wisdom_modules/core/src/app/frame/error/error.component.ts:41",{"_index":802,"title":{},"body":{"components/ErrorComponent.html":{}}}],["wisdom_modules/core/src/app/frame/error/error.component.ts:71",{"_index":807,"title":{},"body":{"components/ErrorComponent.html":{}}}],["wisdom_modules/core/src/app/frame/error/error.interceptor.ts",{"_index":843,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"coverage.html":{}}}],["wisdom_modules/core/src/app/frame/error/error.interceptor.ts:21",{"_index":847,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["wisdom_modules/core/src/app/frame/error/error.interceptor.ts:34",{"_index":849,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["wisdom_modules/core/src/app/frame/error/error.service.ts",{"_index":869,"title":{},"body":{"injectables/ErrorService.html":{},"coverage.html":{}}}],["wisdom_modules/core/src/app/frame/error/error.service.ts:13",{"_index":873,"title":{},"body":{"injectables/ErrorService.html":{}}}],["wisdom_modules/core/src/app/frame/error/error.service.ts:35",{"_index":881,"title":{},"body":{"injectables/ErrorService.html":{}}}],["wisdom_modules/core/src/app/frame/error/error.ts",{"_index":782,"title":{},"body":{"interfaces/Error.html":{},"coverage.html":{}}}],["wisdom_modules/core/src/app/frame/frame.component.ts",{"_index":949,"title":{},"body":{"components/FrameComponent.html":{},"coverage.html":{}}}],["wisdom_modules/core/src/app/frame/frame.component.ts:19",{"_index":961,"title":{},"body":{"components/FrameComponent.html":{}}}],["wisdom_modules/core/src/app/frame/frame.component.ts:36",{"_index":969,"title":{},"body":{"components/FrameComponent.html":{}}}],["wisdom_modules/core/src/app/frame/frame.component.ts:40",{"_index":974,"title":{},"body":{"components/FrameComponent.html":{}}}],["wisdom_modules/core/src/app/frame/frame.component.ts:45",{"_index":976,"title":{},"body":{"components/FrameComponent.html":{}}}],["wisdom_modules/core/src/app/frame/frame.component.ts:49",{"_index":979,"title":{},"body":{"components/FrameComponent.html":{}}}],["wisdom_modules/core/src/app/frame/frame.component.ts:54",{"_index":965,"title":{},"body":{"components/FrameComponent.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.component.ts",{"_index":1069,"title":{},"body":{"components/LoaderComponent.html":{},"coverage.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.component.ts:16",{"_index":1083,"title":{},"body":{"components/LoaderComponent.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.component.ts:25",{"_index":1088,"title":{},"body":{"components/LoaderComponent.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.component.ts:27",{"_index":1087,"title":{},"body":{"components/LoaderComponent.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.component.ts:33",{"_index":1086,"title":{},"body":{"components/LoaderComponent.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.guard.ts",{"_index":1134,"title":{},"body":{"guards/LoaderGuard.html":{},"coverage.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.guard.ts:19",{"_index":1139,"title":{},"body":{"guards/LoaderGuard.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.guard.ts:28",{"_index":1142,"title":{},"body":{"guards/LoaderGuard.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.guard.ts:34",{"_index":1144,"title":{},"body":{"guards/LoaderGuard.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.interceptor.ts",{"_index":1147,"title":{},"body":{"interceptors/LoaderInterceptor.html":{},"coverage.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.interceptor.ts:23",{"_index":1150,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.interceptor.ts:39",{"_index":1151,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.service.ts",{"_index":1166,"title":{},"body":{"injectables/LoaderService.html":{},"coverage.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.service.ts:17",{"_index":1191,"title":{},"body":{"injectables/LoaderService.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.service.ts:22",{"_index":1184,"title":{},"body":{"injectables/LoaderService.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.service.ts:27",{"_index":1189,"title":{},"body":{"injectables/LoaderService.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.service.ts:30",{"_index":1194,"title":{},"body":{"injectables/LoaderService.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.service.ts:38",{"_index":1186,"title":{},"body":{"injectables/LoaderService.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.service.ts:40",{"_index":1196,"title":{},"body":{"injectables/LoaderService.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.service.ts:49",{"_index":1178,"title":{},"body":{"injectables/LoaderService.html":{}}}],["wisdom_modules/core/src/app/frame/loader/loader.service.ts:67",{"_index":1183,"title":{},"body":{"injectables/LoaderService.html":{}}}],["wisdom_modules/core/src/app/frame/side",{"_index":1923,"title":{},"body":{"components/SideBarComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["wisdom_modules/core/src/app/i18n/lang",{"_index":1034,"title":{},"body":{"directives/LangSelectorDirective.html":{},"coverage.html":{}}}],["wisdom_modules/core/src/app/i18n/static",{"_index":1930,"title":{},"body":{"classes/StaticLoader.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["wisdom_modules/core/src/app/module",{"_index":1648,"title":{},"body":{"classes/ModuleProvider.html":{},"coverage.html":{}}}],["wisdom_modules/core/src/app/sanitize",{"_index":1883,"title":{},"body":{"interceptors/SanitizeUrlInterceptor.html":{},"coverage.html":{}}}],["wisdom_modules/core/src/app/settings",{"_index":1903,"title":{},"body":{"injectables/SettingsStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["wisdom_modules/core/src/environments/environment.common.ts",{"_index":2253,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["wisdom_modules/core/src/environments/environment.prod.ts",{"_index":2254,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["wisdom_modules/core/src/environments/environment.ts",{"_index":2256,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["wisdom_modules/example/src/lib/example.component.ts",{"_index":889,"title":{},"body":{"components/ExampleComponent.html":{},"coverage.html":{}}}],["wisdom_modules/example/src/lib/example.module.ts",{"_index":900,"title":{},"body":{"modules/ExampleModule.html":{}}}],["wisdom_modules/example/src/lib/example.service.ts",{"_index":903,"title":{},"body":{"injectables/ExampleService.html":{},"coverage.html":{}}}],["wisdom_modules/example/src/public",{"_index":2257,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["wisdom_modules/water",{"_index":685,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["wisdominterface",{"_index":2207,"title":{"interfaces/WisdomInterface.html":{}},"body":{"interfaces/WisdomInterface.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["wisdommodule",{"_index":122,"title":{"modules/WisdomModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ExampleModule.html":{},"modules/WaterUsageForecastsModule.html":{},"modules/WisdomModule.html":{},"index.html":{},"modules.html":{}}}],["without",{"_index":352,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/MapComponent.html":{}}}],["work",{"_index":1026,"title":{},"body":{"components/IonIconComponent.html":{}}}],["workspace",{"_index":1927,"title":{},"body":{"components/SideBarComponent.html":{},"properties.html":{}}}],["workspace's",{"_index":1652,"title":{},"body":{"classes/ModuleProvider.html":{}}}],["wrong",{"_index":2004,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["www",{"_index":406,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["x",{"_index":405,"title":{},"body":{"injectables/AuthService.html":{},"components/ResultDataViewComponent.html":{},"miscellaneous/variables.html":{}}}],["y",{"_index":1130,"title":{},"body":{"components/LoaderComponent.html":{},"components/ResultDataViewComponent.html":{}}}],["year",{"_index":744,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["yes",{"_index":1181,"title":{},"body":{"injectables/LoaderService.html":{},"injectables/MapService.html":{},"injectables/UserService.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/functions.html":{}}}],["you're",{"_index":285,"title":{},"body":{"guards/AuthGuard.html":{}}}],["yourself",{"_index":2529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z",{"_index":1124,"title":{},"body":{"components/LoaderComponent.html":{}}}],["zeitraum",{"_index":1877,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["zone.js",{"_index":2298,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"modules/ExampleModule.html":{},"components/MapComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"modules/WisdomModule.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    wisdom_modules/core/src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component of the app, the main entry point for angular.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/app.component.ts:20\n                \n            \n\n\n            \n                \n                    On init this sets the Default image path for Leaflet.\nThis also registers the AnnotationPlugin for chart.js.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"WISdoM-OSS\"\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/core/src/app/app.component.ts:13\n                        \n                    \n\n            \n                \n                    The title of the website.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from \"@angular/core\";\nimport {Chart} from \"chart.js\";\nimport AnnotationPlugin from \"chartjs-plugin-annotation\";\nimport {Icon} from \"leaflet\";\n\n/** Component of the app, the main entry point for angular. */\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\"\n})\nexport class AppComponent implements OnInit {\n  /** The title of the website. */\n  title = \"WISdoM-OSS\";\n\n  /**\n   * On init this sets the Default image path for Leaflet.\n   *\n   * This also registers the {@link AnnotationPlugin} for chart.js.\n   */\n  ngOnInit(): void {\n    Icon.Default.imagePath = \"assets/leaflet/images/\";\n    Chart.register(AnnotationPlugin);\n  }\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'breadcrumbs'},{'name': 'ConsumerDetailComponent', 'selector': 'lib-consumer-detail'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'ExampleComponent', 'selector': ''},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IonIconComponent', 'selector': 'ion-icon'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'map'},{'name': 'MapSelectViewComponent', 'selector': 'lib-map-select-view'},{'name': 'ResultDataViewComponent', 'selector': 'lib-result-data-view'},{'name': 'SideBarComponent', 'selector': 'app-side-bar'},{'name': 'WaterRightDetailComponent', 'selector': 'lib-water-right-detail'}];\n    var DIRECTIVES = [{'name': 'BulmaIsToggleableDirective', 'selector': '.is-toggleable'},{'name': 'LangSelectorDirective', 'selector': '[selectLang]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nErrorComponent\n\nErrorComponent\n\nAppModule -->\n\nErrorComponent->AppModule\n\n\n\n\n\nFrameComponent\n\nFrameComponent\n\nAppModule -->\n\nFrameComponent->AppModule\n\n\n\n\n\nLangSelectorDirective\n\nLangSelectorDirective\n\nAppModule -->\n\nLangSelectorDirective->AppModule\n\n\n\n\n\nLoaderComponent\n\nLoaderComponent\n\nAppModule -->\n\nLoaderComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nSideBarComponent\n\nSideBarComponent\n\nAppModule -->\n\nSideBarComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nWisdomModule\n\nWisdomModule\n\nAppModule -->\n\nWisdomModule->AppModule\n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nAppModule -->\n\nAuthInterceptor->AppModule\n\n\n\n\n\nBaseUrlInterceptor\n\nBaseUrlInterceptor\n\nAppModule -->\n\nBaseUrlInterceptor->AppModule\n\n\n\n\n\nCacheInterceptor\n\nCacheInterceptor\n\nAppModule -->\n\nCacheInterceptor->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\nLoaderInterceptor\n\nLoaderInterceptor\n\nAppModule -->\n\nLoaderInterceptor->AppModule\n\n\n\n\n\nSanitizeUrlInterceptor\n\nSanitizeUrlInterceptor\n\nAppModule -->\n\nSanitizeUrlInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            wisdom_modules/core/src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            ErrorComponent\n                        \n                        \n                            FrameComponent\n                        \n                        \n                            LangSelectorDirective\n                        \n                        \n                            LoaderComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            SideBarComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AuthInterceptor\n                        \n                        \n                            BaseUrlInterceptor\n                        \n                        \n                            CacheInterceptor\n                        \n                        \n                            ErrorInterceptor\n                        \n                        \n                            LoaderInterceptor\n                        \n                        \n                            SanitizeUrlInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            WisdomModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {HttpClientModule, HTTP_INTERCEPTORS} from \"@angular/common/http\";\nimport {NgModule} from \"@angular/core\";\nimport {FormsModule} from \"@angular/forms\";\nimport {BrowserModule} from \"@angular/platform-browser\";\nimport {TranslateLoader, TranslateModule} from \"@ngx-translate/core\";\nimport {WisdomModule} from \"common\";\n\nimport {AppRoutingModule} from \"./app-routing.module\";\nimport {AppComponent} from \"./app.component\";\nimport {LoginComponent} from \"./auth/login/login.component\";\nimport {AuthInterceptor} from \"./auth/auth.interceptor\";\nimport {BaseUrlInterceptor} from \"./base-url.interceptor\";\nimport {ErrorComponent} from \"./frame/error/error.component\";\nimport {FrameComponent} from \"./frame/frame.component\";\nimport {SideBarComponent} from \"./frame/side-bar/side-bar.component\";\nimport {LangSelectorDirective} from \"./i18n/lang-selector.directive\";\nimport {StaticLoader} from \"./i18n/static-loader\";\nimport {CacheInterceptor} from \"./cache.interceptor\";\nimport {LoaderComponent} from \"./frame/loader/loader.component\";\nimport {LoaderInterceptor} from \"./frame/loader/loader.interceptor\";\nimport {SanitizeUrlInterceptor} from \"./sanitize-url.interceptor\";\nimport {ErrorInterceptor} from \"./frame/error/error.interceptor\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    FrameComponent,\n    LangSelectorDirective,\n    SideBarComponent,\n    ErrorComponent,\n    LoaderComponent\n  ],\n  imports: [\n    WisdomModule,\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    TranslateModule.forRoot({\n      defaultLanguage: globalThis.localStorage.getItem(\"lang\") || \"en_US\",\n      loader: {\n        provide: TranslateLoader,\n        useClass: StaticLoader\n      }\n    })\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ErrorInterceptor,\n      multi: true\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: LoaderInterceptor,\n      multi: true\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: BaseUrlInterceptor,\n      multi: true\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: CacheInterceptor,\n      multi: true\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: SanitizeUrlInterceptor,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            wisdom_modules/core/src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from \"@angular/core\";\nimport {RouterModule, Routes} from \"@angular/router\";\n\nimport {LoginComponent} from \"./auth/login/login.component\";\nimport {AuthGuard} from \"./auth/auth.guard\";\nimport {FrameComponent} from \"./frame/frame.component\";\nimport {ModuleProvider} from \"./module-provider\";\nimport {LoaderGuard} from \"./frame/loader/loader.guard\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: FrameComponent,\n    canActivate: [AuthGuard, LoaderGuard],\n    children: \"ModuleProvider.routes()\"\n  },\n  {path: \"login\", component: LoginComponent, canActivate: [LoaderGuard]},\n  {path: \"**\", redirectTo: \"\"}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                wisdom_modules/core/src/app/auth/auth.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard checking if the user is signed in, it needs to have a valid access\ntoken to browser further.\nAlso tries to refresh the token if the old one is not valid.\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authStorage: AuthStorageService, authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/core/src/app/auth/auth.guard.ts:23\n                            \n                        \n\n                \n                    \n                            Constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authStorage\n                                                  \n                                                        \n                                                                        AuthStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The storage containing the tokens\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The service used to interact with the auth server\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The router to route to the login if necessary\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/auth/auth.guard.ts:47\n                \n            \n\n\n            \n                \n                    Method deciding if a user is allowed to navigate to the requested route.\nThis one checks if the current token is still valid.\nIf the token is not valid it tries to refresh the token.\nIf no refreshing is the possible the route will be set to the login page.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | UrlTree | boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {Injectable} from \"@angular/core\";\nimport {\n  CanActivate,\n  Router,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree\n} from \"@angular/router\";\nimport {throwError, Observable} from \"rxjs\";\n\nimport {AuthStorageService} from \"./auth-storage.service\";\nimport {AuthService} from \"./auth.service\";\n\n/**\n * Guard checking if the user is signed in, it needs to have a valid access\n * token to browser further.\n *\n * Also tries to refresh the token if the old one is not valid.\n */\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AuthGuard implements CanActivate {\n\n  /**\n   * Constructor.\n   * @param authStorage The storage containing the tokens\n   * @param authService The service used to interact with the auth server\n   * @param router The router to route to the login if necessary\n   */\n  constructor(\n    private authStorage: AuthStorageService,\n    private authService: AuthService,\n    private router: Router\n  ) {}\n\n  /**\n   * Method deciding if a user is allowed to navigate to the requested route.\n   *\n   * This one checks if the current token is still valid.\n   * If the token is not valid it tries to refresh the token.\n   * If no refreshing is the possible the route will be set to the login page.\n   *\n   * @param route\n   * @param state\n   */\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable | UrlTree | boolean {\n    // ignore login path per se\n    if (route.url[0]?.path === \"login\") return true;\n    let loginUrlTree = this.router.parseUrl(\"/login\");\n    if (!state.url.includes(\"login\")) {\n      loginUrlTree.queryParams = {returnUrl: state.url};\n    }\n\n    // if no token is available the use can't be logged in\n    let token = this.authStorage.accessToken;\n    if (!token) return loginUrlTree;\n\n    // wait for the server to reply with a token check\n    return new Observable(subscriber => {\n      this.authService.validate(token!).subscribe({\n        next: response => {\n          // token is valid, you're ready to go\n          subscriber.next(true);\n          subscriber.complete();\n        },\n\n        error: errResponse => {\n          /**\n           * Small function to avoid code depletes.\n           * Clears the auth storage and sends the user to the login page.\n           */\n          let returnToLogin = () => {\n            this.authStorage.clear();\n            subscriber.next(loginUrlTree);\n            subscriber.complete();\n          };\n\n          if (this.authStorage.refreshToken) {\n            // if a refresh token is present, try to refresh\n            this.authService.refresh(this.authStorage.refreshToken).subscribe({\n              next: refreshResponse => {\n                // refresh token was valid, update with new data\n                this.authStorage.accessToken = refreshResponse.access_token;\n                this.authStorage.refreshToken = refreshResponse.refresh_token;\n                this.authStorage.scopes = refreshResponse.scope;\n                this.authStorage.expiresIn = refreshResponse.expires_in;\n                subscriber.next(true);\n                subscriber.complete();\n                return;\n              },\n\n              error: refreshErrResponse => {\n                // token is no valid, send the user to the login page\n                if (refreshErrResponse.status === 400) return returnToLogin();\n                // TODO: handle non-400 status codes gracefully\n                else return returnToLogin();\n              }\n            });\n            return;\n          }\n\n          return returnToLogin();\n        }\n      });\n    });\n  }\n\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AuthInterceptor.html":{"url":"interceptors/AuthInterceptor.html","title":"interceptor - AuthInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  AuthInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/core/src/app/auth/auth.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                Interceptor to inject the authorization token into every request.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authStorage: AuthStorageService)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/core/src/app/auth/auth.interceptor.ts:17\n                            \n                        \n\n                \n                    \n                            Constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authStorage\n                                                  \n                                                        \n                                                                        AuthStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The storage containing the tokens to inject\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/auth/auth.interceptor.ts:30\n                \n            \n\n\n            \n                \n                    Injects the token as Bearer authentication into a HttpRequest\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The request the token should be injected in\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The next handler to operate on the request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest\n} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\nimport {tap, Observable} from \"rxjs\";\n\nimport {AuthStorageService} from \"./auth-storage.service\";\n\n/** Key for the token. */\nconst TOKEN_HEADER_KEY = \"Authorization\";\n\n/** Interceptor to inject the authorization token into every request. */\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  /**\n   * Constructor.\n   * @param authStorage The storage containing the tokens to inject\n   */\n  constructor(private authStorage: AuthStorageService) {}\n\n  /**\n   * Injects the token as Bearer authentication into a HttpRequest\n   * @param request The request the token should be injected in\n   * @param next The next handler to operate on the request\n   */\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    let authRequest = request;\n    const token = this.authStorage.accessToken;\n    if (token) {\n      authRequest = request.clone({\n        // this updates the header without removing every other header\n        headers: request.headers.set(TOKEN_HEADER_KEY, \"Bearer \" + token)\n      });\n    }\n    return next.handle(authRequest).pipe(tap(event => {\n      // TODO: handle if the event is 401\n    }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/core/src/app/auth/auth.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service handling the OAuth interaction.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                refresh\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/core/src/app/auth/auth.service.ts:41\n                            \n                        \n\n                \n                    \n                            Constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                For making requests with the auth server\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/auth/auth.service.ts:54\n                \n            \n\n\n            \n                \n                    Logs the user in.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Username of the user\n\n                                    \n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Password of the user\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout(token: string)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/auth/auth.service.ts:101\n                \n            \n\n\n            \n                \n                    Revokes the token.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Token of the user\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refresh\n                        \n                    \n                \n            \n            \n                \nrefresh(token: string)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/auth/auth.service.ts:84\n                \n            \n\n\n            \n                \n                    Refreshes the current token.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Refresh token\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(token: string)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/auth/auth.service.ts:72\n                \n            \n\n\n            \n                \n                    Checks if the given token is valid.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Token to check\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpClient,\n  HttpContext,\n  HttpHeaders,\n  HttpParams\n} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\nimport {USE_CACHE, USE_API_URL, USE_ERROR_CURTAIN} from \"common\";\nimport {join} from \"path-browserify\";\nimport {Observable} from \"rxjs\";\n\nimport PostOAuthToken200 from \"./response_types/login/PostOAuthToken200\";\nimport PostRevoke200 from \"./response_types/login/PostRevoke200\";\n\n/** Url for the interaction. */\nconst AUTH_URL = \"auth\";\n\n/**\n * Options for the post request in the service.\n * As per reference the content type is always \"x-www-form-urlencoded\" instead\n * of \"json\".\n * The response is a json though.\n */\nconst httpOptions: Parameters[2] = {\n  headers: new HttpHeaders({\n    \"Content-Type\": \"application/x-www-form-urlencoded\"\n  }),\n  responseType: \"json\",\n  context: new HttpContext()\n    .set(USE_API_URL, true)\n    .set(USE_CACHE, false)\n    .set(USE_ERROR_CURTAIN, false)\n}\n\n/**\n * Service handling the OAuth interaction.\n */\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AuthService {\n\n  /**\n   * Constructor.\n   * @param http For making requests with the auth server\n   */\n  constructor(private http: HttpClient) {}\n\n  /**\n   * Logs the user in.\n   * @param username Username of the user\n   * @param password Password of the user\n   */\n  login(username: string, password: string) {\n    return this.http.post(\n      join(AUTH_URL, \"oauth/token\"),\n      new HttpParams({\n        fromObject: {\n          grant_type: \"password\",\n          username,\n          password\n        }\n      }),\n      httpOptions\n    ) as Observable;\n  }\n\n  /**\n   * Checks if the given token is valid.\n   * @param token Token to check\n   */\n  validate(token: string) {\n    return this.http.post(\n      join(AUTH_URL, \"oauth/check_token\"),\n      new HttpParams({fromObject: {token}}),\n      httpOptions\n    );\n  }\n\n  /**\n   * Refreshes the current token.\n   * @param token Refresh token\n   */\n  refresh(token: string) {\n    return this.http.post(\n      join(AUTH_URL, \"oauth/token\"),\n      new HttpParams({\n        fromObject: {\n          grant_type: \"refresh_token\",\n          refresh_token: token\n        }\n      }),\n      httpOptions\n    ) as Observable;\n  }\n\n  /**\n   * Revokes the token.\n   * @param token Token of the user\n   */\n  logout(token: string) {\n    return this.http.post(\n      join(AUTH_URL, \"oauth/revoke\"),\n      new HttpParams({fromObject: {\n        token\n      }}),\n      httpOptions\n    ) as Observable;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthStorageService.html":{"url":"injectables/AuthStorageService.html","title":"injectable - AuthStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/core/src/app/auth/auth-storage.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Class for storing the data received from the auth server.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                    Private\n                                    Static\n                                getStorage\n                            \n                            \n                                    Private\n                                    Static\n                                setStorage\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    accessToken\n                                \n                                \n                                    expiresIn\n                                \n                                \n                                    refreshToken\n                                \n                                \n                                    scopes\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/auth/auth-storage.service.ts:21\n                \n            \n\n\n            \n                \n                    Clears the session storage from the values stored by this service.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        getStorage\n                        \n                    \n                \n            \n            \n                \n                    \n                    getStorage(key: string)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/auth/auth-storage.service.ts:38\n                \n            \n\n\n            \n                \n                    Internal function to get session storage values.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        setStorage\n                        \n                    \n                \n            \n            \n                \n                    \n                    setStorage(data: string | null | undefined, key: string)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/auth/auth-storage.service.ts:33\n                \n            \n\n\n            \n                \n                    Internal function to set session storage values.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            string | null | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        accessToken\n                    \n                \n\n                \n                    \n                        getaccessToken()\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/auth/auth-storage.service.ts:54\n                                \n                            \n                    \n                        \n                                Get the access token.\n\n\n                                \n                                \n                        \n                    \n\n                \n                    \n                        setaccessToken(token: string | null | undefined)\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/auth/auth-storage.service.ts:46\n                                \n                            \n                    \n                        \n                                Set the access token.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            token\n                                                    \n                                                            \n                                                                        string | null | undefined\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    May be a nullish value or the token\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        expiresIn\n                    \n                \n\n                \n                    \n                        getexpiresIn()\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/auth/auth-storage.service.ts:70\n                                \n                            \n                    \n                        \n                                Returns the expiration date.\n\n\n                                \n                                \n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n                \n                    \n                        setexpiresIn(unixTime: number | string | null | undefined)\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/auth/auth-storage.service.ts:62\n                                \n                            \n                    \n                        \n                                Set the expiration date.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            unixTime\n                                                    \n                                                            \n                                                                        number | string | null | undefined\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    May be a nullish value or the unix time as number or string\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        refreshToken\n                    \n                \n\n                \n                    \n                        getrefreshToken()\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/auth/auth-storage.service.ts:88\n                                \n                            \n                    \n                        \n                                Get the refresh token.\n\n\n                                \n                                \n                        \n                    \n\n                \n                    \n                        setrefreshToken(token: string | null | undefined)\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/auth/auth-storage.service.ts:80\n                                \n                            \n                    \n                        \n                                Set the refresh token.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            token\n                                                    \n                                                            \n                                                                        string | null | undefined\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    May be a nullish value or the token\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        scopes\n                    \n                \n\n                \n                    \n                        getscopes()\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/auth/auth-storage.service.ts:104\n                                \n                            \n                    \n                        \n                                Get the scopes.\n\n\n                                \n                                \n                        \n                    \n\n                \n                    \n                        setscopes(scopes: string | null | undefined)\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/auth/auth-storage.service.ts:96\n                                \n                            \n                    \n                        \n                                Sets the scopes.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            scopes\n                                                    \n                                                            \n                                                                        string | null | undefined\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    May be a nullish value or the scopes\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\n\n/** Key for the access token. */\nconst ACCESS_TOKEN_KEY = \"auth-token\";\n/** Key fo the expiration date. */\nconst EXPIRES_IN_KEY = \"auth-expires-in\";\n/** Key for the refresh token. */\nconst REFRESH_TOKEN_KEY = \"auth-refresh-token\";\n/** Key for the scopes. */\nconst SCOPES_KEY = \"auth-scopes\";\n\n/** Class for storing the data received from the auth server. */\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AuthStorageService {\n\n  // TODO: doc the getter and setter when https://github.com/microsoft/tsdoc/issues/308 is closed\n\n  /** Clears the session storage from the values stored by this service. */\n  clear(): void {\n    for (let key of [\n      ACCESS_TOKEN_KEY,\n      REFRESH_TOKEN_KEY,\n      EXPIRES_IN_KEY,\n      SCOPES_KEY\n    ]) {\n      globalThis.sessionStorage.removeItem(key);\n    }\n  }\n\n  /** Internal function to set session storage values. */\n  private static setStorage(data: string | null | undefined, key: string) {\n    if (data) globalThis.sessionStorage.setItem(key, data);\n    else globalThis.sessionStorage.removeItem(key);\n  }\n  /** Internal function to get session storage values. */\n  private static getStorage(key: string) {\n    return globalThis.sessionStorage.getItem(key);\n  }\n\n  /**\n   * Set the access token.\n   * @param token May be a nullish value or the token\n   */\n  set accessToken(token: string | null | undefined) {\n    AuthStorageService.setStorage(token, ACCESS_TOKEN_KEY);\n  }\n\n  /**\n   * Get the access token.\n   * @returns A nullish value or the token\n   */\n  get accessToken() {\n    return AuthStorageService.getStorage(ACCESS_TOKEN_KEY);\n  }\n\n  /**\n   * Set the expiration date.\n   * @param unixTime May be a nullish value or the unix time as number or string\n   */\n  set expiresIn(unixTime: number | string | null | undefined) {\n    AuthStorageService.setStorage(`${unixTime}`, EXPIRES_IN_KEY);\n  }\n\n  /**\n   * Returns the expiration date.\n   * @returns The date is unix timestamp or NaN\n   */\n  get expiresIn(): number {\n    let expiresIn = AuthStorageService.getStorage(EXPIRES_IN_KEY);\n    if (expiresIn) return parseInt(expiresIn);\n    return NaN;\n  }\n\n  /**\n   * Set the refresh token.\n   * @param token May be a nullish value or the token\n   */\n  set refreshToken(token: string | null | undefined) {\n    AuthStorageService.setStorage(token, REFRESH_TOKEN_KEY);\n  }\n\n  /**\n   * Get the refresh token.\n   * @returns A nullish value or the token\n   */\n  get refreshToken() {\n    return AuthStorageService.getStorage(REFRESH_TOKEN_KEY);\n  }\n\n  /**\n   * Sets the scopes.\n   * @param scopes May be a nullish value or the scopes\n   */\n  set scopes(scopes: string | null | undefined) {\n    AuthStorageService.setStorage(scopes, SCOPES_KEY);\n  }\n\n  /**\n   * Get the scopes.\n   * @returns The scopes divided by \" \" or a nullish value\n   */\n  get scopes() {\n    return AuthStorageService.getStorage(SCOPES_KEY);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/BaseUrlInterceptor.html":{"url":"interceptors/BaseUrlInterceptor.html","title":"interceptor - BaseUrlInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  BaseUrlInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/core/src/app/base-url.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                Class used to prepend the base url to requests.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/base-url.interceptor.ts:23\n                \n            \n\n\n            \n                \n                    Prepends the base url from the environment to request url\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Request to prepend the url\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The next handler\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n  HttpContextToken\n} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\nimport {USE_BASE_URL, USE_API_URL} from \"common\";\nimport {Observable} from \"rxjs\";\n\nimport {environment} from \"../environments/environment\";\n\n/** Class used to prepend the base url to requests. */\n@Injectable()\nexport class BaseUrlInterceptor implements HttpInterceptor {\n\n  /**\n   * Prepends the base url from the environment to request url\n   * @param request Request to prepend the url\n   * @param next The next handler\n   */\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    let prependUrl = \"\";\n    if (request.context.get(USE_BASE_URL)) prependUrl = environment.baseUrl;\n    if (request.context.get(USE_API_URL)) prependUrl = environment.apiUrl;\n    return next.handle(\n      // prepend the api url with the base url from the environment\n      request.clone({url: prependUrl +  request.url})\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Breadcrumb.html":{"url":"interfaces/Breadcrumb.html","title":"interface - Breadcrumb","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Breadcrumb\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Breadcrumb fragment interface.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            link\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            query\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional icon name to be displayed on the left of the fragment name.\nThis will use an IonIconComponent for the icon.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        link:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Router link to be set for the fragment.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        query\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        query:         Params\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Params\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional query parameters for the router link.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:     string | string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    String or array of strings to be displayed as fragment.\nEvery element will be passed to the TranslateService.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\nimport {Params, ActivatedRouteSnapshot, UrlTree} from \"@angular/router\";\nimport {Observable, BehaviorSubject, Subject} from \"rxjs\";\n\n/** Breadcrumb fragment interface. */\nexport interface Breadcrumb {\n  /**\n   * Optional icon name to be displayed on the left of the fragment name.\n   * This will use an {@link IonIconComponent} for the icon.\n   */\n  icon?: string,\n  /**\n   * String or array of strings to be displayed as fragment.\n   * Every element will be passed to the {@link TranslateService}.\n   */\n  text: string | string[],\n  /** Router link to be set for the fragment. */\n  link: string,\n  /** Optional query parameters for the router link. */\n  query?: Params\n}\n\n/** Service collecting the breadcrumbs. */\n@Injectable({\n  providedIn: 'root'\n})\nexport class BreadcrumbsService {\n  /** List of breadcrumbs. */\n  fragments: Breadcrumb[] = [];\n  /**\n   * {@link Subject} for the {@link Breadcrumb}s, to be used as\n   * {@link Observable}.\n   */\n  private subject: BehaviorSubject\n    = new BehaviorSubject([]);\n\n  /**\n   * Set a new breadcrumb fragment.\n   *\n   * This removes all fragments with a higher index than the set one.\n   * @param index Index of the breadcrumb array\n   * @param value Breadcrumb fragment to display\n   */\n  set(index: number, value: Breadcrumb) {\n    this.fragments.length = index + 1;\n    this.fragments[index] = value;\n    this.subject.next(this.fragments);\n  }\n\n  /** Observe the breadcrumb fragments. */\n  observe(): Observable {\n    return this.subject.asObservable();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BreadcrumbsComponent.html":{"url":"components/BreadcrumbsComponent.html","title":"component - BreadcrumbsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BreadcrumbsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component to display breadcrumbs collected by the BreadcrumbsService.\nThis will display a slash separated row with all breadcrumb fragments.\nThe one the most right is considered the current page and is therefore not\nclickable.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                breadcrumbs\n            \n\n\n\n\n            \n                templateUrl\n                ./breadcrumbs.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                alive\n                            \n                            \n                                fragments\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isAllSet\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: BreadcrumbsService)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.component.ts:21\n                            \n                        \n\n                \n                    \n                            Constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        BreadcrumbsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to get breadcrumb fragments from\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isAllSet\n                        \n                    \n                \n            \n            \n                \nisAllSet()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.component.ts:48\n                \n            \n\n\n            \n                \n                    Check if all fragments up to the most right are set.\nIf one is undefined this will return false.\nThis allows ensuring that only fully defined breadcrumbs will be displayed.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.component.ts:57\n                \n            \n\n\n            \n                \n                    On destroy set alive to false.\nThis makes sure that the component does not live as long as the service.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.component.ts:33\n                \n            \n\n\n            \n                \n                    Upon init this will observe the service and update the breadcrumbs if\nneeded.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        alive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.component.ts:19\n                        \n                    \n\n            \n                \n                    Whether this component is alive.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fragments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         (Breadcrumb | undefined)[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.component.ts:21\n                        \n                    \n\n            \n                \n                    Breadcrumb fragments that will be displayed.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from \"@angular/core\";\nimport {takeWhile} from \"rxjs\";\n\nimport {Breadcrumb, BreadcrumbsService} from \"./breadcrumbs.service\";\n\n/**\n * Component to display breadcrumbs collected by the {@link BreadcrumbsService}.\n *\n * This will display a slash separated row with all breadcrumb fragments.\n * The one the most right is considered the current page and is therefore not\n * clickable.\n */\n@Component({\n  selector: 'breadcrumbs',\n  templateUrl: './breadcrumbs.component.html'\n})\nexport class BreadcrumbsComponent implements OnInit, OnDestroy {\n  /** Whether this component is alive. */\n  private alive: boolean = true;\n  /** Breadcrumb fragments that will be displayed. */\n  fragments: (Breadcrumb | undefined)[] = [];\n\n  /**\n   * Constructor.\n   * @param service Service to get breadcrumb fragments from\n   */\n  constructor(private service: BreadcrumbsService) { }\n\n  /**\n   * Upon init this will observe the service and update the breadcrumbs if\n   * needed.\n   */\n  ngOnInit(): void {\n    this.service.observe()\n      .pipe(takeWhile(() => this.alive))\n      .subscribe(next => {\n      this.fragments = next\n    });\n  }\n\n  /**\n   * Check if all fragments up to the most right are set.\n   *\n   * If one is undefined this will return `false`.\n   *\n   * This allows ensuring that only fully defined breadcrumbs will be displayed.\n   */\n  isAllSet(): boolean {\n    return !this.fragments.includes(undefined);\n  }\n\n  /**\n   * On destroy set {@link alive} to `false`.\n   *\n   * This makes sure that the component does not live as long as the service.\n   */\n  ngOnDestroy(): void {\n    this.alive = false;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            \n          \n          \n            \n              {{text | translate}}\n            \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                        {{text | translate}}                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'breadcrumbs'},{'name': 'ConsumerDetailComponent', 'selector': 'lib-consumer-detail'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'ExampleComponent', 'selector': ''},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IonIconComponent', 'selector': 'ion-icon'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'map'},{'name': 'MapSelectViewComponent', 'selector': 'lib-map-select-view'},{'name': 'ResultDataViewComponent', 'selector': 'lib-result-data-view'},{'name': 'SideBarComponent', 'selector': 'app-side-bar'},{'name': 'WaterRightDetailComponent', 'selector': 'lib-water-right-detail'}];\n    var DIRECTIVES = [{'name': 'BulmaIsToggleableDirective', 'selector': '.is-toggleable'},{'name': 'LangSelectorDirective', 'selector': '[selectLang]'}];\n    var ACTUAL_COMPONENT = {'name': 'BreadcrumbsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BreadcrumbsService.html":{"url":"injectables/BreadcrumbsService.html","title":"injectable - BreadcrumbsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BreadcrumbsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service collecting the breadcrumbs.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fragments\n                            \n                            \n                                    Private\n                                subject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                observe\n                            \n                            \n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        observe\n                        \n                    \n                \n            \n            \n                \nobserve()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.service.ts:51\n                \n            \n\n\n            \n                \n                    Observe the breadcrumb fragments.\n\n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        set\n                        \n                    \n                \n            \n            \n                \nset(index: number, value: Breadcrumb)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.service.ts:44\n                \n            \n\n\n            \n                \n                    Set a new breadcrumb fragment.\nThis removes all fragments with a higher index than the set one.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Index of the breadcrumb array\n\n                                    \n                                \n                                \n                                    value\n                                    \n                                                Breadcrumb\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Breadcrumb fragment to display\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        fragments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Breadcrumb[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.service.ts:29\n                        \n                    \n\n            \n                \n                    List of breadcrumbs.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.service.ts:34\n                        \n                    \n\n            \n                \n                    Subject for the Breadcrumbs, to be used as\nObservable.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\nimport {Params, ActivatedRouteSnapshot, UrlTree} from \"@angular/router\";\nimport {Observable, BehaviorSubject, Subject} from \"rxjs\";\n\n/** Breadcrumb fragment interface. */\nexport interface Breadcrumb {\n  /**\n   * Optional icon name to be displayed on the left of the fragment name.\n   * This will use an {@link IonIconComponent} for the icon.\n   */\n  icon?: string,\n  /**\n   * String or array of strings to be displayed as fragment.\n   * Every element will be passed to the {@link TranslateService}.\n   */\n  text: string | string[],\n  /** Router link to be set for the fragment. */\n  link: string,\n  /** Optional query parameters for the router link. */\n  query?: Params\n}\n\n/** Service collecting the breadcrumbs. */\n@Injectable({\n  providedIn: 'root'\n})\nexport class BreadcrumbsService {\n  /** List of breadcrumbs. */\n  fragments: Breadcrumb[] = [];\n  /**\n   * {@link Subject} for the {@link Breadcrumb}s, to be used as\n   * {@link Observable}.\n   */\n  private subject: BehaviorSubject\n    = new BehaviorSubject([]);\n\n  /**\n   * Set a new breadcrumb fragment.\n   *\n   * This removes all fragments with a higher index than the set one.\n   * @param index Index of the breadcrumb array\n   * @param value Breadcrumb fragment to display\n   */\n  set(index: number, value: Breadcrumb) {\n    this.fragments.length = index + 1;\n    this.fragments[index] = value;\n    this.subject.next(this.fragments);\n  }\n\n  /** Observe the breadcrumb fragments. */\n  observe(): Observable {\n    return this.subject.asObservable();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/BulmaIsToggleableDirective.html":{"url":"directives/BulmaIsToggleableDirective.html","title":"directive - BulmaIsToggleableDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  BulmaIsToggleableDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/common/src/lib/bulma/bulma-is-toggleable.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                Directive for making things toggleable with bulma.\nClicking on the node that has this directive will toggle the \"is-active\"\nclass.\n\n            \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        .is-toggleable\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                classes\n                            \n                            \n                                    Private\n                                isActive\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    elementClasses\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        class\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/bulma/bulma-is-toggleable.directive.ts:22\n                            \n                        \n                \n                    \n                        The classes of the host node.\n\n                    \n                \n            \n        \n\n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            click\n                        \n                        \n                    \n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/common/src/lib/bulma/bulma-is-toggleable.directive.ts:36\n                \n            \n\n\n            \n                \n                    Function to be executed when the host is clicked.\nWill toggle the \"is-active\" class on the host node.\n\n\n                \n            \n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toggle\n                        \n                    \n                \n            \n            \n                \ntoggle()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('click')\n                \n            \n\n            \n                \n                    Defined in wisdom_modules/common/src/lib/bulma/bulma-is-toggleable.directive.ts:36\n                \n            \n\n\n            \n                \n                    Function to be executed when the host is clicked.\nWill toggle the \"is-active\" class on the host node.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        classes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/bulma/bulma-is-toggleable.directive.ts:17\n                        \n                    \n\n            \n                \n                    The classes of the host node.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/bulma/bulma-is-toggleable.directive.ts:15\n                        \n                    \n\n            \n                \n                    Is the host currently active.\n\n                \n            \n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        elementClasses\n                    \n                \n\n                \n                    \n                        getelementClasses()\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/common/src/lib/bulma/bulma-is-toggleable.directive.ts:22\n                                \n                            \n                    \n                        \n                                The classes of the host node.\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        setelementClasses(classes: string)\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/common/src/lib/bulma/bulma-is-toggleable.directive.ts:26\n                                \n                            \n                    \n                        \n                                Set the classes of the host node.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            classes\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import {HostBinding, Directive, Input, HostListener} from \"@angular/core\";\n\n/**\n * Directive for making things toggleable with bulma.\n *\n * Clicking on the node that has this directive will toggle the \"is-active\"\n * class.\n */\n@Directive({\n  selector: \".is-toggleable\"\n})\nexport class BulmaIsToggleableDirective {\n\n  /** Is the host currently active. */\n  private isActive: boolean = false;\n  /** The classes of the host node. */\n  private classes: string[] = [];\n\n  /** The classes of the host node. */\n  @Input(\"class\")\n  @HostBinding(\"class\")\n  get elementClasses(): string {\n    return this.classes.join(\" \");\n  }\n  /** Set the classes of the host node. */\n  set elementClasses(classes: string) {\n    this.classes = classes.trim().split(/\\s+/);\n  }\n\n  /**\n   * Function to be executed when the host is clicked.\n   *\n   * Will toggle the \"is-active\" class on the host node.\n   */\n  @HostListener(\"click\")\n  toggle() {\n    this.isActive = !this.isActive;\n    if (this.isActive) this.classes.push(\"is-active\")\n    else {\n      this.elementClasses = this.elementClasses\n        .split(\"is-active\")\n        .join(\"\");\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/CacheInterceptor.html":{"url":"interceptors/CacheInterceptor.html","title":"interceptor - CacheInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  CacheInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/core/src/app/cache.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                Interceptor to handle cache-control behaviour via\nETag and\nLast-Modified\nheaders.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                eTagMap\n                            \n                            \n                                    Private\n                                lastModifiedMap\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/cache.interceptor.ts:35\n                \n            \n\n\n            \n                \n                    Intercept requests to insert caching headers, if the context\nUSE_CACHE is set.\nWill append If-None-Match and Last-Modified-Since if possible.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Any http request\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The next interceptor or another request handler\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        eTagMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/core/src/app/cache.interceptor.ts:23\n                        \n                    \n\n            \n                \n                    Map holding all ETags received from the server.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        lastModifiedMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/core/src/app/cache.interceptor.ts:25\n                        \n                    \n\n            \n                \n                    Map holding all timestamps sent by the server.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpHeaders,\n  HttpInterceptor,\n  HttpRequest,\n  HttpResponse\n} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\nimport {USE_CACHE} from \"common\";\nimport {tap, Observable} from \"rxjs\";\n\n/**\n * Interceptor to handle cache-control behaviour via\n * [ETag](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/ETag) and\n * [Last-Modified](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Last-Modified)\n * headers.\n */\n@Injectable()\nexport class CacheInterceptor implements HttpInterceptor {\n\n  /** Map holding all ETags received from the server. */\n  private eTagMap: Map = new Map();\n  /** Map holding all timestamps sent by the server. */\n  private lastModifiedMap: Map = new Map();\n\n  /**\n   * Intercept requests to insert caching headers, if the context\n   * {@link USE_CACHE} is set.\n   * Will append `If-None-Match` and `Last-Modified-Since` if possible.\n   *\n   * @param request Any http request\n   * @param next The next interceptor or another request handler\n   */\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    // do not insert any cache headers if USE_CACHE is false\n    if (!request.context.get(USE_CACHE)) return next.handle(request);\n\n    let key = request.urlWithParams;\n\n    let eTag = this.eTagMap.get(key);\n    if (eTag) request.headers.set(\"If-None-Match\", eTag);\n\n    let lastModified = this.lastModifiedMap.get(key);\n    if (lastModified) request.headers.set(\"If-Modified-Since\", lastModified);\n\n    return next.handle(request.clone({\n      headers: request.headers\n    })).pipe(tap(event => {\n      if (!(event instanceof HttpResponse)) return;\n\n      let eTag = event.headers.get(\"ETag\");\n      if (eTag) this.eTagMap.set(key, eTag);\n\n      let lastModified = event.headers.get(\"Last-Modified\");\n      if (lastModified) this.lastModifiedMap.set(key, lastModified);\n    }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConsumerDetailComponent.html":{"url":"components/ConsumerDetailComponent.html","title":"component - ConsumerDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ConsumerDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    wisdom_modules/water-usage-forecasts/src/lib/views/detail-view/consumer-detail/consumer-detail.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-consumer-detail\n            \n\n\n\n\n            \n                templateUrl\n                ./consumer-detail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                chartData\n                            \n                            \n                                    Private\n                                coordinates\n                            \n                            \n                                historyData\n                            \n                            \n                                id\n                            \n                            \n                                mapComponent\n                            \n                            \n                                    Optional\n                                marker\n                            \n                            \n                                name\n                            \n                            \n                                recordedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleConsumerData\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, cService: ConsumersService, hService: WaterUsageHistoryService, breadcrumbs: BreadcrumbsService)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/detail-view/consumer-detail/consumer-detail.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cService\n                                                  \n                                                        \n                                                                        ConsumersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        hService\n                                                  \n                                                        \n                                                                        WaterUsageHistoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        breadcrumbs\n                                                  \n                                                        \n                                                                        BreadcrumbsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleConsumerData\n                        \n                    \n                \n            \n            \n                \nhandleConsumerData(data: ConsumerLocationsResponse)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/water-usage-forecasts/src/lib/views/detail-view/consumer-detail/consumer-detail.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                ConsumerLocationsResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/water-usage-forecasts/src/lib/views/detail-view/consumer-detail/consumer-detail.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/water-usage-forecasts/src/lib/views/detail-view/consumer-detail/consumer-detail.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        chartData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ChartData\n\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/detail-view/consumer-detail/consumer-detail.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        coordinates\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject<>\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([NaN, NaN])\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/detail-view/consumer-detail/consumer-detail.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        historyData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         HistoryResponse\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/detail-view/consumer-detail/consumer-detail.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/detail-view/consumer-detail/consumer-detail.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mapComponent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MapComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('map')\n                        \n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/detail-view/consumer-detail/consumer-detail.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        marker\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Marker\n\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/detail-view/consumer-detail/consumer-detail.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/detail-view/consumer-detail/consumer-detail.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recordedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/detail-view/consumer-detail/consumer-detail.component.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {ViewChild, Component, OnInit, AfterViewInit} from \"@angular/core\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {ChartData} from \"chart.js/auto\";\nimport {MapComponent, Marker, BreadcrumbsService} from \"common\";\nimport {BehaviorSubject} from \"rxjs\";\n\nimport {\n  ConsumerLocationsResponse,\n  ConsumersService\n} from \"../../../services/consumers.service\";\nimport {\n  HistoryResponse,\n  WaterUsageHistoryService\n} from \"../../../services/water-usage-history.service\";\nimport {consumerIcon} from \"../../../map-icons\";\n\n@Component({\n  selector: 'lib-consumer-detail',\n  templateUrl: './consumer-detail.component.html'\n})\nexport class ConsumerDetailComponent implements OnInit, AfterViewInit {\n\n  name: string = \"\";\n  id: string = \"\";\n  historyData: HistoryResponse = [];\n  marker?: Marker;\n  private coordinates: BehaviorSubject =\n    new BehaviorSubject([NaN, NaN]);\n  chartData?: ChartData;\n  recordedAt: string = \"\";\n\n  @ViewChild(\"map\") mapComponent!: MapComponent;\n\n  constructor(\n    private route: ActivatedRoute,\n    private cService: ConsumersService,\n    private hService: WaterUsageHistoryService,\n    private breadcrumbs: BreadcrumbsService\n  ) { }\n\n  ngOnInit(): void {\n    this.id = this.route.snapshot.params[\"consumer\"];\n    this.cService.fetchConsumers({id: [this.id]})\n      .subscribe(data => this.handleConsumerData(data ?? []));\n    this.hService.fetchWaterUsageHistory(this.id)\n      .subscribe(data => {\n        this.chartData = {\n          datasets: [{\n            data: data.map(({usage}) => usage),\n            backgroundColor: \"blue\"\n          }],\n          labels: data.map(({year}) => year)\n        };\n        this.recordedAt = data[data.length - 1].recordedAt.toISOString().substring(0, 10);\n      });\n  }\n\n  handleConsumerData(data: ConsumerLocationsResponse) {\n    for (let {id, name, geojson} of data) {\n      this.name = name;\n      this.breadcrumbs.set(2, {\n        text: name,\n        link: \"#\"\n      });\n      let coordinates = [geojson.coordinates[1], geojson.coordinates[0]] as [number, number];\n      this.marker = {\n        coordinates,\n        tooltip: name,\n        icon: consumerIcon\n      }\n      this.coordinates.next(coordinates);\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.coordinates.subscribe(coordinates => {\n      if (coordinates[0] && coordinates[1]) this.mapComponent.map!.flyTo(coordinates);\n    });\n  }\n\n}\n\n    \n\n    \n        \n\n{{name}}\n{{id}}\n\n\n  \n    \n  \n\n\n\n  \n    \n      \n    \n  \n  \n    {{recordedAt}}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{name}}{{id}}                                {{recordedAt}}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'breadcrumbs'},{'name': 'ConsumerDetailComponent', 'selector': 'lib-consumer-detail'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'ExampleComponent', 'selector': ''},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IonIconComponent', 'selector': 'ion-icon'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'map'},{'name': 'MapSelectViewComponent', 'selector': 'lib-map-select-view'},{'name': 'ResultDataViewComponent', 'selector': 'lib-result-data-view'},{'name': 'SideBarComponent', 'selector': 'app-side-bar'},{'name': 'WaterRightDetailComponent', 'selector': 'lib-water-right-detail'}];\n    var DIRECTIVES = [{'name': 'BulmaIsToggleableDirective', 'selector': '.is-toggleable'},{'name': 'LangSelectorDirective', 'selector': '[selectLang]'}];\n    var ACTUAL_COMPONENT = {'name': 'ConsumerDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConsumersService.html":{"url":"injectables/ConsumersService.html","title":"injectable - ConsumersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ConsumersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/water-usage-forecasts/src/lib/services/consumers.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchConsumers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, router: Router)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/services/consumers.service.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        fetchConsumers\n                        \n                    \n                \n            \n            \n                \nfetchConsumers(params: Partial)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/water-usage-forecasts/src/lib/services/consumers.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {HttpClient, HttpContext, HttpHeaders} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\nimport {Router} from \"@angular/router\";\nimport {USE_API_URL, USE_LOADER} from \"common\";\nimport {Observable} from \"rxjs\";\n\nconst API_URL = \"consumers/\";\n\nexport type ConsumerLocationsResponse = {\n  id: number,\n  name: string,\n  geojson: {\n    crs: {\n      type: \"name\",\n      properties: {\n        name: string\n      }\n    },\n    type: \"Point\",\n    coordinates: [number, number]\n  }\n}[];\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConsumersService {\n\n  constructor(\n    private http: HttpClient,\n    private router: Router\n  ) {}\n\n  fetchConsumers(params: Partial): Observable {\n    let url = this.router.parseUrl(API_URL);\n    if (params.in) url.queryParams[\"in\"] = params.in;\n    if (params.id) url.queryParams[\"id\"] = params.id;\n    if (params.usageAbove) url.queryParams[\"usage_above\"] = params.usageAbove;\n    return this.http.get(url.toString(), {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\"\n      }),\n      responseType: \"json\",\n      context: new HttpContext()\n        .set(USE_API_URL, true)\n        .set(USE_LOADER, true)\n    }) as Observable;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Error.html":{"url":"interfaces/Error.html","title":"interface - Error","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Error\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/core/src/app/frame/error/error.ts\n        \n\n\n            \n                Description\n            \n            \n                Custom error type containing infos to display in the main container.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            error\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            errorDescription\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            errorName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            httpCode\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            httpError\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Internal error code.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorDescription\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorDescription:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Internal error description.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Internal error name.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        httpCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        httpCode:     number | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Http code of the error.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        httpError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        httpError:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Http code name of the error.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Error {\n  /** Http code of the error. */\n  httpCode?: number | string;\n  /** Http code name of the error. */\n  httpError?: string;\n  /** Internal error code. */\n  error?: string;\n  /** Internal error name. */\n  errorName?: string;\n  /** Internal error description. */\n  errorDescription?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorComponent.html":{"url":"components/ErrorComponent.html","title":"component - ErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    wisdom_modules/core/src/app/frame/error/error.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component covering the entire main container to display an error that has not\nbeen handled.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-error\n            \n\n\n\n\n            \n                templateUrl\n                ./error.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                errorCode\n                            \n                            \n                                    Optional\n                                errorDescription\n                            \n                            \n                                    Optional\n                                errorName\n                            \n                            \n                                    Optional\n                                httpCode\n                            \n                            \n                                    Optional\n                                httpError\n                            \n                            \n                                showError\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goBack\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    showType\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(location: Location, service: ErrorService)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/core/src/app/frame/error/error.component.ts:41\n                            \n                        \n\n                \n                    \n                            Constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                        Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Location service to allow traversing the history\n\n                                                        \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        ErrorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Error service collecting the errors\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goBack\n                        \n                    \n                \n            \n            \n                \ngoBack()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/frame/error/error.component.ts:71\n                \n            \n\n\n            \n                \n                    Return one step in the history.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        errorCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/core/src/app/frame/error/error.component.ts:24\n                        \n                    \n\n            \n                \n                    Internal error code.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        errorDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/core/src/app/frame/error/error.component.ts:28\n                        \n                    \n\n            \n                \n                    Internal error description.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        errorName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/core/src/app/frame/error/error.component.ts:26\n                        \n                    \n\n            \n                \n                    Internal error name.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        httpCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | string\n\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/core/src/app/frame/error/error.component.ts:20\n                        \n                    \n\n            \n                \n                    Http code of the error.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        httpError\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/core/src/app/frame/error/error.component.ts:22\n                        \n                    \n\n            \n                \n                    Http code name of the error.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showError\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/core/src/app/frame/error/error.component.ts:17\n                        \n                    \n\n            \n                \n                    Whether to show the component.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        showType\n                    \n                \n\n                \n                    \n                        getshowType()\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/frame/error/error.component.ts:34\n                                \n                            \n                    \n                        \n                                Utility function to return the bulma type name for certain http error\ncodes.\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import {Location} from \"@angular/common\";\nimport {Component, OnInit} from \"@angular/core\";\n\nimport {ErrorService} from \"./error.service\";\n\n/**\n * Component covering the entire main container to display an error that has not\n * been handled.\n */\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html'\n})\nexport class ErrorComponent {\n\n  /** Whether to show the component. */\n  showError: boolean = false;\n\n  /** Http code of the error. */\n  httpCode?: number | string;\n  /** Http code name of the error. */\n  httpError?: string;\n  /** Internal error code. */\n  errorCode?: string;\n  /** Internal error name. */\n  errorName?: string;\n  /** Internal error description. */\n  errorDescription?: string;\n\n  /**\n   * Utility function to return the bulma type name for certain http error\n   * codes.\n   */\n  get showType(): string {\n    let codeType = (\"\" + this.httpCode)[0];\n    switch (codeType) {\n      case \"5\": return \"danger\";\n      case \"4\": return \"warning\";\n      default: return \"info\";\n    }\n  }\n\n  /**\n   * Constructor.\n   * @param location Location service to allow traversing the history\n   * @param service Error service collecting the errors\n   */\n  constructor(\n    private location: Location,\n    private service: ErrorService\n  ) {\n    this.service.errorPresent.subscribe(\n      val => {\n        if (val) {\n          this.showError = true;\n          Object.assign(this, val);\n          if (val.error) this.errorCode = val.error;\n        }\n        else {\n          this.showError = false;\n          delete this.httpCode;\n          delete this.httpError;\n          delete this.errorCode;\n          delete this.errorName;\n          delete this.errorDescription;\n        }\n      });\n  }\n\n  /** Return one step in the history. */\n  goBack() {\n    this.location.back();\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          {{httpCode}}\n        \n        \n          {{httpError}}\n        \n        \n          {{errorName}}\n        \n        \n          {{errorDescription}}\n        \n        \n          \n            \n          \n          Go Back\n        \n        \n          {{errorCode}}\n        \n      \n    \n  \n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{httpCode}}                          {{httpError}}                          {{errorName}}                          {{errorDescription}}                                                          Go Back                          {{errorCode}}                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'breadcrumbs'},{'name': 'ConsumerDetailComponent', 'selector': 'lib-consumer-detail'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'ExampleComponent', 'selector': ''},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IonIconComponent', 'selector': 'ion-icon'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'map'},{'name': 'MapSelectViewComponent', 'selector': 'lib-map-select-view'},{'name': 'ResultDataViewComponent', 'selector': 'lib-result-data-view'},{'name': 'SideBarComponent', 'selector': 'app-side-bar'},{'name': 'WaterRightDetailComponent', 'selector': 'lib-water-right-detail'}];\n    var DIRECTIVES = [{'name': 'BulmaIsToggleableDirective', 'selector': '.is-toggleable'},{'name': 'LangSelectorDirective', 'selector': '[selectLang]'}];\n    var ACTUAL_COMPONENT = {'name': 'ErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ErrorInterceptor.html":{"url":"interceptors/ErrorInterceptor.html","title":"interceptor - ErrorInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  ErrorInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/core/src/app/frame/error/error.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                Interceptor for http request.\nThis one is set as the last element to capture http error that were not\nhandled somewhere else.\nThese unhandled errors will be passed to the ErrorService.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(service: ErrorService)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/core/src/app/frame/error/error.interceptor.ts:21\n                            \n                        \n\n                \n                    \n                            Constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        ErrorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Error service to pass the errors into\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/frame/error/error.interceptor.ts:34\n                \n            \n\n\n            \n                \n                    Intercept all returning errors and pass them to the ErrorService.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Request to check\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Next interceptor, usually none for this interceptor\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest\n} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\nimport {USE_ERROR_CURTAIN} from \"common\";\nimport {catchError, throwError, Observable} from \"rxjs\";\n\nimport {ErrorService} from \"./error.service\";\n\n/**\n * Interceptor for http request.\n * This one is set as the last element to capture http error that were not\n * handled somewhere else.\n *\n * These unhandled errors will be passed to the {@link ErrorService}.\n */\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n\n  /**\n   * Constructor.\n   * @param service Error service to pass the errors into\n   */\n  constructor(private service: ErrorService) {}\n\n  /**\n   * Intercept all returning errors and pass them to the {@link ErrorService}.\n   * @param request Request to check\n   * @param next Next interceptor, usually none for this interceptor\n   */\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    let context = request.context.get(USE_ERROR_CURTAIN);\n    if (!context) return next.handle(request);\n\n    return next.handle(request).pipe(\n      catchError(requestError => {\n        if (!requestError.ok) {\n          console.log(requestError);\n          this.service.throwError({\n            httpCode: requestError.error.httpCode ?? requestError.status,\n            httpError: requestError.error.httpError ?? requestError.statusText,\n            error: requestError.error.error,\n            errorName: requestError.error.errorName ?? requestError.name,\n            errorDescription: requestError.error.errorDescription ?? requestError.message\n          });\n        }\n        return throwError(() => new Error(requestError));\n      })\n    )\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorService.html":{"url":"injectables/ErrorService.html","title":"injectable - ErrorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ErrorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/core/src/app/frame/error/error.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Error service to collect errors from the ErrorInterceptor.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorPresent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                throwError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/core/src/app/frame/error/error.service.ts:13\n                            \n                        \n\n                \n                    \n                            Constructor.\nThis also creates an event handler on the NavigationStart event in\norder to reset the error presence.\n(Set errorPresent to false.)\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router to subscribe to events\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        throwError\n                        \n                    \n                \n            \n            \n                \nthrowError(error: Error)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/frame/error/error.service.ts:35\n                \n            \n\n\n            \n                \n                    Emit an error.\nThis is used by the ErrorInterceptor to pass errors to this\nservice.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                Error\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Error to pass\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorPresent\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/core/src/app/frame/error/error.service.ts:13\n                        \n                    \n\n            \n                \n                    Event emitter whether an event is currently present.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import {EventEmitter, Injectable, Output} from \"@angular/core\";\nimport {ActivatedRoute, Router, NavigationStart} from \"@angular/router\";\n\nimport {Error} from \"./error\";\n\n/** Error service to collect errors from the {@link ErrorInterceptor}. */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ErrorService {\n\n  /** Event emitter whether an event is currently present. */\n  errorPresent = new EventEmitter();\n\n  /**\n   * Constructor.\n   *\n   * This also creates an event handler on the {@link NavigationStart} event in\n   * order to reset the error presence.\n   * (Set {@link errorPresent} to `false`.)\n   * @param router Router to subscribe to events\n   */\n  constructor(private router: Router) {\n    this.router.events.subscribe(event => {\n      if (event instanceof NavigationStart) this.errorPresent.emit(false);\n    })\n  }\n\n  /**\n   * Emit an error.\n   * This is used by the {@link ErrorInterceptor} to pass errors to this\n   * service.\n   * @param error Error to pass\n   */\n  throwError(error: Error) {\n    this.errorPresent.emit(error);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ExampleComponent.html":{"url":"components/ExampleComponent.html","title":"component - ExampleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ExampleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    wisdom_modules/example/src/lib/example.component.ts\n\n\n\n    \n        Description\n    \n    \n        Minimalistic example Component.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                templateUrl\n                example.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import {Component, OnInit} from \"@angular/core\";\n\n/** Minimalistic example Component. */\n@Component({\n  templateUrl: \"example.component.html\"\n})\nexport class ExampleComponent {\n\n}\n\n    \n\n    \n        \n\n  \n    Example here\n  \n  \n    \n      \n    \n  \n  \n    \n      {{\"example.example.key\" | translate}}\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Example here                                {{\"example.example.key\" | translate}}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'breadcrumbs'},{'name': 'ConsumerDetailComponent', 'selector': 'lib-consumer-detail'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'ExampleComponent', 'selector': ''},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IonIconComponent', 'selector': 'ion-icon'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'map'},{'name': 'MapSelectViewComponent', 'selector': 'lib-map-select-view'},{'name': 'ResultDataViewComponent', 'selector': 'lib-result-data-view'},{'name': 'SideBarComponent', 'selector': 'app-side-bar'},{'name': 'WaterRightDetailComponent', 'selector': 'lib-water-right-detail'}];\n    var DIRECTIVES = [{'name': 'BulmaIsToggleableDirective', 'selector': '.is-toggleable'},{'name': 'LangSelectorDirective', 'selector': '[selectLang]'}];\n    var ACTUAL_COMPONENT = {'name': 'ExampleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ExampleModule.html":{"url":"modules/ExampleModule.html","title":"module - ExampleModule","body":"\n                   \n\n\n\n\n    Modules\n    ExampleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ExampleModule\n\n\n\ncluster_ExampleModule_imports\n\n\n\ncluster_ExampleModule_exports\n\n\n\ncluster_ExampleModule_declarations\n\n\n\n\nExampleComponent\n\nExampleComponent\n\n\n\nExampleModule\n\nExampleModule\n\nExampleModule -->\n\nExampleComponent->ExampleModule\n\n\n\n\n\nExampleComponent \n\nExampleComponent \n\nExampleComponent  -->\n\nExampleModule->ExampleComponent \n\n\n\n\n\nWisdomModule\n\nWisdomModule\n\nExampleModule -->\n\nWisdomModule->ExampleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            wisdom_modules/example/src/lib/example.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Minimalistic example module.\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ExampleComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            WisdomModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ExampleComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from \"@angular/core\";\nimport {TranslateModule} from \"@ngx-translate/core\";\nimport {WisdomModule} from \"common\";\n\nimport {ExampleComponent} from \"./example.component\";\n\n/** Minimalistic example module. */\n@NgModule({\n  declarations: [\n    ExampleComponent\n  ],\n  imports: [\n    WisdomModule,\n    TranslateModule\n  ],\n  exports: [\n    ExampleComponent\n  ]\n})\nexport class ExampleModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExampleService.html":{"url":"injectables/ExampleService.html","title":"injectable - ExampleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ExampleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/example/src/lib/example.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Unused but exported service as example.\n\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\n\n/** Unused but exported service as example. */\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ExampleService {\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ForecastEntry.html":{"url":"interfaces/ForecastEntry.html","title":"interface - ForecastEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ForecastEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/water-usage-forecasts/src/lib/services/water-usage-forecasts.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            forecast\n                                        \n                                \n                                \n                                        \n                                            reference\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        forecast\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        forecast:         Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Record\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reference\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reference:         Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Record\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {HttpClient, HttpContext, HttpHeaders} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\nimport {Router} from \"@angular/router\";\nimport {USE_API_URL, USE_LOADER} from \"common\";\nimport {Observable} from \"rxjs\";\n\nconst API_URL = \"water-usage-forecasts\";\n\nexport enum ForecastType {\n  LOGARITHMIC = \"logarithmic\",\n  LINEAR = \"linear\",\n  POLYNOMIAL = \"polynomial\"\n}\n\nexport interface ForecastResponse {\n  accumulations: {\n    consumerGroup: ForecastEntry,\n    municipal: ForecastEntry\n  },\n  partials: {\n    consumerGroup: {\n      key: string,\n      name: string\n    },\n    municipal: ForecastResponse[\"partials\"][0][\"consumerGroup\"],\n    referenceUsages: {\n      equation: string,\n      float: number,\n      model: \"logarithmic\" | \"linear\" | \"polynomial\",\n      usages: {\n        amounts: number[],\n        end: number,\n        start: number\n      }\n    },\n    forecast: ForecastResponse[\"partials\"][0][\"referenceUsages\"]\n  }[]\n}\n\nexport interface ForecastEntry {\n  forecast: Record,\n  reference: Record\n}\n\nexport interface ForecastUsage {\n  displayName: string,\n  endYear: number,\n  startYear: number,\n  usages: number[]\n}\n\n/**\n * Service to interact with server providing the data to display.\n */\n@Injectable({\n  providedIn: \"root\"\n})\nexport class WaterUsageForecastsService {\n\n  constructor(\n    private http: HttpClient,\n    private router: Router\n  ) {}\n\n  fetchForecastData(\n    key: string | string[],\n    forecastModel: ForecastType,\n    consumerGroup?:\n      \"businesses\" |\n      \"households_and_small_businesses\" |\n      \"farming_forestry_fishing_industry\" |\n      \"public_institutions\" |\n      \"all\"\n  ): Observable {\n    let url = this.router.parseUrl(`${API_URL}/${forecastModel}`);\n    if (consumerGroup) url.queryParams[\"consumerGroup\"] = consumerGroup;\n    url.queryParams[\"key\"] = key;\n    return this.http.get(url.toString(), {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\"\n      }),\n      responseType: \"json\",\n      context: new HttpContext()\n        .set(USE_API_URL, true)\n        .set(USE_LOADER, \"water-usage-forecasts.display.loading\")\n    }) as Observable;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ForecastResponse.html":{"url":"interfaces/ForecastResponse.html","title":"interface - ForecastResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ForecastResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/water-usage-forecasts/src/lib/services/water-usage-forecasts.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accumulations\n                                        \n                                \n                                \n                                        \n                                            partials\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accumulations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accumulations:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        partials\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        partials:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {HttpClient, HttpContext, HttpHeaders} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\nimport {Router} from \"@angular/router\";\nimport {USE_API_URL, USE_LOADER} from \"common\";\nimport {Observable} from \"rxjs\";\n\nconst API_URL = \"water-usage-forecasts\";\n\nexport enum ForecastType {\n  LOGARITHMIC = \"logarithmic\",\n  LINEAR = \"linear\",\n  POLYNOMIAL = \"polynomial\"\n}\n\nexport interface ForecastResponse {\n  accumulations: {\n    consumerGroup: ForecastEntry,\n    municipal: ForecastEntry\n  },\n  partials: {\n    consumerGroup: {\n      key: string,\n      name: string\n    },\n    municipal: ForecastResponse[\"partials\"][0][\"consumerGroup\"],\n    referenceUsages: {\n      equation: string,\n      float: number,\n      model: \"logarithmic\" | \"linear\" | \"polynomial\",\n      usages: {\n        amounts: number[],\n        end: number,\n        start: number\n      }\n    },\n    forecast: ForecastResponse[\"partials\"][0][\"referenceUsages\"]\n  }[]\n}\n\nexport interface ForecastEntry {\n  forecast: Record,\n  reference: Record\n}\n\nexport interface ForecastUsage {\n  displayName: string,\n  endYear: number,\n  startYear: number,\n  usages: number[]\n}\n\n/**\n * Service to interact with server providing the data to display.\n */\n@Injectable({\n  providedIn: \"root\"\n})\nexport class WaterUsageForecastsService {\n\n  constructor(\n    private http: HttpClient,\n    private router: Router\n  ) {}\n\n  fetchForecastData(\n    key: string | string[],\n    forecastModel: ForecastType,\n    consumerGroup?:\n      \"businesses\" |\n      \"households_and_small_businesses\" |\n      \"farming_forestry_fishing_industry\" |\n      \"public_institutions\" |\n      \"all\"\n  ): Observable {\n    let url = this.router.parseUrl(`${API_URL}/${forecastModel}`);\n    if (consumerGroup) url.queryParams[\"consumerGroup\"] = consumerGroup;\n    url.queryParams[\"key\"] = key;\n    return this.http.get(url.toString(), {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\"\n      }),\n      responseType: \"json\",\n      context: new HttpContext()\n        .set(USE_API_URL, true)\n        .set(USE_LOADER, \"water-usage-forecasts.display.loading\")\n    }) as Observable;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ForecastUsage.html":{"url":"interfaces/ForecastUsage.html","title":"interface - ForecastUsage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ForecastUsage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/water-usage-forecasts/src/lib/services/water-usage-forecasts.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            displayName\n                                        \n                                \n                                \n                                        \n                                            endYear\n                                        \n                                \n                                \n                                        \n                                            startYear\n                                        \n                                \n                                \n                                        \n                                            usages\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endYear\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        endYear:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startYear\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startYear:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        usages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        usages:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {HttpClient, HttpContext, HttpHeaders} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\nimport {Router} from \"@angular/router\";\nimport {USE_API_URL, USE_LOADER} from \"common\";\nimport {Observable} from \"rxjs\";\n\nconst API_URL = \"water-usage-forecasts\";\n\nexport enum ForecastType {\n  LOGARITHMIC = \"logarithmic\",\n  LINEAR = \"linear\",\n  POLYNOMIAL = \"polynomial\"\n}\n\nexport interface ForecastResponse {\n  accumulations: {\n    consumerGroup: ForecastEntry,\n    municipal: ForecastEntry\n  },\n  partials: {\n    consumerGroup: {\n      key: string,\n      name: string\n    },\n    municipal: ForecastResponse[\"partials\"][0][\"consumerGroup\"],\n    referenceUsages: {\n      equation: string,\n      float: number,\n      model: \"logarithmic\" | \"linear\" | \"polynomial\",\n      usages: {\n        amounts: number[],\n        end: number,\n        start: number\n      }\n    },\n    forecast: ForecastResponse[\"partials\"][0][\"referenceUsages\"]\n  }[]\n}\n\nexport interface ForecastEntry {\n  forecast: Record,\n  reference: Record\n}\n\nexport interface ForecastUsage {\n  displayName: string,\n  endYear: number,\n  startYear: number,\n  usages: number[]\n}\n\n/**\n * Service to interact with server providing the data to display.\n */\n@Injectable({\n  providedIn: \"root\"\n})\nexport class WaterUsageForecastsService {\n\n  constructor(\n    private http: HttpClient,\n    private router: Router\n  ) {}\n\n  fetchForecastData(\n    key: string | string[],\n    forecastModel: ForecastType,\n    consumerGroup?:\n      \"businesses\" |\n      \"households_and_small_businesses\" |\n      \"farming_forestry_fishing_industry\" |\n      \"public_institutions\" |\n      \"all\"\n  ): Observable {\n    let url = this.router.parseUrl(`${API_URL}/${forecastModel}`);\n    if (consumerGroup) url.queryParams[\"consumerGroup\"] = consumerGroup;\n    url.queryParams[\"key\"] = key;\n    return this.http.get(url.toString(), {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\"\n      }),\n      responseType: \"json\",\n      context: new HttpContext()\n        .set(USE_API_URL, true)\n        .set(USE_LOADER, \"water-usage-forecasts.display.loading\")\n    }) as Observable;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FrameComponent.html":{"url":"components/FrameComponent.html","title":"component - FrameComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FrameComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    wisdom_modules/core/src/app/frame/frame.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component framing the application.\nEvery site except the login page will display this frame.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-frame\n            \n\n\n\n\n            \n                templateUrl\n                ./frame.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hideSidebar\n                                \n                                \n                                    hideUserBar\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, authStorage: AuthStorageService, router: Router, settingsStorage: SettingsStorageService)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/core/src/app/frame/frame.component.ts:19\n                            \n                        \n\n                \n                    \n                            Constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to interact with the auth server\n\n                                                        \n                                                \n                                                \n                                                        authStorage\n                                                  \n                                                        \n                                                                        AuthStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Storage of the keys for revoking\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router to route the user on logout\n\n                                                        \n                                                \n                                                \n                                                        settingsStorage\n                                                  \n                                                        \n                                                                        SettingsStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Storage of the settings\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/frame/frame.component.ts:54\n                \n            \n\n\n            \n                \n                    Log the user out and bring the user to the login page.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hideSidebar\n                    \n                \n\n                \n                    \n                        gethideSidebar()\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/frame/frame.component.ts:36\n                                \n                            \n                    \n                        \n                                Get hide sidebar setting.\n\n\n                        \n                    \n\n                \n                    \n                        sethideSidebar(setting: boolean)\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/frame/frame.component.ts:40\n                                \n                            \n                    \n                        \n                                Set hide sidebar setting.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            setting\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        hideUserBar\n                    \n                \n\n                \n                    \n                        gethideUserBar()\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/frame/frame.component.ts:45\n                                \n                            \n                    \n                        \n                                Get hide user bar setting.\n\n\n                        \n                    \n\n                \n                    \n                        sethideUserBar(setting: boolean)\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/frame/frame.component.ts:49\n                                \n                            \n                    \n                        \n                                Set hide user bar setting.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            setting\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {Component, OnInit} from \"@angular/core\";\nimport {Router} from \"@angular/router\";\n\nimport {AuthService} from \"../auth/auth.service\";\nimport {AuthStorageService} from \"../auth/auth-storage.service\";\nimport {SettingsStorageService} from \"../settings-storage.service\";\n\n// TODO: add further nesting - https://bulma.io/documentation/components/menu/\n\n/**\n * Component framing the application.\n *\n * Every site except the login page will display this frame.\n */\n@Component({\n  selector: \"app-frame\",\n  templateUrl: \"./frame.component.html\"\n})\nexport class FrameComponent {\n\n  /**\n   * Constructor.\n   * @param authService Service to interact with the auth server\n   * @param authStorage Storage of the keys for revoking\n   * @param router Router to route the user on logout\n   * @param settingsStorage Storage of the settings\n   */\n  constructor(\n    private authService: AuthService,\n    private authStorage: AuthStorageService,\n    private router: Router,\n    private settingsStorage: SettingsStorageService\n  ) {}\n\n  /** Get hide sidebar setting. */\n  get hideSidebar() {\n    return this.settingsStorage.hideSidebar || false;\n  }\n  /** Set hide sidebar setting. */\n  set hideSidebar(setting: boolean) {\n    this.settingsStorage.hideSidebar = setting;\n  }\n\n  /** Get hide user bar setting. */\n  get hideUserBar() {\n    return this.settingsStorage.hideUserBar || false;\n  }\n  /** Set hide user bar setting. */\n  set hideUserBar(setting: boolean) {\n    this.settingsStorage.hideUserBar = setting;\n  }\n\n  /** Log the user out and bring the user to the login page. */\n  logout() {\n    this.authService.logout(this.authStorage.accessToken!).subscribe(() => {\n      this.authStorage.clear();\n      this.router.navigate([\"login\"], {replaceUrl: true})\n        .catch(e => console.error(e));\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n  \n\n\n  \n    \n      \n        \n          \n            \n              \n                \n              \n              \n                WISdoM-OSS\n              \n            \n          \n        \n      \n      \n        \n          \n            \n              \n                \n              \n            \n          \n        \n        \n          \n            \n              \n                \n              \n              \n            {{\"lang\" | translate}}\n          \n            \n            \n              \n                \n                  \n                    \n                      \n                    \n                    \n                      Deutsch\n                    \n                  \n                \n              \n              \n                \n                  \n                    \n                      \n                    \n                    \n                      English\n                    \n                  \n                \n              \n            \n          \n          \n            \n              \n                \n                  \n                \n              \n            \n          \n        \n      \n    \n    \n      \n        \n      \n      \n        \n          \n            \n              \n                \n              \n            \n          \n        \n      \n      \n        \n          {{\"core.frame.account\" | translate}}\n          \n            \n              \n                \n                  \n                    \n                  \n                  \n                    {{\"core.frame.logout\" | translate}}\n                  \n                \n              \n            \n          \n          {{\"core.frame.administration\" | translate}}\n          \n            \n              \n                \n                  \n                    \n                  \n                  \n                    {{\"core.frame.userManagement\" | translate}}\n                  \n                \n              \n            \n            \n              \n                \n                  \n                    \n                  \n                  \n                    {{\"core.frame.permissions\" | translate}}\n                  \n                \n              \n            \n            \n              \n                \n                  \n                    \n                  \n                  \n                    {{\"core.frame.roles\" | translate}}\n                  \n                \n              \n            \n          \n          \n            \n              \n              \n            \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                      WISdoM-OSS                                                                                                                                                                                                                                                                    {{\"lang\" | translate}}                                                                                                                                                                                          Deutsch                                                                                                                                                                                                                            English                                                                                                                                                                                                                                                                                                                                                                                                          {{\"core.frame.account\" | translate}}                                                                                                                                                  {{\"core.frame.logout\" | translate}}                                                                                {{\"core.frame.administration\" | translate}}                                                                                                                                                  {{\"core.frame.userManagement\" | translate}}                                                                                                                                                                                                    {{\"core.frame.permissions\" | translate}}                                                                                                                                                                                                    {{\"core.frame.roles\" | translate}}                                                                                                                                                                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'breadcrumbs'},{'name': 'ConsumerDetailComponent', 'selector': 'lib-consumer-detail'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'ExampleComponent', 'selector': ''},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IonIconComponent', 'selector': 'ion-icon'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'map'},{'name': 'MapSelectViewComponent', 'selector': 'lib-map-select-view'},{'name': 'ResultDataViewComponent', 'selector': 'lib-result-data-view'},{'name': 'SideBarComponent', 'selector': 'app-side-bar'},{'name': 'WaterRightDetailComponent', 'selector': 'lib-water-right-detail'}];\n    var DIRECTIVES = [{'name': 'BulmaIsToggleableDirective', 'selector': '.is-toggleable'},{'name': 'LangSelectorDirective', 'selector': '[selectLang]'}];\n    var ACTUAL_COMPONENT = {'name': 'FrameComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IonIconComponent.html":{"url":"components/IonIconComponent.html","title":"component - IonIconComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IonIconComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    wisdom_modules/common/src/lib/ion-icon/ion-icon.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component is used to inject the icons from IonIcons.\nIonIcons uses WebComponents to display the icons.\nTo allow to use them here, this component adds the icons via js.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ion-icon\n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    name\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(elRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/common/src/lib/ion-icon/ion-icon.component.ts:12\n                            \n                        \n\n                \n                    \n                            Constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        elRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Element reference to itself\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/ion-icon/ion-icon.component.ts:31\n                            \n                        \n                \n                    \n                        The name of the icon.\nIs not used by angular but needed to render the correct icon and necessary\nso that angular stops complaining.\nThis setter also directly modifies the native element to have the \"name\"\ndirectly as an attribute which is needed to make ion icons work.\nYou can find the names at the official website\nhttps://ionic.io/ionicons.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n\n                \n                    \n                        setname(name: string | undefined)\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/common/src/lib/ion-icon/ion-icon.component.ts:31\n                                \n                            \n                    \n                        \n                                The name of the icon.\nIs not used by angular but needed to render the correct icon and necessary\nso that angular stops complaining.\nThis setter also directly modifies the native element to have the \"name\"\ndirectly as an attribute which is needed to make ion icons work.\nYou can find the names at the official website\nhttps://ionic.io/ionicons.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            name\n                                                    \n                                                            \n                                                                        string | undefined\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {Component, Input, ElementRef} from \"@angular/core\";\n\n/**\n * This component is used to inject the icons from IonIcons.\n * IonIcons uses WebComponents to display the icons.\n * To allow to use them here, this component adds the icons via js.\n */\n@Component({\n  selector: \"ion-icon\",\n  template: \"\"\n})\nexport class IonIconComponent {\n\n  /**\n   * Constructor.\n   * @param elRef Element reference to itself\n   */\n  constructor(private elRef: ElementRef) {}\n\n  /**\n   * The name of the icon.\n   * Is not used by angular but needed to render the correct icon and necessary\n   * so that angular stops complaining.\n   *\n   * This setter also directly modifies the native element to have the \"name\"\n   * directly as an attribute which is needed to make ion icons work.\n   *\n   * You can find the names at the official website\n   * {@link https://ionic.io/ionicons}.\n   */\n  @Input() set name(name: string | undefined) {\n    this.elRef.nativeElement?.setAttribute(\"name\", name);\n  };\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'breadcrumbs'},{'name': 'ConsumerDetailComponent', 'selector': 'lib-consumer-detail'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'ExampleComponent', 'selector': ''},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IonIconComponent', 'selector': 'ion-icon'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'map'},{'name': 'MapSelectViewComponent', 'selector': 'lib-map-select-view'},{'name': 'ResultDataViewComponent', 'selector': 'lib-result-data-view'},{'name': 'SideBarComponent', 'selector': 'app-side-bar'},{'name': 'WaterRightDetailComponent', 'selector': 'lib-water-right-detail'}];\n    var DIRECTIVES = [{'name': 'BulmaIsToggleableDirective', 'selector': '.is-toggleable'},{'name': 'LangSelectorDirective', 'selector': '[selectLang]'}];\n    var ACTUAL_COMPONENT = {'name': 'IonIconComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/LangSelectorDirective.html":{"url":"directives/LangSelectorDirective.html","title":"directive - LangSelectorDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  LangSelectorDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/core/src/app/i18n/lang-selector.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                Directive to set the currently displayed language.\n\n            \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selectLang]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clickLangSelect\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectLang\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/core/src/app/i18n/lang-selector.directive.ts:8\n                            \n                        \n\n                \n                    \n                            Constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to update the current language\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        selectLang\n                    \n                \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/core/src/app/i18n/lang-selector.directive.ts:17\n                            \n                        \n                \n                    \n                        The language key that the translation service should use.\n\n                    \n                \n            \n        \n\n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            click\n                        \n                        \n                    \n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/i18n/lang-selector.directive.ts:24\n                \n            \n\n\n            \n                \n                    Upon clicking on the element with this directive the lang of the\ntranslation service updates with the given language key.\n\n\n                \n            \n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clickLangSelect\n                        \n                    \n                \n            \n            \n                \nclickLangSelect()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('click')\n                \n            \n\n            \n                \n                    Defined in wisdom_modules/core/src/app/i18n/lang-selector.directive.ts:24\n                \n            \n\n\n            \n                \n                    Upon clicking on the element with this directive the lang of the\ntranslation service updates with the given language key.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import {Directive, Input, HostListener} from \"@angular/core\";\nimport {TranslateService} from \"@ngx-translate/core\";\n\n/** Directive to set the currently displayed language. */\n@Directive({\n  selector: \"[selectLang]\"\n})\nexport class LangSelectorDirective {\n\n  /**\n   * Constructor.\n   * @param translateService Service to update the current language\n   */\n  constructor(private translateService: TranslateService) {}\n\n  /** The language key that the translation service should use. */\n  @Input(\"selectLang\") lang: string | undefined;\n\n  /**\n   * Upon clicking on the element with this directive the lang of the\n   * translation service updates with the given language key.\n   */\n  @HostListener(\"click\")\n  clickLangSelect() {\n    if (!this.lang) return;\n    this.translateService.use(this.lang);\n    globalThis.localStorage.setItem(\"lang\", this.lang);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LayerData.html":{"url":"interfaces/LayerData.html","title":"interface - LayerData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LayerData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/common/src/lib/map/layer-data.ts\n        \n\n\n            \n                Description\n            \n            \n                Type to represent layer data received from the geo data server.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            box\n                                        \n                                \n                                \n                                        \n                                            shapes\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        box\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        box:     [, , , ]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [, , , ]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Corner coordinates of a box containing all the shapes this displays.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shapes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        shapes:         ShapeData[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ShapeData[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List of shapes.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import * as L from \"leaflet\";\n\n/**\n * GeoJSON data type used by Leaflet.\n * @private\n */\nexport type GeoJsonObject = Parameters[0];\n\n/** Type to represent a single shape with all of its metadata. */\nexport interface ShapeData {\n  /** Name of the shape. */\n  name: string,\n  /** Key of the shape. */\n  key: string,\n  /** Nomenclature of Territorial Units code of the shape. */\n  nutsKey: string,\n  /** GeoJson representing the shape. */\n  geoJson: GeoJsonObject\n}\n\n/** Type to represent layer data received from the geo data server. */\nexport interface LayerData {\n  /** Corner coordinates of a box containing all the shapes this displays. */\n  box: [[number, number], [number, number], [number, number], [number, number]],\n  /** List of shapes. */\n  shapes: ShapeData[]\n}\n\nexport default LayerData;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoaderComponent.html":{"url":"components/LoaderComponent.html","title":"component - LoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    wisdom_modules/core/src/app/frame/loader/loader.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component covering the main container with a loading screen while we wait for\nservices to respond.\nThis will display an animation and possibly some loading texts.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-loader\n            \n\n            \n                styleUrls\n                ./loader.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./loader.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                displayTexts\n                            \n                            \n                                isLoading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: LoaderService)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/core/src/app/frame/loader/loader.component.ts:16\n                            \n                        \n\n                \n                    \n                            Constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        LoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to handle communication efforts\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/frame/loader/loader.component.ts:33\n                \n            \n\n\n            \n                \n                    On init this should subscribe to the service in order to update the loading\nscreen.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        displayTexts\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/core/src/app/frame/loader/loader.component.ts:27\n                        \n                    \n\n            \n                \n                    The texts to display while loading.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/core/src/app/frame/loader/loader.component.ts:25\n                        \n                    \n\n            \n                \n                    Whether the loader should be active.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit, AfterViewInit} from \"@angular/core\";\n\nimport {LoaderService} from \"./loader.service\";\n\n/**\n * Component covering the main container with a loading screen while we wait for\n * services to respond.\n *\n * This will display an animation and possibly some loading texts.\n */\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.scss']\n})\nexport class LoaderComponent implements OnInit {\n\n  /**\n   * Constructor.\n   * @param service Service to handle communication efforts\n   */\n  constructor(private service: LoaderService) {}\n\n  /** Whether the loader should be active. */\n  isLoading = false;\n  /** The texts to display while loading. */\n  displayTexts: string[] = [];\n\n  /**\n   * On init this should subscribe to the service in order to update the loading\n   * screen.\n   */\n  ngOnInit(): void {\n    this.service.loading.subscribe(value => this.isLoading = value);\n    this.service.displayTexts.subscribe(values => this.displayTexts = values);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n      \n        \n          \n        \n              \n          \n        \n              \n          \n        \n      \n      \n      {{text | translate}}\n    \n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./loader.component.scss\n                \n                .item {\n  position: relative;\n  top: 0;\n  -webkit-animation: bounce 1s infinite ease-in-out;\n  animation: bounce 1s infinite ease-in-out;\n}\n\n.item:nth-child(1) {\n  -webkit-animation-delay: -1.4s;\n  animation-delay: 0s - 1s;\n}\n.item:nth-child(2) {\n  -webkit-animation-delay: -0.7s;\n  animation-delay: 0.3s - 1s;\n}\n.item:nth-child(3) {\n  -webkit-animation-delay: -0s;\n  animation-delay: 0.6s - 1;\n}\n\n\n@-webkit-keyframes bounce {\n  0%, 100% {\n    top: -15px;\n    opacity: 0.8;\n  }\n  50% {\n    top: 15px;\n    opacity: 1;\n  }\n}\n\n@keyframes bounce {\n  0%, 100% {\n    top: -10px;\n    opacity: 0.8;\n  }\n  50% {\n    top: 10px;\n    opacity: 1;\n  }\n}\n\n.loader-container {\n  transition: height 0.8s ease;\n  z-index: 2000;\n}\n\n.main-container {\n  height: calc(100vh - 56px);\n  display: grid;\n  overflow-y: scroll;\n}\n\n.main-container > div {\n  grid-column: 1;\n  grid-row: 1;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                            {{text | translate}}              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'breadcrumbs'},{'name': 'ConsumerDetailComponent', 'selector': 'lib-consumer-detail'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'ExampleComponent', 'selector': ''},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IonIconComponent', 'selector': 'ion-icon'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'map'},{'name': 'MapSelectViewComponent', 'selector': 'lib-map-select-view'},{'name': 'ResultDataViewComponent', 'selector': 'lib-result-data-view'},{'name': 'SideBarComponent', 'selector': 'app-side-bar'},{'name': 'WaterRightDetailComponent', 'selector': 'lib-water-right-detail'}];\n    var DIRECTIVES = [{'name': 'BulmaIsToggleableDirective', 'selector': '.is-toggleable'},{'name': 'LangSelectorDirective', 'selector': '[selectLang]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/LoaderGuard.html":{"url":"guards/LoaderGuard.html","title":"guard - LoaderGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    LoaderGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                wisdom_modules/core/src/app/frame/loader/loader.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard to be called when a navigation starts.\nThis will reset the loader.\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                canActivateChild\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(service: LoaderService)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/core/src/app/frame/loader/loader.guard.ts:19\n                            \n                        \n\n                \n                    \n                            Constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        LoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to report the navigation change\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/frame/loader/loader.guard.ts:28\n                \n            \n\n\n            \n                \n                    Report on navigation change for direct routes.\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canActivateChild\n                        \n                    \n                \n            \n            \n                \ncanActivateChild()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/frame/loader/loader.guard.ts:34\n                \n            \n\n\n            \n                \n                    Report on navigation change for child routes.\n\n\n                \n            \n        \n    \n\n        \n\n\n        \n            import {Injectable} from \"@angular/core\";\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree, CanActivateChild\n} from \"@angular/router\";\nimport {Observable} from \"rxjs\";\n\nimport {LoaderService} from \"./loader.service\";\n\n/**\n * Guard to be called when a navigation starts.\n * This will reset the loader.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderGuard implements CanActivate, CanActivateChild {\n\n  /**\n   * Constructor.\n   * @param service Service to report the navigation change\n   */\n  constructor(private service: LoaderService) {}\n\n  /** Report on navigation change for direct routes. */\n  canActivate(): true {\n    this.service.clearLoading();\n    return true;\n  }\n\n  /** Report on navigation change for child routes. */\n  canActivateChild(): true {\n    this.service.clearLoading();\n    return true;\n  }\n\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/LoaderInterceptor.html":{"url":"interceptors/LoaderInterceptor.html","title":"interceptor - LoaderInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  LoaderInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/core/src/app/frame/loader/loader.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                Interceptor for the loading, this allows detecting load change.\nThis will report to the LoaderService when the USE_LOADER\ncontext is set.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(service: LoaderService)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/core/src/app/frame/loader/loader.interceptor.ts:23\n                            \n                        \n\n                \n                    \n                            Constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        LoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Loader service to report to\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/frame/loader/loader.interceptor.ts:39\n                \n            \n\n\n            \n                \n                    Check whether USE_LOADER is set.\nIf so, report to the service.\nWhen the request returns this also notifies the service.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Request to check\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Next interceptor\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpResponseBase,\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n  HttpErrorResponse,\n  HttpResponse\n} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\nimport {USE_LOADER} from \"common\";\nimport {tap, Observable} from \"rxjs\";\n\nimport {LoaderService} from \"./loader.service\";\n\n/**\n * Interceptor for the loading, this allows detecting load change.\n *\n * This will report to the {@link LoaderService} when the {@link USE_LOADER}\n * context is set.\n */\n@Injectable()\nexport class LoaderInterceptor implements HttpInterceptor {\n\n  /**\n   * Constructor.\n   * @param service Loader service to report to\n   */\n  constructor(private service: LoaderService) {}\n\n  /**\n   * Check whether {@link USE_LOADER} is set.\n   * If so, report to the service.\n   *\n   * When the request returns this also notifies the service.\n   * @param request Request to check\n   * @param next Next interceptor\n   */\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n    let context = request.context.get(USE_LOADER);\n    if (!context) return next.handle(request);\n\n    let observable = next.handle(request);\n    let promise = new Promise(resolve => {\n      observable = observable.pipe(tap({\n        next(value) {\n          if (value instanceof HttpResponse) {\n            return resolve(value);\n          }\n        },\n        error(err) {\n          if (err instanceof HttpErrorResponse) {\n            return resolve(err);\n          }\n        }\n      }))\n    });\n    if (typeof context == \"string\") this.service.addLoader(promise, context);\n    else this.service.addLoader(promise);\n    return observable;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoaderService.html":{"url":"injectables/LoaderService.html","title":"injectable - LoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/core/src/app/frame/loader/loader.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Loader service handling the communication between component and interceptor\nand guard.\nAll loading updates will be reported to this service.\nThis is then communicated to the component to display the loader or not.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _displayTexts\n                            \n                            \n                                    Private\n                                _loading\n                            \n                            \n                                    Private\n                                displayTextSubject\n                            \n                            \n                                    Private\n                                promises\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addLoader\n                            \n                            \n                                clearLoading\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    displayTexts\n                                \n                                \n                                    loading\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addLoader\n                        \n                    \n                \n            \n            \n                \naddLoader(toResolve: Promise, displayText?: string)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/frame/loader/loader.service.ts:49\n                \n            \n\n\n            \n                \n                    Add a loader to the currently awaited requests.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    toResolve\n                                    \n                                            Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Promise to wait for\n\n                                    \n                                \n                                \n                                    displayText\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional text to display under the loader animation\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearLoading\n                        \n                    \n                \n            \n            \n                \nclearLoading()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/frame/loader/loader.service.ts:67\n                \n            \n\n\n            \n                \n                    Clear all loading and ignore the updates of these requests.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _displayTexts\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map | string>\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/core/src/app/frame/loader/loader.service.ts:22\n                        \n                    \n\n            \n                \n                    Internally stored texts to display on the component.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/core/src/app/frame/loader/loader.service.ts:38\n                        \n                    \n\n            \n                \n                    Subject stating whether the app currently awaits requests.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        displayTextSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/core/src/app/frame/loader/loader.service.ts:27\n                        \n                    \n\n            \n                \n                     @link Subject} to display the loadings texts, to be used as\n Observable.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        promises\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Promise[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/core/src/app/frame/loader/loader.service.ts:17\n                        \n                    \n\n            \n                \n                    All request that we currently await.\n\n                \n            \n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        displayTexts\n                    \n                \n\n                \n                    \n                        getdisplayTexts()\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/frame/loader/loader.service.ts:30\n                                \n                            \n                    \n                        \n                                Texts to display on the component.\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        loading\n                    \n                \n\n                \n                    \n                        getloading()\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/frame/loader/loader.service.ts:40\n                                \n                            \n                    \n                        \n                                Observable stating whether the app currently awaits requests.\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\nimport {Observable, Subject} from \"rxjs\";\n\n/**\n * Loader service handling the communication between component and interceptor\n * and guard.\n *\n * All loading updates will be reported to this service.\n * This is then communicated to the component to display the loader or not.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderService {\n\n  /** All request that we currently await. */\n  private promises: Promise[] = [];\n  /**\n   * Internally stored texts to display on the component.\n   * @internal\n   */\n  private _displayTexts: Map, string> = new Map();\n  /**\n   *  @link Subject} to display the loadings texts, to be used as\n   *  {@link Observable}.\n   */\n  private displayTextSubject = new Subject();\n\n  /** Texts to display on the component. */\n  get displayTexts(): Observable {\n    return this.displayTextSubject.asObservable();\n  }\n\n  /**\n   * {@link Subject} stating whether the app currently awaits requests.\n   * @internal\n   */\n  private _loading = new Subject();\n  /** {@link Observable} stating whether the app currently awaits requests. */\n  get loading(): Observable {\n    return this._loading.asObservable();\n  }\n\n  /**\n   * Add a loader to the currently awaited requests.\n   * @param toResolve Promise to wait for\n   * @param displayText Optional text to display under the loader animation\n   */\n  addLoader(toResolve: Promise, displayText?: string) {\n    this.promises.push(toResolve);\n    if (displayText) {\n      this._displayTexts.set(toResolve, displayText);\n      this.displayTextSubject.next(Array.from(this._displayTexts.values()));\n    }\n    this._loading.next(true);\n    toResolve\n      .then(() => Promise.allSettled(this.promises))\n      .then(() => this._loading.next(false))\n      .then(() => {\n        this._displayTexts.delete(toResolve);\n        this.displayTextSubject.next(Array.from(this._displayTexts.values()));\n      })\n      .then(() => this.promises = []);\n  }\n\n  /** Clear all loading and ignore the updates of these requests. */\n  clearLoading() {\n    this.promises = [];\n    this._displayTexts.clear();\n    this.displayTextSubject.next([]);\n    this._loading.next(false);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    wisdom_modules/core/src/app/auth/login/login.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for the login page.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loginHasIssue\n                            \n                            \n                                passwordInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, authStorage: AuthStorageService, router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/core/src/app/auth/login/login.component.ts:21\n                            \n                        \n\n                \n                    \n                            Constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to interact with the auth server\n\n                                                        \n                                                \n                                                \n                                                        authStorage\n                                                  \n                                                        \n                                                                        AuthStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service containing the tokens\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router for routing the user after login\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The current route\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit(f: NgForm)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/auth/login/login.component.ts:45\n                \n            \n\n\n            \n                \n                    Function to call when the user submits the login.\nUpon successful login the user will be routed to the main page.\nUpon error the error message will be shown.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    f\n                                    \n                                                NgForm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The values of the login form\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loginHasIssue\n                        \n                    \n                \n            \n                \n                    \n                        Type :      | string\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/core/src/app/auth/login/login.component.ts:21\n                        \n                    \n\n            \n                \n                    Has the login currently some issue.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('passwordInput')\n                        \n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/core/src/app/auth/login/login.component.ts:18\n                        \n                    \n\n            \n                \n                    The password input html element.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {ViewChild, Component, OnInit, ElementRef} from \"@angular/core\";\nimport {NgForm} from \"@angular/forms\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\n\nimport {AuthService} from \"../auth.service\";\nimport {AuthStorageService} from \"../auth-storage.service\";\nimport PostOAuthToken400 from \"../response_types/login/PostOAuthToken400\";\nimport PostOAuthToken401 from \"../response_types/login/PostOAuthToken401\";\n\n/** Component for the login page. */\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"./login.component.html\"\n})\nexport class LoginComponent {\n\n  /** The password input html element. */\n  @ViewChild(\"passwordInput\") passwordInput!: ElementRef;\n\n  /** Has the login currently some issue. */\n  loginHasIssue: false | string = false;\n\n  /**\n   * Constructor.\n   * @param authService Service to interact with the auth server\n   * @param authStorage Service containing the tokens\n   * @param router Router for routing the user after login\n   * @param route The current route\n   */\n  constructor(\n    private authService: AuthService,\n    private authStorage: AuthStorageService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {}\n\n  /**\n   * Function to call when the user submits the login.\n   *\n   * Upon successful login the user will be routed to the main page.\n   *\n   * Upon error the error message will be shown.\n   * @param f The values of the login form\n   */\n  onSubmit(f: NgForm): void {\n    const valid = f.valid;\n    const {username, password} = f.value;\n    this.authService.login(username, password).subscribe({\n      next: response => {\n        this.authStorage.accessToken = response.access_token;\n        this.authStorage.refreshToken = response.refresh_token;\n        this.authStorage.scopes = response.scope;\n        this.authStorage.expiresIn = response.expires_in;\n        console.log(\"successfully logged in\");\n        let returnUrl = this.router.parseUrl(this.route.snapshot.queryParams[\"returnUrl\"] ?? \"\");\n        let queryParams = returnUrl.queryParams;\n        let route = returnUrl.toString().split(\"?\")[0];\n        this.router.navigate([route], {queryParams, replaceUrl: true}).catch(e => console.error(e));\n      },\n      error: errResponse => {\n        let error;\n        switch (errResponse.status) {\n          case 400:\n            error = errResponse.error as PostOAuthToken400;\n            console.error(error);\n            this.loginHasIssue = \"Kombination is nicht korrekt.\";\n            this.passwordInput?.nativeElement.select();\n            break;\n          case 401:\n            error = errResponse.error as PostOAuthToken401;\n            console.error(error);\n            throw errResponse;\n          default:\n            throw errResponse;\n        }\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n        \n          \n            WISdoM OSS\n            \n              \n                {{\"core.login.username\" | translate}}\n                \n                  \n                  \n                    \n                  \n                  \n                    \n                  \n                \n              \n              \n                {{\"core.login.password\" | translate}}\n                \n                  \n                  \n                    \n                  \n                  \n                    \n                  \n                \n              \n              \n                {{\"core.login.forgotPassword\" | translate}}\n              \n              \n                {{loginHasIssue}}\n              \n              \n                \n                  \n                    {{\"core.login.login\" | translate}}\n                  \n                \n              \n            \n          \n        \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                  WISdoM OSS                                          {{\"core.login.username\" | translate}}                                                                                                                                                                                                              {{\"core.login.password\" | translate}}                                                                                                                                                                                                              {{\"core.login.forgotPassword\" | translate}}                                            {{loginHasIssue}}                                                                                  {{\"core.login.login\" | translate}}                                                                                                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'breadcrumbs'},{'name': 'ConsumerDetailComponent', 'selector': 'lib-consumer-detail'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'ExampleComponent', 'selector': ''},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IonIconComponent', 'selector': 'ion-icon'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'map'},{'name': 'MapSelectViewComponent', 'selector': 'lib-map-select-view'},{'name': 'ResultDataViewComponent', 'selector': 'lib-result-data-view'},{'name': 'SideBarComponent', 'selector': 'app-side-bar'},{'name': 'WaterRightDetailComponent', 'selector': 'lib-water-right-detail'}];\n    var DIRECTIVES = [{'name': 'BulmaIsToggleableDirective', 'selector': '.is-toggleable'},{'name': 'LangSelectorDirective', 'selector': '[selectLang]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MapComponent.html":{"url":"components/MapComponent.html","title":"component - MapComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MapComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    wisdom_modules/common/src/lib/map/map.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for displaying maps.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                map\n            \n\n            \n                styleUrls\n                ./map.component.css\n            \n\n\n            \n                template\n                \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                center\n                            \n                            \n                                height\n                            \n                            \n                                    Private\n                                layerConfig\n                            \n                            \n                                    Private\n                                layerData\n                            \n                            \n                                    Private\n                                layerNames\n                            \n                            \n                                    Optional\n                                map\n                            \n                            \n                                    Private\n                                mapElement\n                            \n                            \n                                    Private\n                                markers\n                            \n                            \n                                    Private\n                                    Optional\n                                selectedGeoJsonLayer\n                            \n                            \n                                    Private\n                                    Optional\n                                selectedLayer\n                            \n                            \n                                    Private\n                                selectedShapes\n                            \n                            \n                                tileUrl\n                            \n                            \n                                zoom\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                emitSelection\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                center\n                            \n                            \n                                height\n                            \n                            \n                                layers\n                            \n                            \n                                layerSelectable\n                            \n                            \n                                markers\n                            \n                            \n                                scrollWheelZoom\n                            \n                            \n                                selectedColor\n                            \n                            \n                                tileUrl\n                            \n                            \n                                unselectedColor\n                            \n                            \n                                zoom\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    inputLayers\n                                \n                                \n                                    inputMarkers\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: MapService)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/common/src/lib/map/map.component.ts:185\n                            \n                        \n\n                \n                    \n                            Constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        MapService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to interact with the server for geo data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        center\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/map/map.component.ts:66\n                            \n                        \n                \n                    \n                        Input for the center coordinates of the map.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/map/map.component.ts:56\n                            \n                        \n                \n                    \n                        Input for the height of the map.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        layers\n                    \n                \n                \n                    \n                        Type :         LayerConfig\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/map/map.component.ts:131\n                            \n                        \n                \n                    \n                        Input for the layers that should be displayed.\nThe key of the record is layer key and is also emitted on the selection.\nThe value of the record is an array and the values of that should be the\nfollowing:\n\n  \n    The name of the layer, this will be only used to display a name of\n    the layer (may also be a translation key).\n    // TODO: actually implement translation here\n  \n  \n    This should be the resolution to display the layer at, this may also\nbe\n    null to display the keys directly without any shape intersection\n    resolving.\n  \n  \n    These should be the keys used to display the shapes from.\n    If the given keys are empty or null, this will display everything from\n    the give resolution.\n  \n\n\nAttention: The service needs at least one of the resolution or the\nkeys\nto properly respond.\n```html\n// TODO: update link when geo data docs update\nSee https://wisdom04.vlba.uni-oldenburg.de/repos/service-geo-data-rest/main/api/get-layer\n```\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        layerSelectable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/map/map.component.ts:153\n                            \n                        \n                \n                    \n                        Should the layers be selectable.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        markers\n                    \n                \n                \n                    \n                        Type :         Marker[]\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/map/map.component.ts:156\n                            \n                        \n                \n                    \n                        Markers that should be displayed on the map.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        scrollWheelZoom\n                    \n                \n                \n                    \n                        Type :     boolean | \"center\"\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/map/map.component.ts:79\n                            \n                        \n                \n                    \n                        Input for the option if the map should scroll zoom on mouse scroll.\nIf \"center\" is passed, the map will always zoom onto the center.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedColor\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"#d35a0c\"\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/map/map.component.ts:84\n                            \n                        \n                \n                    \n                        Input for a hex code selected shapes.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        tileUrl\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/map/map.component.ts:61\n                            \n                        \n                \n                    \n                        Input for the tile url of the map.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        unselectedColor\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"#1f5aec\"\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/map/map.component.ts:82\n                            \n                        \n                \n                    \n                        Input for a hex code for unselected shapes.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        zoom\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/map/map.component.ts:71\n                            \n                        \n                \n                    \n                        Input for the map zoom level.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in wisdom_modules/common/src/lib/map/map.component.ts:181\n                            \n                        \n                \n                    \n                        Outputs the currently selected shapes.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        emitSelection\n                        \n                    \n                \n            \n            \n                \n                    \n                    emitSelection()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/common/src/lib/map/map.component.ts:352\n                \n            \n\n\n            \n                \n                    Internally used function to emit the currently selected shapes via the\nselected output.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/common/src/lib/map/map.component.ts:226\n                \n            \n\n\n            \n                \n                    Renders the map with the given input values.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/common/src/lib/map/map.component.ts:196\n                \n            \n\n\n            \n                \n                    While init this sets the input values to the inner, private values.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        center\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"53.1434501, 8.2145521\"\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/map/map.component.ts:68\n                        \n                    \n\n            \n                \n                    Center of the map, defaults to longitude and latitude of Oldenburg.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"500px\"\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/map/map.component.ts:58\n                        \n                    \n\n            \n                \n                    Height of map, defaults to 500px.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        layerConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject({})\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/map/map.component.ts:139\n                        \n                    \n\n            \n                \n                    Subject of the LayerConfig, to be used as\nObservable.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        layerData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject>\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject({})\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/map/map.component.ts:145\n                        \n                    \n\n            \n                \n                    Subject of the pairs of Layerkey and LayerData,\nto be used as Observable.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        layerNames\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Record\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/map/map.component.ts:150\n                        \n                    \n\n            \n                \n                    Subject of the layer names mapped by the LayerKey.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        map\n                        \n                    \n                \n            \n                \n                    \n                        Type :     L.Map\n\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/map/map.component.ts:163\n                        \n                    \n\n            \n                \n                    The leaflet map that is displayed here.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        mapElement\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('map')\n                        \n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/map/map.component.ts:53\n                        \n                    \n\n            \n                \n                    The ref to the map html element.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        markers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/map/map.component.ts:160\n                        \n                    \n\n            \n                \n                    Markers Subject to be used as Observable.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        selectedGeoJsonLayer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     L.Layer\n\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/map/map.component.ts:178\n                        \n                    \n\n            \n                \n                    The currently selected geo json layer.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        selectedLayer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LayerKey\n\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/map/map.component.ts:176\n                        \n                    \n\n            \n                \n                    The currently selected layer in the map control.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        selectedShapes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Record>\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/map/map.component.ts:170\n                        \n                    \n\n            \n                \n                    Internally holds all elements that are currently selected.\nThe set holds all keys of shapes currently selected.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tileUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"https://tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/map/map.component.ts:63\n                        \n                    \n\n            \n                \n                    Tile url of the map, defaults to the osm.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        zoom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 7\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/map/map.component.ts:73\n                        \n                    \n\n            \n                \n                    Zoom level of the map, defaults to 7.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        inputLayers\n                    \n                \n\n\n                \n                    \n                        setinputLayers(layerConfig: LayerConfig)\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/common/src/lib/map/map.component.ts:131\n                                \n                            \n                    \n                        \n                                Input for the layers that should be displayed.\nThe key of the record is layer key and is also emitted on the selection.\nThe value of the record is an array and the values of that should be the\nfollowing:\n\n  \n    The name of the layer, this will be only used to display a name of\n    the layer (may also be a translation key).\n    // TODO: actually implement translation here\n  \n  \n    This should be the resolution to display the layer at, this may also\nbe\n    null to display the keys directly without any shape intersection\n    resolving.\n  \n  \n    These should be the keys used to display the shapes from.\n    If the given keys are empty or null, this will display everything from\n    the give resolution.\n  \n\n\nAttention: The service needs at least one of the resolution or the\nkeys\nto properly respond.\n```html\n// TODO: update link when geo data docs update\nSee https://wisdom04.vlba.uni-oldenburg.de/repos/service-geo-data-rest/main/api/get-layer\n```\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            layerConfig\n                                                    \n                                                            \n                                                                            LayerConfig\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                        Example :\n                                            \n                                                &lt;map\n  height=&quot;70vh&quot;\n  [layers]=&quot;{\n    full_res: [&#39;All of municipal resolution&#39;, Resolution.MUNICIPAL, null],\n    only_keys: [&#39;Only show exactly these&#39;, null, [&#39;01&#39;, &#39;034030000000&#39;]],\n    mixed: [&#39;Show district resolution&#39;, Resolution.DISTRICT, [&#39;01&#39;,\n  &#39;034030000000&#39;]]\n  }&quot;\n&gt;&lt;/map&gt;\n\n// TODO: update link when geo data docs update\n                                            \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        inputMarkers\n                    \n                \n\n\n                \n                    \n                        setinputMarkers(markers: Marker[])\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/common/src/lib/map/map.component.ts:156\n                                \n                            \n                    \n                        \n                                Markers that should be displayed on the map.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            markers\n                                                    \n                                                            \n                                                                            Marker[]\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n  ViewChild,\n  Component,\n  EventEmitter,\n  OnInit,\n  AfterViewInit,\n  Input,\n  Output,\n  ElementRef\n} from \"@angular/core\";\nimport {BehaviorSubject, Subject} from \"rxjs\";\n\nimport * as L from \"leaflet\";\n\nimport {MapService} from \"./map.service\";\nimport LayerData from \"./layer-data\";\nimport {Resolution} from \"./resolution\";\nimport {Marker} from \"./marker\";\n\nimport * as LX from \"./invert-selection\";\n\nimport \"leaflet.markercluster\";\n\n/**\n * GeoJSON data type used by Leaflet.\n * @private\n */\ntype GeoJsonObject = Parameters[0];\n\n/** Type alias to enforce the meaning of the layer keys. */\ntype LayerKey = string;\n\n/** A layer config for the input of {@link MapComponent.inputLayers}. */\ntype LayerConfig = Record;\n\n/**\n * Component for displaying maps.\n */\n@Component({\n  selector: \"map\",\n  template: `\n    \n      \n    \n  `,\n  styleUrls: [\n    \"./map.component.css\"\n  ]\n})\nexport class MapComponent implements OnInit, AfterViewInit {\n\n  /** The ref to the map html element. */\n  @ViewChild(\"map\") private mapElement!: ElementRef;\n\n  /** Input for the height of the map. */\n  @Input(\"height\") inputHeight?: string;\n  /** Height of map, defaults to 500px. */\n  height = \"500px\";\n\n  /** Input for the tile url of the map. */\n  @Input(\"tileUrl\") inputTileUrl?: string;\n  /** Tile url of the map, defaults to the osm. */\n  tileUrl = \"https://tile.openstreetmap.org/{z}/{x}/{y}.png\";\n\n  /** Input for the center coordinates of the map. */\n  @Input(\"center\") inputCenter?: string;\n  /** Center of the map, defaults to longitude and latitude of Oldenburg. */\n  center = \"53.1434501, 8.2145521\";\n\n  /** Input for the map zoom level. */\n  @Input(\"zoom\") inputZoom?: string;\n  /** Zoom level of the map, defaults to 7. */\n  zoom = 7;\n\n  /**\n   * Input for the option if the map should scroll zoom on mouse scroll.\n   * If \"center\" is passed, the map will always zoom onto the center.\n   */\n  @Input(\"scrollWheelZoom\") inputScrollWheelZoom: boolean | \"center\" = true;\n\n  /** Input for a hex code for unselected shapes. */\n  @Input(\"unselectedColor\") unselectedColor = \"#1f5aec\";\n  /** Input for a hex code selected shapes. */\n  @Input(\"selectedColor\") selectedColor = \"#d35a0c\";\n\n  /**\n   * Input for the layers that should be displayed.\n   *\n   * The key of the record is layer key and is also emitted on the selection.\n   * The value of the record is an array and the values of that should be the\n   * following:\n   * \n   *   \n   *     The name of the layer, this will be only used to display a name of\n   *     the layer (may also be a translation key).\n   *     // TODO: actually implement translation here\n   *   \n   *   \n   *     This should be the resolution to display the layer at, this may also\n   * be\n   *     null to display the keys directly without any shape intersection\n   *     resolving.\n   *   \n   *   \n   *     These should be the keys used to display the shapes from.\n   *     If the given keys are empty or null, this will display everything from\n   *     the give resolution.\n   *   \n   * \n   *\n   * **Attention**: The service needs at least one of the resolution or the\n   * keys\n   * to properly respond.\n   *\n   * @example\n   * ```html\n   * \n   * ```\n   * // TODO: update link when geo data docs update\n   * @see https://wisdom04.vlba.uni-oldenburg.de/repos/service-geo-data-rest/main/api/get-layer\n   */\n  @Input(\"layers\")\n  set inputLayers(layerConfig: LayerConfig) {\n    this.layerConfig.next(layerConfig);\n  };\n  /**\n   * {@link Subject} of the {@link LayerConfig}, to be used as\n   * {@link Observable}.\n   * @private\n   */\n  private layerConfig: BehaviorSubject = new BehaviorSubject({});\n  /**\n   * {@link Subject} of the pairs of {@link Layerkey} and {@link LayerData},\n   * to be used as {@link Observable}.\n   * @private\n   */\n  private layerData: BehaviorSubject> = new BehaviorSubject({});\n  /**\n   * {@link Subject} of the layer names mapped by the {@link LayerKey}.\n   * @private\n   */\n  private layerNames: Record = {};\n\n  /** Should the layers be selectable. */\n  @Input(\"layerSelectable\") inputLayerSelectable: boolean = true;\n\n  /** Markers that should be displayed on the map. */\n  @Input(\"markers\") set inputMarkers(markers: Marker[]) {\n    this.markers.next(markers);\n  };\n  /** {@link Marker}s {@link Subject} to be used as {@link Observable}. */\n  private markers = new BehaviorSubject([]);\n\n  /** The leaflet map that is displayed here. */\n  map?: L.Map;\n\n  /**\n   * Internally holds all elements that are currently selected.\n   *\n   * The set holds all keys of shapes currently selected.\n   */\n  private selectedShapes: Record> = {};\n\n  /**\n   * The currently selected layer in the map control.\n   * @private\n   */\n  private selectedLayer?: LayerKey;\n  /** The currently selected geo json layer. */\n  private selectedGeoJsonLayer?: L.Layer;\n\n  /** Outputs the currently selected shapes. */\n  @Output() selected = new EventEmitter();\n\n  /**\n   * Constructor.\n   * @param service Service to interact with the server for geo data\n   */\n  constructor(private service: MapService) {}\n\n  /**\n   * While init this sets the input values to the inner, private values.\n   */\n  ngOnInit(): void {\n    if (this.inputHeight) this.height = this.inputHeight;\n    if (this.inputTileUrl) this.tileUrl = this.inputTileUrl;\n    if (this.inputCenter) this.center = this.inputCenter;\n    if (this.inputZoom) this.zoom = parseInt(this.inputZoom);\n\n    this.layerConfig.subscribe(async config => {\n      let layerData = {};\n      let requests: Record> = {};\n      for (\n        let [layerKey, [displayName, resolution, keys]]\n        of Object.entries(config)\n      ) {\n        this.layerNames[layerKey] = displayName;\n        requests[layerKey] = this.service.fetchLayerData(\n          resolution,\n          keys?.map(k => k.split(\" \").join(\"\"))\n        );\n      }\n      let fetched: Record = {};\n      for (let [layerKey, data] of Object.entries(requests)) {\n        fetched[layerKey] = await data;\n      }\n      this.layerData.next(fetched);\n    });\n  }\n\n  /**\n   * Renders the map with the given input values.\n   */\n  ngAfterViewInit(): void {\n    const nativeMapElement = this.mapElement.nativeElement;\n\n    const map = L.map(nativeMapElement, {\n      scrollWheelZoom: this.inputScrollWheelZoom,\n      center: this.center\n        .split(\", \")\n        .map(str => parseFloat(str)) as [number, number],\n      zoom: this.zoom\n    });\n    map.getRenderer(map as any).options.padding = 100;\n\n    L.tileLayer(this.tileUrl).addTo(map);\n\n    this.map = map;\n    let layersControl: L.Control.Layers;\n    // TODO: make a clear type from this\n    let invertSelectionControl: any;\n\n    this.layerData.subscribe(layerData => {\n      let displayLayer = true;\n\n      // reset selected data\n      this.selectedShapes = {};\n\n      if (layersControl) map.removeControl(layersControl);\n      layersControl = L.control.layers();\n      let layers: L.Layer[] = [];\n\n      if (this.selectedGeoJsonLayer) map.removeLayer(this.selectedGeoJsonLayer);\n\n      // update map with new layer data\n      for (let [key, data] of Object.entries(layerData)) {\n        let selectedShapes = this.selectedShapes[key] = new Set();\n        // use for every layer a new geoJSON layer\n        let geoJsonLayer = L.geoJSON(undefined, {\n          attribution: `\n            \n              📐 © GeoBasis-DE / BKG 2022\n            \n            |\n            \n              🔖 dl-de/by-2-0\n            \n          `,\n          style: {color: this.unselectedColor},\n          onEachFeature: (feature, layer) => {\n            // used properties are injected later into the feature\n            layer.bindTooltip(feature.properties.name, {direction: \"center\"});\n            if (this.inputLayerSelectable) {\n              layer.on(\"click\", () => {\n                let [key, path] = [feature.properties.key, layer as L.Path];\n                if (selectedShapes.has(key)) {\n                  path.setStyle({color: this.unselectedColor});\n                  path.bringToBack();\n                  selectedShapes.delete(key);\n                }\n                else {\n                  path.setStyle({color: this.selectedColor});\n                  path.bringToFront();\n                  selectedShapes.add(key);\n                }\n                this.emitSelection();\n              });\n            }\n            layers.push(layer);\n          }\n        });\n        for (let shape of data.shapes) {\n          geoJsonLayer.addData(Object.assign(shape.geoJson, {properties: {\n            name: shape.name,\n            key: shape.key\n          }}));\n          if (displayLayer) {\n            geoJsonLayer.addTo(map);\n            displayLayer = false;\n            this.selectedLayer = key;\n            this.selectedGeoJsonLayer = geoJsonLayer;\n            map.fitBounds([\n              data.box[0],\n              data.box[2]\n            ]);\n          }\n        }\n        layersControl.addBaseLayer(geoJsonLayer, this.layerNames[key]);\n        map.on(\"baselayerchange\", ({layer}) => {\n          if (layer == geoJsonLayer) {\n            this.selectedGeoJsonLayer = layer;\n            this.selectedLayer = key;\n            this.emitSelection();\n          }\n        })\n      }\n      if (Object.keys(layerData).length > 1) layersControl.addTo(map);\n\n      if (this.inputLayerSelectable) {\n        if (invertSelectionControl) map.removeControl(invertSelectionControl);\n        invertSelectionControl = LX.control.invertSelection(() => {\n          for (let layer of layers) {\n            layer.fire(\"click\");\n          }\n        });\n        invertSelectionControl.addTo(map);\n      }\n    });\n\n    let markerLayer = L.markerClusterGroup();\n    this.markers.subscribe(markers => {\n      markerLayer.removeFrom(map);\n      markerLayer = L.markerClusterGroup();\n      for (let marker of markers) {\n        let lMarker = L.marker(marker.coordinates);\n        if (marker.icon) lMarker.setIcon(marker.icon);\n        if (marker.tooltip) lMarker.bindTooltip(marker.tooltip);\n        if (marker.onClick) lMarker.on(\"click\", marker.onClick)\n        lMarker.addTo(markerLayer);\n      }\n      markerLayer.addTo(map);\n    });\n  }\n\n  /**\n   * Internally used function to emit the currently selected shapes via the\n   * {@link selected} output.\n   * @private\n   */\n  private emitSelection(): void {\n    let layerKey = this.selectedLayer!;\n    let layerName = this.layerNames[layerKey]!;\n    let keys = Array.from(this.selectedShapes[layerKey]);\n    this.selected.emit({\n      layer: layerKey,\n      name: layerName,\n      keys\n    });\n  }\n}\n\n    \n\n\n    \n                \n                    ./map.component.css\n                \n                .map-container {}\n\n.map {\n  height: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'breadcrumbs'},{'name': 'ConsumerDetailComponent', 'selector': 'lib-consumer-detail'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'ExampleComponent', 'selector': ''},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IonIconComponent', 'selector': 'ion-icon'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'map'},{'name': 'MapSelectViewComponent', 'selector': 'lib-map-select-view'},{'name': 'ResultDataViewComponent', 'selector': 'lib-result-data-view'},{'name': 'SideBarComponent', 'selector': 'app-side-bar'},{'name': 'WaterRightDetailComponent', 'selector': 'lib-water-right-detail'}];\n    var DIRECTIVES = [{'name': 'BulmaIsToggleableDirective', 'selector': '.is-toggleable'},{'name': 'LangSelectorDirective', 'selector': '[selectLang]'}];\n    var ACTUAL_COMPONENT = {'name': 'MapComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MapDB.html":{"url":"interfaces/MapDB.html","title":"interface - MapDB","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MapDB\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/common/src/lib/map/map.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The schema the map db uses.\n\n            \n\n            \n                Extends\n            \n            \n                    DBSchema\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            queries\n                                        \n                                \n                                \n                                        \n                                            shapes\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        queries\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        queries:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    All cached queries, used to identify if a query is already in the db.\nThe key[0] represents the resolution of the query, a -1 represents no\nresolution.\nThe rest are the given keys.\nThe value is an array of all the keys the query returned.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shapes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        shapes:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    All shapes in the indexed db.\nThe key is the key of the shape.\nThe value is some ShapeData.\nSince LayerData is simply an array of ShapeData, this may\nbe used to reconstruct some layer data.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  HttpClient,\n  HttpContext,\n  HttpHeaders,\n  HttpParams\n} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\nimport {openDB, DBSchema} from \"idb\";\nimport {Layer} from \"leaflet\";\nimport {firstValueFrom} from \"rxjs\";\n\nimport {Resolution} from \"./resolution\";\nimport {LayerData, ShapeData, GeoJsonObject} from \"./layer-data\";\nimport {USE_API_URL} from \"../http-context/use-api-url\";\nimport {USE_LOADER} from \"../http-context/use-loader\";\n\n/** API url for the map to request data from. */\nconst API_URL = \"geodata\";\n/** Indexed DB name. */\nconst DB_NAME = \"map-db\";\n/** Indexed DB schema version. */\nconst SCHEMA_V = 2;\n\n/** The schema the map db uses. */\ninterface MapDB extends DBSchema {\n  /**\n   * All cached queries, used to identify if a query is already in the db.\n   *\n   * The key[0] represents the resolution of the query, a -1 represents no\n   * resolution.\n   * The rest are the given keys.\n   *\n   * The value is an array of all the keys the query returned.\n   */\n  queries: {\n    key: [number, ...string[]],\n    value: {\n      box: LayerData[\"box\"],\n      shapes: string[]\n    }\n  },\n\n  /**\n   * All shapes in the indexed db.\n   *\n   * The key is the key of the shape.\n   *\n   * The value is some {@link ShapeData}.\n   * Since {@link LayerData} is simply an array of {@link ShapeData}, this may\n   * be used to reconstruct some layer data.\n   */\n  shapes: {\n    key: string,\n    value: ShapeData\n  }\n}\n\n/**\n * Service to interact with the geo data api to fetch map data.\n *\n * Fetched map data is cached in the indexedDB and therefore only retrieved\n * lazily.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MapService {\n\n  /** Indexed DB client. */\n  private readonly idb;\n\n  /**\n   * Constructor.\n   * @param http Client to request geo data\n   */\n  constructor(private http: HttpClient) {\n    this.idb = openDB(DB_NAME, SCHEMA_V, {\n      upgrade(db, oldV) {\n        if (oldV) {\n          db.deleteObjectStore(\"queries\");\n          db.deleteObjectStore(\"shapes\");\n        }\n        db.createObjectStore(\"queries\");\n        db.createObjectStore(\"shapes\");\n      }\n    });\n  }\n\n  /**\n   * Asynchronously fetch the map from the geo data rest api.\n   *\n   * Will only fetch data if not already stored in the indexedDB.\n   * @param resolution The resolution the of the shapes returned by the service\n   * @param keys The keys given to look for shapes\n   * @param force If true, this will ignore the cache and request everything\n   */\n  async fetchLayerData(\n    resolution: Resolution | null | undefined,\n    keys?: string[] | null,\n    force: boolean = false\n  ): Promise {\n    // prepare db and keys\n    let idb = await this.idb;\n    let trimmedKeys = keys ?? [];\n    let resolutionNum = resolution ? Resolution.toKeyLength(resolution) : -1;\n    let queryKey = [resolutionNum, ...trimmedKeys] as [number, ...string[]];\n\n    // check for cached keys or ignore if is force is true\n    let cachedQuery = force ? undefined : await idb.get(\"queries\", queryKey);\n    if (cachedQuery) {\n      let tx = idb.transaction(\"shapes\", \"readonly\");\n      let store = tx.objectStore(\"shapes\");\n      let shapes: ShapeData[] = [];\n      let operations = [];\n      for (let key of cachedQuery.shapes) {\n        operations.push(store.get(key).then(shape => {\n          if (shape) shapes.push(shape);\n        }));\n      }\n      operations.push(tx.done);\n      await Promise.all(operations);\n      return {\n        box: cachedQuery.box,\n        shapes\n      };\n    }\n\n    // if cachedKeys was empty, request data from the server\n    let params = new HttpParams();\n    if (resolution) params = params.set(\"resolution\", resolution);\n    if (keys && keys.length) params = params.appendAll({key: keys.map(k => {\n      if (resolution) return k.substring(0, resolutionNum);\n      return k;\n    })});\n\n    let rawLayerData = await firstValueFrom(this.http.get(`${API_URL}/`, {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\"\n      }),\n      params,\n      responseType: \"json\",\n      context: new HttpContext()\n        .set(USE_API_URL, true)\n        .set(USE_LOADER, true)\n    }));\n\n    rawLayerData.shapes = rawLayerData.shapes.map(rawShape => ({\n      nutsKey: rawShape.nuts_key,\n      geoJson: rawShape.geojson,\n      ...rawShape\n    }));\n\n    let layerData = rawLayerData as unknown as LayerData;\n\n    // store the requested data back into the db\n    let tx = idb.transaction([\"queries\", \"shapes\"], \"readwrite\");\n    let operations = [];\n    let shapeStore = tx.objectStore(\"shapes\");\n    let shapeKeys = [];\n    for (let shape of layerData.shapes) {\n      operations.push(shapeStore.put(shape, shape.key));\n      shapeKeys.push(shape.key);\n    }\n    let queryStore = tx.objectStore(\"queries\");\n    operations.push(queryStore.put({\n      box: layerData.box,\n      shapes: shapeKeys\n    }, queryKey));\n    await Promise.all(operations);\n\n    return layerData;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MapSelectViewComponent.html":{"url":"components/MapSelectViewComponent.html","title":"component - MapSelectViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MapSelectViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    wisdom_modules/water-usage-forecasts/src/lib/views/map-select-view/map-select-view.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-map-select-view\n            \n\n\n\n\n            \n                templateUrl\n                ./map-select-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                keys\n                            \n                            \n                                Resolution\n                            \n                            \n                                selectionReady\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                mapSelection\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(breadcrumbs: BreadcrumbsService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/map-select-view/map-select-view.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        breadcrumbs\n                                                  \n                                                        \n                                                                        BreadcrumbsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        mapSelection\n                        \n                    \n                \n            \n            \n                \nmapSelection(selection: literal type)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/water-usage-forecasts/src/lib/views/map-select-view/map-select-view.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    selection\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/water-usage-forecasts/src/lib/views/map-select-view/map-select-view.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        keys\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/map-select-view/map-select-view.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Resolution\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Resolution\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/map-select-view/map-select-view.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectionReady\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/map-select-view/map-select-view.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from \"@angular/core\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {Resolution, BreadcrumbsService} from \"common\";\n\n@Component({\n  selector: 'lib-map-select-view',\n  templateUrl: './map-select-view.component.html'\n})\nexport class MapSelectViewComponent implements OnInit {\n\n  // imported resolution from the map component\n  Resolution = Resolution;\n\n  keys?: string[];\n\n  selectionReady = false;\n\n  constructor(\n    private breadcrumbs: BreadcrumbsService,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit(): void {\n    this.breadcrumbs.set(0, {\n      icon: \"calendar\",\n      text: \"water-usage-forecasts.breadcrumbs.water-consumption-prognosis\",\n      link: \"/water-usage-forecasts\"\n    })\n  }\n\n  mapSelection(\n    selection: {keys: string[]}\n  ) {\n    this.keys = selection.keys;\n    this.selectionReady = !!selection.keys.length;\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n  \n\n\n  \n    \n      \n        \n      \n      water-usage-forecasts.map-select.get-results\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        water-usage-forecasts.map-select.get-results      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'breadcrumbs'},{'name': 'ConsumerDetailComponent', 'selector': 'lib-consumer-detail'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'ExampleComponent', 'selector': ''},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IonIconComponent', 'selector': 'ion-icon'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'map'},{'name': 'MapSelectViewComponent', 'selector': 'lib-map-select-view'},{'name': 'ResultDataViewComponent', 'selector': 'lib-result-data-view'},{'name': 'SideBarComponent', 'selector': 'app-side-bar'},{'name': 'WaterRightDetailComponent', 'selector': 'lib-water-right-detail'}];\n    var DIRECTIVES = [{'name': 'BulmaIsToggleableDirective', 'selector': '.is-toggleable'},{'name': 'LangSelectorDirective', 'selector': '[selectLang]'}];\n    var ACTUAL_COMPONENT = {'name': 'MapSelectViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MapService.html":{"url":"injectables/MapService.html","title":"injectable - MapService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MapService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/common/src/lib/map/map.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service to interact with the geo data api to fetch map data.\nFetched map data is cached in the indexedDB and therefore only retrieved\nlazily.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                idb\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                fetchLayerData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/common/src/lib/map/map.service.ts:70\n                            \n                        \n\n                \n                    \n                            Constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Client to request geo data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        fetchLayerData\n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchLayerData(resolution: Resolution | null | undefined, keys?: string[] | null, force: boolean)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/common/src/lib/map/map.service.ts:97\n                \n            \n\n\n            \n                \n                    Asynchronously fetch the map from the geo data rest api.\nWill only fetch data if not already stored in the indexedDB.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    resolution\n                                    \n                                                Resolution | null | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The resolution the of the shapes returned by the service\n\n                                    \n                                \n                                \n                                    keys\n                                    \n                                            string[] | null\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The keys given to look for shapes\n\n                                    \n                                \n                                \n                                    force\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                    \n                                        If true, this will ignore the cache and request everything\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        idb\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in wisdom_modules/common/src/lib/map/map.service.ts:70\n                        \n                    \n\n            \n                \n                    Indexed DB client.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpClient,\n  HttpContext,\n  HttpHeaders,\n  HttpParams\n} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\nimport {openDB, DBSchema} from \"idb\";\nimport {Layer} from \"leaflet\";\nimport {firstValueFrom} from \"rxjs\";\n\nimport {Resolution} from \"./resolution\";\nimport {LayerData, ShapeData, GeoJsonObject} from \"./layer-data\";\nimport {USE_API_URL} from \"../http-context/use-api-url\";\nimport {USE_LOADER} from \"../http-context/use-loader\";\n\n/** API url for the map to request data from. */\nconst API_URL = \"geodata\";\n/** Indexed DB name. */\nconst DB_NAME = \"map-db\";\n/** Indexed DB schema version. */\nconst SCHEMA_V = 2;\n\n/** The schema the map db uses. */\ninterface MapDB extends DBSchema {\n  /**\n   * All cached queries, used to identify if a query is already in the db.\n   *\n   * The key[0] represents the resolution of the query, a -1 represents no\n   * resolution.\n   * The rest are the given keys.\n   *\n   * The value is an array of all the keys the query returned.\n   */\n  queries: {\n    key: [number, ...string[]],\n    value: {\n      box: LayerData[\"box\"],\n      shapes: string[]\n    }\n  },\n\n  /**\n   * All shapes in the indexed db.\n   *\n   * The key is the key of the shape.\n   *\n   * The value is some {@link ShapeData}.\n   * Since {@link LayerData} is simply an array of {@link ShapeData}, this may\n   * be used to reconstruct some layer data.\n   */\n  shapes: {\n    key: string,\n    value: ShapeData\n  }\n}\n\n/**\n * Service to interact with the geo data api to fetch map data.\n *\n * Fetched map data is cached in the indexedDB and therefore only retrieved\n * lazily.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MapService {\n\n  /** Indexed DB client. */\n  private readonly idb;\n\n  /**\n   * Constructor.\n   * @param http Client to request geo data\n   */\n  constructor(private http: HttpClient) {\n    this.idb = openDB(DB_NAME, SCHEMA_V, {\n      upgrade(db, oldV) {\n        if (oldV) {\n          db.deleteObjectStore(\"queries\");\n          db.deleteObjectStore(\"shapes\");\n        }\n        db.createObjectStore(\"queries\");\n        db.createObjectStore(\"shapes\");\n      }\n    });\n  }\n\n  /**\n   * Asynchronously fetch the map from the geo data rest api.\n   *\n   * Will only fetch data if not already stored in the indexedDB.\n   * @param resolution The resolution the of the shapes returned by the service\n   * @param keys The keys given to look for shapes\n   * @param force If true, this will ignore the cache and request everything\n   */\n  async fetchLayerData(\n    resolution: Resolution | null | undefined,\n    keys?: string[] | null,\n    force: boolean = false\n  ): Promise {\n    // prepare db and keys\n    let idb = await this.idb;\n    let trimmedKeys = keys ?? [];\n    let resolutionNum = resolution ? Resolution.toKeyLength(resolution) : -1;\n    let queryKey = [resolutionNum, ...trimmedKeys] as [number, ...string[]];\n\n    // check for cached keys or ignore if is force is true\n    let cachedQuery = force ? undefined : await idb.get(\"queries\", queryKey);\n    if (cachedQuery) {\n      let tx = idb.transaction(\"shapes\", \"readonly\");\n      let store = tx.objectStore(\"shapes\");\n      let shapes: ShapeData[] = [];\n      let operations = [];\n      for (let key of cachedQuery.shapes) {\n        operations.push(store.get(key).then(shape => {\n          if (shape) shapes.push(shape);\n        }));\n      }\n      operations.push(tx.done);\n      await Promise.all(operations);\n      return {\n        box: cachedQuery.box,\n        shapes\n      };\n    }\n\n    // if cachedKeys was empty, request data from the server\n    let params = new HttpParams();\n    if (resolution) params = params.set(\"resolution\", resolution);\n    if (keys && keys.length) params = params.appendAll({key: keys.map(k => {\n      if (resolution) return k.substring(0, resolutionNum);\n      return k;\n    })});\n\n    let rawLayerData = await firstValueFrom(this.http.get(`${API_URL}/`, {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\"\n      }),\n      params,\n      responseType: \"json\",\n      context: new HttpContext()\n        .set(USE_API_URL, true)\n        .set(USE_LOADER, true)\n    }));\n\n    rawLayerData.shapes = rawLayerData.shapes.map(rawShape => ({\n      nutsKey: rawShape.nuts_key,\n      geoJson: rawShape.geojson,\n      ...rawShape\n    }));\n\n    let layerData = rawLayerData as unknown as LayerData;\n\n    // store the requested data back into the db\n    let tx = idb.transaction([\"queries\", \"shapes\"], \"readwrite\");\n    let operations = [];\n    let shapeStore = tx.objectStore(\"shapes\");\n    let shapeKeys = [];\n    for (let shape of layerData.shapes) {\n      operations.push(shapeStore.put(shape, shape.key));\n      shapeKeys.push(shape.key);\n    }\n    let queryStore = tx.objectStore(\"queries\");\n    operations.push(queryStore.put({\n      box: layerData.box,\n      shapes: shapeKeys\n    }, queryKey));\n    await Promise.all(operations);\n\n    return layerData;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Marker.html":{"url":"interfaces/Marker.html","title":"interface - Marker","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Marker\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/common/src/lib/map/marker.ts\n        \n\n\n            \n                Description\n            \n            \n                Marker interface for creating custom markers on a MapComponent.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            coordinates\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            icon\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            onClick\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            tooltip\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        coordinates\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        coordinates:     [number, number]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [number, number]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Coordinates of the marker.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:     L.Icon | L.DivIcon\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     L.Icon | L.DivIcon\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional icon for the marker, if not set a default one will be used.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onClick\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        onClick:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Event handler for a click on the marker.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tooltip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tooltip:     Content |  | Tooltip\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Content |  | Tooltip\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Displayed tooltip when hovering the marker.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {Content, LeafletMouseEvent, Layer, Tooltip} from \"leaflet\";\n\nimport * as L from \"leaflet\";\n\n/** Marker interface for creating custom markers on a {@link MapComponent}. */\nexport interface Marker {\n  /** Coordinates of the marker. */\n  coordinates: [number, number],\n  /** Displayed tooltip when hovering the marker. */\n  tooltip?: Content | ((layer: Layer) => Content) | Tooltip,\n  /** Event handler for a click on the marker. */\n  onClick?: (evt: LeafletMouseEvent) => void,\n  /** Optional icon for the marker, if not set a default one will be used. */\n  icon?: L.Icon | L.DivIcon\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ModuleProvider.html":{"url":"classes/ModuleProvider.html","title":"class - ModuleProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ModuleProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/core/src/app/module-provider.ts\n        \n\n\n            \n                Description\n            \n            \n                Class to provide data from the reexported wisdom modules.\nReads its data from the workspace's \"module.ts\".\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                langs\n                            \n                            \n                                    Static\n                                routes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Private\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/core/src/app/module-provider.ts:13\n                            \n                        \n\n                \n                    \n                            This class is a pure utility class and doesn't need constructing.\n\n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        langs\n                        \n                    \n                \n            \n            \n                \n                    \n                    langs(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/module-provider.ts:40\n                \n            \n\n\n            \n                \n                    Get the translations from the wisdom modules given a language key.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The language key for the translations\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        routes\n                        \n                    \n                \n            \n            \n                \n                    \n                    routes()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/module-provider.ts:24\n                \n            \n\n\n            \n                \n                    Get the routes the wisdom modules want to be available at.\n\n\n                    \n                        Returns :         Routes\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Routes} from \"@angular/router\";\n\nimport {AuthGuard} from \"./auth/auth.guard\";\nimport {LoaderGuard} from \"./frame/loader/loader.guard\";\n\nimport * as modules from \"../../../../modules\";\n\n/**\n * Class to provide data from the reexported wisdom modules.\n *\n * Reads its data from the workspace's \"module.ts\".\n */\nexport class ModuleProvider {\n\n  /**\n   * This class is a pure utility class and doesn't need constructing.\n   * @private\n   */\n  private constructor() {}\n\n  /**\n   * Get the routes the wisdom modules want to be available at.\n   */\n  static routes(): Routes {\n    let routes: Routes = [];\n    for (let module of Object.values(modules)) {\n      let insertRoute = module.wisdomInterface.route;\n      if (!insertRoute.canActivate) insertRoute.canActivate = [];\n      // TODO: add ScopeGuard here\n      insertRoute.canActivate.push(AuthGuard, LoaderGuard);\n      routes.push(insertRoute);\n    }\n    return routes;\n  }\n\n  /**\n   * Get the translations from the wisdom modules given a language key.\n   * @param lang The language key for the translations\n   */\n  static langs(lang: string) {\n    let collectedLang = {};\n    for (let module of Object.values(modules)) {\n      let moduleLang = module.wisdomInterface.translations[lang];\n      if (moduleLang) {\n        Object.assign(collectedLang, moduleLang);\n      }\n    }\n    return collectedLang;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/QueryParameterGuard.html":{"url":"guards/QueryParameterGuard.html","title":"guard - QueryParameterGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    QueryParameterGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                wisdom_modules/common/src/lib/guards/query-parameter.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard to check if certain query parameters are set.\nIn the data attribute of route it expects an optional redirectTo\ncontaining an Observable, a Promise or a direct\nUrlTree or a string that will be passed to Router#parseUrl\nand queryParams containing a string or an array of strings.\n\nredirect will be used when the check fails.\nqueryParams will be iterated to check for the keys\n\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/common/src/lib/guards/query-parameter.guard.ts:25\n                            \n                        \n\n                \n                    \n                            Constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router used to parse redirect entries\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/common/src/lib/guards/query-parameter.guard.ts:41\n                \n            \n\n\n            \n                \n                    Whether the route can be activated.\nFor more info check QueryParameterGuard.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Currently activated route snapshot\n\n                                    \n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Current state of the router\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {Injectable} from \"@angular/core\";\nimport {\n  CanActivate,\n  Router,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree\n} from \"@angular/router\";\nimport {Observable} from \"rxjs\";\n\n/**\n * Guard to check if certain query parameters are set.\n *\n * In the `data` attribute of route it expects an optional `redirectTo`\n * containing an {@link Observable}, a {@link Promise} or a direct\n * {@link UrlTree} or a string that will be passed to {@link Router#parseUrl}\n * and `queryParams` containing a string or an array of strings.\n *\n * - `redirect` will be used when the check fails.\n * - `queryParams` will be iterated to check for the keys\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class QueryParameterGuard implements CanActivate {\n\n  /**\n   * Constructor.\n   * @param router Router used to parse redirect entries\n   */\n  constructor(private router: Router) {}\n\n  /**\n   * Whether the route can be activated.\n   *\n   * For more info check {@link QueryParameterGuard}.\n   *\n   * @param route Currently activated route snapshot\n   * @param state Current state of the router\n   */\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean | UrlTree {\n    let redirect  = route.data[\"redirect\"] ?? false;\n    if (typeof redirect === \"string\") redirect = this.router.parseUrl(redirect);\n    for (let param of [route.data[\"queryParams\"] ?? []].flat()) {\n      if (route.queryParams[param] === undefined) return redirect;\n    }\n    return true;\n  }\n\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResultDataViewComponent.html":{"url":"components/ResultDataViewComponent.html","title":"component - ResultDataViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ResultDataViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    wisdom_modules/water-usage-forecasts/src/lib/views/result-data-view/result-data-view.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component displaying the Results from the water right forecasts.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-result-data-view\n            \n\n\n\n\n            \n                templateUrl\n                ./result-data-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                areaComponents\n                            \n                            \n                                consumerAreaData\n                            \n                            \n                                consumerGroupData\n                            \n                            \n                                didFinish\n                            \n                            \n                                key\n                            \n                            \n                                markers\n                            \n                            \n                                Object\n                            \n                            \n                                refProgSplit\n                            \n                            \n                                regressionMethod\n                            \n                            \n                                Resolution\n                            \n                            \n                                    Optional\n                                response\n                            \n                            \n                                selection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                chartLegendFilter\n                            \n                            \n                                chartLegendOnClick\n                            \n                            \n                                    Private\n                                fetchData\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                setBreadCrumbs\n                            \n                            \n                                    Private\n                                updateAreaComponents\n                            \n                            \n                                    Private\n                                updateGraphs\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    method\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: WaterUsageForecastsService, waterRightService: WaterRightsService, consumersService: ConsumersService, route: ActivatedRoute, router: Router, mapService: MapService, breadcrumbs: BreadcrumbsService)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/result-data-view/result-data-view.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        WaterUsageForecastsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        waterRightService\n                                                  \n                                                        \n                                                                        WaterRightsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        consumersService\n                                                  \n                                                        \n                                                                        ConsumersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mapService\n                                                  \n                                                        \n                                                                        MapService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        breadcrumbs\n                                                  \n                                                        \n                                                                        BreadcrumbsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        chartLegendFilter\n                        \n                    \n                \n            \n            \n                \nchartLegendFilter(item: LegendItem, data: ChartData)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/water-usage-forecasts/src/lib/views/result-data-view/result-data-view.component.ts:243\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                            LegendItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                            ChartData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartLegendOnClick\n                        \n                    \n                \n            \n            \n                \nchartLegendOnClick(event: ChartEvent, item: LegendItem, legend: any)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/water-usage-forecasts/src/lib/views/result-data-view/result-data-view.component.ts:249\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            ChartEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    item\n                                    \n                                            LegendItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    legend\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        fetchData\n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchData(key: string | string[], method: ForecastType)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/water-usage-forecasts/src/lib/views/result-data-view/result-data-view.component.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                            string | string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    method\n                                    \n                                                ForecastType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/water-usage-forecasts/src/lib/views/result-data-view/result-data-view.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setBreadCrumbs\n                        \n                    \n                \n            \n            \n                \n                    \n                    setBreadCrumbs(key: string | string[])\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/water-usage-forecasts/src/lib/views/result-data-view/result-data-view.component.ts:225\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                            string | string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateAreaComponents\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAreaComponents(forecast)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/water-usage-forecasts/src/lib/views/result-data-view/result-data-view.component.ts:217\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    forecast\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateGraphs\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateGraphs(forecast)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/water-usage-forecasts/src/lib/views/result-data-view/result-data-view.component.ts:164\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    forecast\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        areaComponents\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/result-data-view/result-data-view.component.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        consumerAreaData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/result-data-view/result-data-view.component.ts:63\n                        \n                    \n\n            \n                \n                    Consumer area data.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        consumerGroupData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/result-data-view/result-data-view.component.ts:61\n                        \n                    \n\n            \n                \n                    Consumer group data.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        didFinish\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/result-data-view/result-data-view.component.ts:50\n                        \n                    \n\n            \n                \n                    Whether the request is done, used for the loader.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/result-data-view/result-data-view.component.ts:71\n                        \n                    \n\n            \n                \n                    Selected keys to display results.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        markers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/result-data-view/result-data-view.component.ts:68\n                        \n                    \n\n            \n                \n                    Array of all markers placed on the map.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Object\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/result-data-view/result-data-view.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refProgSplit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/result-data-view/result-data-view.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        regressionMethod\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ForecastType\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/result-data-view/result-data-view.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Resolution\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Resolution\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/result-data-view/result-data-view.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        response\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Promise\n\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/result-data-view/result-data-view.component.ts:48\n                        \n                    \n\n            \n                \n                    The response from the forecast service.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selection\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Record\n\n                    \n                \n                \n                    \n                        Default value : {\n    state: [],\n    district: [],\n    administration: [],\n    municipal: []\n  }\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/result-data-view/result-data-view.component.ts:53\n                        \n                    \n\n            \n                \n                    Selected elements, used to display in info box.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        method\n                    \n                \n\n                \n                    \n                        getmethod()\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/water-usage-forecasts/src/lib/views/result-data-view/result-data-view.component.ts:89\n                                \n                            \n\n                \n                    \n                        setmethod(m: ForecastType)\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/water-usage-forecasts/src/lib/views/result-data-view/result-data-view.component.ts:79\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            m\n                                                    \n                                                            \n                                                                            ForecastType\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {Component, OnInit} from \"@angular/core\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {ChartData, ChartEvent, LegendItem} from \"chart.js/auto\";\nimport {\n  stringToColor,\n  MapComponent,\n  Resolution,\n  BreadcrumbsService,\n  MapService\n} from \"common\";\nimport {combineLatestWith} from \"rxjs/operators\";\n\nimport {\n  ForecastResponse,\n  WaterUsageForecastsService,\n  ForecastType,\n  ForecastUsage\n} from \"../../services/water-usage-forecasts.service\";\nimport {WaterRightsService} from \"../../services/water-rights.service\";\nimport {ConsumersService} from \"../../services/consumers.service\";\nimport {consumerIcon, waterRightIcon} from \"../../map-icons\";\n\n/** Component displaying the Results from the water right forecasts. */\n@Component({\n  selector: 'lib-result-data-view',\n  templateUrl: './result-data-view.component.html'\n})\nexport class ResultDataViewComponent implements OnInit {\n\n  constructor(\n    private service: WaterUsageForecastsService,\n    private waterRightService: WaterRightsService,\n    private consumersService: ConsumersService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private mapService: MapService,\n    private breadcrumbs: BreadcrumbsService\n  ) {}\n\n  /** @internal Re-export of {@link Object}. */\n  Object = Object;\n  /** @internal Re-export of {@link Resolution}. */\n  Resolution = Resolution;\n  /** @internal Re-export of {@link ForecastType}. */\n  regressionMethod = ForecastType;\n\n  /** The response from the forecast service. */\n  response?: Promise;\n  /** Whether the request is done, used for the loader. */\n  didFinish = false;\n\n  /** Selected elements, used to display in info box. */\n  selection: Record = {\n    state: [],\n    district: [],\n    administration: [],\n    municipal: []\n  };\n\n  /** Consumer group data. */\n  consumerGroupData: any = null;\n  /** Consumer area data. */\n  consumerAreaData: any = null;\n  areaComponents?: [string, string][];\n  refProgSplit: number = 0;\n\n  /** Array of all markers placed on the map. */\n  markers: MapComponent[\"inputMarkers\"] = [];\n\n  /** Selected keys to display results. */\n  key: string[] = [];\n\n  ngOnInit(): void {\n    let {key, method} = this.route.snapshot.queryParams;\n    this.key = [key].flat();\n    this.fetchData(key, method ?? ForecastType.LINEAR);\n  }\n\n  set method(m: ForecastType) {\n     this.router.navigate([], {\n       relativeTo: this.route,\n       queryParams: Object.assign(\n         {},\n         this.route.snapshot.queryParams,\n         {method: m}\n       )\n     }).catch(console.error);\n  }\n  get method() {\n    return this.route.snapshot.queryParams[\"method\"] ?? ForecastType.LINEAR;\n  }\n\n  private fetchData(key: string | string[], method: ForecastType): void {\n    this.service.fetchForecastData(key, method)\n      .subscribe(data => {\n        this.updateGraphs(data.accumulations);\n        this.updateAreaComponents(data.partials);\n      });\n    this.mapService.fetchLayerData(null, [key].flat())\n      .then(data => {\n        let selection: this[\"selection\"] = {\n          state: [],\n          district: [],\n          administration: [],\n          municipal: []\n        };\n        for (let shape of data.shapes) {\n          let res = Resolution.toEnum(shape.key.length);\n          if (!res) continue;\n          selection[res].push([shape.key, shape.name]);\n        }\n        this.selection = selection;\n        this.setBreadCrumbs(key);\n      });\n    this.waterRightService.fetchWaterRightLocations({\n      in: [key].flat(),\n      isReal: true}\n    ).pipe(combineLatestWith(this.consumersService.fetchConsumers({\n      in: [key].flat(),\n      // TODO: move this value elsewhere\n      usageAbove: 10000\n    }))).subscribe(data => {\n      let markers = [];\n\n      // iterate over locations of water rights\n      for (let marker of data[0] ?? []) {\n        markers.push({\n          coordinates: [\n            marker.geojson.coordinates[1],\n            marker.geojson.coordinates[0]\n          ] as [number, number],\n          tooltip: `\n            Name: ${marker.name}\n            Water Right No: ${marker.waterRight}\n          `,\n          icon: waterRightIcon,\n          onClick: () => this.router.navigate(\n            [\"detail\", \"water-right\", marker.waterRight],\n            {relativeTo: this.route.parent}\n          )\n        })\n      }\n\n      // iterate over consumer locations\n      for (let marker of data[1] ?? []) {\n        markers.push({\n          coordinates: [\n            marker.geojson.coordinates[1],\n            marker.geojson.coordinates[0]\n          ] as [number, number],\n          tooltip: marker.name,\n          icon: consumerIcon,\n          onClick: () => this.router.navigate(\n            [\"detail\", \"consumer\", marker.id],\n            {relativeTo: this.route.parent}\n          )\n        })\n      }\n\n      this.markers = markers;\n    });\n  }\n\n  private updateGraphs(forecast: ForecastResponse[\"accumulations\"]): void {\n    for (let ref of Object.values(forecast.municipal.reference)) {\n      this.refProgSplit = ref.endYear - ref.startYear + 1;\n      break;\n    }\n    const colorMap = {\n      \"Agriculture, Forestry, Fisheries\": \"green\",\n      \"Businesses\": \"#bcd9e0\",\n      \"Household\": \"#ba4c43\",\n      \"Public Institution\": \"#5443ba\",\n      \"Small Businesses\": \"#a9c940\",\n      \"Tourism\": \"#e02abf\"\n    }\n    let [minYear, maxYear] = [Infinity, -Infinity];\n    function mapUsage(usage: ForecastUsage, type: \"forecast\" | \"reference\") {\n      minYear = Math.min(usage.startYear, minYear);\n      maxYear = Math.max(usage.endYear, maxYear);\n\n      return {\n        label: usage.displayName,\n        data: usage.usages.map((val, i) => ({x: i + usage.startYear, y: val})),\n        borderWidth: 1,\n        borderSkipped: \"middle\",\n        borderColor: \"black\",\n        backgroundColor: stringToColor(usage.displayName, colorMap)\n      }\n    }\n    this.consumerGroupData = {\n      datasets: [\n        Object\n          .values(forecast.consumerGroup.reference)\n          .map(el => mapUsage(el, \"reference\")),\n        Object\n          .values(forecast.consumerGroup.forecast)\n          .map(el => mapUsage(el, \"forecast\"))\n      ].flat()\n    }\n    this.consumerAreaData = {\n      datasets: [\n        Object\n          .values(forecast.municipal.reference)\n          .map(el => mapUsage(el, \"reference\")),\n        Object\n          .values(forecast.municipal.forecast)\n          .map(el => mapUsage(el, \"forecast\"))\n      ].flat()\n    }\n    let labels: number[] = [];\n    for (let y = minYear; y  1) text = \"water-usage-forecasts.breadcrumbs.map-results\"\n    else text = [\"common.map.resolution.\" + selected[0][0], selected[0][1]];\n\n    this.breadcrumbs.set(1, {\n      text,\n      link: \"/water-usage-forecasts/results\",\n      query: {key}\n    });\n  }\n\n  chartLegendFilter(item: LegendItem, data: ChartData): boolean {\n    //console.log([item, data]);\n    if (item.datasetIndex >= data.datasets.length / 2) return false;\n    item.lineWidth = 0;\n    return true;\n  }\n  chartLegendOnClick(event: ChartEvent, item: LegendItem, legend: any) {\n    console.log([event, item, legend]);\n    let chart = legend.chart;\n    chart.getDatasetMeta(item.datasetIndex).hidden =\n      !chart.getDatasetMeta(item.datasetIndex).hidden;\n    chart.getDatasetMeta(item.datasetIndex + legend.legendItems.length).hidden =\n      !chart.getDatasetMeta(item.datasetIndex + legend.legendItems.length).hidden;\n    chart.update();\n  }\n\n}\n\n    \n\n    \n        \n\n{{\"water-usage-forecasts.result-data.results\" | translate}}\n\n\n  \n    \n  \n\n\n\n  \n    \n      \n        \n          {{\"water-usage-forecasts.result-data.selection\" | translate}}\n        \n      \n      \n        \n          \n            \n              \n                \n                  \n                    {{\"common.map.resolution.\" + sel[0] | translate}}\n                  \n                  \n                    {{shape[1]}} ({{shape[0]}})\n                  \n                \n              \n            \n          \n        \n      \n    \n  \n  \n    \n      \n        Parameter\n      \n      \n        \n          Prognosemodell\n          \n            \n              \n                Regression\n                \n              \n            \n              \n            \n            \n              \n                Regression\n              \n            \n          \n        \n        \n          Methode\n          \n            \n              \n                \n                  {{\"water-usage-forecasts.parameter.\" + method | translate}}\n                \n                \n              \n            \n              \n            \n            \n              \n                \n                  {{\"water-usage-forecasts.parameter.linear\" | translate}}\n                \n                \n                  {{\"water-usage-forecasts.parameter.logarithmic\" | translate}}\n                \n                \n                  {{\"water-usage-forecasts.parameter.polynomial\" | translate}}\n                \n              \n            \n          \n        \n        \n          Zeitraum\n\n        \n        -->\n      \n    \n  \n\n\n\n  \n    \n      water-usage-forecasts.result-data.consumer-groups\n    \n  \n  \n    \n      \n    \n  \n\n\n\n  \n    \n      water-usage-forecasts.result-data.areas\n    \n  \n  \n    \n      \n    \n  \n\n\n 1\">\n  \n    \n      water-usage-forecasts.result-data.branches\n    \n  \n  \n    \n      \n        {{component[1]}}\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{\"water-usage-forecasts.result-data.results\" | translate}}                                      {{\"water-usage-forecasts.result-data.selection\" | translate}}                                                                                                                      {{\"common.map.resolution.\" + sel[0] | translate}}                                                        {{shape[1]}} ({{shape[0]}})                                                                                                              Parameter                              Prognosemodell                                                    Regression                                                                                                              Regression                                                              Methode                                                                      {{\"water-usage-forecasts.parameter.\" + method | translate}}                                                                                                                                                {{\"water-usage-forecasts.parameter.linear\" | translate}}                                                  {{\"water-usage-forecasts.parameter.logarithmic\" | translate}}                                                  {{\"water-usage-forecasts.parameter.polynomial\" | translate}}                                                                              Zeitraum                -->                        water-usage-forecasts.result-data.consumer-groups                                    water-usage-forecasts.result-data.areas                         1\">            water-usage-forecasts.result-data.branches                          {{component[1]}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'breadcrumbs'},{'name': 'ConsumerDetailComponent', 'selector': 'lib-consumer-detail'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'ExampleComponent', 'selector': ''},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IonIconComponent', 'selector': 'ion-icon'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'map'},{'name': 'MapSelectViewComponent', 'selector': 'lib-map-select-view'},{'name': 'ResultDataViewComponent', 'selector': 'lib-result-data-view'},{'name': 'SideBarComponent', 'selector': 'app-side-bar'},{'name': 'WaterRightDetailComponent', 'selector': 'lib-water-right-detail'}];\n    var DIRECTIVES = [{'name': 'BulmaIsToggleableDirective', 'selector': '.is-toggleable'},{'name': 'LangSelectorDirective', 'selector': '[selectLang]'}];\n    var ACTUAL_COMPONENT = {'name': 'ResultDataViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/SanitizeUrlInterceptor.html":{"url":"interceptors/SanitizeUrlInterceptor.html","title":"interceptor - SanitizeUrlInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  SanitizeUrlInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/core/src/app/sanitize-url.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                Interceptor to fix up weird urls.\nCurrently, this checks for too many slashes (/) and reduces them to the\ncorrect amount.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/sanitize-url.interceptor.ts:28\n                \n            \n\n\n            \n                \n                    Intercepting a request and fix it up if too many slashes (/) were\ninjected somewhere.\nThis interceptor is usually the last before the request will be sent to the\npublic.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Request to check and sanitize\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The next interceptor\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest\n} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\nimport {Observable} from \"rxjs\";\n\n/**\n * Interceptor to fix up weird urls.\n *\n * Currently, this checks for too many slashes (`/`) and reduces them to the\n * correct amount.\n */\n@Injectable()\nexport class SanitizeUrlInterceptor implements HttpInterceptor {\n\n  /**\n   * Intercepting a request and fix it up if too many slashes (`/`) were\n   * injected somewhere.\n   *\n   * This interceptor is usually the last before the request will be sent to the\n   * public.\n   * @param request Request to check and sanitize\n   * @param next The next interceptor\n   */\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n    let {url} = request;\n    let [protocol, pathWithParams] = url.split(\"://\");\n    let [path, ...query] = pathWithParams.split(\"?\");\n    path = path.replace(/\\/+/g, \"/\");\n    let newUrl = `${protocol}://${path}`;\n    if (query.length) {\n      newUrl += `?${query.join(\"?\")}`;\n    }\n    return next.handle(request.clone({\n      url: newUrl\n    }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SettingsStorageService.html":{"url":"injectables/SettingsStorageService.html","title":"injectable - SettingsStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SettingsStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/core/src/app/settings-storage.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Storage service for storing settings in the session storage.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                getBoolStorage\n                            \n                            \n                                    Private\n                                    Static\n                                getStorage\n                            \n                            \n                                    Private\n                                    Static\n                                setBoolStorage\n                            \n                            \n                                    Private\n                                    Static\n                                setStorage\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hideSidebar\n                                \n                                \n                                    hideUserBar\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        getBoolStorage\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBoolStorage(key: string)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/settings-storage.service.ts:54\n                \n            \n\n\n            \n                \n                    Internal function to get boolean session storage values.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Key of the storage item\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | null\n\n                    \n                    \n                        The stored value or null if missing\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        getStorage\n                        \n                    \n                \n            \n            \n                \n                    \n                    getStorage(key: string)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/settings-storage.service.ts:31\n                \n            \n\n\n            \n                \n                    Internal function to get session storage values.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Key of the storage item\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | null\n\n                    \n                    \n                        The stored value or null if missing\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        setBoolStorage\n                        \n                    \n                \n            \n            \n                \n                    \n                    setBoolStorage(key: string, data: boolean | null)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/settings-storage.service.ts:42\n                \n            \n\n\n            \n                \n                    Internal function to set boolean session storage values.\nStore undefined or null to clear the storage.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Key of the storage item\n\n                                    \n                                \n                                \n                                    data\n                                    \n                                            boolean | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Data to store\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        setStorage\n                        \n                    \n                \n            \n            \n                \n                    \n                    setStorage(key: string, data: string | null | undefined)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/settings-storage.service.ts:21\n                \n            \n\n\n            \n                \n                    Internal function to set session storage values.\nStore undefined or null to clear the storage.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Key of the storage item\n\n                                    \n                                \n                                \n                                    data\n                                    \n                                            string | null | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Data to store\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hideSidebar\n                    \n                \n\n                \n                    \n                        gethideSidebar()\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/settings-storage.service.ts:68\n                                \n                            \n                    \n                        \n                                Get hide sidebar setting.\n\n\n                                \n                                    Returns :     boolean | null\n\n                                \n                        \n                    \n\n                \n                    \n                        sethideSidebar(setting: boolean | null)\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/settings-storage.service.ts:64\n                                \n                            \n                    \n                        \n                                Set hide sidebar setting.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            setting\n                                                    \n                                                            \n                                                                        boolean | null\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        hideUserBar\n                    \n                \n\n                \n                    \n                        gethideUserBar()\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/settings-storage.service.ts:80\n                                \n                            \n                    \n                        \n                                Get hide user bar setting.\n\n\n                                \n                                    Returns :     boolean | null\n\n                                \n                        \n                    \n\n                \n                    \n                        sethideUserBar(setting: boolean | null)\n                    \n                \n                            \n                                \n                                    Defined in wisdom_modules/core/src/app/settings-storage.service.ts:76\n                                \n                            \n                    \n                        \n                                Set hide user bar setting.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            setting\n                                                    \n                                                            \n                                                                        boolean | null\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\n\n/** Key for the sidebar hide setting. */\nconst HIDE_SIDEBAR_KEY = \"hide-sidebar\";\n/** key for the user bar hide setting. */\nconst HIDE_USER_BAR_KEY = \"hide-user-bar\";\n\n/** Storage service for storing settings in the session storage. */\n@Injectable({\n  providedIn: 'root'\n})\nexport class SettingsStorageService {\n\n  /**\n   * Internal function to set session storage values.\n   *\n   * Store undefined or null to clear the storage.\n   * @param key Key of the storage item\n   * @param data Data to store\n   */\n  private static setStorage(key: string, data: string | null | undefined): void {\n    if (data) globalThis.sessionStorage.setItem(key, data);\n    else globalThis.sessionStorage.removeItem(key);\n  }\n  /**\n   * Internal function to get session storage values.\n   *\n   * @param key Key of the storage item\n   * @returns The stored value or null if missing\n   */\n  private static getStorage(key: string): string | null {\n    return globalThis.sessionStorage.getItem(key);\n  }\n\n  /**\n   * Internal function to set boolean session storage values.\n   *\n   * Store undefined or null to clear the storage.\n   * @param key Key of the storage item\n   * @param data Data to store\n   */\n  private static setBoolStorage(key: string, data: boolean | null): void {\n    if (typeof data === \"boolean\") {\n      SettingsStorageService.setStorage(key, `${data}`);\n    }\n    else SettingsStorageService.setStorage(key, data);\n  }\n  /**\n   * Internal function to get boolean session storage values.\n   *\n   * @param key Key of the storage item\n   * @returns The stored value or null if missing\n   */\n  private static getBoolStorage(key: string): boolean | null {\n    let data = SettingsStorageService.getStorage(key);\n    if (!data) return null;\n    return data === \"true\";\n  }\n\n  /**\n   * Set hide sidebar setting.\n   * @param setting\n   */\n  set hideSidebar(setting: boolean | null) {\n    SettingsStorageService.setBoolStorage(HIDE_SIDEBAR_KEY, setting);\n  }\n  /** Get hide sidebar setting. */\n  get hideSidebar(): boolean | null {\n    return SettingsStorageService.getBoolStorage(HIDE_SIDEBAR_KEY);\n  }\n\n  /**\n   * Set hide user bar setting.\n   * @param setting\n   */\n  set hideUserBar(setting: boolean | null) {\n    SettingsStorageService.setBoolStorage(HIDE_USER_BAR_KEY, setting);\n  }\n  /** Get hide user bar setting. */\n  get hideUserBar(): boolean | null {\n    return SettingsStorageService.getBoolStorage(HIDE_USER_BAR_KEY);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ShapeData.html":{"url":"interfaces/ShapeData.html","title":"interface - ShapeData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ShapeData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/common/src/lib/map/layer-data.ts\n        \n\n\n            \n                Description\n            \n            \n                Type to represent a single shape with all of its metadata.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            geoJson\n                                        \n                                \n                                \n                                        \n                                            key\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            nutsKey\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        geoJson\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        geoJson:         GeoJsonObject\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GeoJsonObject\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    GeoJson representing the shape.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Key of the shape.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Name of the shape.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nutsKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nutsKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nomenclature of Territorial Units code of the shape.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import * as L from \"leaflet\";\n\n/**\n * GeoJSON data type used by Leaflet.\n * @private\n */\nexport type GeoJsonObject = Parameters[0];\n\n/** Type to represent a single shape with all of its metadata. */\nexport interface ShapeData {\n  /** Name of the shape. */\n  name: string,\n  /** Key of the shape. */\n  key: string,\n  /** Nomenclature of Territorial Units code of the shape. */\n  nutsKey: string,\n  /** GeoJson representing the shape. */\n  geoJson: GeoJsonObject\n}\n\n/** Type to represent layer data received from the geo data server. */\nexport interface LayerData {\n  /** Corner coordinates of a box containing all the shapes this displays. */\n  box: [[number, number], [number, number], [number, number], [number, number]],\n  /** List of shapes. */\n  shapes: ShapeData[]\n}\n\nexport default LayerData;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SideBarComponent.html":{"url":"components/SideBarComponent.html","title":"component - SideBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SideBarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    wisdom_modules/core/src/app/frame/side-bar/side-bar.component.ts\n\n\n\n    \n        Description\n    \n    \n        The component displaying the sidebar.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-side-bar\n            \n\n\n\n\n            \n                templateUrl\n                ./side-bar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                sideBar\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        sideBar\n                        \n                    \n                \n            \n                \n                    \n                        Default value : sidebar\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/core/src/app/frame/side-bar/side-bar.component.ts:13\n                        \n                    \n\n            \n                \n                    Load the sidebar from the workspace.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component} from \"@angular/core\";\n\nimport {sidebar} from \"../../../../../../sidebar\";\n\n/** The component displaying the sidebar. */\n@Component({\n  selector: \"app-side-bar\",\n  templateUrl: \"./side-bar.component.html\"\n})\nexport class SideBarComponent {\n\n  /** Load the sidebar from the workspace. */\n  sideBar = sidebar;\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n      {{label[0] | translate}}\n    \n  \n\n  \n    \n      \n        \n          \n            \n          \n          {{entry[0] | translate}}\n        \n      \n      \n        \n          \n            \n          \n          {{entry[0] | translate}}\n        \n      \n      \n\n      \n    \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                {{label[0] | translate}}                                                                    {{entry[0] | translate}}                                                                      {{entry[0] | translate}}                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'breadcrumbs'},{'name': 'ConsumerDetailComponent', 'selector': 'lib-consumer-detail'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'ExampleComponent', 'selector': ''},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IonIconComponent', 'selector': 'ion-icon'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'map'},{'name': 'MapSelectViewComponent', 'selector': 'lib-map-select-view'},{'name': 'ResultDataViewComponent', 'selector': 'lib-result-data-view'},{'name': 'SideBarComponent', 'selector': 'app-side-bar'},{'name': 'WaterRightDetailComponent', 'selector': 'lib-water-right-detail'}];\n    var DIRECTIVES = [{'name': 'BulmaIsToggleableDirective', 'selector': '.is-toggleable'},{'name': 'LangSelectorDirective', 'selector': '[selectLang]'}];\n    var ACTUAL_COMPONENT = {'name': 'SideBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StaticLoader.html":{"url":"classes/StaticLoader.html","title":"class - StaticLoader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StaticLoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/core/src/app/i18n/static-loader.ts\n        \n\n\n            \n                Description\n            \n            \n                The loader for the translations.\nSince all translations are available from the start this one is rather simple.\n\n            \n\n\n            \n                Implements\n            \n            \n                        TranslateLoader\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTranslation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getTranslation\n                        \n                    \n                \n            \n            \n                \ngetTranslation(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/i18n/static-loader.ts:36\n                \n            \n\n\n            \n                \n                    Get the translations for a specific language key.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The language key\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {TranslateLoader} from \"@ngx-translate/core\";\nimport {\n  de_DELang as de_DELangCommon,\n  en_USLang as en_USLangCommon\n} from \"common\";\nimport {of, Observable} from \"rxjs\";\n\nimport de_DELang from \"./langs/de_DE\";\nimport en_USLang from \"./langs/en_US\";\nimport {ModuleProvider} from \"../module-provider\";\nimport {langs as sideBarLangs} from \"../../../../../sidebar\";\n\n/** The languages the loader provides. */\nlet langs: any = {\n  de_DE: Object.assign({}, de_DELang, de_DELangCommon, ModuleProvider.langs(\"de_DE\")),\n  en_US: Object.assign({}, en_USLang, en_USLangCommon, ModuleProvider.langs(\"en_US\"))\n}\n\nfor (let [lang, values] of Object.entries(sideBarLangs)) {\n  langs[lang as \"de_DE\" | \"en_US\"].sidebar = {};\n  for (let [key, value] of Object.entries(values)) {\n    langs[lang as \"de_DE\" | \"en_US\"].sidebar[key] = value;\n  }\n}\n\n/**\n * The loader for the translations.\n * Since all translations are available from the start this one is rather simple.\n */\nexport class StaticLoader implements TranslateLoader {\n\n  /**\n   * Get the translations for a specific language key.\n   * @param lang The language key\n   */\n  getTranslation(lang: string): Observable {\n    // @ts-ignore\n    return of(langs[lang]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/core/src/app/auth/user.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service to interact with the user management of the auth server.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createUser\n                            \n                            \n                                getUsers\n                            \n                            \n                                    Private\n                                    Static\n                                httpOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/core/src/app/auth/user.service.ts:25\n                            \n                        \n\n                \n                    \n                            Constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to interact with the server via http\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createUser\n                        \n                    \n                \n            \n            \n                \ncreateUser(firstName: string, lastName: string, username: string, password: string, scopes?: string, roles?: number[])\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/auth/user.service.ts:67\n                \n            \n\n\n            \n                \n                    Create a new user account\nThis will create a new user account.\nDuring the creation a user account must not use the same username\n(login name).\nAll other properties may be not unique.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    firstName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        First name(s) of the person associated to the account\n\n                                    \n                                \n                                \n                                    lastName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Last name(s) of the person associated to the account\n\n                                    \n                                \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Username for the login\n\n                                    \n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The initial account password for this user\n\n                                    \n                                \n                                \n                                    scopes\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The scopes the user may use as OAuth2.0 scope string\n\n                                    \n                                \n                                \n                                    roles\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        List of Role names which the user shall be associated with\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsers\n                        \n                    \n                \n            \n            \n                \ngetUsers()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/auth/user.service.ts:47\n                \n            \n\n\n            \n                \n                    Get all user accounts currently in the database.\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        httpOptions\n                        \n                    \n                \n            \n            \n                \n                    \n                    httpOptions()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/core/src/app/auth/user.service.ts:37\n                \n            \n\n\n            \n                \n                    Helper function to generate the http options necessary for all requests.\n\n\n                    \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {HttpClient, HttpHeaders, HttpResponse} from \"@angular/common/http\";\nimport {join} from \"@angular/compiler-cli\";\nimport {Injectable} from \"@angular/core\";\nimport {Observable} from \"rxjs\";\n\nimport GetUsers200 from \"./response_types/users/GetUsers200\";\nimport PutUsers201 from \"./response_types/users/PutUsers201\";\nimport PutUsers409 from \"./response_types/users/PutUsers409\";\n\n// FIXME: this url is incorrect and the base needs to be moved\n/** Url for the interaction. */\nconst AUTH_API = \"localhost:8090/auth/\";\n\n/** Options passed into the get requests. */\nconst getOptions: Parameters[1] = {\n  responseType: \"json\"\n}\n\n// FIXME: this is currently pretty wrong in the implementation\n\n/** Service to interact with the user management of the auth server. */\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserService {\n\n  /**\n   * Constructor.\n   * @param http Service to interact with the server via http\n   */\n  constructor(private http: HttpClient) {}\n\n  /**\n   * Helper function to generate the http options necessary for all requests.\n   * @private\n   */\n  private static httpOptions(): Parameters[1] {\n    return {\n      responseType: \"json\",\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\"\n      }),\n    }\n  }\n\n  /** Get all user accounts currently in the database. */\n  getUsers() {\n    return this.http.get(join(AUTH_API, \"users\"), UserService.httpOptions()) as\n      Observable>;\n  }\n\n  /**\n   * Create a new user account\n   *\n   * This will create a new user account.\n   * During the creation a user account must not use the same username\n   * (login name).\n   * All other properties may be not unique.\n   *\n   * @param firstName First name(s) of the person associated to the account\n   * @param lastName Last name(s) of the person associated to the account\n   * @param username Username for the login\n   * @param password The initial account password for this user\n   * @param scopes The scopes the user may use as OAuth2.0 scope string\n   * @param roles List of Role names which the user shall be associated with\n   */\n  createUser(\n    firstName: string,\n    lastName: string,\n    username: string,\n    password: string,\n    scopes?: string,\n    roles?: number[]\n  ) {\n    const body: any = {\n      firstName, lastName, username, password\n    };\n    if (scopes) body.scopes = scopes;\n    if (roles) body.roles = roles;\n\n    return this.http.put(\n      join(AUTH_API, \"users\"),\n      body,\n      UserService.httpOptions()\n    ) as Observable |\n      {status: 409} & HttpResponse\n    >;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WaterRightDetailComponent.html":{"url":"components/WaterRightDetailComponent.html","title":"component - WaterRightDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  WaterRightDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    wisdom_modules/water-usage-forecasts/src/lib/views/detail-view/water-right-detail/water-right-detail.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-water-right-detail\n            \n\n\n\n\n            \n                templateUrl\n                ./water-right-detail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bounds\n                            \n                            \n                                data\n                            \n                            \n                                map\n                            \n                            \n                                markers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                validToString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, service: WaterRightsService, translate: TranslateService, breadcrumbs: BreadcrumbsService)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/detail-view/water-right-detail/water-right-detail.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        WaterRightsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        breadcrumbs\n                                                  \n                                                        \n                                                                        BreadcrumbsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/water-usage-forecasts/src/lib/views/detail-view/water-right-detail/water-right-detail.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/water-usage-forecasts/src/lib/views/detail-view/water-right-detail/water-right-detail.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validToString\n                        \n                    \n                \n            \n            \n                \nvalidToString(valid)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/water-usage-forecasts/src/lib/views/detail-view/water-right-detail/water-right-detail.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    valid\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        bounds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject<>\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([[NaN, NaN], [NaN, NaN]])\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/detail-view/water-right-detail/water-right-detail.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WaterRightDetailResponse\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/detail-view/water-right-detail/water-right-detail.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        map\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MapComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('map')\n                        \n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/detail-view/water-right-detail/water-right-detail.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        markers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Marker[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/views/detail-view/water-right-detail/water-right-detail.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {ViewChild, Component, OnInit, AfterViewInit} from \"@angular/core\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {tupleSwap, MapComponent, Marker, BreadcrumbsService} from \"common\";\nimport {LeafletMouseEvent} from \"leaflet\";\nimport {BehaviorSubject} from \"rxjs\";\n\nimport {\n  WaterRightDetailResponse,\n  WaterRightsService\n} from \"../../../services/water-rights.service\";\nimport {waterRightIcon} from \"../../../map-icons\";\n\n@Component({\n  selector: 'lib-water-right-detail',\n  templateUrl: './water-right-detail.component.html'\n})\nexport class WaterRightDetailComponent implements OnInit, AfterViewInit {\n\n  data: WaterRightDetailResponse = {};\n  markers: Marker[] = [];\n\n  @ViewChild(\"map\") map!: MapComponent;\n  bounds: BehaviorSubject =\n    new BehaviorSubject([[NaN, NaN], [NaN, NaN]]);\n\n  constructor(\n    private route: ActivatedRoute,\n    private service: WaterRightsService,\n    private translate: TranslateService,\n    private breadcrumbs: BreadcrumbsService\n  ) { }\n\n  ngAfterViewInit(): void {\n    this.bounds.subscribe(bounds => this.map.map?.flyToBounds(bounds));\n  }\n\n  ngOnInit(): void {\n    this.breadcrumbs.set(2, {\n      text: \"water-usage-forecasts.breadcrumbs.water-right\",\n      link: \"#\"\n    });\n\n    let waterRight = this.route.snapshot.params[\"waterRight\"];\n    this.service.fetchWaterRightDetails(waterRight)\n      .subscribe(data => {\n        this.data = data;\n\n        let bounds: [number[], number[]] = [[], []];\n        let markers: Marker[] = [];\n        for (let location of data.locations ?? []) {\n          if (!location?.location) continue;\n          if (!location.real) continue;\n          let coordinates = tupleSwap(location.location.coordinates);\n          bounds[0].push(coordinates[0]);\n          bounds[1].push(coordinates[1]);\n          markers.push({\n            coordinates,\n            tooltip: location.name,\n            onClick: (evt: LeafletMouseEvent) => {\n              document.getElementById(`${location?.id}`)?.scrollIntoView({\n                behavior: \"smooth\"\n              })\n            },\n            icon: waterRightIcon\n          });\n        }\n        this.markers = markers;\n        this.bounds.next([\n          [Math.max(...bounds[0]), Math.max(...bounds[1])],\n          [Math.min(...bounds[0]), Math.min(...bounds[1])]\n        ]);\n      });\n  }\n\n  validToString(valid: this[\"data\"][\"valid\"]): string | undefined {\n    let since = this.translate.instant(\"water-usage-forecasts.water-right.since\");\n    if (!valid) return undefined;\n    let from = valid.from.toISOString().slice(0, 10);\n    let until = valid.until.toISOString().slice(0, 10);\n    if (until !== \"9999-12-31\") {\n      return `${from} - ${until}`;\n    }\n    return `${since} ${from}`;\n  }\n\n}\n\n    \n\n    \n        \n\n\n  {{\"water-usage-forecasts.water-right.water-right\" | translate}}\n\n\n\n  \n    \n  \n\n\n\n  \n    {{data.legalTitle}}\n    \n      {{data.subject}}\n      \n        {{\"water-usage-forecasts.water-right.granting-authority\" | translate}}:\n        {{data?.grantingAuthority}}\n        \n      \n      \n        {{\"water-usage-forecasts.water-right.registering-authority\" | translate}}:\n        {{data?.registeringAuthority}}\n        \n      \n      \n        {{\"water-usage-forecasts.water-right.water-authority\" | translate}}:\n        {{data?.waterAuthority}}\n        \n      \n      \n        {{\"water-usage-forecasts.water-right.address\"}}:\n        {{data?.address}}\n        \n      \n      \n        {{\"water-usage-forecasts.water-right.bailee\" | translate}}:\n        {{data?.bailee}}\n        \n      \n    \n  \n  \n    \n      \n        \n          \n            \n              \n            \n            {{validToString(data?.valid)}}\n          \n        \n      \n    \n    \n      \n        \n          \n            \n              \n            \n            {{data?.dateOfChange?.toISOString()?.slice(0, 10)}}\n          \n        \n        \n          \n            \n            \n            \n          \n        \n      \n    \n  \n\n\n\n  \n    \n      \n        \n          {{\"water-usage-forecasts.water-right.internal-id\" | translate}}\n        \n        {{data?.id}}\n      \n    \n    \n      \n        \n          {{\"water-usage-forecasts.water-right.water-right-no\" | translate}}\n        \n        {{data?.no}}\n      \n    \n    \n      \n        \n          {{\"water-usage-forecasts.water-right.external-id\" | translate}}\n        \n        {{data?.externalId}}\n      \n    \n    \n      \n        \n          {{\"water-usage-forecasts.water-right.file-reference\" | translate}}\n        \n        {{data?.fileReference}}\n      \n    \n  \n\n\n\n  \n    \n      {{\"water-usage-forecasts.water-right.locations\" | translate}}\n    \n  \n  \n    \n      \n        \n          {{location?.name}}\n        \n        \n          \n            \n          \n          \n            \n          \n          \n            \n          \n        \n      \n      \n        {{location?.legalScope}}\n      \n      \n        \n          \n            \n              \n                {{\"water-usage-forecasts.water-right.internal-id\" | translate}}\n              \n              {{location?.id}}\n            \n          \n          \n            \n              \n                {{\"water-usage-forecasts.water-right.location-no\" | translate}}\n              \n              {{location?.no}}\n            \n          \n        \n      \n      \n        \n          {{\"water-usage-forecasts.water-right.withdrawal\" | translate}}\n        \n        \n          \n            \n              \n                \n                  {{rate.amount}} {{rate.unit}}/{{rate.duration}}\n                \n              \n            \n          \n        \n      \n      \n        \n          {{\"water-usage-forecasts.water-right.fluid-discharge\" | translate}}\n        \n        \n          \n            \n              \n                \n                  {{rate.amount}} {{rate.unit}}/{{rate.duration}}\n                \n              \n            \n          \n        \n      \n      \n        \n          {{\"water-usage-forecasts.water-right.irrigation-area\" | translate}}\n        \n        \n          \n            \n              \n                {{location?.irrigationArea?.amount}} {{location?.irrigationArea?.unit}}\n              \n            \n          \n        \n      \n      \n        \n          {{\"water-usage-forecasts.water-right.rain-supplement\" | translate}}\n        \n        \n          \n            \n              \n                {{location?.rainSupplement?.amount}} {{location?.rainSupplement?.unit}}\n                /{{location?.rainSupplement?.duration}}\n              \n            \n          \n        \n      \n      \n        \n          \n          \n            {{\"water-usage-forecasts.water-right.basin-no\" | translate}}\n            {{location?.basinNo?.key}} {{location?.basinNo?.name}}\n          \n          \n            {{\"water-usage-forecasts.water-right.county\" | translate}}\n            {{location?.county}}\n          \n          \n            {{\"water-usage-forecasts.water-right.eu-survey-area\" | translate}}\n            {{location?.euSurveyArea?.key}} {{location?.euSurveyArea?.name}}\n          \n          \n            {{\"water-usage-forecasts.water-right.field\" | translate}}\n            {{location?.field}}\n          \n          \n            {{\"water-usage-forecasts.water-right.groundwater-volume\" | translate}}\n            {{location?.groundwaterVolume}}\n          \n          \n            {{\"water-usage-forecasts.water-right.local-sub-district\" | translate}}\n            {{location?.localSubDistrict}}\n          \n          \n            {{\"water-usage-forecasts.water-right.maintenance-association\" | translate}}\n            {{location?.maintenanceAssociation?.key}} {{location?.maintenanceAssociation?.name}}\n          \n          \n            {{\"water-usage-forecasts.water-right.municipal-area\" | translate}}\n            {{location?.municipalArea?.key}} {{location?.municipalArea?.name}}\n          \n          \n            {{\"water-usage-forecasts.water-right.plot\" | translate}}\n            {{location?.plot}}\n          \n          \n            {{\"water-usage-forecasts.water-right.rivershed\" | translate}}\n            {{location?.rivershed}}\n          \n          \n            {{\"water-usage-forecasts.water-right.serial-no\" | translate}}\n            {{location?.serialNo}}\n          \n          \n            {{\"water-usage-forecasts.water-right.top-map-1:25000\" | translate}}\n            {{location?.topMap1to25000?.key}} {{location?.topMap1to25000?.name}}\n          \n          \n            {{\"water-usage-forecasts.water-right.water-body\" | translate}}\n            {{location?.waterBody}}\n          \n          \n            {{\"water-usage-forecasts.water-right.flood-area\" | translate}}\n            {{location?.floodArea}}\n          \n          \n            {{\"water-usage-forecasts.water-right.water-protection-area\" | translate}}\n            {{location?.waterProtectionArea}}\n          \n          \n        \n      \n    \n  \n\n\n\n  \n    \n      {{\"water-usage-forecasts.water-right.annotation\" | translate}}\n    \n  \n  \n    {{data?.annotation}}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{\"water-usage-forecasts.water-right.water-right\" | translate}}              {{data.legalTitle}}          {{data.subject}}              {{\"water-usage-forecasts.water-right.granting-authority\" | translate}}:        {{data?.grantingAuthority}}                            {{\"water-usage-forecasts.water-right.registering-authority\" | translate}}:        {{data?.registeringAuthority}}                            {{\"water-usage-forecasts.water-right.water-authority\" | translate}}:        {{data?.waterAuthority}}                            {{\"water-usage-forecasts.water-right.address\"}}:        {{data?.address}}                            {{\"water-usage-forecasts.water-right.bailee\" | translate}}:        {{data?.bailee}}                                                                                                    {{validToString(data?.valid)}}                                                                                                          {{data?.dateOfChange?.toISOString()?.slice(0, 10)}}                                                                                                                                    {{\"water-usage-forecasts.water-right.internal-id\" | translate}}                {{data?.id}}                                      {{\"water-usage-forecasts.water-right.water-right-no\" | translate}}                {{data?.no}}                                      {{\"water-usage-forecasts.water-right.external-id\" | translate}}                {{data?.externalId}}                                      {{\"water-usage-forecasts.water-right.file-reference\" | translate}}                {{data?.fileReference}}                        {{\"water-usage-forecasts.water-right.locations\" | translate}}                                    {{location?.name}}                                                                                                                                            {{location?.legalScope}}                                                                        {{\"water-usage-forecasts.water-right.internal-id\" | translate}}                            {{location?.id}}                                                                          {{\"water-usage-forecasts.water-right.location-no\" | translate}}                            {{location?.no}}                                                            {{\"water-usage-forecasts.water-right.withdrawal\" | translate}}                                                                                      {{rate.amount}} {{rate.unit}}/{{rate.duration}}                                                                                          {{\"water-usage-forecasts.water-right.fluid-discharge\" | translate}}                                                                                      {{rate.amount}} {{rate.unit}}/{{rate.duration}}                                                                                          {{\"water-usage-forecasts.water-right.irrigation-area\" | translate}}                                                                    {{location?.irrigationArea?.amount}} {{location?.irrigationArea?.unit}}                                                                          {{\"water-usage-forecasts.water-right.rain-supplement\" | translate}}                                                                    {{location?.rainSupplement?.amount}} {{location?.rainSupplement?.unit}}                /{{location?.rainSupplement?.duration}}                                                                                                {{\"water-usage-forecasts.water-right.basin-no\" | translate}}            {{location?.basinNo?.key}} {{location?.basinNo?.name}}                                {{\"water-usage-forecasts.water-right.county\" | translate}}            {{location?.county}}                                {{\"water-usage-forecasts.water-right.eu-survey-area\" | translate}}            {{location?.euSurveyArea?.key}} {{location?.euSurveyArea?.name}}                                {{\"water-usage-forecasts.water-right.field\" | translate}}            {{location?.field}}                                {{\"water-usage-forecasts.water-right.groundwater-volume\" | translate}}            {{location?.groundwaterVolume}}                                {{\"water-usage-forecasts.water-right.local-sub-district\" | translate}}            {{location?.localSubDistrict}}                                {{\"water-usage-forecasts.water-right.maintenance-association\" | translate}}            {{location?.maintenanceAssociation?.key}} {{location?.maintenanceAssociation?.name}}                                {{\"water-usage-forecasts.water-right.municipal-area\" | translate}}            {{location?.municipalArea?.key}} {{location?.municipalArea?.name}}                                {{\"water-usage-forecasts.water-right.plot\" | translate}}            {{location?.plot}}                                {{\"water-usage-forecasts.water-right.rivershed\" | translate}}            {{location?.rivershed}}                                {{\"water-usage-forecasts.water-right.serial-no\" | translate}}            {{location?.serialNo}}                                {{\"water-usage-forecasts.water-right.top-map-1:25000\" | translate}}            {{location?.topMap1to25000?.key}} {{location?.topMap1to25000?.name}}                                {{\"water-usage-forecasts.water-right.water-body\" | translate}}            {{location?.waterBody}}                                {{\"water-usage-forecasts.water-right.flood-area\" | translate}}            {{location?.floodArea}}                                {{\"water-usage-forecasts.water-right.water-protection-area\" | translate}}            {{location?.waterProtectionArea}}                                                    {{\"water-usage-forecasts.water-right.annotation\" | translate}}            {{data?.annotation}}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'breadcrumbs'},{'name': 'ConsumerDetailComponent', 'selector': 'lib-consumer-detail'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'ExampleComponent', 'selector': ''},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IonIconComponent', 'selector': 'ion-icon'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'map'},{'name': 'MapSelectViewComponent', 'selector': 'lib-map-select-view'},{'name': 'ResultDataViewComponent', 'selector': 'lib-result-data-view'},{'name': 'SideBarComponent', 'selector': 'app-side-bar'},{'name': 'WaterRightDetailComponent', 'selector': 'lib-water-right-detail'}];\n    var DIRECTIVES = [{'name': 'BulmaIsToggleableDirective', 'selector': '.is-toggleable'},{'name': 'LangSelectorDirective', 'selector': '[selectLang]'}];\n    var ACTUAL_COMPONENT = {'name': 'WaterRightDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WaterRightsService.html":{"url":"injectables/WaterRightsService.html","title":"injectable - WaterRightsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WaterRightsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/water-usage-forecasts/src/lib/services/water-rights.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchWaterRightDetails\n                            \n                            \n                                fetchWaterRightLocations\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, router: Router)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/services/water-rights.service.ts:116\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        fetchWaterRightDetails\n                        \n                    \n                \n            \n            \n                \nfetchWaterRightDetails(no: number)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/water-usage-forecasts/src/lib/services/water-rights.service.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    no\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetchWaterRightLocations\n                        \n                    \n                \n            \n            \n                \nfetchWaterRightLocations(params: Partial)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/water-usage-forecasts/src/lib/services/water-rights.service.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {HttpClient, HttpContext, HttpHeaders} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\nimport {Router} from \"@angular/router\";\nimport {USE_API_URL, USE_LOADER} from \"common\";\nimport {map, Observable} from \"rxjs\";\n\nconst API_URL = \"water-rights/\";\n\nexport type WaterRightLocationResponse = {\n  name: string,\n  id: number,\n  waterRight: number,\n  active: boolean,\n  real: boolean,\n  geojson: {\n    type: \"Point\",\n    coordinates: [number, number]\n  }\n}[];\n\nexport type WaterRightDetailResponse = Partial\n}>;\n\ntype WaterRightDetailRawResponse =\n  Omit &\n  Partial;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WaterRightsService {\n\n  constructor(\n    private http: HttpClient,\n    private router: Router\n  ) {}\n\n  fetchWaterRightLocations(params: Partial): Observable {\n    let url = this.router.parseUrl(API_URL);\n    if (params.in) url.queryParams[\"in\"] = params.in;\n    if (params.isActive) url.queryParams[\"is_active\"] = params.isActive;\n    if (params.isReal) url.queryParams[\"is_real\"] = params.isReal;\n    return this.http.get(url.toString(), {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\"\n      }),\n      responseType: \"json\",\n      context: new HttpContext()\n        .set(USE_API_URL, true)\n        .set(USE_LOADER, true)\n    }).pipe(map((\n      res: any[]) => res.map(\n        el => Object.assign({}, el, {waterRight: el.water_right})\n      )\n    ));\n  }\n\n  fetchWaterRightDetails(no: number): Observable {\n    let url = this.router.createUrlTree([API_URL, \"details\", no]);\n    return this.http.get(url.toString(), {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\"\n      }),\n      responseType: \"json\",\n      context: new HttpContext()\n        .set(USE_API_URL, true)\n        .set(USE_LOADER, true)\n    }).pipe(map((res: WaterRightDetailRawResponse) => {\n      let cleaned = JSON.stringify(res)\n        .replace(/\"\\s*([^\"]+)\\s*\"/g, '\"$1\"')\n        .replace(/'\\s*([^']+)\\s*'/g, \"'$1'\")\n        .replace(/\"'([^'\"\\s:,]+)'\"/g, '\"$1\"')\n        .replace(/'\"([^'\"\\s:,]+)\"'/g, \"'$1'\")\n      return JSON.parse(cleaned) as WaterRightDetailRawResponse;\n    })).pipe(map((raw: WaterRightDetailRawResponse) => {\n      let res = JSON.parse(JSON.stringify(raw)) as WaterRightDetailResponse;\n      if (raw.dateOfChange) res.dateOfChange = new Date(raw.dateOfChange);\n      if (raw.valid) res.valid = {\n        from: new Date(raw.valid.from),\n        until: new Date(raw.valid.until)\n      };\n      return res;\n    }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WaterUsageForecastsModule.html":{"url":"modules/WaterUsageForecastsModule.html","title":"module - WaterUsageForecastsModule","body":"\n                   \n\n\n\n\n    Modules\n    WaterUsageForecastsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_WaterUsageForecastsModule\n\n\n\ncluster_WaterUsageForecastsModule_imports\n\n\n\ncluster_WaterUsageForecastsModule_declarations\n\n\n\n\nConsumerDetailComponent\n\nConsumerDetailComponent\n\n\n\nWaterUsageForecastsModule\n\nWaterUsageForecastsModule\n\nWaterUsageForecastsModule -->\n\nConsumerDetailComponent->WaterUsageForecastsModule\n\n\n\n\n\nMapSelectViewComponent\n\nMapSelectViewComponent\n\nWaterUsageForecastsModule -->\n\nMapSelectViewComponent->WaterUsageForecastsModule\n\n\n\n\n\nResultDataViewComponent\n\nResultDataViewComponent\n\nWaterUsageForecastsModule -->\n\nResultDataViewComponent->WaterUsageForecastsModule\n\n\n\n\n\nWaterRightDetailComponent\n\nWaterRightDetailComponent\n\nWaterUsageForecastsModule -->\n\nWaterRightDetailComponent->WaterUsageForecastsModule\n\n\n\n\n\nWisdomModule\n\nWisdomModule\n\nWaterUsageForecastsModule -->\n\nWisdomModule->WaterUsageForecastsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            wisdom_modules/water-usage-forecasts/src/lib/water-usage-forecasts.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ConsumerDetailComponent\n                        \n                        \n                            MapSelectViewComponent\n                        \n                        \n                            ResultDataViewComponent\n                        \n                        \n                            WaterRightDetailComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            WisdomModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {CommonModule} from \"@angular/common\";\nimport {NgModule} from \"@angular/core\";\nimport {RouterModule} from \"@angular/router\";\nimport {TranslateModule} from \"@ngx-translate/core\";\nimport {WisdomModule} from \"common\";\nimport {NgChartsModule} from \"ng2-charts\";\n\nimport {\n  ConsumerDetailComponent\n} from \"./views/detail-view/consumer-detail/consumer-detail.component\";\nimport {\n  WaterRightDetailComponent\n} from \"./views/detail-view/water-right-detail/water-right-detail.component\";\nimport {\n  MapSelectViewComponent\n} from \"./views/map-select-view/map-select-view.component\";\nimport {\n  ResultDataViewComponent\n} from \"./views/result-data-view/result-data-view.component\";\n\n@NgModule({\n  declarations: [\n    MapSelectViewComponent,\n    ResultDataViewComponent,\n    ConsumerDetailComponent,\n    WaterRightDetailComponent\n  ],\n  imports: [\n    WisdomModule,\n    NgChartsModule,\n    CommonModule,\n    RouterModule,\n    TranslateModule\n  ]\n})\nexport class WaterUsageForecastsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WaterUsageForecastsService.html":{"url":"injectables/WaterUsageForecastsService.html","title":"injectable - WaterUsageForecastsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WaterUsageForecastsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/water-usage-forecasts/src/lib/services/water-usage-forecasts.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service to interact with server providing the data to display.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchForecastData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, router: Router)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/services/water-usage-forecasts.service.ts:58\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        fetchForecastData\n                        \n                    \n                \n            \n            \n                \nfetchForecastData(key: string | string[], forecastModel: ForecastType, consumerGroup?: \"businesses\" | \"households_and_small_businesses\" | \"farming_forestry_fishing_industry\" | \"public_institutions\" | \"all\")\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/water-usage-forecasts/src/lib/services/water-usage-forecasts.service.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                            string | string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    forecastModel\n                                    \n                                                ForecastType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    consumerGroup\n                                    \n                                            \"businesses\" | \"households_and_small_businesses\" | \"farming_forestry_fishing_industry\" | \"public_institutions\" | \"all\"\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {HttpClient, HttpContext, HttpHeaders} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\nimport {Router} from \"@angular/router\";\nimport {USE_API_URL, USE_LOADER} from \"common\";\nimport {Observable} from \"rxjs\";\n\nconst API_URL = \"water-usage-forecasts\";\n\nexport enum ForecastType {\n  LOGARITHMIC = \"logarithmic\",\n  LINEAR = \"linear\",\n  POLYNOMIAL = \"polynomial\"\n}\n\nexport interface ForecastResponse {\n  accumulations: {\n    consumerGroup: ForecastEntry,\n    municipal: ForecastEntry\n  },\n  partials: {\n    consumerGroup: {\n      key: string,\n      name: string\n    },\n    municipal: ForecastResponse[\"partials\"][0][\"consumerGroup\"],\n    referenceUsages: {\n      equation: string,\n      float: number,\n      model: \"logarithmic\" | \"linear\" | \"polynomial\",\n      usages: {\n        amounts: number[],\n        end: number,\n        start: number\n      }\n    },\n    forecast: ForecastResponse[\"partials\"][0][\"referenceUsages\"]\n  }[]\n}\n\nexport interface ForecastEntry {\n  forecast: Record,\n  reference: Record\n}\n\nexport interface ForecastUsage {\n  displayName: string,\n  endYear: number,\n  startYear: number,\n  usages: number[]\n}\n\n/**\n * Service to interact with server providing the data to display.\n */\n@Injectable({\n  providedIn: \"root\"\n})\nexport class WaterUsageForecastsService {\n\n  constructor(\n    private http: HttpClient,\n    private router: Router\n  ) {}\n\n  fetchForecastData(\n    key: string | string[],\n    forecastModel: ForecastType,\n    consumerGroup?:\n      \"businesses\" |\n      \"households_and_small_businesses\" |\n      \"farming_forestry_fishing_industry\" |\n      \"public_institutions\" |\n      \"all\"\n  ): Observable {\n    let url = this.router.parseUrl(`${API_URL}/${forecastModel}`);\n    if (consumerGroup) url.queryParams[\"consumerGroup\"] = consumerGroup;\n    url.queryParams[\"key\"] = key;\n    return this.http.get(url.toString(), {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\"\n      }),\n      responseType: \"json\",\n      context: new HttpContext()\n        .set(USE_API_URL, true)\n        .set(USE_LOADER, \"water-usage-forecasts.display.loading\")\n    }) as Observable;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WaterUsageHistoryService.html":{"url":"injectables/WaterUsageHistoryService.html","title":"injectable - WaterUsageHistoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WaterUsageHistoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/water-usage-forecasts/src/lib/services/water-usage-history.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchWaterUsageHistory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, router: Router)\n                    \n                \n                        \n                            \n                                Defined in wisdom_modules/water-usage-forecasts/src/lib/services/water-usage-history.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        fetchWaterUsageHistory\n                        \n                    \n                \n            \n            \n                \nfetchWaterUsageHistory(id: string)\n                \n            \n\n\n            \n                \n                    Defined in wisdom_modules/water-usage-forecasts/src/lib/services/water-usage-history.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {HttpClient, HttpContext, HttpHeaders} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\nimport {Router} from \"@angular/router\";\nimport {USE_API_URL, USE_LOADER} from \"common\";\nimport {map, Observable} from \"rxjs\";\n\nconst API_URL = \"water-usage-history/\";\n\nexport type HistoryResponse = {\n  year: number,\n  usage: number,\n  recordedAt: Date\n}[];\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WaterUsageHistoryService {\n\n  constructor(\n    private http: HttpClient,\n    private router: Router\n  ) { }\n\n  fetchWaterUsageHistory(id: string): Observable {\n    let url = this.router.parseUrl(API_URL);\n    url.queryParams[\"consumer\"] = id;\n    return this.http.get(url.toString(), {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\"\n      }),\n      responseType: \"json\",\n      context: new HttpContext()\n        .set(USE_API_URL, true)\n        .set(USE_LOADER, true)\n    }).pipe(map(\n      data => data.map(\n        ({\n           year,\n           usage,\n           recorded_at\n        }) => ({\n          year,\n          usage,\n          recordedAt: new Date(recorded_at)\n        })\n      )\n    ))\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WisdomInterface.html":{"url":"interfaces/WisdomInterface.html","title":"interface - WisdomInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  WisdomInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            wisdom_modules/common/src/WisdomInterface.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the wisdom modules.\nEvery wisdom module must provide such an object implementing this interface.\nThe object must be exported under the name \"wisdomInterface\".\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            route\n                                        \n                                \n                                \n                                        \n                                            scopes\n                                        \n                                \n                                \n                                        \n                                            translations\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        route\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        route:         Route\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Route\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The route that leads to this module.\nThis may also include guards but some guards will be automatically injected.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scopes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scopes:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The scopes required to see the component.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        translations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        translations:     Record>>>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record>>>\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The translations the modules provides and uses.\nThe top most entry should be the namespace, the following the component and\nin the component there should be keys for the translation keys.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {Route} from \"@angular/router\";\n\n/**\n * Interface for the wisdom modules.\n *\n * Every wisdom module must provide such an object implementing this interface.\n * The object must be exported under the name \"wisdomInterface\".\n */\nexport interface WisdomInterface {\n  /**\n   * The route that leads to this module.\n   * This may also include guards but some guards will be automatically injected.\n   */\n  route: Route;\n  /** The scopes required to see the component. */\n  scopes: string[];\n  /**\n   * The translations the modules provides and uses.\n   *\n   * The top most entry should be the namespace, the following the component and\n   * in the component there should be keys for the translation keys.\n   */\n  translations: Record>>>\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WisdomModule.html":{"url":"modules/WisdomModule.html","title":"module - WisdomModule","body":"\n                   \n\n\n\n\n    Modules\n    WisdomModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_WisdomModule\n\n\n\ncluster_WisdomModule_declarations\n\n\n\ncluster_WisdomModule_exports\n\n\n\n\nBreadcrumbsComponent\n\nBreadcrumbsComponent\n\n\n\nWisdomModule\n\nWisdomModule\n\nWisdomModule -->\n\nBreadcrumbsComponent->WisdomModule\n\n\n\n\n\nBulmaIsToggleableDirective\n\nBulmaIsToggleableDirective\n\nWisdomModule -->\n\nBulmaIsToggleableDirective->WisdomModule\n\n\n\n\n\nIonIconComponent\n\nIonIconComponent\n\nWisdomModule -->\n\nIonIconComponent->WisdomModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nWisdomModule -->\n\nMapComponent->WisdomModule\n\n\n\n\n\nBreadcrumbsComponent \n\nBreadcrumbsComponent \n\nBreadcrumbsComponent  -->\n\nWisdomModule->BreadcrumbsComponent \n\n\n\n\n\nBulmaIsToggleableDirective \n\nBulmaIsToggleableDirective \n\nBulmaIsToggleableDirective  -->\n\nWisdomModule->BulmaIsToggleableDirective \n\n\n\n\n\nIonIconComponent \n\nIonIconComponent \n\nIonIconComponent  -->\n\nWisdomModule->IonIconComponent \n\n\n\n\n\nMapComponent \n\nMapComponent \n\nMapComponent  -->\n\nWisdomModule->MapComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            wisdom_modules/common/src/lib/wisdom.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BreadcrumbsComponent\n                        \n                        \n                            BulmaIsToggleableDirective\n                        \n                        \n                            IonIconComponent\n                        \n                        \n                            MapComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BreadcrumbsComponent\n                        \n                        \n                            BulmaIsToggleableDirective\n                        \n                        \n                            IonIconComponent\n                        \n                        \n                            MapComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {CommonModule} from \"@angular/common\";\nimport {NgModule} from \"@angular/core\";\nimport {RouterModule} from \"@angular/router\";\nimport {TranslateModule} from \"@ngx-translate/core\";\n\nimport {BreadcrumbsComponent} from \"./breadcrumbs/breadcrumbs.component\";\nimport {\n  BulmaIsToggleableDirective\n} from \"./bulma/bulma-is-toggleable.directive\";\nimport {IonIconComponent} from \"./ion-icon/ion-icon.component\";\nimport {MapComponent} from \"./map/map.component\";\n\n@NgModule({\n  declarations: [\n    IonIconComponent,\n    BulmaIsToggleableDirective,\n    MapComponent,\n    BreadcrumbsComponent\n  ],\n  imports: [\n    TranslateModule,\n    CommonModule,\n    RouterModule\n  ],\n  exports: [\n    IonIconComponent,\n    BulmaIsToggleableDirective,\n    MapComponent,\n    BreadcrumbsComponent\n  ]\n})\nexport class WisdomModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                sidebar.ts\n            \n            variable\n            langs\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                sidebar.ts\n            \n            variable\n            sidebar\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/WisdomInterface.ts\n            \n            interface\n            WisdomInterface\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.component.ts\n            \n            component\n            BreadcrumbsComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.service.ts\n            \n            injectable\n            BreadcrumbsService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/breadcrumbs/breadcrumbs.service.ts\n            \n            interface\n            Breadcrumb\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/bulma/bulma-is-toggleable.directive.ts\n            \n            directive\n            BulmaIsToggleableDirective\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/guards/query-parameter.guard.ts\n            \n            guard\n            QueryParameterGuard\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/http-context/use-api-url.ts\n            \n            variable\n            USE_API_URL\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/http-context/use-base-url.ts\n            \n            variable\n            USE_BASE_URL\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/http-context/use-cache.ts\n            \n            variable\n            USE_CACHE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/http-context/use-error-curtain.ts\n            \n            variable\n            USE_ERROR_CURTAIN\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/http-context/use-loader.ts\n            \n            variable\n            USE_LOADER\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/ion-icon/ion-icon.component.ts\n            \n            component\n            IonIconComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/map/invert-selection.ts\n            \n            variable\n            control\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/map/layer-data.ts\n            \n            interface\n            LayerData\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/map/layer-data.ts\n            \n            interface\n            ShapeData\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/map/map.component.ts\n            \n            component\n            MapComponent\n            \n                100 %\n                (29/29)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/map/map.service.ts\n            \n            injectable\n            MapService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/map/map.service.ts\n            \n            interface\n            MapDB\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/map/map.service.ts\n            \n            variable\n            API_URL\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/map/map.service.ts\n            \n            variable\n            DB_NAME\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/map/map.service.ts\n            \n            variable\n            SCHEMA_V\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/map/marker.ts\n            \n            interface\n            Marker\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/map/resolution.ts\n            \n            function\n            toEnum\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/map/resolution.ts\n            \n            function\n            toKeyLength\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/util.ts\n            \n            function\n            getResolvedUrl\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/util.ts\n            \n            function\n            prettyPrintNum\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/util.ts\n            \n            function\n            stringToColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/util.ts\n            \n            function\n            translateObject\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/common/src/lib/util.ts\n            \n            function\n            tupleSwap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/auth/auth-storage.service.ts\n            \n            injectable\n            AuthStorageService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/auth/auth-storage.service.ts\n            \n            variable\n            ACCESS_TOKEN_KEY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/auth/auth-storage.service.ts\n            \n            variable\n            EXPIRES_IN_KEY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/auth/auth-storage.service.ts\n            \n            variable\n            REFRESH_TOKEN_KEY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/auth/auth-storage.service.ts\n            \n            variable\n            SCOPES_KEY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/auth/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/auth/auth.interceptor.ts\n            \n            interceptor\n            AuthInterceptor\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/auth/auth.interceptor.ts\n            \n            variable\n            TOKEN_HEADER_KEY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/auth/auth.service.ts\n            \n            variable\n            AUTH_URL\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/auth/auth.service.ts\n            \n            variable\n            httpOptions\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/auth/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/auth/user.service.ts\n            \n            injectable\n            UserService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/auth/user.service.ts\n            \n            variable\n            AUTH_API\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/auth/user.service.ts\n            \n            variable\n            getOptions\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/base-url.interceptor.ts\n            \n            interceptor\n            BaseUrlInterceptor\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/cache.interceptor.ts\n            \n            interceptor\n            CacheInterceptor\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/frame/error/error.component.ts\n            \n            component\n            ErrorComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/frame/error/error.interceptor.ts\n            \n            interceptor\n            ErrorInterceptor\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/frame/error/error.service.ts\n            \n            injectable\n            ErrorService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/frame/error/error.ts\n            \n            interface\n            Error\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/frame/frame.component.ts\n            \n            component\n            FrameComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/frame/loader/loader.component.ts\n            \n            component\n            LoaderComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/frame/loader/loader.guard.ts\n            \n            guard\n            LoaderGuard\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/frame/loader/loader.interceptor.ts\n            \n            interceptor\n            LoaderInterceptor\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/frame/loader/loader.service.ts\n            \n            injectable\n            LoaderService\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/frame/side-bar/side-bar.component.ts\n            \n            component\n            SideBarComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/i18n/lang-selector.directive.ts\n            \n            directive\n            LangSelectorDirective\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/i18n/static-loader.ts\n            \n            class\n            StaticLoader\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/i18n/static-loader.ts\n            \n            variable\n            langs\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/module-provider.ts\n            \n            class\n            ModuleProvider\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/sanitize-url.interceptor.ts\n            \n            interceptor\n            SanitizeUrlInterceptor\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/settings-storage.service.ts\n            \n            injectable\n            SettingsStorageService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/settings-storage.service.ts\n            \n            variable\n            HIDE_SIDEBAR_KEY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/app/settings-storage.service.ts\n            \n            variable\n            HIDE_USER_BAR_KEY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/environments/environment.common.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/environments/environment.prod.ts\n            \n            variable\n            baseUrl\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/environments/environment.ts\n            \n            variable\n            baseUrl\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/core/src/environments/environment.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/example/src/lib/example.component.ts\n            \n            component\n            ExampleComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/example/src/lib/example.service.ts\n            \n            injectable\n            ExampleService\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/example/src/public-api.ts\n            \n            variable\n            wisdomInterface\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                wisdom_modules/water-usage-forecasts/src/lib/map-icons.ts\n            \n            variable\n            consumerIcon\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                wisdom_modules/water-usage-forecasts/src/lib/map-icons.ts\n            \n            variable\n            waterRightIcon\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                wisdom_modules/water-usage-forecasts/src/lib/routing.ts\n            \n            variable\n            route\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                wisdom_modules/water-usage-forecasts/src/lib/services/consumers.service.ts\n            \n            injectable\n            ConsumersService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                wisdom_modules/water-usage-forecasts/src/lib/services/consumers.service.ts\n            \n            variable\n            API_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                wisdom_modules/water-usage-forecasts/src/lib/services/water-rights.service.ts\n            \n            injectable\n            WaterRightsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                wisdom_modules/water-usage-forecasts/src/lib/services/water-rights.service.ts\n            \n            variable\n            API_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                wisdom_modules/water-usage-forecasts/src/lib/services/water-usage-forecasts.service.ts\n            \n            injectable\n            WaterUsageForecastsService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                wisdom_modules/water-usage-forecasts/src/lib/services/water-usage-forecasts.service.ts\n            \n            interface\n            ForecastEntry\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                wisdom_modules/water-usage-forecasts/src/lib/services/water-usage-forecasts.service.ts\n            \n            interface\n            ForecastResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                wisdom_modules/water-usage-forecasts/src/lib/services/water-usage-forecasts.service.ts\n            \n            interface\n            ForecastUsage\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                wisdom_modules/water-usage-forecasts/src/lib/services/water-usage-forecasts.service.ts\n            \n            variable\n            API_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                wisdom_modules/water-usage-forecasts/src/lib/services/water-usage-history.service.ts\n            \n            injectable\n            WaterUsageHistoryService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                wisdom_modules/water-usage-forecasts/src/lib/services/water-usage-history.service.ts\n            \n            variable\n            API_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                wisdom_modules/water-usage-forecasts/src/lib/views/detail-view/consumer-detail/consumer-detail.component.ts\n            \n            component\n            ConsumerDetailComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                wisdom_modules/water-usage-forecasts/src/lib/views/detail-view/water-right-detail/water-right-detail.component.ts\n            \n            component\n            WaterRightDetailComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                wisdom_modules/water-usage-forecasts/src/lib/views/map-select-view/map-select-view.component.ts\n            \n            component\n            MapSelectViewComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                wisdom_modules/water-usage-forecasts/src/lib/views/result-data-view/result-data-view.component.ts\n            \n            component\n            ResultDataViewComponent\n            \n                38 %\n                (8/21)\n            \n        \n        \n            \n                \n                wisdom_modules/water-usage-forecasts/src/public-api.ts\n            \n            variable\n            wisdomInterface\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~14.1.2\n        \n            @angular/common : ~14.1.2\n        \n            @angular/compiler : ~14.1.2\n        \n            @angular/core : ~14.1.2\n        \n            @angular/forms : ~14.1.2\n        \n            @angular/platform-browser : ~14.1.2\n        \n            @angular/platform-browser-dynamic : ~14.1.2\n        \n            @angular/router : ~14.1.2\n        \n            @ngx-translate/core : ^14.0.0\n        \n            bulma : ^0.9.4\n        \n            bulma-prefers-dark : ^0.1.0-beta.1\n        \n            chart.js : ^3.8.0\n        \n            chartjs-plugin-annotation : ^1.4.0\n        \n            dayjs : ^1.11.3\n        \n            idb : ^7.0.2\n        \n            leaflet : ^1.8.0\n        \n            leaflet.markercluster : ^1.5.3\n        \n            ng2-charts : ^3.0.11\n        \n            path-browserify : ^1.0.1\n        \n            rxjs : ~7.5.5\n        \n            tslib : ^2.4.0\n        \n            zone.js : ~0.11.6\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ForecastType   (wisdom_modules/.../water-usage-forecasts.service.ts)\n                        \n                        \n                            Resolution   (wisdom_modules/.../resolution.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    wisdom_modules/water-usage-forecasts/src/lib/services/water-usage-forecasts.service.ts\n    \n        \n            \n                \n                    \n                        \n                        ForecastType\n                    \n                \n                        \n                            \n                                 LOGARITHMIC\n                            \n                        \n                        \n                            \n                                Value : logarithmic\n                            \n                        \n                        \n                            \n                                 LINEAR\n                            \n                        \n                        \n                            \n                                Value : linear\n                            \n                        \n                        \n                            \n                                 POLYNOMIAL\n                            \n                        \n                        \n                            \n                                Value : polynomial\n                            \n                        \n            \n        \n\n    wisdom_modules/common/src/lib/map/resolution.ts\n    \n        \n            \n                \n                    \n                        \n                        Resolution\n                    \n                \n                    \n                        \n                            Resolutions the map may display.\n\n                        \n                    \n                        \n                            \n                                 STATE\n                            \n                        \n                        \n                            \n                                Value : state\n                            \n                        \n                        \n                            \n                                 DISTRICT\n                            \n                        \n                        \n                            \n                                Value : district\n                            \n                        \n                        \n                            \n                                 ADMINISTRATION\n                            \n                        \n                        \n                            \n                                Value : administration\n                            \n                        \n                        \n                            \n                                 MUNICIPAL\n                            \n                        \n                        \n                            \n                                Value : municipal\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            getResolvedUrl   (wisdom_modules/.../util.ts)\n                        \n                        \n                            prettyPrintNum   (wisdom_modules/.../util.ts)\n                        \n                        \n                            stringToColor   (wisdom_modules/.../util.ts)\n                        \n                        \n                            toEnum   (wisdom_modules/.../resolution.ts)\n                        \n                        \n                            toKeyLength   (wisdom_modules/.../resolution.ts)\n                        \n                        \n                            translateObject   (wisdom_modules/.../util.ts)\n                        \n                        \n                            tupleSwap   (wisdom_modules/.../util.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    wisdom_modules/common/src/lib/util.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getResolvedUrl\n                        \n                    \n                \n            \n            \n                \ngetResolvedUrl(route: ActivatedRouteSnapshot)\n                \n            \n\n\n\n\n            \n                \n                    Function to return a fully resolved url in a string from an activated route\nsnapshot.\nRecreated by this solution on StackOverflow.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Route snapshot of a component.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prettyPrintNum\n                        \n                    \n                \n            \n            \n                \nprettyPrintNum(num: number)\n                \n            \n\n\n\n\n            \n                \n                    Returns a number presentation where every third digit from the end is\nseparated by a dot.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    num\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Number to pretty print\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            prettyPrintNum(12345678) =&gt; &quot;12.345.678&quot;\n                        \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stringToColor\n                        \n                    \n                \n            \n            \n                \nstringToColor(str: string, map?: Record)\n                \n            \n\n\n\n\n            \n                \n                    Generates deterministically a hex color code from any string.\nThis is a modernized version of this\nStackOverflow reply.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    str\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A string to generate a hex color for\n\n                                    \n                                \n                                \n                                    map\n                                    \n                                            Record\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        A color map for predefined strings\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        A hex color code in the style of '#abc123'\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        translateObject\n                        \n                    \n                \n            \n            \n                \ntranslateObject(service: TranslateService, obj: T)\n                \n            \n\n\n\n\n            \n                \n                    Utility function to translate strings in any data object using the given\ntranslate service.\nInternally the instant() method is used, causing this to be sync, beware.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    service\n                                    \n                                            TranslateService\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Translate service to translate with\n\n                                    \n                                \n                                \n                                    obj\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Object to iterate and translate through\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tupleSwap\n                        \n                    \n                \n            \n            \n                \ntupleSwap(tuple)\n                \n            \n\n\n\n\n            \n                \n                    Utility function to swap the values of a tuple.\nUseful if coordinates are in the wrong order.\n(e.g. geojson to leaflet)\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    tuple\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Tuple of two values\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    wisdom_modules/common/src/lib/map/resolution.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        toEnum\n                        \n                    \n                \n            \n            \n                \ntoEnum(length: number)\n                \n            \n\n\n\n\n            \n                \n                    Get the Resolution from a key length.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Key length\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Resolution | undefined\n\n                    \n                    \n                        Resolution if found, otherwise undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toKeyLength\n                        \n                    \n                \n            \n            \n                \ntoKeyLength(res: Resolution)\n                \n            \n\n\n\n\n            \n                \n                    Transforms a Resolution into the key length.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                                Resolution\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Resolution to find key length\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_ExampleModule\n\n\n\ncluster_ExampleModule_declarations\n\n\n\ncluster_ExampleModule_exports\n\n\n\ncluster_WaterUsageForecastsModule\n\n\n\ncluster_WaterUsageForecastsModule_declarations\n\n\n\ncluster_WisdomModule\n\n\n\ncluster_WisdomModule_declarations\n\n\n\ncluster_WisdomModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nErrorComponent\n\nErrorComponent\n\nAppModule -->\n\nErrorComponent->AppModule\n\n\n\n\n\nFrameComponent\n\nFrameComponent\n\nAppModule -->\n\nFrameComponent->AppModule\n\n\n\n\n\nLangSelectorDirective\n\nLangSelectorDirective\n\nAppModule -->\n\nLangSelectorDirective->AppModule\n\n\n\n\n\nLoaderComponent\n\nLoaderComponent\n\nAppModule -->\n\nLoaderComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nSideBarComponent\n\nSideBarComponent\n\nAppModule -->\n\nSideBarComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nWisdomModule\n\nWisdomModule\n\nAppModule -->\n\nWisdomModule->AppModule\n\n\n\n\n\nExampleModule\n\nExampleModule\n\nExampleModule -->\n\nWisdomModule->ExampleModule\n\n\n\n\n\nWaterUsageForecastsModule\n\nWaterUsageForecastsModule\n\nWaterUsageForecastsModule -->\n\nWisdomModule->WaterUsageForecastsModule\n\n\n\n\n\nBreadcrumbsComponent \n\nBreadcrumbsComponent \n\nBreadcrumbsComponent  -->\n\nWisdomModule->BreadcrumbsComponent \n\n\n\n\n\nBulmaIsToggleableDirective \n\nBulmaIsToggleableDirective \n\nBulmaIsToggleableDirective  -->\n\nWisdomModule->BulmaIsToggleableDirective \n\n\n\n\n\nIonIconComponent \n\nIonIconComponent \n\nIonIconComponent  -->\n\nWisdomModule->IonIconComponent \n\n\n\n\n\nMapComponent \n\nMapComponent \n\nMapComponent  -->\n\nWisdomModule->MapComponent \n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nAppModule -->\n\nAuthInterceptor->AppModule\n\n\n\n\n\nBaseUrlInterceptor\n\nBaseUrlInterceptor\n\nAppModule -->\n\nBaseUrlInterceptor->AppModule\n\n\n\n\n\nCacheInterceptor\n\nCacheInterceptor\n\nAppModule -->\n\nCacheInterceptor->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\nLoaderInterceptor\n\nLoaderInterceptor\n\nAppModule -->\n\nLoaderInterceptor->AppModule\n\n\n\n\n\nSanitizeUrlInterceptor\n\nSanitizeUrlInterceptor\n\nAppModule -->\n\nSanitizeUrlInterceptor->AppModule\n\n\n\n\n\nExampleComponent\n\nExampleComponent\n\nExampleModule -->\n\nExampleComponent->ExampleModule\n\n\n\n\n\nExampleComponent \n\nExampleComponent \n\nExampleComponent  -->\n\nExampleModule->ExampleComponent \n\n\n\n\n\nConsumerDetailComponent\n\nConsumerDetailComponent\n\nWaterUsageForecastsModule -->\n\nConsumerDetailComponent->WaterUsageForecastsModule\n\n\n\n\n\nMapSelectViewComponent\n\nMapSelectViewComponent\n\nWaterUsageForecastsModule -->\n\nMapSelectViewComponent->WaterUsageForecastsModule\n\n\n\n\n\nResultDataViewComponent\n\nResultDataViewComponent\n\nWaterUsageForecastsModule -->\n\nResultDataViewComponent->WaterUsageForecastsModule\n\n\n\n\n\nWaterRightDetailComponent\n\nWaterRightDetailComponent\n\nWaterUsageForecastsModule -->\n\nWaterRightDetailComponent->WaterUsageForecastsModule\n\n\n\n\n\nBreadcrumbsComponent\n\nBreadcrumbsComponent\n\nWisdomModule -->\n\nBreadcrumbsComponent->WisdomModule\n\n\n\n\n\nBulmaIsToggleableDirective\n\nBulmaIsToggleableDirective\n\nWisdomModule -->\n\nBulmaIsToggleableDirective->WisdomModule\n\n\n\n\n\nIonIconComponent\n\nIonIconComponent\n\nWisdomModule -->\n\nIonIconComponent->WisdomModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nWisdomModule -->\n\nMapComponent->WisdomModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    14 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    13 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    10 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        3 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ExampleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WaterUsageForecastsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WisdomModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.1.0\n        \n            Description : Workspace for the angular frontend.\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ConsumerLocationsResponse   (wisdom_modules/.../consumers.service.ts)\n                        \n                        \n                            DeleteUsersId200   (wisdom_modules/.../DeleteUsersId200.ts)\n                        \n                        \n                            DeleteUsersId403   (wisdom_modules/.../DeleteUsersId403.ts)\n                        \n                        \n                            DeleteUsersId404   (wisdom_modules/.../DeleteUsersId404.ts)\n                        \n                        \n                            GeoJsonObject   (wisdom_modules/.../layer-data.ts)\n                        \n                        \n                            GeoJsonObject   (wisdom_modules/.../map.component.ts)\n                        \n                        \n                            GetUsers200   (wisdom_modules/.../GetUsers200.ts)\n                        \n                        \n                            GetUsersId200   (wisdom_modules/.../GetUsersId200.ts)\n                        \n                        \n                            GetUsersId404   (wisdom_modules/.../GetUsersId404.ts)\n                        \n                        \n                            GetUsersMe200   (wisdom_modules/.../GetUsersMe200.ts)\n                        \n                        \n                            HistoryResponse   (wisdom_modules/.../water-usage-history.service.ts)\n                        \n                        \n                            LayerConfig   (wisdom_modules/.../map.component.ts)\n                        \n                        \n                            LayerKey   (wisdom_modules/.../map.component.ts)\n                        \n                        \n                            nullString   (wisdom_modules/.../side-bar-entries.ts)\n                        \n                        \n                            PatchUsers204   (wisdom_modules/.../PatchUsers204.ts)\n                        \n                        \n                            PatchUsers403   (wisdom_modules/.../PatchUsers403.ts)\n                        \n                        \n                            PatchUsers404   (wisdom_modules/.../PatchUsers404.ts)\n                        \n                        \n                            PatchUsersMe200   (wisdom_modules/.../PatchUsersMe200.ts)\n                        \n                        \n                            PostOAuthToken200   (wisdom_modules/.../PostOAuthToken200.ts)\n                        \n                        \n                            PostOAuthToken400   (wisdom_modules/.../PostOAuthToken400.ts)\n                        \n                        \n                            PostOAuthToken401   (wisdom_modules/.../PostOAuthToken401.ts)\n                        \n                        \n                            PostRevoke200   (wisdom_modules/.../PostRevoke200.ts)\n                        \n                        \n                            PostRevoke403   (wisdom_modules/.../PostRevoke403.ts)\n                        \n                        \n                            PutUsers201   (wisdom_modules/.../PutUsers201.ts)\n                        \n                        \n                            PutUsers409   (wisdom_modules/.../PutUsers409.ts)\n                        \n                        \n                            SideBarEntries   (wisdom_modules/.../side-bar-entries.ts)\n                        \n                        \n                            SideBarEntry   (wisdom_modules/.../side-bar-entries.ts)\n                        \n                        \n                            SideBarEntryLvl1   (wisdom_modules/.../side-bar-entries.ts)\n                        \n                        \n                            SideBarEntryLvl2   (wisdom_modules/.../side-bar-entries.ts)\n                        \n                        \n                            SideBarEntryLvl3   (wisdom_modules/.../side-bar-entries.ts)\n                        \n                        \n                            SideBarLabel   (wisdom_modules/.../side-bar-entries.ts)\n                        \n                        \n                            User   (wisdom_modules/.../User.ts)\n                        \n                        \n                            WaterRightDetailRawResponse   (wisdom_modules/.../water-rights.service.ts)\n                        \n                        \n                            WaterRightDetailResponse   (wisdom_modules/.../water-rights.service.ts)\n                        \n                        \n                            WaterRightLocationResponse   (wisdom_modules/.../water-rights.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    wisdom_modules/water-usage-forecasts/src/lib/services/consumers.service.ts\n    \n    \n        \n            \n                \n                    \n                    ConsumerLocationsResponse\n                \n            \n            \n                \n                        literal type[]\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/users/DeleteUsersId200.ts\n    \n    \n        \n            \n                \n                    \n                    DeleteUsersId200\n                \n            \n            \n                \n                    The user was deleted\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/users/DeleteUsersId403.ts\n    \n    \n        \n            \n                \n                    \n                    DeleteUsersId403\n                \n            \n            \n                \n                    Insufficient privileges to run this action\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/users/DeleteUsersId404.ts\n    \n    \n        \n            \n                \n                    \n                    DeleteUsersId404\n                \n            \n            \n                \n                    The user does not exist in the system\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    wisdom_modules/common/src/lib/map/layer-data.ts\n    \n    \n        \n            \n                \n                    \n                    GeoJsonObject\n                \n            \n            \n                \n                    GeoJSON data type used by Leaflet.\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    wisdom_modules/common/src/lib/map/map.component.ts\n    \n    \n        \n            \n                \n                    \n                    GeoJsonObject\n                \n            \n            \n                \n                    GeoJSON data type used by Leaflet.\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    LayerConfig\n                \n            \n            \n                \n                    A layer config for the input of MapComponent.inputLayers.\n\n                \n            \n            \n                \n                            Record\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    LayerKey\n                \n            \n            \n                \n                    Type alias to enforce the meaning of the layer keys.\n\n                \n            \n            \n                \n                            string\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/users/GetUsers200.ts\n    \n    \n        \n            \n                \n                    \n                    GetUsers200\n                \n            \n            \n                \n                            User[]\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/users/GetUsersId200.ts\n    \n    \n        \n            \n                \n                    \n                    GetUsersId200\n                \n            \n            \n                \n                    \nInformation about the User\n\n\n                \n            \n            \n                \n                            Omit\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/users/GetUsersId404.ts\n    \n    \n        \n            \n                \n                    \n                    GetUsersId404\n                \n            \n            \n                \n                    The user does not exist in the system\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/users/GetUsersMe200.ts\n    \n    \n        \n            \n                \n                    \n                    GetUsersMe200\n                \n            \n            \n                \n                    Information\n\n                \n            \n            \n                \n                            Omit\n\n                \n            \n        \n    \n    wisdom_modules/water-usage-forecasts/src/lib/services/water-usage-history.service.ts\n    \n    \n        \n            \n                \n                    \n                    HistoryResponse\n                \n            \n            \n                \n                        literal type[]\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/frame/side-bar/side-bar-entries.ts\n    \n    \n        \n            \n                \n                    \n                    nullString\n                \n            \n            \n                \n                    Nullable string.\n\n                \n            \n            \n                \n                        string | null\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SideBarEntries\n                \n            \n            \n                \n                    This type describes the nested data structure of the sidebar.\nThis type consists of nested arrays.\nThe first layer are for labels.\nAll the following are entries with a name, that may be translated if give a\ntranslation key, a possible icon name from ://ionic.io/ioniconshttps,\na path to follow and possible children.\n\n                \n            \n            \n                \n                            SideBarLabel[]\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SideBarEntry\n                \n            \n            \n                \n                    [identifier name, icon name, path]\n\n                \n            \n            \n                \n                            [string, nullString, nullString]\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SideBarEntryLvl1\n                \n            \n            \n                \n                             | SideBarEntry\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SideBarEntryLvl2\n                \n            \n            \n                \n                             | SideBarEntry\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SideBarEntryLvl3\n                \n            \n            \n                \n                            SideBarEntry\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SideBarLabel\n                \n            \n            \n                \n                        [string, nullString, SideBarEntryLvl1[]]\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/users/PatchUsers204.ts\n    \n    \n        \n            \n                \n                    \n                    PatchUsers204\n                \n            \n            \n                \n                    Successfully updated the user\n\n                \n            \n            \n                \n                            Omit\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/users/PatchUsers403.ts\n    \n    \n        \n            \n                \n                    \n                    PatchUsers403\n                \n            \n            \n                \n                    Insufficient privileges to update the users\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/users/PatchUsers404.ts\n    \n    \n        \n            \n                \n                    \n                    PatchUsers404\n                \n            \n            \n                \n                    The user does not exist and therefore cannot be updated\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/users/PatchUsersMe200.ts\n    \n    \n        \n            \n                \n                    \n                    PatchUsersMe200\n                \n            \n            \n                \n                    Successfully updated the user\n\n                \n            \n            \n                \n                            Omit\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/login/PostOAuthToken200.ts\n    \n    \n        \n            \n                \n                    \n                    PostOAuthToken200\n                \n            \n            \n                \n                    The user was authorized successfully\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/login/PostOAuthToken400.ts\n    \n    \n        \n            \n                \n                    \n                    PostOAuthToken400\n                \n            \n            \n                \n                    Bad request made\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/login/PostOAuthToken401.ts\n    \n    \n        \n            \n                \n                    \n                    PostOAuthToken401\n                \n            \n            \n                \n                    Unauthorized\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/login/PostRevoke200.ts\n    \n    \n        \n            \n                \n                    \n                    PostRevoke200\n                \n            \n            \n                \n                    Standard response\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/login/PostRevoke403.ts\n    \n    \n        \n            \n                \n                    \n                    PostRevoke403\n                \n            \n            \n                \n                    The scope of the current user is insufficient\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/users/PutUsers201.ts\n    \n    \n        \n            \n                \n                    \n                    PutUsers201\n                \n            \n            \n                \n                    The user was created successfully\n\n                \n            \n            \n                \n                            User\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/response_types/users/PutUsers409.ts\n    \n    \n        \n            \n                \n                    \n                    PutUsers409\n                \n            \n            \n                \n                    A user with the same data already exists\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    wisdom_modules/core/src/app/auth/types/User.ts\n    \n    \n        \n            \n                \n                    \n                    User\n                \n            \n            \n                \n                    Representation of a user.\n\n                \n            \n            \n                \n                        Partial\n\n                \n            \n        \n    \n    wisdom_modules/water-usage-forecasts/src/lib/services/water-rights.service.ts\n    \n    \n        \n            \n                \n                    \n                    WaterRightDetailRawResponse\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    WaterRightDetailResponse\n                \n            \n            \n                \n                        Partial\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    WaterRightLocationResponse\n                \n            \n            \n                \n                        literal type[]\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ACCESS_TOKEN_KEY   (wisdom_modules/.../auth-storage.service.ts)\n                        \n                        \n                            API_URL   (wisdom_modules/.../map.service.ts)\n                        \n                        \n                            API_URL   (wisdom_modules/.../water-rights.service.ts)\n                        \n                        \n                            API_URL   (wisdom_modules/.../water-usage-forecasts.service.ts)\n                        \n                        \n                            API_URL   (wisdom_modules/.../consumers.service.ts)\n                        \n                        \n                            API_URL   (wisdom_modules/.../water-usage-history.service.ts)\n                        \n                        \n                            AUTH_API   (wisdom_modules/.../user.service.ts)\n                        \n                        \n                            AUTH_URL   (wisdom_modules/.../auth.service.ts)\n                        \n                        \n                            baseUrl   (wisdom_modules/.../environment.prod.ts)\n                        \n                        \n                            baseUrl   (wisdom_modules/.../environment.ts)\n                        \n                        \n                            consumerIcon   (wisdom_modules/.../map-icons.ts)\n                        \n                        \n                            control   (wisdom_modules/.../invert-selection.ts)\n                        \n                        \n                            DB_NAME   (wisdom_modules/.../map.service.ts)\n                        \n                        \n                            environment   (wisdom_modules/.../environment.common.ts)\n                        \n                        \n                            environment   (wisdom_modules/.../environment.prod.ts)\n                        \n                        \n                            environment   (wisdom_modules/.../environment.ts)\n                        \n                        \n                            EXPIRES_IN_KEY   (wisdom_modules/.../auth-storage.service.ts)\n                        \n                        \n                            getOptions   (wisdom_modules/.../user.service.ts)\n                        \n                        \n                            HIDE_SIDEBAR_KEY   (wisdom_modules/.../settings-storage.service.ts)\n                        \n                        \n                            HIDE_USER_BAR_KEY   (wisdom_modules/.../settings-storage.service.ts)\n                        \n                        \n                            httpOptions   (wisdom_modules/.../auth.service.ts)\n                        \n                        \n                            langs   (sidebar.ts)\n                        \n                        \n                            langs   (wisdom_modules/.../static-loader.ts)\n                        \n                        \n                            REFRESH_TOKEN_KEY   (wisdom_modules/.../auth-storage.service.ts)\n                        \n                        \n                            route   (wisdom_modules/.../routing.ts)\n                        \n                        \n                            SCHEMA_V   (wisdom_modules/.../map.service.ts)\n                        \n                        \n                            SCOPES_KEY   (wisdom_modules/.../auth-storage.service.ts)\n                        \n                        \n                            sidebar   (sidebar.ts)\n                        \n                        \n                            TOKEN_HEADER_KEY   (wisdom_modules/.../auth.interceptor.ts)\n                        \n                        \n                            USE_API_URL   (wisdom_modules/.../use-api-url.ts)\n                        \n                        \n                            USE_BASE_URL   (wisdom_modules/.../use-base-url.ts)\n                        \n                        \n                            USE_CACHE   (wisdom_modules/.../use-cache.ts)\n                        \n                        \n                            USE_ERROR_CURTAIN   (wisdom_modules/.../use-error-curtain.ts)\n                        \n                        \n                            USE_LOADER   (wisdom_modules/.../use-loader.ts)\n                        \n                        \n                            waterRightIcon   (wisdom_modules/.../map-icons.ts)\n                        \n                        \n                            wisdomInterface   (wisdom_modules/.../public-api.ts)\n                        \n                        \n                            wisdomInterface   (wisdom_modules/.../public-api.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    wisdom_modules/core/src/app/auth/auth-storage.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ACCESS_TOKEN_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"auth-token\"\n                    \n                \n\n            \n                \n                    Key for the access token.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        EXPIRES_IN_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"auth-expires-in\"\n                    \n                \n\n            \n                \n                    Key fo the expiration date.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        REFRESH_TOKEN_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"auth-refresh-token\"\n                    \n                \n\n            \n                \n                    Key for the refresh token.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SCOPES_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"auth-scopes\"\n                    \n                \n\n            \n                \n                    Key for the scopes.\n\n                \n            \n\n        \n    \n\n    wisdom_modules/common/src/lib/map/map.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        API_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"geodata\"\n                    \n                \n\n            \n                \n                    API url for the map to request data from.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DB_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"map-db\"\n                    \n                \n\n            \n                \n                    Indexed DB name.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SCHEMA_V\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 2\n                    \n                \n\n            \n                \n                    Indexed DB schema version.\n\n                \n            \n\n        \n    \n\n    wisdom_modules/water-usage-forecasts/src/lib/services/water-rights.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        API_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"water-rights/\"\n                    \n                \n\n\n        \n    \n\n    wisdom_modules/water-usage-forecasts/src/lib/services/water-usage-forecasts.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        API_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"water-usage-forecasts\"\n                    \n                \n\n\n        \n    \n\n    wisdom_modules/water-usage-forecasts/src/lib/services/consumers.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        API_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"consumers/\"\n                    \n                \n\n\n        \n    \n\n    wisdom_modules/water-usage-forecasts/src/lib/services/water-usage-history.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        API_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"water-usage-history/\"\n                    \n                \n\n\n        \n    \n\n    wisdom_modules/core/src/app/auth/user.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AUTH_API\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"localhost:8090/auth/\"\n                    \n                \n\n            \n                \n                    Url for the interaction.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : {\n  responseType: \"json\"\n}\n                    \n                \n\n            \n                \n                    Options passed into the get requests.\n\n                \n            \n\n        \n    \n\n    wisdom_modules/core/src/app/auth/auth.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AUTH_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"auth\"\n                    \n                \n\n            \n                \n                    Url for the interaction.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        httpOptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : {\n  headers: new HttpHeaders({\n    \"Content-Type\": \"application/x-www-form-urlencoded\"\n  }),\n  responseType: \"json\",\n  context: new HttpContext()\n    .set(USE_API_URL, true)\n    .set(USE_CACHE, false)\n    .set(USE_ERROR_CURTAIN, false)\n}\n                    \n                \n\n            \n                \n                    Options for the post request in the service.\nAs per reference the content type is always \"x-www-form-urlencoded\" instead\nof \"json\".\nThe response is a json though.\n\n                \n            \n\n        \n    \n\n    wisdom_modules/core/src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : window.location.origin + \"/\"\n                    \n                \n\n            \n                \n                    Base url for making requests.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.assign({}, commonEnvironment, {\n  production: true,\n  baseUrl,\n  apiUrl: baseUrl + \"api/\"\n})\n                    \n                \n\n            \n                \n                    Environment for the dev mode.\n\n                \n            \n\n        \n    \n\n    wisdom_modules/core/src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : window.location.origin + \"/\"\n                    \n                \n\n            \n                \n                    Url used to call the original window location, will be captured by the proxy.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.assign({}, commonEnvironment, {\n  production: false,\n  baseUrl,\n  apiUrl: baseUrl + \"api/\"\n})\n                    \n                \n\n            \n                \n                    Environment for the dev mode.\n\n                \n            \n\n        \n    \n\n    wisdom_modules/water-usage-forecasts/src/lib/map-icons.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        consumerIcon\n                        \n                    \n                \n            \n                \n                    \n                        Default value : icon({\n  iconUrl: \"https://unpkg.com/ionicons@5.5.2/dist/svg/business.svg\",\n  iconSize: [35, 35]\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        waterRightIcon\n                        \n                    \n                \n            \n                \n                    \n                        Default value : icon({\n  iconUrl: \"https://unpkg.com/ionicons@5.5.2/dist/svg/water.svg\",\n  iconSize: [35, 35]\n})\n                    \n                \n\n\n        \n    \n\n    wisdom_modules/common/src/lib/map/invert-selection.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        control\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  invertSelection: (callback: (arg0: MouseEvent) => void, options?: L.ControlOptions) => {\n    let InvertSelection = L.Control.extend({\n      options: {\n        position: \"topright\"\n      },\n      initialize: function (options: any) {\n        L.Util.setOptions(this, options);\n      },\n      onAdd: function (map: L.Map) {\n        let centerContent = [\n          \"is-flex is-align-content-center\",\n          \"is-align-items-center\",\n          \"is-justify-content-center\"\n        ].join(\" \");\n\n        let container = L.DomUtil.create(\n          \"div\",\n          \"select-all-container leaflet-control-layers leaflet-control\"\n        );\n        container.addEventListener(\"click\", callback);\n        let button = L.DomUtil.create(\n          \"a\",\n          \"leaflet-control-layers-toggle \" + centerContent,\n          container\n        );\n        button.style.backgroundImage = \"none\";\n        let icon = L.DomUtil.create(\n          \"ion-icon\",\n          \"select-all-icon\",\n          button\n        );\n        icon.style.pointerEvents = \"none\";\n        icon.setAttribute(\"name\", \"extension-puzzle\");\n        icon.setAttribute(\"size\", \"large\");\n        icon.style.color = \"#a0a0a0\";\n        return container;\n      }\n    });\n    return new InvertSelection(options);\n  }\n}\n                    \n                \n\n            \n                \n                    Custom control to invert the currently selected shapes on a\nMapComponent.\n\n                \n            \n\n        \n    \n\n    wisdom_modules/core/src/environments/environment.common.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  // empty for now but still injected\n}\n                    \n                \n\n            \n                \n                    Environment values for both dev and prod mode.\n\n                \n            \n\n        \n    \n\n    wisdom_modules/core/src/app/settings-storage.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        HIDE_SIDEBAR_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"hide-sidebar\"\n                    \n                \n\n            \n                \n                    Key for the sidebar hide setting.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        HIDE_USER_BAR_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"hide-user-bar\"\n                    \n                \n\n            \n                \n                    key for the user bar hide setting.\n\n                \n            \n\n        \n    \n\n    sidebar.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        langs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  de_DE: {\n    \"water-usage\": \"Wasserverbrauch\"\n  },\n  en_US: {\n    \"water-usage\": \"Water Usage\"\n  }\n}\n                    \n                \n\n            \n                \n                    This constant is used to inject language content into the translator.\nThe keys to use the injected will use the namespace \"sidebar\".\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sidebar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SideBarEntries\n\n                    \n                \n                \n                    \n                        Default value : [\n  [\n    \"Proof of Concept\", \"rocket\", [\n      [\"Example\", \"sparkles\", \"example\"],\n      [\"No Example\", null, null]\n    ]\n  ],\n  [\n    \"sidebar.water-usage\", \"bar-chart\", [\n      [\"water-usage-forecasts.label.name\", \"calendar\", \"water-usage-forecasts\"]\n    ]\n  ]\n]\n                    \n                \n\n            \n                \n                    This constant describes how the sidebar should directly look like.\nFor further explanation check SideBarEntries.\n\n                \n            \n\n        \n    \n\n    wisdom_modules/core/src/app/i18n/static-loader.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        langs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n  de_DE: Object.assign({}, de_DELang, de_DELangCommon, ModuleProvider.langs(\"de_DE\")),\n  en_US: Object.assign({}, en_USLang, en_USLangCommon, ModuleProvider.langs(\"en_US\"))\n}\n                    \n                \n\n            \n                \n                    The languages the loader provides.\n\n                \n            \n\n        \n    \n\n    wisdom_modules/water-usage-forecasts/src/lib/routing.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Route\n\n                    \n                \n                \n                    \n                        Default value : {\n  path: \"water-usage-forecasts\",\n  children: [\n    {\n      path: \"\",\n      component: MapSelectViewComponent,\n    },\n    {\n      path: \"results\",\n      component: ResultDataViewComponent,\n      data: {\n        redirectTo: \"/water-usage-forecasts\",\n        queryParams: \"key\"\n      },\n      canActivate: [QueryParameterGuard]\n    },\n    {\n      path: \"detail\",\n      children: [\n        {\n          path: \"\",\n          pathMatch: \"full\",\n          redirectTo: \"/water-usage-forecasts\"\n        },\n        {\n          path: \"water-right/:waterRight\",\n          component: WaterRightDetailComponent\n        },\n        {\n          path: \"consumer/:consumer\",\n          component: ConsumerDetailComponent\n        }\n      ]\n    },\n    {\n      path: \"**\",\n      redirectTo: \"/water-usage-forecasts\"\n    }\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    wisdom_modules/core/src/app/auth/auth.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TOKEN_HEADER_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Authorization\"\n                    \n                \n\n            \n                \n                    Key for the token.\n\n                \n            \n\n        \n    \n\n    wisdom_modules/common/src/lib/http-context/use-api-url.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        USE_API_URL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new HttpContextToken(() => false)\n                    \n                \n\n            \n                \n                    HttpContextToken used to determine if the api url should be used.\nDefaults to false.\n\n                \n            \n\n        \n    \n\n    wisdom_modules/common/src/lib/http-context/use-base-url.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        USE_BASE_URL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new HttpContextToken(() => true)\n                    \n                \n\n            \n                \n                    HttpContextToken used to determine if the base url should be used.\nDefaults to true.\n\n                \n            \n\n        \n    \n\n    wisdom_modules/common/src/lib/http-context/use-cache.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        USE_CACHE\n                        \n                    \n                \n            \n                \n                    \n                        Type :     miscellaneous\n\n                    \n                \n                \n                    \n                        Default value : new HttpContextToken(() => true)\n                    \n                \n\n            \n                \n                    HttpContextToken used to determine if cache headers should be sent.\nDefaults to true.\n\n                \n            \n\n        \n    \n\n    wisdom_modules/common/src/lib/http-context/use-error-curtain.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        USE_ERROR_CURTAIN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new HttpContextToken(() => true)\n                    \n                \n\n            \n                \n                    HttpContextToken used to determine if requests that error should show\nthe error message on curtain covering the whole main container.\nDisable this if you want to handle errors yourself.\nDefaults to true.\n\n                \n            \n\n        \n    \n\n    wisdom_modules/common/src/lib/http-context/use-loader.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        USE_LOADER\n                        \n                    \n                \n            \n                \n                    \n                        Type :     miscellaneous\n\n                    \n                \n                \n                    \n                        Default value : new HttpContextToken(() => false)\n                    \n                \n\n            \n                \n                    HttpContextToken used to determine if loader should be shown.\nA given string will be run through the translator and therefore may get\ntranslated.\nUseful for longer loading times.\nDefaults to false.\n\n                \n            \n\n        \n    \n\n    wisdom_modules/example/src/public-api.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        wisdomInterface\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WisdomInterface\n\n                    \n                \n                \n                    \n                        Default value : {\n  route: {\n    path: \"example\",\n    component: ExampleComponent\n  },\n  scopes: [\"example\"],\n  translations: {\n    de_DE,\n    en_US\n  }\n}\n                    \n                \n\n            \n                \n                    The wisdom interface for the core module to inject this module.\n\n                \n            \n\n        \n    \n\n    wisdom_modules/water-usage-forecasts/src/public-api.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        wisdomInterface\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WisdomInterface\n\n                    \n                \n                \n                    \n                        Default value : {\n  route,\n  scopes: [\"water-usage-forecasts\"],\n  translations: {\n    de_DE,\n    en_US\n  }\n}\n                    \n                \n\n            \n                \n                    Public interface for the wisdom core to inject this module.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
